﻿#MyDHLUnity
#Coded by Dusan Markovic & Martin Sandner, last change: 16072020
Param
  (
    ########## SETTINGS ###########
    #Path settings:
    [String]$localPDFDirPath = 'C:\AWB',
    [String]$localImportDirPath = 'C:\temp\mydhlplus_import',
    [String]$localArchiveDirPath = 'C:\temp\mydhlplus_archive',
    [String]$errorMessageDirPath = 'C:\temp\populateDictionaries.txt',
    #Print settings:
    [String]$localPrinterName='ZDesigner LP 2844-Z',
    [String]$labelCopies = '1',
    [String]$WBdocCopies = '0',
    [String]$SortBy = 'SHIPMENT_REFERENCES',           #possible values: SHIPMENT_REFERENCES, LAST_MODIFIED_AT, etc.
    [String]$ParamUseSumatraPDF = 'true',                      #if false, the standard PDF-Reader will be used. Note that only Adobe Acrobat is preconfigured for direct printing!
    [String]$sumatraPDFPath='C:\temp\SumatraPDF.exe',
    #MyDHL+ import settings
    [String]$myDHLPlusUsername = '', #if no username have been configured the login promt will open up
    [String]$myDHLPlusPassword = '',
    [String]$encoding = "ISO-8859-1",                  #possible values: UTF-8, ISO-8859-1, ISO-8859-2, ISO-8859-4, ISO-8859-5, ISO-8859-7, ISO-8859-9
    [String]$ParamAddressCorrection = 'true',                  #if true, the online address correction will compare and correct the zip codes provided in the import file using the MyDHL+ Online Service Directory!
    [String]$ParamAddressCityOverwrite = 'true',               #if true, the script will overwrite the cities with the values from MyDHL+ (first match to zip code)
    [String]$ParamImportErrRecords = 'true',                   #if false, non-corrected shipments will NOT be skipped and the script will stop immediately
    #Mapping Configuration - ESS only!

    [String]$myDHLPlus_UploadMapping = 'MyDHL',        #posibble values: 'MyDHL' for the MyDHL+ Standard Mapping, 'INTRASHIP' for IntraShip Mapping or 'CUSTOM' to create the oneline import mapping! (!Mapping needs to be configured below)
    [String]$myDHLPlus_MappingName = 'GenericAT',
    [String]$myDHLPlus_Mapping = '{"name":"'+$myDHLPlus_MappingName+'","version":6,"textDelimiter":",","fieldDelimiter":";","importingSchemeSubtype":"PACKAGE","importingSchemeSections":[{"importingSchemeFields":[{"name":"FROM_CONTACT"},{"name":"FROM_COMPANY"},{"name":"FROM_ADDRESS_LINE_1"},{"name":"FROM_CITY"},{"name":"FROM_POST_CODE"},{"name":"FROM_COUNTRY_CODE"},{"name":"FROM_EMAIL"},{"name":"FROM_PH_TYPE"},{"name":"FROM_PH_COUNTRY_CODE"},{"name":"FROM_PH_NUMBER"},{"name":"TO_COMPANY"},{"name":"TO_CONTACT"},{"name":"TO_ADDRESS_LINE_1"},{"name":"TO_CITY"},{"name":"TO_COUNTRY_CODE"},{"name":"TO_POST_CODE"},{"name":"TO_PH_TYPE"},{"name":"TO_PH_COUNTRY_CODE"},{"name":"TO_PH_NUMBER"},{"name":"SHIPMENT_DATE"},{"name":"SHIPPER_ACCOUNT"},{"name":"PAYER_ACCOUNT"},{"name":"DUTY_TAX_ACCOUNT"},{"name":"NUMBER_OF_PIECES"},{"name":"TOTAL_WEIGHT"},{"name":"DIM_LENGTH"},{"name":"DIM_WIDTH"},{"name":"DIM_HEIGHT"},{"name":"PRODUCT_CODE"},{"name":"DECL_CURRENCY"},{"name":"DECL_VALUE"},{"name":"SHP_DESCRIPTION"},{"name":"SHP_TYPE"},{"name":"REFERENCE"},{"name":"TO_EMAIL"},{"name":"NOTIFY_EMAIL"},{"name":"DUTY_TAXES_PAID"},{"name":"NEUTRAL_DELIVERY"},{"name":"SATURDAY_DELIVERY_AA"},{"name":"EXTENDED_LIABILITY"},{"name":"INSU_CURRENCY"},{"name":"INSU_VALUE"}]}]}'
    ############## DON'T CHANGE CODE BELOW ##############
  )


[Bool]$useSumatraPDF = $true
if($ParamUseSumatraPDF-eq'false'){
    $useSumatraPDF = $false
}

[Bool]$AddressCorrection = $true   
if($ParamAddressCorrection-eq'false'){
    $AddressCorrection = $false  
}

[Bool]$AddressCityOverwrite = $true   
if($ParamAddressCityOverwrite-eq'false'){
    $AddressCityOverwrite = $false  
}
             
[Bool]$ImportErrRecords = $true   
if($ParamImportErrRecords-eq'false'){
    $ImportErrRecords = $false
}



$version = 'V1.6'
$Title = "MyDHLUnity $version"

cls
try{
#load mandatory 
Add-Type -AssemblyName System.Drawing
Add-Type -AssemblyName System.Windows.Forms
Write-Host -f black -b yellow "`n$Title"
Write-Host -f darkgray "Created by the Electronic Shipping Solutions Team of DHL (Express) Austria GmbH`n"
Write-Host -f yellow "Please check the configuration of the following parameters." 
Write-Host -f darkgray "Changes can be done in the scripts 'Settings' section."
Write-Host -f cyan "`n'MyDHL Plus Username'" -nonewline 
Write-Host -f white "       is set to:     " -nonewline 
Write-Host -f yellow "$myDHLPlusUsername"    -nonewline 
Write-Host -f darkgray "       ->if blank, the login prompt will open"
Write-Host -f cyan "'MyDHL Plus Password'" -nonewline
Write-Host -f white "       is set to:     ********"
Write-Host -f cyan "'Printer Name'" -nonewline
Write-Host -f white "              is set to:" -nonewline
Write-Host -f yellow "     $localPrinterName"
Write-Host -f cyan "'Upload Mapping'" -NoNewline
Write-Host -f white "            is set to:" -noNewLine
Write-Host -f Yellow "     $myDHLPlus_UploadMapping"
Write-Host -f cyan "'Encoding'" -NoNewline
Write-Host -f white "                  is set to:" -NoNewline
Write-Host -f Yellow "     $encoding"
Write-Host -f cyan "'Use sumatraPDF'" -NoNewline
Write-Host -f white "            is set to:" -NoNewline
Write-Host -f yellow "     $useSumatraPDF"
Write-Host -f cyan "'Label Copies'" -NoNewline
Write-Host -f White "              is set to:     $labelCopies"
Write-Host -f cyan "'WayBillDoc Copies'" -NoNewline
Write-Host -f White "         is set to:     $WBdocCopies"
Write-Host -f cyan "'Import Invalid Records'" -NoNewline
Write-Host -f white "    is set to:" -NoNewline
Write-Host -f yellow "     $ImportErrRecords"
Write-Host -f cyan "'Address Correction'" -NoNewline
Write-Host -f white "        is set to:" -NoNewline
Write-Host -f yellow "     $AddressCorrection`n"

############################################# Test and load settings ##################################################
#Mapping check preparing for zip check'
    if($myDHLPlus_UploadMapping -eq 'CUSTOM'){
        $TriggerRowIndex = 2
        $Trigger = ''
        $ZIPIndex = 15
        $ISOCOdeIndex =14
        $CityIndex =  13
        $delimiter = ";"
        $del = $delimiter
        $fileHeader = 'true'
    }
    if($myDHLPlus_UploadMapping -eq 'MyDHL' -or ''){
        $TriggerRowIndex = 1
        $Trigger = 'SHIP_TO'
        $ZIPIndex = 8
        $ISOCOdeIndex =12
        $CityIndex =  9
        $delimiter = "\|"
        $del = $delimiter.TrimStart("\")
        $fileHeader = 'false'
    }
    if($myDHLPlus_UploadMapping -eq 'INTRASHIP'){
        $TriggerRowIndex = 1
        $Trigger = 'SHIP_TO'
        $ZIPIndex = 15
        $ISOCOdeIndex =12
        $CityIndex =  13
        $delimiter = "\|"
        $del = $delimiter.TrimStart("\")
        $fileHeader = 'false'
    }

#test localImportDirPath
[bool]$anErrorHappend = $false
if(!(Test-Path $localImportDirPath)){
    $anErrorHappend = $true
}
$itemDescription = "  => $localImportDirPath "
if (($anErrorHappend)) {
    Write-Host "'Import Directory Path' " -NoNewline
    Write-Host "    " -NoNewline
    Write-Host -f red "ERROR - Directory not found!" -BackgroundColor Yellow -NoNewline
    Write-Host $itemDescription

} else {
        Write-Host "'Import Directory Path' " -NoNewline
        Write-Host -f green "    OK - directory exists!" -NoNewline
        Write-Host "      " -NoNewLine
        Write-Host $itemDescription
    }

#test localArchiveDirPath
$itemDescription = "  => $localArchiveDirPath "
$anErrorHappend = $false
if(!(Test-Path $localArchiveDirPath)){
    $anErrorHappend = $true
    Write-Host "'Archive Directory Path' " -NoNewline
    Write-Host "   " -NoNewline
    Write-Host -f red "ERROR - Directory not found!" -BackgroundColor Yellow -NoNewline
    Write-Host $itemDescription

} else {
    Write-Host "'Archive Directory Path' " -NoNewline
    Write-Host -f green "   OK - directory exists!" -NoNewline
    Write-Host "      " -NoNewLine
    Write-Host $itemDescription
}

#check localPDFDirPath
$anErrorHappend = $false
if(!(Test-Path $localPDFDirPath)){
    Write-Host "'PDF Directory Path'  " -NoNewline
    Write-Host "      " -NoNewline
    $anErrorHappend = $true
}
$itemDescription = "  => $localPDFDirPath "
if (($anErrorHappend)) {
    Write-Host -f red "ERROR - Directory not found!" -BackgroundColor Yellow -NoNewline
    Write-Host $itemDescription
} else {

        Write-Host "'PDF Directory Path'   " -NoNewline
        Write-Host -f green "     OK - directory exists!" -NoNewline
        Write-Host "      " -NoNewLine
        Write-Host $itemDescription
}

#check SumatraPDF:
$anErrorHappend = $false
if ($useSumatraPDF) {
    if(!(Test-Path $sumatraPDFPath)){
        Write-Host "'sumatraPDF Dir Path' " -NoNewline
        Write-Host "      " -NoNewline
        $anErrorHappend = $true
    }
}
if ($useSumatraPDF) {
    $itemDescription = "  => $sumatraPDFPath "
    if (($anErrorHappend)) {
        Write-Host -f red "ERROR - Directory not found!" -BackgroundColor Yellow -NoNewline
        Write-Host $itemDescription
    } else {
            Write-Host "'sumatraPDF Dir Path' " -NoNewline
            Write-Host -f green "      OK - directory exists!" -NoNewline
            Write-Host "      " -NoNewLine
            Write-Host $itemDescription
    }
}

#check localPDFDirPath
$anErrorHappend = $false
if(!(Test-Path $errorMessageDirPath)){
    $populatedDirectries = '77u/cG9wdWxhdGVEaWN0aW9uYXJpZXNDYWxsYmFjayh7ImNyMDAzMCI6eyJjci1lcnJvcnMtcmVxdWlyZWQiOiJWYWx1ZSByZXF1aXJlZCBmb3IgdGhpcyBmaWVsZCIsImNyLW5hbWUiOiJNYXhpbXVtIENvc3QgcGVyIFNoaXBtZW50OiBDdXJyZW5jeSJ9LCJjcjAwMzEiOnsiY3ItbmFtZSI6Ik1heGltdW0gQ29zdCBwZXIgU2hpcG1lbnQ6IEFwcHJvdmFsIFJlcXVpcmVkIn0sImNyMDAzMiI6eyJjci1uYW1lIjoiQWxsb3cgdG8gYmlsbCBzaGlwbWVudChzKSB0byBDcmVkaXQgQ2FyZCBhbmQgT25saW5lIFBheW1lbnQgT3B0aW9ucyJ9LCJjcjAwMzMiOnsiY3ItbmFtZSI6Ikluc2lzdCBvbiBDcmVkaXQgQ2FyZCBhbmQgT25saW5lIFBheW1lbnQgT3B0aW9ucyJ9LCJzaGlwbWVudF9wYXBlcndvcmstaW52b2ljZS10eXBlc19vZl9leHBvcnQiOnsicmV0dXJuX3JlcGFpci1kZXNjcmlwdGlvbiI6IlLDvGNrZsO8aHJ1bmcvUmVwZXJhdHVyIiwicGVybWFuZW50LWRlc2NyaXB0aW9uIjoiUGVybWFuZW50IiwidGVtcG9yYXJ5LWRlc2NyaXB0aW9uIjoiVGVtcG9yYXJ5Iiwici1kZXNjcmlwdGlvbiI6IlLDvGNrZsO8aHJ1bmcvUmVwZXJhdHVyIiwidC1kZXNjcmlwdGlvbiI6IlRlbXBvcmFyeSIsInAtZGVzY3JpcHRpb24iOiJQZXJtYW5lbnQifSwiY3IwMTUwIjp7ImNyLWVycm9ycy1yZXF1aXJlZCI6IiIsImNyLW5hbWUiOiJEZWZhdWx0IG51bWJlciBvZiBjb3BpZXMgcmVxdWlyZWQgLSBJbnZvaWNlIiwiY3ItZXJyb3JzLXJhbmdlIjoiVmFsdWUgaXMgb3V0IG9mIHRoZSByYW5nZSJ9LCJTSElQTUVOVF9QSUNLVVAiOnsiU0NIRURVTEVfUElDS1VQX0FMRVJUX05PX0FERFJFU1MiOiI8ZGl2IGNsYXNzPVwiZXdmX2RpY3Rpb25hcnlfdmFsdWVcIj48ZGl2IGNsYXNzPSJtZXNzYWdlLXdyYXBwZXIiPjxwPklocmUgQWRyZXNzZSBmZWhsdCBpbiBJaHJlbSBNeURITCsgUHJvZmlsLiBCaXR0ZSBha3R1YWxpc2llcmVuIFNpZSBJaHIgUHJvZmlsIHt1c2VyRGV0YWlsc0xpbmt9PFwvcD5cbjxwPk5hY2hkZW0gU2llIElociBQcm9maWwgYWt0dWFsaXNpZXJ0IGhhYmVuLCBrw7ZubmVuIFNpZSBtaXQgZGVtIFZlcnNhbmQgZm9ydGZhaHJlbi48XC9wPlxuPFwvZGl2PjxcL2Rpdj4iLCJTQ0hFRFVMRV9QSUNLVVBfU0VMRUNUX09QVElPTl9PVEhFUiI6ImFuZGVyZSIsIlNDSEVEVUxFX1BJQ0tVUF9MSU5LX1VTRVJfREVUQUlMUyI6Ik1laW4gUHJvZmlsIGFrdHVhbGlzaWVyZW4iLCJMQUJFTF9MQVRFU1QiOiJTcMOkdGVzdGVucyIsIkxBQkVMX0VBUkxJRVNUIjoiRnLDvGhlc3RlbnMiLCJTQ0hFRFVMRV9QSUNLVVBfRVJST1JfUVVBTlRJVFlfSVNfTU9SRV9USEFOX0FMTE9XRUQiOiJBbnphaGwgw7xiZXJzY2hyZWl0ZXQgbWF4aW1hbCBlcmxhdWJ0ZSBNZW5nZSJ9LCJjcjAwMzgiOnsiY3ItZXJyb3JzLW1pbmxlbmd0aCI6Ik1pbmltdW0gbGVuZ3RoIGZvciB0aGlzIGZpZWxkIGlzIDAiLCJjci1lcnJvcnMtcmVxdWlyZWQiOiJUaGlzIGZpZWxkIGlzIHJlcXVpcmVkIiwiY3ItbmFtZSI6IkFsdGVybmF0ZSByZWZlcmVuY2UgZmllbGQgbmFtZSIsImNyLWVycm9ycy1tYXhsZW5ndGgiOiJNYXhpbXVtIGxlbmd0aCBmb3IgdGhpcyBmaWVsZCBpcyAyNTUifSwiY3IwMDM5Ijp7ImNyLW5hbWUiOiJSZWZlcmVuY2UgdmFsaWRhdGlvbiBydWxlIn0sImNyLWFjY291bnRzLWFuZC1wYXltZW50LW9wdGlvbnMiOnsiYWNjb3VudHNfc2VsZWN0LW9wdGlvbl9jcjAxNjYtbnVtYmVyYW5kbmlja25hbWUiOiJOdW1tZXIgdW5kwqBCZXplaWNobnVuZyIsImdyb3VwLW5hbWVfaGVhZGVyIjoiS29udGVuIHVuZCBaYWhsdW5nIiwiYWNjb3VudHNfc2VsZWN0LW9wdGlvbl9jcjAxNjYtbmlja25hbWVvbmx5IjoiQWxpYXMgKEJlc2NocmVpYnVuZykiLCJvbmxpbmUtcGF5bWVudC1vcHRpb25zX2xhYmVsX2NyMDAzMiI6Ikthbm4gS3JlZGl0a2FydGUgb2RlciBPbmxpbmViZXphaGx1bmcgbnV0emVuIiwiYWNjb3VudHNfbGFiZWxfY3IwMTY3IjoiQWNjb3VudG51bW1lciB1bnRlcmRyw7xja2VuIiwiYWNjb3VudHNfbGFiZWxfY3IwMTU2IjoiS2FubiBlaW5lIERITCBBY2NvdW50bnVtbWVyIG51dHplbiIsImFjY291bnRzX2xhYmVsX2NyMDAzNCI6IkvDtm5uZW4gYWx0ZXJuYXRpdmUgREhMIEFjY291bnRudW1tZXJuIG51dHplbiIsImFjY291bnRzX2xhYmVsX2NyMDE2NiI6IkFjY291bnQgYW56ZWlnZW4gbWl0IiwiYWNjb3VudHNfc2VsZWN0LW9wdGlvbl9jcjAxNjYtbnVtYmVyb25seSI6Ik51bW1lciIsIm9ubGluZS1wYXltZW50LW9wdGlvbnNfbGFiZWxfY3IwMDMzIjoiTXVzcyBLcmVkaXRrYXJ0ZSBvZGVyIE9ubGluZWJlemFobHVuZyBudXR6ZW4iLCJvbmxpbmUtcGF5bWVudC1vcHRpb25zX3N1Yi1oZWFkZXIiOiI8aDM+V2VubiBTZW5kdW5nZW4gYmV6YWhsdCB3ZXJkZW48XC9oMz5cbiIsImFjY291bnRzX2Vycm9yX2NyMDE2Ni1yZXF1aXJlZCI6IkVyZm9yZGVybGljaCIsImFjY291bnRzX3N1Yi1oZWFkZXIiOiI8aDM+V8OkaHJlbmQgZGVyIFNlbmR1bmdzZXJzdGVsbHVuZzxcL2gzPlxuIn0sIkIyTCI6eyJTSElQTUVOVFNfSVRFTV9BTEVSVF9FTVBUWV9TSElQTUVOVFNfTElTVCI6IktlaW5lIFNlbmR1bmcoZW4pIGdlZnVuZGVuLiAgQml0dGUga29udGFrdGllcmVuIFNpZSBkZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4ifSwiY3IwMDM0Ijp7ImNyLW5hbWUiOiJBbGxvdyB0byBzaGlwIHVzaW5nIGFsdGVybmF0ZSBESEwgQWNjb3VudCBudW1iZXIifSwiY3IwMTU2Ijp7ImNyLW5hbWUiOiJBbGxvdyB0byBzaGlwIHVzaW5nIGNvbXBhbnkgYWNjb3VudHMifSwiY3IwMDM3Ijp7ImNyLW5hbWUiOiJSZWZlcmVuY2UgcmVxdWlyZWQifSwiY3IwMDQxIjp7ImNyLW5hbWUiOiJTaGlwcGluZyBEZWxpdmVyeSBPcHRpb25zIn0sImNyMDA0MiI6eyJjci1uYW1lIjoiRW5hYmxlIFJlcG9ydHMifSwiY3IwMDQzIjp7ImNyLW5hbWUiOiJEaXNwbGF5IFByaWNpbmcgaW4gU2hpcG1lbnQifSwiY3IwMDQ0Ijp7ImNyLW5hbWUiOiJEaXNwbGF5IFByaWNpbmcgaW4gUmF0ZSAmIFRpbWUgUXVvdGUgdG9vbCJ9LCJzaGlwbWVudF9kZXRhaWxzLWRvY3VtZW50X2FuZF9wYWNrYWdlX2Rlc2NyaXB0aW9ucyI6eyI1MzgtY29tbW9kaXR5Y29kZSI6IkNoZWNrcyAtIGJsYW5rIiwiOTEtY29tbW9kaXR5Y29kZSI6IkNvZmZlZSIsIjU3MC1jb21tb2RpdHljb2RlIjoiV2lncywgaGFpciBwaWVjZXMiLCI2MDctY29tbW9kaXR5Y29kZSI6IlZvdWNoZXJzL3Rva2VucyIsIjU5LWNvbW1vZGl0eWNvZGUiOiJOZXdzcGFwZXJzIiwiNjExLWNvbW1vZGl0eWNvZGUiOiJDT01QTEVURUQgRk9STVMiLCIxNy1jb21tb2RpdHljb2RlIjoiUGxheWluZyBjYXJkcyIsIjMxMS1jb21tb2RpdHljb2RlIjoiRWxlY3Ryb25pYyBnYW1lcyIsIjEyNy1jb21tb2RpdHljb2RlIjoiQW50aXF1ZXMiLCIzNTgtY29tbW9kaXR5Y29kZSI6IlBsYXN0aWMgbWFkZSBwcm9kdWN0cyIsIjI2Ni1jb21tb2RpdHljb2RlIjoiU2hpcCBtYW5pZmVzdCAtIGNvbXB1dGVyIGdlbmVyYXRlZCIsIjU0Ny1jb21tb2RpdHljb2RlIjoiQ2lyY3VpdHMsIGNpcmN1aXQgYm9hcmRzIiwiNTg5LWNvbW1vZGl0eWNvZGUiOiJGaW5hbmNpYWwgc2VydmljZXMgY2FyZCIsIjk2LWNvbW1vZGl0eWNvZGUiOiJDb2xvZ25lLCBwZXJmdW1lIiwiMzE2LWNvbW1vZGl0eWNvZGUiOiJUb3lzIiwiNTQtY29tbW9kaXR5Y29kZSI6IkdyYWluIHNhbXBsZXMiLCI1NjEtY29tbW9kaXR5Y29kZSI6IklsbGVnYWwgZ29vZHMiLCI2My1jb21tb2RpdHljb2RlIjoiUHJpY2UgbGlzdHMiLCIyNDctY29tbW9kaXR5Y29kZSI6IlBvcm5vZ3JhcGh5IiwiMzY3LWNvbW1vZGl0eWNvZGUiOiJTb2lsIHNhbXBsZXMiLCI0MTgtY29tbW9kaXR5Y29kZSI6IkNvbXB1dGVyIGNvbXBvbmVudHMgYW5kIHBhcnRzIiwiMTEzLWNvbW1vZGl0eWNvZGUiOiJUZWxldmlzaW9ucywgdGVsZXZpc2lvbiBlcXVpcG1lbnQiLCI0MTMtY29tbW9kaXR5Y29kZSI6IkFzYmVzdG9zIiwiMzYtY29tbW9kaXR5Y29kZSI6IkxhYmVscyIsIjU3NS1jb21tb2RpdHljb2RlIjoiQ29zbWV0aWNzLCBzb2FwcyBjb250YWluaW5nIG1lcmN1cnkiLCIxMDMtY29tbW9kaXR5Y29kZSI6IlNoaXBwaW5nIHNjaGVkdWxlcyIsIjM3MS1jb21tb2RpdHljb2RlIjoiTWlsaXRhcnkgZXF1aXBtZW50IiwiMjk4LWNvbW1vZGl0eWNvZGUiOiJDb3R0b24iLCIzMC1jb21tb2RpdHljb2RlIjoiVGFwZXMgLSBjb21wdXRlciIsIjU5OS1jb21tb2RpdHljb2RlIjoiTW9uZXkgb3IgcG9zdGFsIG9yZGVycyIsIjY0LWNvbW1vZGl0eWNvZGUiOiJUZXh0aWxlIHNhbXBsZXMiLCI1ODUtY29tbW9kaXR5Y29kZSI6IkRpcGxvbWF0aWMgTWF0ZXJpYWwiLCIyMjgtY29tbW9kaXR5Y29kZSI6IkFuaW1hbCBwcm9kdWN0cyIsIjQxMi1jb21tb2RpdHljb2RlIjoiQ290dG9uIHNlZWQiLCIzMS1jb21tb2RpdHljb2RlIjoiVGFwZXMgLSB2aWRlbyBjYXNzZXR0ZXMiLCIxNDYtY29tbW9kaXR5Y29kZSI6Ik5hcmNvdGljcyAtIGlsbGVnYWwiLCI2MDEtY29tbW9kaXR5Y29kZSI6IlByaW50ZWQgbWF0dGVyIiwiMTYwLWNvbW1vZGl0eWNvZGUiOiJJbmR1c3RyaWFsIGVxdWlwbWVudCIsIjMtY29tbW9kaXR5Y29kZSI6IkJsYW5rIGZvcm1zIiwiOTItY29tbW9kaXR5Y29kZSI6IkFkdmVydGlzaW5nIGJyb2NodXJlcywgcGFtcGhsZXRzIiwiMTEyLWNvbW1vZGl0eWNvZGUiOiJGb29kc3R1ZmZzIiwiMTU0LWNvbW1vZGl0eWNvZGUiOiJDYXNoIGxldHRlcnMiLCIyNDItY29tbW9kaXR5Y29kZSI6Ik1vbmV5IG9yZGVycyIsIjE4LWNvbW1vZGl0eWNvZGUiOiJQdWJsaWNhdGlvbnMgLSBmb3IgcHVibGljIHJlc2FsZSIsIjU4NC1jb21tb2RpdHljb2RlIjoiQ3JlZGl0IG5vdGUiLCI0NC1jb21tb2RpdHljb2RlIjoiSW52b2ljZXMgLSBibGFuayIsIjYwMi1jb21tb2RpdHljb2RlIjoiUmVwbGljYSBhbW11bml0aW9uIiwiNTk4LWNvbW1vZGl0eWNvZGUiOiJNZWRpY2luYWwgY2FubmFiaXMiLCIzNTktY29tbW9kaXR5Y29kZSI6IlJ1YmJlciBtYWRlIHByb2R1Y3RzIiwiNTY3LWNvbW1vZGl0eWNvZGUiOiJFdmVudCB0aWNrZXRzIiwiMjAtY29tbW9kaXR5Y29kZSI6IlNsaWRlcyIsIjYyLWNvbW1vZGl0eWNvZGUiOiJQbGFucywgZHJhd2luZ3MgLSBmb3IgYXJjaGl0ZWN0dXJhbCwgaW5kdXN0cmlhbCwgZW5naW5lZXJpbmcgcHVycG9zZXMiLCI1NDEtY29tbW9kaXR5Y29kZSI6IkRydWdzIC0gbm9uLXByZXNjcmlwdGlvbiIsIjI0MS1jb21tb2RpdHljb2RlIjoiQWxjb2hvbGljIGJldmVyYWdlcyIsIjIyNS1jb21tb2RpdHljb2RlIjoiQ29tcGFjdCBkaXNrIiwiNTgzLWNvbW1vZGl0eWNvZGUiOiJDb250cmFjdCIsIjYwOC1jb21tb2RpdHljb2RlIjoiV2F0Y2hlcyIsIjM3LWNvbW1vZGl0eWNvZGUiOiJQYXNzcG9ydHMiLCI2MDMtY29tbW9kaXR5Y29kZSI6IkVsZWN0cm8tc2hvY2tlcnMgKHRhc2VycykiLCI1OTctY29tbW9kaXR5Y29kZSI6Ik1lZGlhIHN0b3JhZ2UgZGV2aWNlIiwiNDYtY29tbW9kaXR5Y29kZSI6Ik1hcHMiLCI1OTUtY29tbW9kaXR5Y29kZSI6Ikxvb3NlIChzZW1pKSBwcmVjaW91cyBzdG9uZXMiLCI1NTMtY29tbW9kaXR5Y29kZSI6IlBob25lcywgbW9kZW1zIiwiMjU1LWNvbW1vZGl0eWNvZGUiOiJJdm9yeSIsIjExNy1jb21tb2RpdHljb2RlIjoiTWljcm9maWNoZSwgbWljcm9maWxtIiwiMTAyLWNvbW1vZGl0eWNvZGUiOiJJbnZvaWNlcyAtIG5vdCBibGFuayIsIjI1MC1jb21tb2RpdHljb2RlIjoiRGFuZ2Vyb3VzIGdvb2RzLCBoYXphcmRvdXMgbWF0ZXJpYWxzLCBjb21idXN0YWJsZSBtYXRlcmlhbHMiLCIxMjgtY29tbW9kaXR5Y29kZSI6IlNwb3J0cyBlcXVpcG1lbnQiLCI0MjgtY29tbW9kaXR5Y29kZSI6IlJhZGlvcywgcmFkaW8gZXF1aXBtZW50IG9yIHBhcnRzIiwiMjM3LWNvbW1vZGl0eWNvZGUiOiJGaXJlYXJtcyBwYXJ0cyIsIjI3OS1jb21tb2RpdHljb2RlIjoiTWVkaWNhbCwgZGVudGFsIHN1cHBsaWVzL2VxdWlwbWVudCIsIjU3OS1jb21tb2RpdHljb2RlIjoiQ2VydGlmaWNhdGVzIiwiNTY0LWNvbW1vZGl0eWNvZGUiOiJFeHBsb3NpdmVzLCB3ZWFwb25zIiwiNTUwLWNvbW1vZGl0eWNvZGUiOiJDb21wdXRlciBzb2Z0d2FyZSIsIjI2NS1jb21tb2RpdHljb2RlIjoiU3Vic3RhbmNlcyBjb250YWluaW5nIHNvZGl1bSwgY2FsY2l1bSBjeWNsYW1hdGUiLCI1OTItY29tbW9kaXR5Y29kZSI6Ikh1bnRpbmcgdHJvcGhpZXMsYW5pbWFsIHBhcnQvcmVtYWluIiwiMjI3LWNvbW1vZGl0eWNvZGUiOiJMYXNlciBkaXNrIiwiMzItY29tbW9kaXR5Y29kZSI6Ik1hcmJsZSBwcm9kdWN0cyIsIjU4MS1jb21tb2RpdHljb2RlIjoiQ2xvY2tzIiwiNzQtY29tbW9kaXR5Y29kZSI6Ik1hZ2F6aW5lcywgcGVyaW9kaWNhbHMsIGpvdXJuYWxzIiwiNTY5LWNvbW1vZGl0eWNvZGUiOiJUb3kgZ3VucyIsIjEzMC1jb21tb2RpdHljb2RlIjoiVmlzYSBhcHBsaWNhdGlvbnMiLCIxNDUtY29tbW9kaXR5Y29kZSI6IlRvYmFjY28iLCI2MDUtY29tbW9kaXR5Y29kZSI6IlRyYXZlbGxlciJzIGNoZXF1ZXMiLCIzMzQtY29tbW9kaXR5Y29kZSI6IkNvYWwsIGZpcmV3b29kIiwiMTE2LWNvbW1vZGl0eWNvZGUiOiJBaXJsaW5lIHRpY2tldHMgLSBpc3N1ZWQvdmFsaWRhdGVkIiwiNTY1LWNvbW1vZGl0eWNvZGUiOiJGaXJlYXJtcywgd2VhcG9ucyAtIGltaXRhdGlvbi9yZXBsaWNhIiwiMjgwLWNvbW1vZGl0eWNvZGUiOiJQb3N0YWwgZW52ZWxvcGVzIiwiNjAtY29tbW9kaXR5Y29kZSI6Ik1lZGljYWwgc2FtcGxlcyIsIjU5My1jb21tb2RpdHljb2RlIjoiSWRlbnRpdHkgZG9jdW1lbnQiLCI1NTEtY29tbW9kaXR5Y29kZSI6Iklzb3Byb3Bhbm9sIiwiMjUxLWNvbW1vZGl0eWNvZGUiOiJMaXRoaXVtIGJhdHRlcmllcyIsIjM2Mi1jb21tb2RpdHljb2RlIjoiRXllIGdsYXNzZXMsIGNvbnRhY3RzIiwiNTgwLWNvbW1vZGl0eWNvZGUiOiJDaWdhcmV0dGVzLCBjaWdhcnMgYW5kIGUtY2lnYXIiLCI0OC1jb21tb2RpdHljb2RlIjoiQW5udWFsIHJlcG9ydHMiLCI3Ni1jb21tb2RpdHljb2RlIjoiUGhvdG9ncmFwaHMgLSBhcyBwYXJ0IG9mIGJ1c2luZXNzIHJlcG9ydHMiLCIzNC1jb21tb2RpdHljb2RlIjoiQnVzaW5lc3MgY2FyZHMiLCI1NjYtY29tbW9kaXR5Y29kZSI6IkV4cGxvc2l2ZXMsIGRldmljZXMsIGFtbXVuaXRvbiAtIGltaXRhdGlvbiIsIjExNS1jb21tb2RpdHljb2RlIjoiUHVibGljYXRpb25zIC0gbm90IGZvciBwdWJsaWMgcmVzYWxlIiwiNjA2LWNvbW1vZGl0eWNvZGUiOiJVbnVzZWQgc3RhbXBzIiwiMTQzLWNvbW1vZGl0eWNvZGUiOiJDaGVja2VzIC0gY2FzaGllciIsIjU5NC1jb21tb2RpdHljb2RlIjoiTGV0dGVyLCBjb3JyZXNwb25kZW5jZSIsIjU1Mi1jb21tb2RpdHljb2RlIjoiQnVua2VyIG9pbCBzYW1wbGUgZm9yIGFuYWx5c2lzIiwiNDg1LWNvbW1vZGl0eWNvZGUiOiJEcmF3aW5ncyAtIHRlY2huaWNhbCwgYXJjaGl0ZWN0LCBlbmdpbmVlcmluZyIsIjQ5LWNvbW1vZGl0eWNvZGUiOiJCbHVlcHJpbnRzIiwiNTU5LWNvbW1vZGl0eWNvZGUiOiJCaW9sb2dpY2FsIFN1YnN0YW5jZSBDYXRlZ29yeSBCLCBVTjMzNzMiLCI1OTYtY29tbW9kaXR5Y29kZSI6IkxvdHRlcnkgdGlja2V0cyIsIjU5MS1jb21tb2RpdHljb2RlIjoiR2lmdCBjYXJkcyIsIjE4MC1jb21tb2RpdHljb2RlIjoiRGlwbG9tYXRpYyBtYWlsIiwiMjU5LWNvbW1vZGl0eWNvZGUiOiJEaWFyaWVzIiwiMzgtY29tbW9kaXR5Y29kZSI6IlByaWNlIHRpY2tldHMgZm9yIGdhcm1lbnRzIiwiMjktY29tbW9kaXR5Y29kZSI6IlRhcGVzIC0gYXVkaW8gY2Fzc2V0dGVzIiwiMzc5LWNvbW1vZGl0eWNvZGUiOiJUZWxlY29tbXVuaWNhdGlvbiBlcXVpcG1lbnQiLCI1NjgtY29tbW9kaXR5Y29kZSI6Ikl0ZW1zIHRoYXQgY291bGQgYmUgdXNlZCBhcyB3ZWFwb25zIiwiNzUtY29tbW9kaXR5Y29kZSI6Ik1hbnVzY3JpcHRzIiwiMjQwLWNvbW1vZGl0eWNvZGUiOiJKZXdlbGVyeSIsIjMzLWNvbW1vZGl0eWNvZGUiOiJCb29rcyAtIGhhcmRiYWNrLCBwYXBlcmJhY2sgKG5vbi1jb21tZXJjaWFsIHVzZSkiLCI1ODItY29tbW9kaXR5Y29kZSI6IkNvbW1lcmF0aXZlIGNvaW5zIGFuZCBtZWRhbHMiLCI0Mi1jb21tb2RpdHljb2RlIjoiQ2F0YWxvZ3MiLCIzMTktY29tbW9kaXR5Y29kZSI6IlgtcmF5IG1hY2hpbmVzIiwiNTQwLWNvbW1vZGl0eWNvZGUiOiJEcnVncyAtIHByZXNjcmlwdGlvbiIsIjIyNi1jb21tb2RpdHljb2RlIjoiU3RvbmUsIG1pbmVyYWwgc2FtcGxlcyBmb3IgYW5hbHlzaXMiLCI2MDQtY29tbW9kaXR5Y29kZSI6IlRpY2tldHMgKGJsYW5rIHN0b2NrKSIsIjU3LWNvbW1vZGl0eWNvZGUiOiJNdXNpYyAtIHByaW50ZWQsIG1hbnVzY3JpcHQiLCI4NC1jb21tb2RpdHljb2RlIjoiQ29zbWV0aWNzIiwiOTktY29tbW9kaXR5Y29kZSI6IkNvbXB1dGVyIHByaW50b3V0cyIsIjYtY29tbW9kaXR5Y29kZSI6IkNyZWRpdCBjYXJkcyIsIjItY29tbW9kaXR5Y29kZSI6IkFydHdvcmsgLSBpbmNsdWRpbmcgZHJhd2luZ3MsIHByb29mcywgbGF5b3V0cyIsIjE1LWNvbW1vZGl0eWNvZGUiOiJQaG90b2dyYXBocyIsIjYwOS1jb21tb2RpdHljb2RlIjoiQWlyIEd1bnMiLCI0MzktY29tbW9kaXR5Y29kZSI6IkRvY3VtZW50cyAtIGdlbmVyYWwgYnVzaW5lc3MiLCIzNTAtY29tbW9kaXR5Y29kZSI6IkNoZW1pY2FscyAtIG5vbi1oYXphcmRvdXMiLCI2MDAtY29tbW9kaXR5Y29kZSI6IlByZS1wYWlkIHBob25lIGNhcmRzIiwiNDMtY29tbW9kaXR5Y29kZSI6IkdhbWJsaW5nIGRldmljZXMiLCIyMjItY29tbW9kaXR5Y29kZSI6Illhcm4iLCIxNjEtY29tbW9kaXR5Y29kZSI6IkFuaW1hbCBza2lucyIsIjU3OC1jb21tb2RpdHljb2RlIjoiQWN0aXZhdGVkIENyZWRpdC9DYXNoIENhcmRzIiwiMjM2LWNvbW1vZGl0eWNvZGUiOiJEZWVkcyIsIjEwLWNvbW1vZGl0eWNvZGUiOiJGaWxtcyAtIHByb21vdGlvbmFsLCB0cmFpbmluZyIsIjI3OC1jb21tb2RpdHljb2RlIjoiQ2xvY2tzLCB3YXRjaGVzIiwiNTItY29tbW9kaXR5Y29kZSI6IkNoYXJ0cywgZ3JhcGhzIiwiNjUtY29tbW9kaXR5Y29kZSI6IlNlZWRzIiwiNDI1LWNvbW1vZGl0eWNvZGUiOiJQbGFudCBwcm9kdWN0cyIsIjEzMy1jb21tb2RpdHljb2RlIjoiRnVycyIsIjU2My1jb21tb2RpdHljb2RlIjoiRmlyZWFybXMgKGNvbXBsZXRlKSwgYW1tdW5pdGlvbiIsIjU5MC1jb21tb2RpdHljb2RlIjoiRmluYW5jaWFsIFNlcnZpY2VzIENhcmQgKE5JKSIsIjIzLWNvbW1vZGl0eWNvZGUiOiJUcmFuc3BhcmVuY2llcyIsIjU3Ny1jb21tb2RpdHljb2RlIjoiQmlsbCBvZiBsYWRpbmciLCI0MDUtY29tbW9kaXR5Y29kZSI6IlJhZGFyIGVxdWlwbWVudCwgdHJhbnNtaXR0ZXJzLCByZWNlaXZlcnMiLCIyNC1jb21tb2RpdHljb2RlIjoiQWlybGluZSB0aWNrZXRzIC0gYmxhbmsgc3RvY2siLCIyMzUtY29tbW9kaXR5Y29kZSI6IkN1cnJlbmN5IiwiNDExLWNvbW1vZGl0eWNvZGUiOiJUZWEiLCI5My1jb21tb2RpdHljb2RlIjoiRmlsbSAtIGVudGVydGFpbm1lbnQiLCIzMjMtY29tbW9kaXR5Y29kZSI6Ik1vYmlsZSBwaG9uZXMsIGFjY2Vzc29yaWVzLCBjb21wb25lbnRzIiwiMjIwLWNvbW1vZGl0eWNvZGUiOiJDb2ZmZWUgc2FtcGxlcyIsIjU4OC1jb21tb2RpdHljb2RlIjoiRmluYW5jaWFsIGFuZCBtb25ldGFyeSBjb21tb2RpdGllcyIsIjQxLWNvbW1vZGl0eWNvZGUiOiJDYWxlbmRhcnMiLCIyNDYtY29tbW9kaXR5Y29kZSI6IlBsYW50cyIsIjUwNC1jb21tb2RpdHljb2RlIjoiUGFwZXIgcGF0dGVybnMgLSBmb3IgYXBwYXJlbCIsIjU2Mi1jb21tb2RpdHljb2RlIjoiQ2FzaGxpa2UgbmVnb3RpYWJsZSBpbnN0cnVtZW50cyIsIjI1LWNvbW1vZGl0eWNvZGUiOiJEaXNrZXR0ZXMiLCIxMzUtY29tbW9kaXR5Y29kZSI6IlNob2VzIiwiMzUyLWNvbW1vZGl0eWNvZGUiOiJDZXJhbWljIHByb2R1Y3RzIiwiMTIxLWNvbW1vZGl0eWNvZGUiOiJTdGF0aW9uZXJ5IiwiNTc2LWNvbW1vZGl0eWNvZGUiOiJBY3RpdmF0ZWQgc2ltIGNhcmRzIiwiNS1jb21tb2RpdHljb2RlIjoiQ3JlZGl0IGNhcmRzIC0gYmxhbmtzIiwiMjMyLWNvbW1vZGl0eWNvZGUiOiJMaXZlIGFuaW1hbHMsIGZpc2gsIGJpcmRzIiwiNTc0LWNvbW1vZGl0eWNvZGUiOiJDb3VudGVyZmVpdCBnb29kcyIsIjQyMy1jb21tb2RpdHljb2RlIjoiQ29tbXVuaWNhdGlvbnMgZXF1aXBtZW50IiwiMzQzLWNvbW1vZGl0eWNvZGUiOiJFbGVjdHJvbmljIGVxdWlwbWVudCIsIjI3Ni1jb21tb2RpdHljb2RlIjoiTGVhdGhlciBnb29kcyIsIjE0OS1jb21tb2RpdHljb2RlIjoiQ2hlY2tzIC0gY2FuY2VsZWQiLCI1NTgtY29tbW9kaXR5Y29kZSI6IlNoaXAgc3BhcmVzIiwiNjEwLWNvbW1vZGl0eWNvZGUiOiJBY3RpdmF0ZWQgQ3JlZGl0L0RlYml0L0FUTSBDYXJkIiwiNTcxLWNvbW1vZGl0eWNvZGUiOiJXaGl0ZSBQaG9zcGhvcm91cyBtYXRjaGVzIiwiNTA2LWNvbW1vZGl0eWNvZGUiOiJTd2F0Y2hlcyIsIjI0NC1jb21tb2RpdHljb2RlIjoiUGVyaXNoYWJsZXMiLCIxMS1jb21tb2RpdHljb2RlIjoiTGlxdWlkcyAtIG5vbi1oYXphcmRvdXMiLCIyNDgtY29tbW9kaXR5Y29kZSI6IlByZWNpb3VzIG1ldGFscywgc3RvbmVzIiwiMzE1LWNvbW1vZGl0eWNvZGUiOiJNZWFzdXJpbmcgYXBwYXJhdHVzIiwiMzU3LWNvbW1vZGl0eWNvZGUiOiJPaWwgcHJvZHVjdHMiLCI1NjAtY29tbW9kaXR5Y29kZSI6IkJhbmRlcm9scywgdGF4IHN0aWNrZXJzIiwiNTQ4LWNvbW1vZGl0eWNvZGUiOiJGb3RvbGl0aG9zIiwiODAtY29tbW9kaXR5Y29kZSI6IlRleHRpbGUgYXJ0aWNsZXMiLCI2MTMtY29tbW9kaXR5Y29kZSI6IlBBUEVSIFBBVFRFUk5TIEZPUiBXRUFSSU5HIEFQUEFSRUwiLCIzNTUtY29tbW9kaXR5Y29kZSI6IkdsYXNzIHByb2R1Y3RzIiwiNTYtY29tbW9kaXR5Y29kZSI6Ik1hbnVhbHMgLSB0ZWNobmljYWwiLCI1ODYtY29tbW9kaXR5Y29kZSI6IkVkdWNhdGlvbmFsIG1hdGVyaWFsIC0gcHJpbnRlZCIsIjgxLWNvbW1vZGl0eWNvZGUiOiJUeXBld3JpdGVyIHJpYmJvbnMiLCI3LWNvbW1vZGl0eWNvZGUiOiJGYWJyaWNzLCBmYWJyaWMgc2FtcGxlcyIsIjU3Mi1jb21tb2RpdHljb2RlIjoiVGlyZXMgLSB1c2VkIiwiNjE0LWNvbW1vZGl0eWNvZGUiOiJIVU1BTklUQVJJQU4gQUlEIiwiMTQtY29tbW9kaXR5Y29kZSI6Ik1hY2hpbmUsIGVsZWN0cm9uaWNzIHBhcnRzIiwiMTIzLWNvbW1vZGl0eWNvZGUiOiJQZXJzb25hbCBlZmZlY3RzIiwiMTM4LWNvbW1vZGl0eWNvZGUiOiJXb3JrcyBvZiBhcnQiLCIyNy1jb21tb2RpdHljb2RlIjoiV2FsbHBhcGVyIiwiNjktY29tbW9kaXR5Y29kZSI6IlBhbXBobGV0cyIsIjU4Ny1jb21tb2RpdHljb2RlIjoiRXhhbWluYXRpb24gcGFwZXJzIiwiOTctY29tbW9kaXR5Y29kZSI6IkJ1bGxpb24gLSBvZiBhbnkgcHJlY2lvdXMgbWV0YWwiLCI4LWNvbW1vZGl0eWNvZGUiOiJGaWxtIC0gOG1tLCAxNm1tLCAzNW1tIiwiMjQ1LWNvbW1vZGl0eWNvZGUiOiJQZXJzb25hbCBtYWlsIiwiMzEyLWNvbW1vZGl0eWNvZGUiOiJGaXJlIGV4dGluZ3Vpc2hlcnMiLCI0MjEtY29tbW9kaXR5Y29kZSI6Ikh1bWFuIHJlbWFpbnMsIGluY2x1ZGluZyBhc2hlcyIsIjYxMi1jb21tb2RpdHljb2RlIjoiTUVESUNBTCBFWEFNSU5BVElPTiBSRVNVTFQiLCI1MDMtY29tbW9kaXR5Y29kZSI6Ik5lZ2F0aXZlcyAtIGluY2x1ZGluZyB4LXJheXMsIGZpbG1zIiwiMjczLWNvbW1vZGl0eWNvZGUiOiJKZXdlbGVyeSAtIGNvc3R1bWUiLCI1NzMtY29tbW9kaXR5Y29kZSI6IkRpc3RpbGxlZCBiZXZlcmFnZXMgY29udGFpbmluZyBwcm9kIiwiNDAtY29tbW9kaXR5Y29kZSI6IkJvb2tsZXRzLCBicm9jaHVyZXMgLSBub24tYWR2ZXJ0aXNpbmcifSwiY3IwMTYwIjp7ImNyLW5hbWUiOiJBbGxvdyBHcm91cCBNZW1iZXJzIHRvIHNoYXJlIGdyb3VwIHNoaXBtZW50cyJ9LCJjcjAwNDAiOnsiY3ItbmFtZSI6IkFsbG93IHRvIHZpZXcgcmVmZXJlbmNlIGxpc3QifSwiU0hJUE1FTlRfREVGQVVMVFMiOnsiUkVUVVJOX1NISVBNRU5UU19TRUxFQ1RfT1BUSU9OX0JZX1BSSU5USU5HX0FORF9TQU5ESU5HX01ZU0VMRiI6IkluZGVtIGljaCBkaWUgTGFiZWwgc2VsYnN0IGRydWNrZSB1bmQgdmVyc2VuZGUiLCJVTklUU19NRUFTVVJFX0NVUlJFTkNZX0JVVFRPTl9OTyI6Ik5laW4iLCJSRVRVUk5fU0hJUE1FTlRTX1NFTEVDVF9PUFRJT05fU0VMRUNUX09ORSI6IkF1c3fDpGhsZW4gIiwiVU5JVFNfTUVBU1VSRV9DVVJSRU5DWV9NU0dfTUVUUklDX1dBUk5JTkciOiJNYcOfZWluaGVpdCB3ZXJkZW4gZ2XDpG5kZXJ0IGluIE1ldHJpc2NoLiBWb3JnYW5nIGZvcnRzZXR6ZW4/IiwiUkVUVVJOX1NISVBNRU5UU19TRUxFQ1RfT1BUSU9OX05FVkVSX0FTSyI6Ik5pZSIsIkFTU0lHTklOR19TSElQTUVOVFNfU0VMRUNUX09QVElPTl9OSUNLTkFNRV9PTkxZIjoiTnVyIEFsaWFzIHNvbGwgYW5nZXplaWd0IHdlcmRlbi4iLCJVTklUU19NRUFTVVJFX0NVUlJFTkNZX0JVVFRPTl9ZRVMiOiJKYSIsIlJFVFVSTl9TSElQTUVOVFNfU0VMRUNUX09QVElPTl9BRlRFUl9QUklOVEVEIjoiTmFjaGRlbSBpY2ggbWVpbmUgRG9rdW1lbnRlIGbDvHIgRXhwb3J0c2VuZHVuZ2VuIGdlZHJ1Y2t0IGhhYmUiLCJBU1NJR05JTkdfU0hJUE1FTlRTX1NFTEVDVF9PUFRJT05fQ09OQ0VBTCI6IlZlcnN0ZWNrdGUgS3VuZGVubnVtbWVyIiwiVU5JVFNfTUVBU1VSRV9DVVJSRU5DWV9NU0dfSU1QRVJJQUxfV0FSTklORyI6Ik1hw59laW5oZWl0IHdlcmRlbiBnZcOkbmRlcnQgaW4gSW1wZXJpYWwuIFZvcmdhbmcgZm9ydHNldHplbj8iLCJBU1NJR05JTkdfU0hJUE1FTlRTX1NFTEVDVF9PUFRJT05fTlVNQkVSX0FORF9OSUNLTkFNRSI6Ikt1bmRlbm51bW1lciB1bmQgQWxpYXMgYW56ZWlnZW4uIiwiVU5JVFNfTUVBU1VSRV9DVVJSRU5DWV9TRUxFQ1RfT1BUSU9OX0lNUEVSSUFMIjoiSW1wZXJpYWwgKGxiL2luKSIsIlVOSVRTX01FQVNVUkVfQ1VSUkVOQ1lfU0VMRUNUX09QVElPTl9NRVRSSUMiOiJNZXRyaXNjaCAoa2cvY20pIiwiUkVUVVJOX1NISVBNRU5UU19TRUxFQ1RfT1BUSU9OX1NBTUVfVElNRSI6Ildlbm4gaWNoIGVpbmUgRXhwb3J0LVNlbmR1bmcgZXJzdGVsbGUiLCJSRVRVUk5fU0hJUE1FTlRTX1NFTEVDVF9PUFRJT05fVklBX0VNQUlMIjoiVmlhIGVNYWlsIn0sImdlbmVyYWxfc2V0dGluZ3MtdW9tLW90aGVyX3VvbXNfbGlzdCI6eyJncnMtZGVzY3JpcHRpb24iOiJCcnV0dG8iLCJwY3MtZGVzY3JpcHRpb24iOiJQYWNrc3TDvGNrIiwiMm5vLWRlc2NyaXB0aW9uIjoiamVkZS9yL3MiLCJ5ZC1kZXNjcmlwdGlvbiI6IllhcmRzIiwiMmtnLWRlc2NyaXB0aW9uIjoiVW56ZW4iLCJzZXQtZGVzY3JpcHRpb24iOiIiLCI0bTItZGVzY3JpcHRpb24iOiJRdWFkcmF0IFlhcmRzIiwia2ctZGVzY3JpcHRpb24iOiJLaWxvZ3JhbW0iLCJmdC1kZXNjcmlwdGlvbiI6IkZvb3QiLCJkcHItZGVzY3JpcHRpb24iOiJEdXR6ZW5kIFBhYXIiLCJzay1kZXNjcmlwdGlvbiI6IiIsIjJtMy1kZXNjcmlwdGlvbiI6IkN1YmljIFplbnRpbWV0ZXIiLCIybTItZGVzY3JpcHRpb24iOiJRdWFkcmF0IEZlZXQiLCIyZ20tZGVzY3JpcHRpb24iOiJaZW50aWdyYW0iLCJlYS1kZXNjcmlwdGlvbiI6ImplZGUvci9zIiwibWctZGVzY3JpcHRpb24iOiJNaWxsaWdyYW1tIiwiZ20tZGVzY3JpcHRpb24iOiJHcmFtbSIsIjJtLWRlc2NyaXB0aW9uIjoiWmVudGltZXRlciIsImluLWRlc2NyaXB0aW9uIjoiSW5jaGVzIiwibTItZGVzY3JpcHRpb24iOiJRdWFkcmF0IE1ldGVyIiwiM20tZGVzY3JpcHRpb24iOiJZYXJkcyIsIjNnbS1kZXNjcmlwdGlvbiI6Ik1pbGxpZ3JhbW0iLCJtLWRlc2NyaXB0aW9uIjoiTWV0ZXIiLCIzbTMtZGVzY3JpcHRpb24iOiJDdWJpYyBGZWV0IiwibW0tZGVzY3JpcHRpb24iOiIiLCJtbC1kZXNjcmlwdGlvbiI6Ik1pbGxpbGl0ZXIiLCIzbTItZGVzY3JpcHRpb24iOiJRdWFkcmF0IEluY2hlcyIsIjNsLWRlc2NyaXB0aW9uIjoiTWlsbGlsaXRlciIsIm0zLWRlc2NyaXB0aW9uIjoiQ3ViaWMgTWV0ZXIiLCJwcnMtZGVzY3JpcHRpb24iOiJQYWFyIiwibC1kZXNjcmlwdGlvbiI6IkxpdGVyIiwic3lkLWRlc2NyaXB0aW9uIjoiUXVhZHJhdCBZYXJkcyIsIjJsLWRlc2NyaXB0aW9uIjoiR2FsbG9uZW4iLCIza2ctZGVzY3JpcHRpb24iOiJQZnVuZCIsImN0LWRlc2NyaXB0aW9uIjoiVmVycGFja3VuZ2VuIiwiY20yLWRlc2NyaXB0aW9uIjoiUXVhZHJhdCBaZW50aW1ldGVyIiwiYm94LWRlc2NyaXB0aW9uIjoiS2lzdGVuIiwibm8tZGVzY3JpcHRpb24iOiJOdW1tZXIiLCJ4LWRlc2NyaXB0aW9uIjoiS2VpbmUgRWluaGVpdCBlcmZvcmRlcmxpY2giLCJkb3otZGVzY3JpcHRpb24iOiJEdXR6ZW5kIn0sIlNISVBNRU5UX0RFVEFJTFMiOnsiU0hJUE1FTlRfVFlQRV9TVUJfSEVBREVSX0RFU0NSSUJFX0RPQ1VNRU5UU19FTkFCTEVEX0NVU1RPTSI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPlfDpGhsZW4gU2llIGVpbmUgQmVzY2hyZWlidW5nIGF1cyBvZGVyIGdlYmVuIFNpZSBlaW5lIGVpZ2VuZSBkZXRhaWxpZXJ0ZSBCZXNjaHJlaWJ1bmcgZWluLiA8ZGl2IGNsYXNzPVwiaW5mb1wiPjxkaXY+V2VubiBTaWUgSWhyZSBEb2t1bWVudGVuYmVzY2hyZWlidW5nIG5pY2h0IGluIGRlciBMaXN0ZSBmaW5kZW4sIGvDtm5uZW4gU2llIElocmUgZWlnZW5lIEJlc2NocmVpYnVuZyBlaW5nZWJlbi48XC9kaXY+PFwvZGl2PjxcL2Rpdj4iLCJTSElQTUVOVF9UWVBFX0xBQkVMX1NVTU1BUklaRV9TSElQTUVOVF9QTEFDRUhPTERFUiI6IkRhenUgZ2Vow7ZyZW4gQsO8cm9tYXRlcmlhbCwgQXV0b3RlaWxlLCBLbGVpZHVuZywgZXRjLiIsIkdTVF9TRUxFQ1RfTk8iOiJOZWluIiwiR1NUX1NFTEVDVF9UUkFOU0FDVElPTl9UWVBFX0JJTExfU0hJUF9GUk9NIjoiTmVpbiIsIlNISVBNRU5UX1RZUEVfSU5GT19VU0VfT1dOX0NVU1RPTVNfSU5WT0lDRV9QQUNLQUdFIjoiSWNoIGhhYmUgZWluZSBhdXNnZWRydWNrdGUgUmVjaG51bmciLCJTSElQTUVOVF9UWVBFX1NVQl9IRUFERVJfQUREX1JFRkVSRU5DRSI6IlNlbmR1bmdzcmVmZXJlbnogaGluenVmw7xnZW4iLCJHU1RfU0VMRUNUX09ORSI6IkF1c3fDpGhsZW4gIiwiTEJfRE9DX09SX1BBQ0tBR0VfVkFMVUVfTEFCRUxfUEFDS0FHRSI6IlNlbmR1bmciLCJHU1RfU0VMRUNUX1lFUyI6IkphIiwiU0hJUE1FTlRfVFlQRV9GSUVMRF9QTEFDRUhPTERFUl9BUFBFQVJTX09OX1dBWUJJTEwiOiJlcnNjaGVpbnQgYXVmIFZlcnNhbmRsYWJlbCAvIEZyYWNodGJyaWVmIiwiU0hJUE1FTlRfVFlQRV9FUlJPUl9SRUZFUkVOQ0VfRE9FU05fTk9UX01BVENIIjoiS2VpbmUgRXJnZWJuaXNzZSBnZWZ1bmRlbi4iLCJJTlZPSUNFX0RBVEUiOiJSZWNobnVuZ3NkYXR1bSIsIkVMRUNUUk9OSUNfRVhQT1JUX0ZJTExJTkdfU0VMRUNUX09QVElPTl9GT1JFSUdOIjoiRm9yZWlnbiIsIkVMRUNUUk9OSUNfRVhQT1JUX0ZJTExJTkdfU0VMRUNUX09QVElPTl9ET01FU1RJQyI6IklubGFuZCIsIlNISVBNRU5UX1RZUEVfTEFCRUxfU1VNTUFSSVpFX1NISVBNRU5UIjoiSW5oYWx0c2Jlc2NocmVpYnVuZyIsIkVYUE9SVF9MSUNFTlNFX05VTUJFUl9GVFJfVkFMVUUiOiIxMjMuMjIiLCJTSElQTUVOVF9UWVBFX0xBQkVMX0RFU0NSSUJFX0RPQ1VNRU5UU19QTEFDRUhPTERFUiI6IldpZSB6LkIuIHJlY2h0bGljaGUsIGZpbmFuemllbGxlIG9kZXIgZ2VzY2jDpGZ0bGljaGUgRG9rdW1lbnRlIiwiU0hJUE1FTlRfVFlQRV9GSUVMRF9QTEFDRUhPTERFUl9BRERJVElPTkFMX1JFRkVSRU5DRSI6IndlaXRlcmUgUmVmZXJlbnplbiAoZXJzY2hlaW5lbiBuaWNodCBhdWYgVmVyc2FuZGxhYmVsL0ZyYWNodGJyaWVmKSIsIkxCX0RPQ19PUl9QQUNLQUdFX1ZBTFVFX0xBQkVMX1JFU1RSSUNURUQiOiJFaW5nZXNjaHLDpG5rdCIsIlNISVBNRU5UX1RZUEVfU1VCX0hFQURFUl9ERVNDUklCRV9ET0NVTUVOVFNfRU5BQkxFRCI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPklociBBcnRpa2VsIGlzdCBuaWNodCBhdWYgZGVyIExpc3RlPyBaaWVoZW4gU2llIGVpbmVuIFZlcnNhbmQgYWxzIFdhcmVuc2VuZHVuZyBpbiBCZXRyYWNodC4gPGRpdiBjbGFzcz1cImluZm9cIj48ZGl2PkRpZSBCZXNjaHJlaWJ1bmcgSWhyZXIgRG9rdW1lbnRlIG11c3MgZGVuIExpc3Rlbm9wdGlvbmVuIGVudHNwcmVjaGVuLiBXZW5uIElocmUgRG9rdW1lbnRlIG5pY2h0IGRlbiB2b3JnZWdlYmVuZW4gT3B0aW9uZW4gZW50c3ByZWNoZW4sIG3DvHNzZW4gU2llIGRpZXNlIG3DtmdsaWNoZXJ3ZWlzZSBhbHMgV2FyZW5zZW5kdW5nIHZlcnNlbmRlbi48XC9kaXY+PFwvZGl2PjxcL2Rpdj4iLCJTSElQTUVOVF9UWVBFX1NVQl9IRUFERVJfREVTQ1JJQkVfRE9DVU1FTlRTX0RJU0FCTEVEIjoiIiwiU0hJUE1FTlRfVFlQRV9MQUJFTF9ERVNDUklCRV9ET0NVTUVOVFMiOiJJbmhhbHRzYmVzY2hyZWlidW5nIiwiU0hJUE1FTlRfVFlQRV9CVVRUT05fVVNFX09XTl9DVVNUT01TX0lOVk9JQ0VfUEFDS0FHRSI6IkVpZ2VuZSBab2xscmVjaG51bmcgdmVyd2VuZGVuIiwiU0hJUE1FTlRfVFlQRV9FUlJPUl9SRUZFUkVOQ0VfRE9FU19OT1RfTUFUQ0hfRk9STUFUIjoiVW5nw7xsdGlnZXMgRm9ybWF0IiwiU0hJUE1FTlRfVFlQRV9CVVRUT05fVVNFX09XTl9DVVNUT01TX0lOVk9JQ0VfRE9DVU1FTlQiOiJJY2ggYnJhdWNoZSBrZWluZSBSZWNobnVuZyIsIkxCX0RPQ19PUl9QQUNLQUdFX1ZBTFVFX0xBQkVMX1BST0hJQklURUQiOiJWZXJib3RlbiIsIlNISVBNRU5UX1RZUEVfRVJST1JfUkVGRVJFTkNFX0VNUFRZX0ZPUk1BVF9MSVNUIjoiUmVmZXJlbnpmb3JtYXQgd3VyZGUgbmljaHQgYXVmZ2VzZXR6dC4gS29udGFrdGllcmVuIFNpZSBJaHJlbiBBZG1pbmlzdHJhdG9yLiIsIkdTVF9TRUxFQ1RfVFJBTlNBQ1RJT05fVFlQRV9SRUdVTEFSIjoiSmEiLCJTSElQTUVOVF9UWVBFX0lORk9fVVNFX09XTl9DVVNUT01TX0lOVk9JQ0VfRE9DVU1FTlQiOiIiLCJHU1RfU0VMRUNUX1RSQU5TQUNUSU9OX1RZUEVfU0VMRUNUX09ORSI6IkF1c3fDpGhsZW4gIiwiTEFCRUxfSVNTVUVfREFURSI6Iklzc3VlIERhdGUiLCJHU1RfU0VMRUNUX05BIjoiTi9BIiwiU0FWRV9GT1JfTEFURVJfUEFSQUdSQVBIX0NPTkZJUk1BVElPTl9NRVNTQUdFIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+PGRpdiBjbGFzcz0ibWVzc2FnZS13cmFwcGVyIj48cD48Yj5XSUNIVElHITxcL2I+IFNpZSBzcGVpY2hlcm4gZGllc2UgU2VuZHVuZyBzbyB3aWUgc2llIGlzdDo8XC9wPjx1bD48bGk+U2llIGvDtm5uZW4gZGllIEF1ZnRyYWdzenV3ZWlzdW5nIHNww6R0ZXIgd2VpdGVyYmVhcmJlaXRlbjxcL2xpPjxsaT5EaWUgRW1wZmFuZ3NhZHJlc3NlIG9kZXIgZGVyIEF1ZnRyYWdzdmVydm9sbHN0w6RuZGlnZXIga8O2bm5lbiBuaWNodCBtZWhyIGdlw6RuZGVydCB3ZXJkZW4uPFwvbGk+PFwvdWw+PFwvZGl2PjxcL2Rpdj4iLCJTSElQTUVOVF9UWVBFX0xBQkVMX0FQUEVBUlNfT05fV0FZQklMTCI6ImVyc2NoZWludCBhdWYgVmVyc2FuZGxhYmVsIC8gRnJhY2h0YnJpZWYiLCJHU1RfSU5WT0lDRV9EQVRFIjoiR1NUIFJlY2hudW5nc2RhdHVtIiwiU0hJUE1FTlRfVFlQRV9MQUJFTF9BRERJVElPTkFMX1JFRkVSRU5DRSI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPjxkaXYgY2xhc3M9Im1lc3NhZ2Utd3JhcHBlciI+d2VpdGVyZSBSZWZlcmVuemVuIChlcnNjaGVpbmVuIG5pY2h0IGF1ZiBWZXJzYW5kbGFiZWwvRnJhY2h0YnJpZWYpIDxkaXYgY2xhc3M9XCJpbmZvXCI+PGRpdj48cD5TaWUga8O2bm5lbiB6dXPDpHR6bGljaGUgUmVmZXJlbnplbiBudXIgZGFubiBlaW5zZWhlbiwgd2VubiBTaWUgZGllIERldGFpbHMgZWluZXIgU2VuZHVuZyBpbiBNeURITCsgZWluc2VoZW4uIDxcL3A+PHA+RGllc2UgUmVmZXJlbnplbiBzaW5kIGluIGtlaW5lbSBkZXIgU2VuZHVuZ3Nkb2t1bWVudGUgYWJnZWJpbGRldC48XC9wPjxcL2Rpdj48XC9kaXY+PFwvZGl2PjxcL2Rpdj4iLCJMQl9ET0NfT1JfUEFDS0FHRV9WQUxVRV9MQUJFTF9ET0NVTUVOVCI6IkRva3VtZW50In0sInNhdmVkLXNldHRpbmdzIjp7ImF1dGgtcGlja3VwX2JhY2tlbmQtZXJyb3JfY291bnRyeS1jb2RlLWRpZmZlcmVudC10aGFuLWluLXVzZXItcHJvZmlsZSI6IiJ9LCJNQU5BR0VfU0hJUE1FTlRTIjp7Ik1BWF9TSElQTUVOVF9DT1NUIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+LSBLb3N0ZW4gdm9uIFNlbmR1bmcgw7xiZXJzdGVpZ2VuOiA8Yj57cmVzdHJpY3RlZFZhbHVlfSB7dmFsdWVUeXBlfTxcL2I+PFwvZGl2PiIsIlNISVBNRU5UX1RZUEVfRE9DVU1FTlQiOiItIERva3VtZW50IFNlbmR1bmciLCJTT1JUX0JZX1JFRkVSRU5DRSI6IlJlZmVyZW56IiwiQ09OU09MSURBVElPTl9DQU5fTk9UX1BST0NFU1NfU0VMRUNURURfU0hJUE1FTlRTIjoiWnVzYW1tZW5mYXNzZW4gbmljaHQgbcO2Z2xpY2giLCJTSElQTUVOVF9ERVRBSUxTX0JVVFRPTl9UUkFDSyI6IlZlcmZvbGdlbiIsIlNISVBNRU5UX0RFVEFJTFNfQlVUVE9OX0NBTkNFTF9TSElQTUVOVCI6ImzDtnNjaGVuIiwiU09SVF9CWV9GUk9NX0NPTVBBTlkiOiJBYnNlbmRlciBGaXJtYSIsIlNISVBNRU5UX1RZUEVfRklMVEVSX09QVElPTl9BU1NJR05FRF9UT19NRSI6IkJlYXJiZWl0dW5nIGR1cmNoIG1pY2giLCJNSU5fTEVOR1RIX1BFUl9TSElQTUVOVCI6Ii0gTMOkbmdlOiB7YWN0dWFsVmFsdWV9IHt2YWx1ZVR5cGV9IChNaW5pbXVtIGVybGF1YnQgOiB7cmVzdHJpY3RlZFZhbHVlfSB7dmFsdWVUeXBlfSkiLCJIT01FX0xJTktfUkVRVUVTVF9FRElUIjoiIiwiU09SVF9CWV9GUk9NX0NJVFkiOiJBYnNlbmRlciBTdGFkdCIsIkxPR0lDQUxfU1RBVFVTX1BFTkRJTkdfTVlfQVBQUk9WQUwiOiIiLCJGSUxURVJfU0VMRUNUSU9OX0lORk9fVEVYVF9TRUxFQ1RfVVNFUiI6IiIsIlNISVBNRU5UX0RFVEFJTFNfTEFCRUxfRFVUSUFCTEVfU1RBVFVTX0RVVElBQkxFIjoiWm9sbHBmbGljaHRpZyIsIlNISVBNRU5UX0RFVEFJTFNfQlVUVE9OX0FQUFJPVkUiOiJCZXN0w6R0aWdlbiIsIkRBVEVfUkFOR0VfQUxMX0RBVEVTX09QVElPTiI6IkFsbGUgVGFnZSIsIkhPTUVfTElOS19DT1BZIjoiRHVwbGl6aWVyZW4iLCJNT0RJRklDQVRJT05fTE9HX1RZUEVfVVBEQVRFX1NISVBNRU5UX05PVElGSUNBVElPTiI6IkJlbmFjaHJpY2h0aWd1bmdlbiIsIkhPTUVfTElOS19BU1NJR04iOiLDnGJlcnRyYWdlbiIsIk1BWF9UT1RBTF9TSElQTUVOVF9XRUlHSFQiOiItIEdld2ljaHQ6IHthY3R1YWxWYWx1ZX0ge3ZhbHVlVHlwZX0gKE1heGltYWwgZXJsYXVidCA6IHtyZXN0cmljdGVkVmFsdWV9IHt2YWx1ZVR5cGV9KSIsIlNPUlRfQllfU0hJUE1FTlRfREFURSI6IlNlbmR1bmdzZGF0dW0gKGFrdHVlbGxlcyBEYXR1bSB6dWVyc3QpIiwiUEFZTUVOVF9UWVBFU19SRUNFSVZFUl9XSUxMX1BBWSI6IkVtcGbDpG5nZXIgemFobHQiLCJDT05TT0xJREFUSU9OX0FDVElPTl9DT05GSVJNX0JVVFRPTiI6IkJlc3TDpHRpZ2VuIiwiTU9ESUZJQ0FUSU9OX0xPR19UWVBFX0NSRUFURSI6IkVyc3RlbGx0IiwiTEJfQ09ORklSTUFUSU9OX01TR19MRUFWRV9QQUdFX0NPTkZJUk1BVElPTiI6IlVwZGF0ZXMgd3VyZGVuIG5pY2h0IGdlc3BlaWNoZXJ0IG9kZXIgenUgZGVtIGF1dG9yaXNpZXJ0ZW4gRW1wZsOkbmdlciBnZXNlbmRldCB1bmQgd2VyZGVuIGdlbMO2c2NodC4gV29sbGVuIFNpZSBkaWVzZSBTZWl0ZSB3aXJrbGljaCB2ZXJsYXNzZW4/IiwiTE9HSUNBTF9TVEFUVVNfU0FWRURfQllfTUUiOiJHZXNwZWljaGVydCIsIlNISVBNRU5UX0RFVEFJTFNfQlVUVE9OX0RFQ0xJTkVfQVNTSUdOTUVOVCI6IkF1ZnRyYWcgYWJsZWhuZW4iLCJNT0RJRklDQVRJT05fTE9HX1RZUEVfQ0FOQ0VMX0FTU0lHTk1FTlQiOiJTdG9ybmllcnQgKGR1cmNoIEtvbnRvaW5oYWJlci8gSW1wb3J0ZXVyKSIsIlNISVBNRU5UX0RFVEFJTFNfQlVUVE9OX0NBTkNFTF9BU1NJR05NRU5UIjoiQXVmdHJhZyBsw7ZzY2hlbiIsIkFDQ09VTlRfVFlQRV9ESExfQUNDT1VOVCI6IkRITCBBY2NvdW50IiwiVklTSUJJTElUWV9GSUxURVJfT1BUSU9OX1ZJU0lCTEUiOiJOdXIgZWluZ2VibGVuZGV0ZSBTZW5kdW5nZW4iLCJTT1JUX0JZX1NUQVRVUyI6IlN0YXR1cyIsIlZJU0lCSUxJVFlfRklMVEVSX09QVElPTl9ISURERU4iOiJOdXIgYXVzZ2VibGVuZGV0ZSBTZW5kdW5nZW4iLCJWSVNJQklMSVRZX0ZJTFRFUl9PUFRJT05fQUxMIjoiQWxsZSBTZW5kdW5nZW4iLCJCVUxLX0FDVElPTl9SRVFVRVNUX0VESVQiOiIiLCJMT0dJQ0FMX1NUQVRVU19QRU5ESU5HX1JFUVVFU1RPUl9BUFBST1ZBTCI6ImF1c3N0ZWhlbmRlIEdlbmVobWlndW5nIHZvbiBBdWZ0cmFnc2Fic2VuZGVyIiwiSE9NRV9MSU5LX0NBTkNFTF9BU1NJR05NRU5UIjoiQXVmdHJhZyBsw7ZzY2hlbiIsIk1PRElGSUNBVElPTl9MT0dfVFlQRV9BUFBST1ZFX1NISVBNRU5UIjoiU2VuZHVuZyBiZXN0w6R0aWd0IHZvbiB7dXNlckVtYWlsfSIsIk1BWF9QQVJUU19QRVJfU0hJUE1FTlQiOiI8ZGl2IGNsYXNzPVwiZXdmX2RpY3Rpb25hcnlfdmFsdWVcIj4tIEdlc2FtdCBhbnphaGw6IDxiPnthY3R1YWxWYWx1ZX0ge3ZhbHVlVHlwZX08XC9iPiAoTWF4aW11bSBhbGxvd2VkOiA8Yj57cmVzdHJpY3RlZFZhbHVlfSB7dmFsdWVUeXBlfTxcL2I+KTxcL2Rpdj4iLCJNT0RJRklDQVRJT05fTE9HX1RZUEVfVVBEQVRFX01FU1NBR0VfRk9SX0FTU0lHTkVFIjoiRGllIGFrdHVhbGlzaWVydGUgTmFjaHJpY2h0IGFuIEJldm9sbG3DpGNodGlndGVuIHNlbmRlbiIsIkJVTEtfQUNUSU9OX0RPV05MT0FEIjoiRG93bmxvYWQiLCJEQVRFX1JBTkdFX1BBU1RfTU9OVEhTX09QVElPTiI6IkxldHp0ZW4ge251bWJlcn0gTW9uYXRlIiwiQ0FTSF9PTl9ERUxJVkVSWV9ERVRBSUxTIjoiQ2FzaCBPbiBEZWxpdmVyeSIsIkZJTFRFUl9TRUxFQ1RJT05fTEFCRUxfVklFV19PTkxZX1NFTEVDVEVEX1VTRVJTIjoiRGllc2UgTGV1dGUgQW56ZWlnZW4iLCJNQVhfTEVOR1RIX1BFUl9TSElQTUVOVCI6Ii0gTMOkbmdlOiB7YWN0dWFsVmFsdWV9IHt2YWx1ZVR5cGV9IChNYXhpbWFsIGVybGF1YnQgOiB7cmVzdHJpY3RlZFZhbHVlfSB7dmFsdWVUeXBlfSkiLCJMT0dJQ0FMX1NUQVRVU19JTl9UUkFOU0lUIjoiSW0gVHJhbnNpdCIsIkxPR0lDQUxfU1RBVFVTX1BFTkRJTkdfQURNSU5fQVBQUk9WQUwiOiJBYmjDpG5naWcgdm9uIGRlciBCZXN0w6R0aWd1bmcgZGVzIEFkbWluaXN0cmF0b3JzIiwiTE9HSUNBTF9TVEFUVVNfQ0FOQ0VMTEVEIjoiR2Vsw7ZzY2h0IiwiSE9NRV9MSU5LX0VESVRfQ09NUExFVEUiOiJCZWFyYmVpdGVuL0Fic2NobGllw59lbiIsIlNISVBNRU5UX0RFVEFJTFNfQlVUVE9OX01BTklGRVNUIjoiRGF0ZW4gc2VuZGVuIiwiQlVMS19BQ1RJT05fQVBQUk9WRSI6IkJlc3TDpHRpZ2VuIiwiSE9NRV9JTkZPX1RFWFRfUEFHRV9SQU5HRSI6IkFuemVpZ2Uge2ZpcnN0UmVjb3JkSW5kZXh9IC0ge2xhc3RSZWNvcmRJbmRleH0gdm9uIHt0b3RhbFJlY29yZHN9IFNlbmR1bmdlbiIsIkJVTEtfQUNUSU9OX01BS0VfRkFWT1JJVEUiOiJBbHMgRmF2b3JpdCBzcGVpY2hlcm4iLCJTSElQTUVOVF9ERVRBSUxTX1RBQl9OQU1FX0lOQk9VTkQiOiJPdXRib3VuZCIsIkJVTEtfQUNUSU9OX01BTklGRVNUIjoiVGFnZXNhYnNjaGx1c3MgYW4gREhMIiwiREFURV9SQU5HRV9QQVNUX0RBWVNfT1BUSU9OIjoiTGV0enRlbiB7bnVtYmVyfSBUYWdlIiwiU09SVF9CWV9MQVNUX1VQREFURUQiOiJEYXR1bSAoTmV1ZXN0ZXMgenVlcnN0KSIsIkJVTEtfQUNUSU9OX1VOSElERSI6IkVpbmJsZW5kZW4iLCJTSElQTUVOVF9DT1NUX1BFUklPRCI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPkdlc2FtdCBrb3N0ZW4gdm9uIHNlbmR1bmdlbjogPGI+e2FjdHVhbFZhbHVlfSB7dmFsdWVUeXBlfTxcL2I+IChNYXhpbWFsIEVybGF1YnQ6IDxiPntyZXN0cmljdGVkVmFsdWV9IHt2YWx1ZVR5cGV9PFwvYj4pPFwvZGl2PiIsIlNPUlRfQllfRlJPTV9DT1VOVFJZIjoiQWJzZW5kZXIgTGFuZCIsIkhPTUVfTElOS19ERUNMSU5FX0FTU0lHTk1FTlQiOiJBdWZ0cmFnIGFibGVobmVuIiwiTk9USUZJQ0FUSU9OX1RZUEVfRU1BSUwiOiJFLU1haWwgQWRyZXNzZSIsIlNISVBNRU5UX0RFVEFJTFNfVU5BQkxFX1RPX0NPTVBMRVRFX09QRVJBVElPTiI6IkZvbGdlbmRlIFNlbmR1bmdzYXVmdHLDpGdlIGvDtm5uZW4gbmljaHQgYWJnZXNjaGxvw59lbiB3ZXJkZW4ocyk6IHtzaGlwbWVudHNJZHN9IiwiU0hJUE1FTlRfREVUQUlMU19CVVRUT05fQVNTSUdOIjoiw5xiZXJ0cmFnZW4iLCJQQVlNRU5UX1RZUEVTX09OTElORV9QQVlNRU5UIjoiT25saW5lIFBheW1lbnQiLCJMT0dJQ0FMX1NUQVRVU19ERUNMSU5FRF9CWV9TSElQUEVSIjoiQWJnZWxlaG50IHZvbiBhdXRvcmlzaWVydGVtIEVtcGbDpG5nZXIiLCJMT0dJQ0FMX1NUQVRVU19QSUNLRURfVVAiOiJQaWNrZWQgVXAiLCJTSElQTUVOVF9ERVRBSUxTX0xBQkVMX1JFU1RSSUNUX1BJQ0tVUF9BRERSRVNTX0NIQU5HRSI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPjxpPkthbm4gbmljaHQgZ2XDpG5kZXJ0IHdlcmRlbjxcL2k+PFwvZGl2PiIsIk1PRElGSUNBVElPTl9MT0dfVFlQRV9DT05GSVJNIjoiQmVzdMOkdGlndCIsIlNISVBNRU5UX0RFVEFJTFNfQlVUVE9OX0NPUFkiOiJEdXBsaXppZXJlbiIsIkJVTEtfQUNUSU9OX0RPV05MT0FEX0dTVF9EQVRBIjoiRG93bmxvYWQgR1NUIERldGFpbHMiLCJIT01FX0xJTktfUkVWSUVXIjoiU2VuZHVuZyhlbikiLCJTT1JUX0JZX05VTUJFUl9PRl9QSUVDRVMiOiJBbnphaGwgZGVyIFBhY2tzdMO8Y2tlIiwiU09SVF9CWV9UT19DT1VOVFJZIjoiRW1wZsOkbmdlciBMYW5kIiwiQUNDT1VOVF9UWVBFX1BBWUVSX0FDQ09VTlQiOiJGcmFjaHR6YWhsZXIgQWNjb3VudCIsIkRBVEVfUkFOR0VfUElDS0VSX0ZST00iOiJWb24iLCJIT01FX0xJTktfQ0FOQ0VMX1NISVBNRU5UIjoibMO2c2NoZW4iLCJTSElQTUVOVF9ERVRBSUxTX0JVVFRPTl9SRUpFQ1QiOiJBYmxlaG5lbiIsIkxPR0lDQUxfU1RBVFVTX0ZVVFVSRV9TSElQTUVOVCI6Ilp1a8O8bmZ0aWdlIFNlbmR1bmdlbiIsIlNISVBNRU5UX0RFVEFJTFNfQlVUVE9OX0VESVRfQ09NUExFVEUiOiJCZWFyYmVpdGVuL0Fic2NobGllw59lbiIsIlNPUlRfQllfQ1JFQVRFRF9CWSI6IkVyc3RlbGx0IHZvbiAoRS1NYWlsKSIsIlNISVBNRU5UX0RFVEFJTFNfVEFCX05BTUVfT1VUQk9VTkQiOiJPdXRib3VuZCIsIlNPUlRfQllfV0FZQklMTCI6IlNlbmR1bmdzbnVtbWVyIE9ERVIgVm9yw7xiZXJnZWhlbmRlIElEIiwiSE9NRV9MSU5LX1JFSkVDVCI6IkFibGVobmVuIiwiU0hJUE1FTlRfVFlQRV9ET0NVTUVOVFMiOiJEb2t1bWVudGVuc2VuZHVuZ2VuIiwiREFURV9SQU5HRV9VUENPTUlOR19NT05USFNfT1BUSU9OIjoiWnVrw7xuZnRpZ2Uge251bWJlcn0gTW9uYXRlIiwiTU9ESUZJQ0FUSU9OX0xPR19UWVBFX01BTklGRVNUIjoiTWFuaWZlc3RpZXJ0ZSBEYXRlbiIsIk1BWF9IRUlHSFRfUEVSX1NISVBNRU5UIjoiLSBIw7ZoZToge2FjdHVhbFZhbHVlfSB7dmFsdWVUeXBlfSAoTWF4aW1hbCBlcmxhdWJ0IDoge3Jlc3RyaWN0ZWRWYWx1ZX0ge3ZhbHVlVHlwZX0pIiwiU09SVF9CWV9GQVZPUklURV9OQU1FIjoiRmF2b3JpdGVuLU5hbWUiLCJTT1JUX0JZX1RPVEFMX0NIQVJHRSI6Ikdlc2FtdGVudGdlbHQiLCJMT0dJQ0FMX1NUQVRVU19FRElUX1JFUVVFU1RFRCI6IiIsIkZJTFRFUl9TRUxFQ1RJT05fTEFCRUxfVklFV19PTkxZX1NFTEVDVEVEX0FDQ09VTlRTIjoiRGllc2UgQWNjb3VudHMgYW56ZWlnZW4iLCJTSElQTUVOVF9UWVBFX1BBQ0tBR0VTIjoiV2FyZW5zZW5kdW5nZW4iLCJTT1JUX0JZX0RFU0NSSVBUSU9OIjoiV2FyZW5iZXNjaHJlaWJ1bmciLCJNT0RJRklDQVRJT05fTE9HX1RZUEVfQ1JFQVRFX0RVUklOR19DT05TT0xJREFUSU9OIjoiRXJzdGVsbHQgKHdlZ2VuIEtvbnNvbGlkaWVydW5nKSIsIlNISVBNRU5UX0NPVU5UX1BFUklPRCI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPi0gQW56YWhsIGRlciBTZW5kdW5nZW46IDxiPnthY3R1YWxWYWx1ZX08XC9iPiAoTWF4aW1hbCBFcmxhdWJ0OiA8Yj57cmVzdHJpY3RlZFZhbHVlfTxcL2I+KTxcL2Rpdj4iLCJIT01FX0xJTktfVFJBQ0siOiJWZXJmb2xnZW4iLCJTSElQTUVOVF9ERVRBSUxTX0JVVFRPTl9DUkVBVEVfUkVUVVJOX0xBQkVMIjoiUmV0b3VyLUxhYmVsIGVyc3RlbGxlbiIsIlNPUlRfQllfVE9fQ09OVEFDVF9OQU1FIjoiRW1wZsOkbmdlciBOYW1lIiwiU0hJUE1FTlRfREVUQUlMU19CVVRUT05fRE9XTkxPQURfR1NUX0RBVEEiOiJEb3dubG9hZCBHU1QgRGV0YWlscyIsIlNISVBNRU5UX0RFVEFJTFNfUElDS1VQX1JFUVVFU1RfTVNHX0NPTkZJUk1BVElPTiI6IkVpbmUgU2VuZHVuZ3NiZXN0w6R0aWd1bmcgbMO2c3QgZWluZSBBYmhvbGF1ZnRyYWcgYmVpbSBESEwgS3VyaWVyIGF1cyBpbSBOYW1lbiBkZXMgU2VuZHVuZ3NlcnN0ZWxsZXJzLiIsIkJVTEtfQUNUSU9OX0NBTkNFTF9BU1NJR05NRU5UIjoiQXVmdHJhZyBsw7ZzY2hlbiIsIlNPUlRfQllfSVROIjoiSVROIiwiRklMVEVSX1NFTEVDVElPTl9QTEFDRUhPTERFUl9TRUFSQ0hfQUNDT1VOVFMiOiJTdWNoZSIsIkxPR0lDQUxfU1RBVFVTX1BFTkRJTkdfQVNTSUdORUVfQUNUSU9OIjoiQXVzc3RlaGVuZGUgQmVhcmJlaXR1bmcgZHVyY2ggRW1wZsOkbmdlciIsIk1PRElGSUNBVElPTl9MT0dfVFlQRV9SRUpFQ1RfU0hJUE1FTlRfQVBQUk9WQUwiOiJTZW5kdW5nIGFiZ2VsZWhudCB2b24ge3VzZXJFbWFpbH0iLCJMT0dJQ0FMX1NUQVRVU19SRUFEWV9UT19QUklOVCI6IkJlcmVpdCB6dW0gRHJ1Y2tlbiIsIlNPUlRfQllfU0hJUFBFUl9BQ0NfTlVNIjoiVmVyc2VuZGVyIEFjY291bnQiLCJIT01FX0xJTktfQ09NUExFVEVfQVBQUk9WRUQiOiJWZXJ2b2xsc3TDpG5kaWdlbiB1bmQgQXVzZHJ1Y2tlbiIsIkxPR0lDQUxfU1RBVFVTX0FQUFJPVkVEIjoiR2VuZWhtaWd0IiwiVE9UQUxfV0VJR0hUX1BFUklPRCI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPi0gR2VzYW10IGdld2ljaHQgdm9uIHNlbmR1bmdlbjogPGI+e2FjdHVhbFZhbHVlfSB7dmFsdWVUeXBlfTxcL2I+IChNYXhpbWFsIEVybGF1YnQ6IDxiPntyZXN0cmljdGVkVmFsdWV9IHt2YWx1ZVR5cGV9PFwvYj4pPFwvZGl2PiIsIkhPTUVfTElOS19DUkVBVEVfUkVUVVJOX0xBQkVMIjoiUmV0b3VyLUxhYmVsIGVyc3RlbGxlbiIsIlVOS05PV05fU0hJUE1FTlRfQ09TVCI6IlRyYW5zcG9ydGtvc3RlbiBuaWNodCB2ZXJmw7xnYmFyIiwiTU9ESUZJQ0FUSU9OX0xPR19UWVBFX0RFQ0xJTkVfQVNTSUdOTUVOVCI6IlN0b3JuaWVydCAoZHVyY2ggQmV2b2xsbcOkY2h0aWd0ZW4vIFNwZWRpdGV1cikiLCJTT1JUX0JZX1NISVBNRU5UX1RZUEUiOiJTZW5kdW5nc2FydCIsIk1PRElGSUNBVElPTl9MT0dfVFlQRV9DQU5DRUxfRFVSSU5HX0NPTlNPTElEQVRJT04iOiJTdG9ybmllcnQgKHdlZ2VuIEtvbnNvbGlkaWVydW5nKSIsIlNISVBNRU5UX1RZUEVfRklMVEVSX09QVElPTl9NWV9TSElQTUVOVFMiOiJNZWluZSBTZW5kdW5nZW4gIiwiUEFZTUVOVF9UWVBFU19ESExfQUNDT1VOVCI6IkRITCBBY2NvdW50IiwiQ09OU09MSURBVElPTl9BQ1RJT05fREVGQVVMVF9OT1RJRklDQVRJT04iOiJLZWluIEF1ZnRyYWcgYmVyZWl0IHp1bSBEcnVjay4gS2VpbmUgU2VuZHVuZ2VuIHp1IGVpbmVtIGVpbnppZ2VuIFNlbmR1bmdzYXVmdHJhZyB6dXNhbW1lbmdlZmFzc3QuIiwiQURNSU5fQVBQUk9WQUxfRVhQTEFOQVRJT04iOiJCZXN0w6R0aWd1bmcgYXVzIGZvbGdlbmRlbiBHcsO8bmRlbiBlcmZvcmRlcmxpY2g6IiwiTk9USUZJQ0FUSU9OX1RZUEVfU01TIjoiU01TIiwiRklMVEVSX1NFTEVDVElPTl9JTkZPX1RFWFRfU0VMRUNUX0FDQ09VTlQiOiIiLCJNSU5fVE9UQUxfU0hJUE1FTlRfV0VJR0hUIjoiLSBHZXdpY2h0OiB7YWN0dWFsVmFsdWV9IHt2YWx1ZVR5cGV9IChNaW5pbXVtIGVybGF1YnQgOiB7cmVzdHJpY3RlZFZhbHVlfSB7dmFsdWVUeXBlfSkiLCJDUkVBVEVfTkVXX0JSQVpJTF9TSElQTUVOVCI6IlRoaXMgc2hpcG1lbnQgY29udGFpbnMgQnJhemlsIE5vdGEgRmlzY2FsIGRldGFpbHMgdGhhdCBjYW5ub3QgYmUgY29waWVkIHRvIGEgbmV3IHNoaXBtZW50LiBTZWxlY3QgYSBkaWZmZXJlbnQgc2hpcG1lbnQgb3IgY3JlYXRlIGEgbmV3IHNoaXBtZW50LiIsIkJVTEtfQUNUSU9OX0RFQ0xJTkVfQVNTSUdOTUVOVCI6IkF1ZnRyYWcgYWJsZWhuZW4iLCJDT05TT0xJREFUSU9OX05PX1NISVBNRU5UU19UT19QUk9DRVNTIjoiRXMga8O2bm5lbiBrZWluZSBQYWNrc3TDvGNrZSB6dXNhbW1lbmdlZmFzc3Qgd2VyZGVuLiIsIlNPUlRfQllfVE9fQ0lUWSI6IkVtcGbDpG5nZXIgT3J0IiwiTU9ESUZJQ0FUSU9OX0xPR19UWVBFX0NBTkNFTCI6IkdlbMO2c2NodCIsIlNISVBNRU5UX0RFVEFJTFNfQlVUVE9OX0NPTVBMRVRFX0FQUFJPVkVEIjoiVmVydm9sbHN0w6RuZGlnZW4gdW5kIEF1c2RydWNrZW4iLCJNSU5fSEVJR0hUX1BFUl9TSElQTUVOVCI6Ii0gSMO2aGU6IHthY3R1YWxWYWx1ZX0ge3ZhbHVlVHlwZX0gKE1pbmltdW0gZXJsYXVidCA6IHtyZXN0cmljdGVkVmFsdWV9IHt2YWx1ZVR5cGV9KSIsIkRBVEVfUkFOR0VfVU5TQ0hFRFVMRURfT1BUSU9OIjoiTmljaHQgYXVmZ2VnZWJlbmUgU2VuZHVuZ2VuIiwiU0hJUE1FTlRfVFlQRV9QQUNLQUdFIjoiLSBTZW5kdW5nIFNlbmR1bmciLCJQQVlNRU5UX1RZUEVTX0NBU0giOiJCYXIiLCJTSElQTUVOVF9ERVRBSUxTX0xBQkVMX0RVVElBQkxFX1NUQVRVU19OT05fRFVUSUFCTEUiOiJOaWNodCB6b2xscGZsaWNodGlnIiwiTE9HSUNBTF9DQVRFR09SWV9SRUFEWV9UT19TSElQIjoiVmVyc2FuZGJlcmVpdCIsIk1PRElGSUNBVElPTl9MT0dfVFlQRV9DUkVBVEVfQVNTSUdOTUVOVCI6Ilp1Z2V3aWVzZW4gQW4ge2Fzc2lnbmVlRW1haWx9IiwiREFURV9SQU5HRV9DVVNUT01fT1BUSU9OIjoiVmVyc2FuZHplaXRyYXVtIiwiRklMVEVSX1NFTEVDVElPTl9MSU5LX1JFTU9WRV9BQ0NPVU5UX1JFRklORU1FTlRTIjoiZnJlaSIsIkJVTEtfQUNUSU9OX01BS0VfTk9UX0ZBVk9SSVRFIjoiRmF2b3JpdGVuIGVudGZlcm5lbiIsIkxPR0lDQUxfU1RBVFVTX0FTU0lHTkVEX1RPX01FIjoiQmVhcmJlaXR1bmcgZHVyY2ggbWljaCIsIlNPUlRfQllfVE9UQUxfV0VJR0hUIjoiR2VzYW10Z2V3aWNodCIsIk1BWF9XSURUSF9QRVJfU0hJUE1FTlQiOiItIEJyZWl0ZToge2FjdHVhbFZhbHVlfSB7dmFsdWVUeXBlfSAoTWF4aW1hbCBlcmxhdWJ0IDoge3Jlc3RyaWN0ZWRWYWx1ZX0ge3ZhbHVlVHlwZX0pIiwiU0hJUE1FTlRfREVUQUlMU19CVVRUT05fUkVRVUVTVF9FRElUIjoiIiwiTU9ESUZJQ0FUSU9OX0xPR19UWVBFX1VQREFURSI6ImFrdHVhbGlzaWVydCIsIkxPR0lDQUxfU1RBVFVTX1NISVBQSU5HX1RPREFZIjoiQWt0dWVsbGUgU2VuZHVuZ2VuIiwiSU5WQUxJRF9TSElQTUVOVF9SRUZFUkVOQ0UiOiJVbmfDvGx0aWcgU2VuZHVuZ3NyZWZlcmVueiIsIk1JTl9XSURUSF9QRVJfU0hJUE1FTlQiOiItIEJyZWl0ZToge2FjdHVhbFZhbHVlfSB7dmFsdWVUeXBlfSAoTWluaW11bSBlcmxhdWJ0IDoge3Jlc3RyaWN0ZWRWYWx1ZX0ge3ZhbHVlVHlwZX0pIiwiTE9HSUNBTF9DQVRFR09SWV9VTl9TVUJNSVRURUQiOiJOaWNodCDDvGJlcm1pdHRlbHQiLCJEQVRFX1JBTkdFX1VQQ09NSU5HX0RBWVNfT1BUSU9OIjoiWnVrw7xuZnRpZ2Uge251bWJlcn0gVGFnZSIsIkRPV05MT0FEX1NISVBNRU5UX0VSUk9SIjoiRG93bmxvYWQgZmVobGVyaGFmdCIsIkJVTEtfQUNUSU9OX1RSQUNLIjoiVmVyZm9sZ2VuIiwiU0hJUE1FTlRfREVUQUlMU19MQUJFTF9BTExPV19QSUNLVVBfQUREUkVTU19DSEFOR0UiOiI8ZGl2IGNsYXNzPVwiZXdmX2RpY3Rpb25hcnlfdmFsdWVcIj48aT5LYW5uIGdlw6RuZGVydCB3ZXJkZW48XC9pPjxcL2Rpdj4iLCJTSElQTUVOVF9UWVBFX0ZJTFRFUl9PUFRJT05fQVNTSUdORURfQllfR1JPVVAiOiJBc3NpZ25lZCBieSBHcm91cCIsIlNISVBNRU5UX0RFVEFJTFNfQlVUVE9OX0VESVQiOiJCZWFyYmVpdGVuIiwiREFURV9SQU5HRV9QSUNLRVJfVE8iOiJBbiIsIk1PRElGSUNBVElPTl9MT0dfVFlQRV9QUklOVF9DT1VSSUVSX1JFUE9SVCI6IlRhZ2VzYWJzY2hsdXNzIGVyc3RlbGxlbiIsIkZJTFRFUl9TRUxFQ1RJT05fUExBQ0VIT0xERVJfU0VBUkNIX1VTRVJTIjoiU3VjaGUiLCJIT01FX0xJTktfRURJVCI6IkJlYXJiZWl0ZW4iLCJTSElQTUVOVF9ERVRBSUxTX0JVVFRPTl9ET1dOTE9BRCI6IkRvd25sb2FkIiwiQlVMS19BQ1RJT05fSElERSI6IkF1c2JsZW5kZW4iLCJDQVNIX09OX0RFTElWRVJZIjoiQ2FzaCBPbiBEZWxpdmVyeSIsIlNISVBNRU5UX0RFVEFJTFNfVEFCX05BTUVfUkVUVVJOIjoiWnVyw7xjayIsIkVORF9VU0VSX0FQUFJPVkFMX0VYUExBTkFUSU9OIjoiU2VuZHVuZyB6dXIgQmVzdMOkdGlndW5nIGFuIEdydXBwZW4tQWRtaW5pc3RyYXRvciDDvGJlcm1pdHRlbHQuIEJlbmFjaHJpY2h0aWd1bmcgenVyIEJlc3TDpHRpZ3VuZyBhdXNzdGVoZW5kLiBCZXN0w6R0aWd1bmcgZXJmb3JkZXJsaWNoIGbDvHI6IiwiSE9NRV9MSU5LX0FQUFJPVkUiOiJCZXN0w6R0aWdlbiIsIkhPTUVfTElOS19QUklOVF9ET0NVTUVOVFNfRk9SX0FMTF9HSVZFTl9TSElQTUVOVFMiOiJEcnVja2VuIiwiQlVMS19BQ1RJT05fUkVKRUNUIjoiQWJsZWhuZW4iLCJNQU5BR0VfU0hJUE1FTlRTX1VOQUJMRV9UT19DT01QTEVURV9PUEVSQVRJT04iOiJTb3JyeSBcdTIwMTMgdW5zZXIgU3lzdGVtIGlzdCBkZXJ6ZWl0IG5pY2h0IHZlcmbDvGdiYXIuIEJpdHRlIHZlcnN1Y2hlbiBTaWUgZXMgc3DDpHRlciBub2NoIGVpbm1hbCBvZGVyIGtvbnRha3RpZXJlbiBTaWUgdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1ICgyMCBjdCBqZSBBbnJ1ZiBhdXMgZGVuIGRldXRzY2hlbiBGZXN0bmV0emVuLCBtYXguIDYwIGN0IGF1cyBkZW4gZGV1dHNjaGVuIE1vYmlsZnVua25ldHplbikuIiwiQ09OU09MSURBVElPTl9OT1RfQ09NUExFVEVEIjoiS29uc29saWRpZXJ1bmcgdW52b2xsc3TDpG5kaWciLCJESU1FTlNJT05fUkVTVFJJQ1RJT05TIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+PGI+TWHDn2U6PFwvYj48XC9kaXY+IiwiU0hJUE1FTlRfREVUQUlMU19MQUJFTF9CT09MRUFOX1ZBTFVFX1lFUyI6IkphIiwiQ09OU09MSURBVElPTl9BQ1RJT05fT1BUSU1BTF9BTU9VTlRfV0FSTklORyI6IkR1cmNoIGRpZSBncm/Dn2UgQW56YWhsIGFuIFBhY2tzdMO8Y2tlbiB3aXJkIGRhcyBadXNhbW1lbmZhc3NlbiBsw6RuZ2VyIGRhdWVybi4gS2xpY2tlbiBTaWUgYXVmIGtlaW5lIGFuZGVyZW4gRnVua3Rpb25lbiBiaXMgZGllIFp1c2FtbWVuZmFzc3VuZyB2b2xsc3TDpG5kaWcgaXN0LiIsIk5PX01BVENISU5HX1NISVBNRU5UU19GT1VORCI6IktlaW5lIHBhc3NlbmRlbiBTZW5kdW5nZW4gZ2VmdW5kZW4gZsO8ciB7c2VhcmNoS2V5d29yZH0iLCJDT05TT0xJREFUSU9OX0FDVElPTl9NQVhJTVVNX0FNT1VOVF9OT1RJRklDQVRJT04iOiJadXNhbW1lbmZhc3NlbiBkZXIgUGFja3N0w7xja2UgbmljaHQgZXJmb2xncmVpY2guIFZlcnJpbmdlcm4gU2llIGRpZSBBbnphaGwgZGVyIFBhY2tzdMO8Y2tlLiIsIlNISVBNRU5UX1RZUEVfRklMVEVSX09QVElPTl9BU1NJR05FRF9CWV9NRSI6IlZvbiBtaXIgenVnZXdpZXNlbiIsIlNISVBNRU5UX0RFVEFJTFNfTEFCRUxfQk9PTEVBTl9WQUxVRV9OTyI6Ik5laW4iLCJMT0dJQ0FMX1NUQVRVU19NSUdSQVRFRCI6IlZvbGxzdMOkbmRpZyAoVm9yLU15REhMKykiLCJIT01FX0xJTktfUFJJTlRfTEFCRUxTIjoiTGFiZWwgZHJ1Y2tlbiIsIlNPUlRfQllfRlJPTV9DT05UQUNUX05BTUUiOiJBYnNlbmRlciBOYW1lIiwiTE9HSUNBTF9TVEFUVVNfREVMSVZFUkVEIjoiWnVnZXN0ZWxsdCIsIkZJTFRFUl9TRUxFQ1RJT05fTElOS19SRU1PVkVfVVNFUl9SRUZJTkVNRU5UUyI6ImZyZWkiLCJTT1JUX0JZX1RPX0NPTVBBTlkiOiJFbXBmw6RuZ2VyIEZpcm1hIiwiTU9ESUZJQ0FUSU9OX0xPR19UWVBFX1BSSU5UIjoiR2VkcnVja3QifSwiY3IwMTY2Ijp7ImNyLW5hbWUiOiJEaXNwbGF5IENvbXBhbnkgQWNjb3VudHMgYXMifSwiY3IwMDQ1Ijp7ImNyLW5hbWUiOiJEaXNwbGF5IFN1cmNoYXJnZXMifSwiY3IwMDQ2Ijp7ImNyLW5hbWUiOiJEaXNwbGF5IFByaWNpbmcgb24gUHJpbnRlZCBSZWNlaXB0In0sImNyMDE2NyI6eyJjci1uYW1lIjoiQ29uY2VhbCBESEwgQWNjb3VudCBOdW1iZXJzIn0sIkFTU0lHTl9TSElQTUVOVCI6eyJBU1NJR05fREVUQUlMU19TRUxFQ1RfT1BUSU9OX0FTSUdORUVfQVVUSE9SSVpBVElPTl9EVVJBVElPTl9UT19BTllfUkVDSVBJRU5UIjoiRsO8ciBhbGxlIFNlbmR1bmdlbiIsIkFTU0lHTl9ERVRBSUxTX0hFQURFUl9BU1NJR05fU0hJUE1FTlQiOiJTZW5kdW5nc2JlYXJiZWl0dW5nIMO8YmVyZ2ViZW4iLCJSRUZFUkVOQ0VTX0ZJRUxEX1BMQUNFSE9MREVSX0FERF9SRUZFUkVOQ0UiOiJSZWZlcmVueiBoaW56dWbDvGdlbiIsIkFTU0lHTl9ERVRBSUxTX1NFTEVDVF9PUFRJT05fQ09OQ0VBTCI6IlZlcnN0ZWNrdGUgS3VuZGVubnVtbWVybiIsIkFTU0lHTl9ERVRBSUxTX1NFTEVDVF9PUFRJT05fQVNJR05FRV9BVVRIT1JJWkFUSU9OX0RVUkFUSU9OX1NISVBNRU5UX09OTFkiOiJOdXIgZsO8ciBkaWVzZSBTZW5kdW5nIiwiQVNTSUdOX05BVklHQVRJT05fUEFSQUdSQVBIX0NPTlRBQ1RTX1NBVkVfUkVRVUlSRUQiOiJLb250YWt0IG11c3MgaW0gQWRyZXNzYnVjaCBnZXNwZWljaGVydCB3ZXJkZW4iLCJSRUZFUkVOQ0VTX0xBQkVMX1JFRkVSRU5DRSI6IlJlZmVyZW56IiwiQVNTSUdOX0RFVEFJTFNfVkFMVUVfTEFCRUxfRFVUSUVTX1BBSUQiOiJab2xsYWJnYWJlbiBiZXphaGx0IG1pdCIsIlJSX0FTU0lHTl9UT19QQVJBR1JBUEhfV0hPX0NBTl9ZT1VfQVNTSUdOX1RPX0JSQVpJTCI6IkFueW9uZSB3aG8gY2FuIGNvbXBsZXRlIHRoZSBCcmF6aWwgTm90YSBGaXNjYWwgZGV0YWlscyBmb3IgdGhpcyBzaGlwbWVudC4iLCJBU1NJR05fREVUQUlMU19TRUxFQ1RfT1BUSU9OX05JQ0tOQU1FX09OTFkiOiJBbGlhcyAoQmVzY2hyZWlidW5nKSIsIkFTU0lHTl9ERVRBSUxTX1BBUkFHUkFQSF9TSElQTUVOVF9TVEFUVVNfQ09NUExFVEVEIjoiRGVyIFZlcnNhbmQgaXN0IGJlcmVpdHMgYWJnZXNjaGxvc3NlbiIsIkFTU0lHTl9ERVRBSUxTX0hFQURFUl9BU1NJR05fU0hJUE1FTlRfQlJBWklMIjoiQXNzaWduIFNoaXBtZW50IHRvIENvbXBsZXRlIEJyYXppbCBOb3RhIEZpc2NhbCBEZXRhaWxzIiwiQVNTSUdOX05BVklHQVRJT05fUEFSQUdSQVBIX0VNQUlMX0ZVTEZJTExNRU5UIjoiU3RlbGxlbiBTaWUgVmVyc2VuZGVyIHVuZCBFbXBmw6RuZ2VyIEUtTWFpbCBBZHJlc3NlbiB6dXIgVmVyZsO8Z3VuZyIsIkFTU0lHTl9ERVRBSUxTX1ZBTFVFX0xBQkVMX05PVF9TRUxFQ1RFRCI6Im5pY2h0IGF1c2dld8OkaGx0IiwiQVNTSUdOX0RFVEFJTFNfVkFMVUVfTEFCRUxfRFVUSUVTX1RBWEVTX1BBSUQiOiJab2xsYWJnYWJlbiB1bmQgU3RldWVybiBiZXphaGx0IG1pdCIsIlJSX0FTU0lHTl9UT19QQVJBR1JBUEhfV0hPX0NBTl9ZT1VfQVNTSUdOX1RPIjoiSmVtYW5kZW4gaW4gSWhyZW0gTGFnZXIsIElocmVyIFBvc3RzdGVsbGUgb2RlciBlaW5lciBhbmRlcmVuIEFidGVpbHVuZy4gU29sbHRlbiBTaWUgZWluZW4gSW1wb3J0IGR1cmNoZsO8aHJlbiwgYmVhdWZ0cmFnZW4gU2llIGRlbiBBYnNlbmRlciB1bSBkZW4gVmVyc2FuZCBhYnp1c2NobGllw59lbiIsIkFTU0lHTl9ERVRBSUxTX1BBUkFHUkFQSF9TSElQTUVOVF9TVEFUVVNfQ0FOQ0VMTEVEIjoiRGVyIFZlcnNhbmQgd3VyZGUgZHVyY2ggZGVuIEF1ZnRyYWdnZWJlciBzdG9ybmllcnQiLCJBU1NJR05fREVUQUlMU19TRUxFQ1RfT1BUSU9OX0FTSUdORUVfQVVUSE9SSVpBVElPTl9EVVJBVElPTl9UT19BRERSRVNTIjoiRsO8ciBTZW5kdW5nZW4gYW4gZm9sZ2VuZGUgQWRyZXNzZSIsIkFTU0lHTl9ERVRBSUxTX0VSUk9SX0FTU0lHTkVFX0VNQUlMX0VRVUFMU19VU0VSX0VNQUlMIjoiU2llIGvDtm5uZW4gbmljaHQgYW4gc2ljaCBzZWxiZXIgw7xiZXJ0cmFnZW4iLCJBU1NJR05fREVUQUlMU19TRUxFQ1RfT1BUSU9OX05VTUJFUl9BTkRfTklDS05BTUUiOiJOdW1tZXIgdW5kwqBCZXplaWNobnVuZyJ9LCJjcjAwNDciOnsiY3ItbmFtZSI6IkRpc3BsYXkgUHJpY2luZyBvbiBFbmQgb2YgRGF5IE1hbmlmZXN0In0sImNyMDA0OCI6eyJjci1uYW1lIjoiQWxsb3cgdG8gYWNjZXNzIHRvIFJhdGUgJiBUaW1lIFF1b3RlIHRvb2wifSwiY3IwMTMwIjp7ImNyLW5hbWUiOiJFbmFibGUgUExUIn0sImNyMDAxMCI6eyJjci1lcnJvcnMtcmVxdWlyZWQiOiJUaGlzIGZpZWxkIGlzIHJlcXVpcmVkIiwiY3ItbmFtZSI6Ik1pbmltdW0gV2VpZ2h0IFBlciBzaGlwbWVudDogTGltaXQgdmFsdWUifSwiY3IwMDExIjp7ImNyLWVycm9ycy1yZXF1aXJlZCI6IlZhbHVlIHJlcXVpcmVkIGZvciB0aGlzIGZpZWxkIiwiY3ItbmFtZSI6Ik1pbmltdW0gV2VpZ2h0IFBlciBzaGlwbWVudDogVW9NIn0sInByb2R1Y3RzX3NlcnZpY2VzLXBhY2thZ2luZy1wYWNrYWdpbmdfdHlwZSI6eyJmbHlzLXBhY2thZ2V0eXBlZGVzY3JpcHRpb24iOiJTdGFuZGFyZCBGbHllciAoU21hbGwgRXhwcmVzcyBQYWNrKSIsIm0yLXBhY2thZ2V0eXBlZGVzY3JpcHRpb24iOiJNLUlJIENhcnRvbiIsImV4cDQtcGFja2FnZXR5cGVkZXNjcmlwdGlvbiI6IiIsIjRsYS1wYWNrYWdldHlwZWRlc2NyaXB0aW9uIjoiIiwiZmxtLXBhY2thZ2V0eXBlZGVzY3JpcHRpb24iOiIiLCJib3hfMy1wYWNrYWdldHlwZWRlc2NyaXB0aW9uIjoiIiwiZnlyci1wYWNrYWdldHlwZWRlc2NyaXB0aW9uIjoiIiwiZmx0LXBhY2thZ2V0eXBlZGVzY3JpcHRpb24iOiIiLCJmbHlsLXBhY2thZ2V0eXBlZGVzY3JpcHRpb24iOiJMYXJnZSBGbHllciAoTGFyZ2UgRXhwcmVzcyBQYWNrKSIsInMxLXBhY2thZ2V0eXBlZGVzY3JpcHRpb24iOiJTIENhcnRvbiIsIjFieC1wYWNrYWdldHlwZWRlc2NyaXB0aW9uIjoiIiwiZmwxLXBhY2thZ2V0eXBlZGVzY3JpcHRpb24iOiJGbHllciIsImJ4Ny1wYWNrYWdldHlwZWRlc2NyaXB0aW9uIjoiQm94IDciLCJldmVubG9wZS1wYWNrYWdldHlwZWRlc2NyaXB0aW9uIjoiIiwiZW52ZWwtcGFja2FnZXR5cGVkZXNjcmlwdGlvbiI6IkV4cHJlc3MgTGVnYWwgRW52ZWxvcGUiLCIyc3AtcGFja2FnZXR5cGVkZXNjcmlwdGlvbiI6IiIsIndweF9kcHN0LXBhY2thZ2V0eXBlZGVzY3JpcHRpb24iOiIiLCJmcl8xNC1wYWNrYWdldHlwZWRlc2NyaXB0aW9uIjoiIiwiMmZsLXBhY2thZ2V0eXBlZGVzY3JpcHRpb24iOiIiLCJ0YjYtcGFja2FnZXR5cGVkZXNjcmlwdGlvbiI6IlZlcnBhY2t1bmciLCJhNC1wYWNrYWdldHlwZWRlc2NyaXB0aW9uIjoiQS00IENhcnRvbiIsIjVzcC1wYWNrYWdldHlwZWRlc2NyaXB0aW9uIjoiIiwicGFja2FnZXR5cGVkZXNjcmlwdGlvbiI6IlZlcnBhY2t1bmciLCI0dHRsLXBhY2thZ2V0eXBlZGVzY3JpcHRpb24iOiJCb3ggIzQgLSBMYXJnZSBUcmktVHViZSIsIjFmeS1wYWNrYWdldHlwZWRlc2NyaXB0aW9uIjoiIiwiZGktcGFja2FnZXR5cGVkZXNjcmlwdGlvbiI6IkRITCBJbnRlcm5hdGlvbmFsIEVudmVsb3BlIiwiYng1LXBhY2thZ2V0eXBlZGVzY3JpcHRpb24iOiJCb3ggNSIsIjR0dHMtcGFja2FnZXR5cGVkZXNjcmlwdGlvbiI6IkJveCAjNCAtIFNtYWxsIFRyaS1UdWJlIiwiYm94XzUtcGFja2FnZXR5cGVkZXNjcmlwdGlvbiI6IiIsIjZieC1wYWNrYWdldHlwZWRlc2NyaXB0aW9uIjoiQm94IDYiLCJjb2RlLXBhY2thZ2V0eXBlZGVzY3JpcHRpb24iOiJZb3VyIE93biBQYWNrYWdlIiwiYng1ai1wYWNrYWdldHlwZWRlc2NyaXB0aW9uIjoiSnVtYm8gQm94KEJveDUpIiwiMmJwLXBhY2thZ2V0eXBlZGVzY3JpcHRpb24iOiJCb3ggMiAoRmxhdCkiLCJjYXBsLXBhY2thZ2V0eXBlZGVzY3JpcHRpb24iOiIiLCI0dHUtcGFja2FnZXR5cGVkZXNjcmlwdGlvbiI6IlR1YmUgOTcuNiB4IDE3LjYgeCAxNS4yICg1a2cpIiwiZGhsX2ZseWVyXzEtcGFja2FnZXR5cGVkZXNjcmlwdGlvbiI6IiIsInBlcnNvbmFsLXBhY2thZ2V0eXBlZGVzY3JpcHRpb24iOiIiLCJ2dnYtcGFja2FnZXR5cGVkZXNjcmlwdGlvbiI6Ik15REhMKyBQYWNrYWdlIFZWViBEZXNjIiwieHBkLXBhY2thZ2V0eXBlZGVzY3JpcHRpb24iOiJFeHByZXNzIEVudmVsb3BlIiwiZmx5Zy1wYWNrYWdldHlwZWRlc2NyaXB0aW9uIjoiIiwid2I2LXBhY2thZ2V0eXBlZGVzY3JpcHRpb24iOiJXaW5lIEJveCA2IiwiY3oxLXBhY2thZ2V0eXBlZGVzY3JpcHRpb24iOiIiLCJlbnZlcy1wYWNrYWdldHlwZWRlc2NyaXB0aW9uIjoiRXhwcmVzcyBFbnZlbG9wZSB3aXRoIFNsZWV2ZSIsImZyXzEyLXBhY2thZ2V0eXBlZGVzY3JpcHRpb24iOiIiLCJjZTAtcGFja2FnZXR5cGVkZXNjcmlwdGlvbiI6IiIsImM1LXBhY2thZ2V0eXBlZGVzY3JpcHRpb24iOiJDQUlYQSA1IiwiZXAxLXBhY2thZ2V0eXBlZGVzY3JpcHRpb24iOiIiLCI0YngtcGFja2FnZXR5cGVkZXNjcmlwdGlvbiI6IkJveCA0Iiwic3RkZi1wYWNrYWdldHlwZWRlc2NyaXB0aW9uIjoiIiwidGVzdDItcGFja2FnZXR5cGVkZXNjcmlwdGlvbiI6IiIsImMtcGFja2FnZXR5cGVkZXNjcmlwdGlvbiI6IkNlbWVudCBDYXJ0b24iLCJieDMtcGFja2FnZXR5cGVkZXNjcmlwdGlvbiI6IkJveCAzIiwiYWQtcGFja2FnZXR5cGVkZXNjcmlwdGlvbiI6IkJveCA0MS43IHggMzUuOSB4IDM2LjkgKDE1a2cpIiwiZnJfMTgtcGFja2FnZXR5cGVkZXNjcmlwdGlvbiI6IiIsImZyXzExLXBhY2thZ2V0eXBlZGVzY3JpcHRpb24iOiIiLCJjZTEtcGFja2FnZXR5cGVkZXNjcmlwdGlvbiI6IkNhcmQgRW52ZWxvcGUiLCI3YngtcGFja2FnZXR5cGVkZXNjcmlwdGlvbiI6IkJveCA3IiwiZW52ZS1wYWNrYWdldHlwZWRlc2NyaXB0aW9uIjoiRXhwcmVzcyBFbnZlbG9wZSIsImRveF9kcHN0LXBhY2thZ2V0eXBlZGVzY3JpcHRpb24iOiIiLCJkaGxfZW52ZWxvcGVfMS1wYWNrYWdldHlwZWRlc2NyaXB0aW9uIjoiIiwiYjQwLXBhY2thZ2V0eXBlZGVzY3JpcHRpb24iOiIiLCJmYjQtcGFja2FnZXR5cGVkZXNjcmlwdGlvbiI6IkVYUFJFU1MgRkxZRVIoQjQpIiwiZWIyLXBhY2thZ2V0eXBlZGVzY3JpcHRpb24iOiIiLCJmcl8wLXBhY2thZ2V0eXBlZGVzY3JpcHRpb24iOiIiLCJlbnZlbG9wZS1wYWNrYWdldHlwZWRlc2NyaXB0aW9uIjoiIiwib3duMy1wYWNrYWdldHlwZWRlc2NyaXB0aW9uIjoiTXkgT3duIFBhY2thZ2UiLCJ5cDItcGFja2FnZXR5cGVkZXNjcmlwdGlvbiI6IiIsImRmLXBhY2thZ2V0eXBlZGVzY3JpcHRpb24iOiIiLCIzc3AtcGFja2FnZXR5cGVkZXNjcmlwdGlvbiI6IiIsInN0ZDEtcGFja2FnZXR5cGVkZXNjcmlwdGlvbiI6IkVudmVsb3BlIiwicy1wYWNrYWdldHlwZWRlc2NyaXB0aW9uIjoiUyBDYXJ0b24iLCJ0YjItcGFja2FnZXR5cGVkZXNjcmlwdGlvbiI6IlRlc3QgUGFja2FnZSIsImRveHdhbGstcGFja2FnZXR5cGVkZXNjcmlwdGlvbiI6IiIsIndiMS1wYWNrYWdldHlwZWRlc2NyaXB0aW9uIjoiV2luZSBCb3ggMSIsImViOS1wYWNrYWdldHlwZWRlc2NyaXB0aW9uIjoiIiwiYm94XzYtcGFja2FnZXR5cGVkZXNjcmlwdGlvbiI6IiIsImMzLXBhY2thZ2V0eXBlZGVzY3JpcHRpb24iOiJDQUlYQSAzIiwiZnJfNy1wYWNrYWdldHlwZWRlc2NyaXB0aW9uIjoiIiwiYng4ai1wYWNrYWdldHlwZWRlc2NyaXB0aW9uIjoiSnVtYm8gQm94KEJveDgpIiwiYm94XzEtcGFja2FnZXR5cGVkZXNjcmlwdGlvbiI6IiIsImNvZGUxLXBhY2thZ2V0eXBlZGVzY3JpcHRpb24iOiJZb3VyIE93biBQYWNrYWdlIiwiZXhwMi1wYWNrYWdldHlwZWRlc2NyaXB0aW9uIjoiIiwic21mLXBhY2thZ2V0eXBlZGVzY3JpcHRpb24iOiIiLCJkbS1wYWNrYWdldHlwZWRlc2NyaXB0aW9uIjoiIiwiMmJ0LXBhY2thZ2V0eXBlZGVzY3JpcHRpb24iOiIiLCJmcl8xNi1wYWNrYWdldHlwZWRlc2NyaXB0aW9uIjoiIiwib3RoZXJfZGhsX3BhY2thZ2luZy1wYWNrYWdldHlwZWRlc2NyaXB0aW9uIjoiIiwidGJ0LXBhY2thZ2V0eXBlZGVzY3JpcHRpb24iOiJUZXN0IFBhY2thZ2UiLCJzaWlzMS1wYWNrYWdldHlwZWRlc2NyaXB0aW9uIjoiU0lJUyBDYXJ0b24iLCIycHMtcGFja2FnZXR5cGVkZXNjcmlwdGlvbiI6IkxhcmdlICMyIC0gU21hbGwgKFNtYWxsIFBpenphKSIsImZyXzItcGFja2FnZXR5cGVkZXNjcmlwdGlvbiI6IiIsInBsdC1wYWNrYWdldHlwZWRlc2NyaXB0aW9uIjoiIiwib3duNS1wYWNrYWdldHlwZWRlc2NyaXB0aW9uIjoiTXkgT3duIFBhY2thZ2UiLCJwYWwtcGFja2FnZXR5cGVkZXNjcmlwdGlvbiI6IiIsImRvbS1wYWNrYWdldHlwZWRlc2NyaXB0aW9uIjoiIiwib3duXzItcGFja2FnZXR5cGVkZXNjcmlwdGlvbiI6IiIsIjVibC1wYWNrYWdldHlwZWRlc2NyaXB0aW9uIjoiIiwiZGNubC1wYWNrYWdldHlwZWRlc2NyaXB0aW9uIjoiIiwidGI0LXBhY2thZ2V0eXBlZGVzY3JpcHRpb24iOiJWZXJwYWNrdW5nIiwiYm94XzgtcGFja2FnZXR5cGVkZXNjcmlwdGlvbiI6IiIsIndiMy1wYWNrYWdldHlwZWRlc2NyaXB0aW9uIjoiV2luZSBCb3ggMyIsImViNy1wYWNrYWdldHlwZWRlc2NyaXB0aW9uIjoiIiwiY3VzdG9tZXJfcGFja2FnaW5nLXBhY2thZ2V0eXBlZGVzY3JpcHRpb24iOiIiLCJjMS1wYWNrYWdldHlwZWRlc2NyaXB0aW9uIjoiIiwibGdmLXBhY2thZ2V0eXBlZGVzY3JpcHRpb24iOiIiLCJmcl85LXBhY2thZ2V0eXBlZGVzY3JpcHRpb24iOiIiLCI1YngtcGFja2FnZXR5cGVkZXNjcmlwdGlvbiI6IkJveCA1IChKdW1ibyBTbWFsbCkiLCJlYjYtcGFja2FnZXR5cGVkZXNjcmlwdGlvbiI6IiIsInRiNy1wYWNrYWdldHlwZWRlc2NyaXB0aW9uIjoiVmVycGFja3VuZyIsImEzLXBhY2thZ2V0eXBlZGVzY3JpcHRpb24iOiJBLTMgQ2FydG9uIiwicGFjLXBhY2thZ2V0eXBlZGVzY3JpcHRpb24iOiIiLCIycG0tcGFja2FnZXR5cGVkZXNjcmlwdGlvbiI6IkxhcmdlICMyIC0gTWVkaXVtIChQaXp6YSkiLCIyYmMtcGFja2FnZXR5cGVkZXNjcmlwdGlvbiI6IkJveCAyIChDdWJlKSIsImpiMS1wYWNrYWdldHlwZWRlc2NyaXB0aW9uIjoiIiwiYm94XzItcGFja2FnZXR5cGVkZXNjcmlwdGlvbiI6IiIsIm93bjEtcGFja2FnZXR5cGVkZXNjcmlwdGlvbiI6Ik15IE93biBQYWNrYWdlIiwiZXhwMy1wYWNrYWdldHlwZWRlc2NyaXB0aW9uIjoiIiwiMXNwLXBhY2thZ2V0eXBlZGVzY3JpcHRpb24iOiIiLCJzZXBuZXctcGFja2FnZXR5cGVkZXNjcmlwdGlvbiI6IiIsImNvZGUyLXBhY2thZ2V0eXBlZGVzY3JpcHRpb24iOiJZb3VyIE93biBQYWNrYWdlIiwiZnhsLXBhY2thZ2V0eXBlZGVzY3JpcHRpb24iOiJMYXJnZSBGbHllciIsImZhMy1wYWNrYWdldHlwZWRlc2NyaXB0aW9uIjoiRVhQUkVTUyBGTFlFUihBMykiLCJmbHkxLXBhY2thZ2V0eXBlZGVzY3JpcHRpb24iOiIiLCJmbHlyLXBhY2thZ2V0eXBlZGVzY3JpcHRpb24iOiIiLCJjZW1lbnQtcGFja2FnZXR5cGVkZXNjcmlwdGlvbiI6IkNlbWVudCBDYXJ0b24iLCJ0YnMtcGFja2FnZXR5cGVkZXNjcmlwdGlvbiI6IlR1YmUgKFNtYWxsKSIsImJ4OC1wYWNrYWdldHlwZWRlc2NyaXB0aW9uIjoiQm94IDgiLCIxMi1wYWNrYWdldHlwZWRlc2NyaXB0aW9uIjoiIiwiZG94MS1wYWNrYWdldHlwZWRlc2NyaXB0aW9uIjoiRU5WRUxPUEUxIiwiZWI0LXBhY2thZ2V0eXBlZGVzY3JpcHRpb24iOiIiLCJ5b3VyX3BhY2thZ2luZy1wYWNrYWdldHlwZWRlc2NyaXB0aW9uIjoiIiwiZGhsX2VudmVsb3BlLXBhY2thZ2V0eXBlZGVzY3JpcHRpb24iOiIiLCIzbGEtcGFja2FnZXR5cGVkZXNjcmlwdGlvbiI6IkJveCAjMyAtIExhcmdlIChMYXJnZSBBdGxhcykiLCI2c3AtcGFja2FnZXR5cGVkZXNjcmlwdGlvbiI6IiIsImZyXzEzLXBhY2thZ2V0eXBlZGVzY3JpcHRpb24iOiIiLCJvcHAtcGFja2FnZXR5cGVkZXNjcmlwdGlvbiI6IiIsIjdjYnh6LXBhY2thZ2V0eXBlZGVzY3JpcHRpb24iOiJCb3ggNDEuNyB4IDM1LjkgeCAzNi45ICgxNWtnKSIsIjF2cC1wYWNrYWdldHlwZWRlc2NyaXB0aW9uIjoiVmVycGFja3VuZyIsImM2LXBhY2thZ2V0eXBlZGVzY3JpcHRpb24iOiJDQUlYQSA2IiwiMmJ4LXBhY2thZ2V0eXBlZGVzY3JpcHRpb24iOiJCb3ggMiAoU2hvZSBCb3gpIiwibC1wYWNrYWdldHlwZWRlc2NyaXB0aW9uIjoiTCBDYXJ0b24iLCI4YngtcGFja2FnZXR5cGVkZXNjcmlwdGlvbiI6IkJveCA4IChKdW1ibyBMYXJnZSkiLCJ1dXUtcGFja2FnZXR5cGVkZXNjcmlwdGlvbiI6Ik15REhMKyBQYWNrYWdlIFVVVSBEZXNjIiwib3cyLXBhY2thZ2V0eXBlZGVzY3JpcHRpb24iOiIiLCJjdXMtcGFja2FnZXR5cGVkZXNjcmlwdGlvbiI6IiIsIjdjMXgtcGFja2FnZXR5cGVkZXNjcmlwdGlvbiI6IkJveCA0MS43IHggMzUuOSB4IDM2LjkgKDE1a2cpIiwiYm94XzQtcGFja2FnZXR5cGVkZXNjcmlwdGlvbiI6IiIsImZsbC1wYWNrYWdldHlwZWRlc2NyaXB0aW9uIjoiIiwiN2NidC1wYWNrYWdldHlwZWRlc2NyaXB0aW9uIjoiQm94IDQxLjcgeCAzNS45IHggMzYuOSAoMTVrZykiLCJkb3gtcGFja2FnZXR5cGVkZXNjcmlwdGlvbiI6IiIsImZscy1wYWNrYWdldHlwZWRlc2NyaXB0aW9uIjoiIiwiZGYxLXBhY2thZ2V0eXBlZGVzY3JpcHRpb24iOiIiLCJmbHllci1wYWNrYWdldHlwZWRlc2NyaXB0aW9uIjoiRmx5ZXIiLCJsZXBuZXctcGFja2FnZXR5cGVkZXNjcmlwdGlvbiI6IiIsImxwcC1wYWNrYWdldHlwZWRlc2NyaXB0aW9uIjoiTGFyZ2UgUGFkZGVkIHBvdWNoIiwiYng2LXBhY2thZ2V0eXBlZGVzY3JpcHRpb24iOiJCb3ggNiIsInlwLXBhY2thZ2V0eXBlZGVzY3JpcHRpb24iOiIiLCJmcl81LXBhY2thZ2V0eXBlZGVzY3JpcHRpb24iOiIiLCJ5cDEtcGFja2FnZXR5cGVkZXNjcmlwdGlvbiI6IiIsInRiMy1wYWNrYWdldHlwZWRlc2NyaXB0aW9uIjoiVmVycGFja3VuZyIsIjNieC1wYWNrYWdldHlwZWRlc2NyaXB0aW9uIjoiQm94IDMiLCJvdHAtcGFja2FnZXR5cGVkZXNjcmlwdGlvbiI6IiIsImRmMi1wYWNrYWdldHlwZWRlc2NyaXB0aW9uIjoiIiwiZmwtcGFja2FnZXR5cGVkZXNjcmlwdGlvbiI6IiIsIndiMi1wYWNrYWdldHlwZWRlc2NyaXB0aW9uIjoiV2luZSBCb3ggMiIsImJveF83LXBhY2thZ2V0eXBlZGVzY3JpcHRpb24iOiIiLCJqajEtcGFja2FnZXR5cGVkZXNjcmlwdGlvbiI6IiIsImM0LXBhY2thZ2V0eXBlZGVzY3JpcHRpb24iOiJDQUlYQSA0Iiwid3B4LXBhY2thZ2V0eXBlZGVzY3JpcHRpb24iOiIiLCI4YmUtcGFja2FnZXR5cGVkZXNjcmlwdGlvbiI6IiIsImJ4NC1wYWNrYWdldHlwZWRlc2NyaXB0aW9uIjoiQm94IDQiLCJmbHktcGFja2FnZXR5cGVkZXNjcmlwdGlvbiI6IiIsImRobC1wYWNrYWdldHlwZWRlc2NyaXB0aW9uIjoiIiwiNHNwLXBhY2thZ2V0eXBlZGVzY3JpcHRpb24iOiIiLCJ5Yi1wYWNrYWdldHlwZWRlc2NyaXB0aW9uIjoiIiwibDEtcGFja2FnZXR5cGVkZXNjcmlwdGlvbiI6IkwgQ2FydG9uIiwib3duMi1wYWNrYWdldHlwZWRlc2NyaXB0aW9uIjoiTXkgT3duIFBhY2thZ2UiLCJjcC1wYWNrYWdldHlwZWRlc2NyaXB0aW9uIjoiIiwibGxsLXBhY2thZ2V0eXBlZGVzY3JpcHRpb24iOiJNeURITCsgUGFja2FnZSBMTEwgRGVzYyIsIm93bi1wYWNrYWdldHlwZWRlc2NyaXB0aW9uIjoiIiwiMmJlLXBhY2thZ2V0eXBlZGVzY3JpcHRpb24iOiIiLCJkb2MtcGFja2FnZXR5cGVkZXNjcmlwdGlvbiI6IiIsImZseTItcGFja2FnZXR5cGVkZXNjcmlwdGlvbiI6IiIsImZsXzEtcGFja2FnZXR5cGVkZXNjcmlwdGlvbiI6IkRITCBGbHllciIsIjE1eC1wYWNrYWdldHlwZWRlc2NyaXB0aW9uIjoiIiwidGI1LXBhY2thZ2V0eXBlZGVzY3JpcHRpb24iOiIiLCJ0YmwtcGFja2FnZXR5cGVkZXNjcmlwdGlvbiI6IlR1YmUgKExhcmdlKSIsImE1LXBhY2thZ2V0eXBlZGVzY3JpcHRpb24iOiJBLTUgQ2FydG9uIiwiYm94XzktcGFja2FnZXR5cGVkZXNjcmlwdGlvbiI6IiIsInlvcC1wYWNrYWdldHlwZWRlc2NyaXB0aW9uIjoiIiwidGUxLXBhY2thZ2V0eXBlZGVzY3JpcHRpb24iOiJCb3ggNSAoRmxhdCkgVGVzdCIsImViOC1wYWNrYWdldHlwZWRlc2NyaXB0aW9uIjoiIiwib3AxLXBhY2thZ2V0eXBlZGVzY3JpcHRpb24iOiIiLCIxZmwtcGFja2FnZXR5cGVkZXNjcmlwdGlvbiI6IiIsImtvdC1wYWNrYWdldHlwZWRlc2NyaXB0aW9uIjoiIiwiZWQtcGFja2FnZXR5cGVkZXNjcmlwdGlvbiI6IiIsImhldnktcGFja2FnZXR5cGVkZXNjcmlwdGlvbiI6IiIsImMyLXBhY2thZ2V0eXBlZGVzY3JpcHRpb24iOiJDQUlYQSAyIiwiMWNlLXBhY2thZ2V0eXBlZGVzY3JpcHRpb24iOiJDYXJkIEVudmVsb3BlIiwiZW52ZWxzLXBhY2thZ2V0eXBlZGVzY3JpcHRpb24iOiJFeHByZXNzIExlZ2FsIEVudmVsb3BlIHdpdGggU2xlZXZlIiwic3BjLXBhY2thZ2V0eXBlZGVzY3JpcHRpb24iOiJTbWFsbCBQYWRkZWQgcG91Y2giLCJieDItcGFja2FnZXR5cGVkZXNjcmlwdGlvbiI6IkJveCAyIiwiY29tLXBhY2thZ2V0eXBlZGVzY3JpcHRpb24iOiIiLCJvZC1wYWNrYWdldHlwZWRlc2NyaXB0aW9uIjoiT3RoZXIgREhMIFBhY2thZ2luZyIsImNzcy1wYWNrYWdldHlwZWRlc2NyaXB0aW9uIjoiIiwiZnJfMTctcGFja2FnZXR5cGVkZXNjcmlwdGlvbiI6IiIsIjdjYngtcGFja2FnZXR5cGVkZXNjcmlwdGlvbiI6IkJveCAoMTVrZykiLCJkYy1wYWNrYWdldHlwZWRlc2NyaXB0aW9uIjoiRG9jdW1lbnRvIEludGVybmFjaW9uYWwiLCJvd240LXBhY2thZ2V0eXBlZGVzY3JpcHRpb24iOiJNeSBPd24gUGFja2FnZSIsImZyXzEtcGFja2FnZXR5cGVkZXNjcmlwdGlvbiI6IiIsImV4cDEtcGFja2FnZXR5cGVkZXNjcmlwdGlvbiI6IiIsInNpaXMtcGFja2FnZXR5cGVkZXNjcmlwdGlvbiI6IlNJSVMgQ2FydG9uIn0sInNoaXBtZW50LWFkZHJlc3MiOnsic2hpcG1lbnQtYWRkcmVzc19iYWNrZW5kLWVycm9yX29mYWMtc2hpcG1lbnQtaXMtbm90LWFsbG93ZWQiOiJESEwgRXhwcmVzcyB2ZXJzZW5kZXQgenVyIFplaXQgbmljaHQgaW4gZGllc2VzIExhbmQuIEJpdHRlIHfDpGhsZW4gU2llIGVpbiBhbmRlcmVzIFppZWxsYW5kIGF1cy4iLCJhZGRyZXNzLWRldGFpbHNfYmFja2VuZC1lcnJvcl9pbnZhbGlkLXBvc3QtbG9jYXRpb24iOiJVbmfDvGx0aWdlIFBMWiIsImFkZHJlc3MtZGV0YWlsc19iYWNrZW5kLWVycm9yX3Vuc3VwcG9ydGVkLWJyYXppbC10YXgtY29kZV90eXBlIjoiSW52YWxpZCB0YXggY29kZSJ9LCJTSElQTUVOVF9PUFRJT05BTF9TRVJWSUNFUyI6eyJPUFRJT05BTF9TRVJWSUNFU19IRUFERVJfSU5DT1RFUk1fRElBTE9HIjoiIiwiT1BUSU9OQUxfU0VSVklDRVNfUEFSQUdSQVBIX0RFRkFVTFRfT1BUSU9OQUxfU0VSVklDRV9ERVNDUklQVElPTiI6IiIsIk9QVElPTkFMX1NFUlZJQ0VTX1BBUkFHUkFQSF9JQl9DT05GSVJNQVRJT04iOiJCdWNoZW4gU2llIHp1c8OkdHpsaWNoZW4gZmluYW56aWVsbGVuIFNjaHV0eiBmw7xyIHtwcmljZX0gbWVociBoaW56dSEiLCJPUFRJT05BTF9TRVJWSUNFU19QQVJBR1JBUEhfSU5DT01QQVRJQkxFX1NFUlZJQ0VTIjoie3N1YmplY3RTZXJ2aWNlfSBrYW5uIG5pY2h0IHp1c2FtbWVuIG1pdCB7c2VsZWN0ZWRTZXJ2aWNlc30gZ2VudXR6dCB3ZXJkZW4iLCJDQVNIX09OX0RFTElWRVJZX0VSUk9SX0FNT1VOVF9WQUxVRV9FWENFRURTX0xJTUlUIjoiw5xiZXJzY2hyZWl0ZXQgZGFzIHp1bMOkc3NpZ2UgTWF4aW11bToge3ZhbHVlfSJ9LCJjci1yZWZlcmVuY2Utb3B0aW9ucyI6eyJyZWZlcmVuY2UtdmFsaWRhdGlvbi1vcHRpb25zX3NlbGVjdC1vcHRpb25fY3IwMDM5LW11c3QtbWF0Y2gtY29tcGFueS1yZWZlcmVuY2UtZm9ybWF0cy1saXN0IjoiRmlybWEgKFJlZmVyZW56IEZvcm1hdCkiLCJncm91cC1uYW1lX2hlYWRlciI6IlNlbmR1bmdzcmVmZXJlbnoiLCJyZWZlcmVuY2UtdmFsaWRhdGlvbi1vcHRpb25zX3NlbGVjdC1vcHRpb25fY3IwMDM5LW11c3QtbWF0Y2gtY29tcGFueS1yZWZlcmVuY2UtbGlzdCI6IkZpcm1hIChBYnNlbmRlciBSZWZlcmVueikiLCJyZWZlcmVuY2UtdmFsaWRhdGlvbi1vcHRpb25zX2xhYmVsX2NyMDAzOC5pSGVscCI6IkZhbGxzIFNpZSBkYXMgUmVmZXJlbnpmZWxkIGbDvHIgZWluZW4gYmVzdGltbXRlbiBBbmxhc3MgbnV0emVuIG3DtmNodGUsIHouQi4gZsO8ciBkaWUgQW5nYWJlIGVpbmVyIFJlY2hudW5nc251bW1lciwgS3VuZGVubnVtbWVyIG9kZXIgYW5kZXJlciBpbnRlcm5lciBGaXJtZW5iZWRpbmd1bmcsIGvDtm5uZW4gU2llIGRhcyAke2JyYW5kfSBSZWZlcmVuemZlbGQgdW1iZW5lbm5lbi4gU3RhdHQgXHUyMDFjUmVmZXJlbnpcdTIwMWQgd2lyZCBkZXIgdm9uIElobmVuIGFuZ2VnZWJlbiBOYW1lIGFuZ2V6ZWlndCwgei5CLiBSZWNobnVuZ3NudW1tZXIuIiwic2Vjb25kYXJ5LXJlZmVyZW5jZS1vcHRpb25zX3NlbGVjdC1vcHRpb25fY3IwMjMxLW11c3QtbWF0Y2gtdXNlci1zZWNvbmRhcnktcmVmZXJlbmNlLWxpc3QiOiJHcnVwcGVubWl0Z2xpZWQgWnVzYXR6cmVmZXJlbnoiLCJzZWNvbmRhcnktcmVmZXJlbmNlLW9wdGlvbnNfc2VsZWN0LW9wdGlvbl9jcjAyMzEtbXVzdC1tYXRjaC1ncm91cC1zZWNvbmRhcnktcmVmZXJlbmNlLWxpc3QiOiJHcnVwcGUgWnVzYXR6cmVmZXJlbnoiLCJyZWZlcmVuY2UtdmFsaWRhdGlvbi1vcHRpb25zX2xhYmVsX2NyMDAzNyI6Ik11c3MgZWluZSBSZWZlcmVueiBhbmdlYmVuIiwicmVmZXJlbmNlLXZhbGlkYXRpb24tb3B0aW9uc19sYWJlbF9jcjAwMzgiOiI8ZGl2IGNsYXNzPVwiZXdmX2RpY3Rpb25hcnlfdmFsdWVcIj5SZWZlcmVuemZlbGQgZXJzY2hlaW50IGFscyA8ZGl2IGNsYXNzPVwiaW5mb1wiPjxkaXY+RmFsbHMgU2llIGRhcyBSZWZlcmVuemZlbGQgZsO8ciBlaW5lbiBiZXN0aW1tdGVuIEFubGFzcyBudXR6ZW4gbcO2Y2h0ZSwgei5CLiBmw7xyIGRpZSBBbmdhYmUgZWluZXIgUmVjaG51bmdzbnVtbWVyLCBLdW5kZW5udW1tZXIgb2RlciBhbmRlcmVyIGludGVybmVyIEZpcm1lbmJlZGluZ3VuZywga8O2bm5lbiBTaWUgZGFzIE15REhMKyBSZWZlcmVuemZlbGQgdW1iZW5lbm5lbi4gU3RhdHQgXHUyMDFjUmVmZXJlbnpcdTIwMWQgd2lyZCBkZXIgdm9uIElobmVuIGFuZ2VnZWJlbiBOYW1lIGFuZ2V6ZWlndCwgei5CLiBSZWNobnVuZ3NudW1tZXIuPFwvZGl2PjxcL2Rpdj48XC9kaXY+IiwicmVmZXJlbmNlLXZhbGlkYXRpb24tb3B0aW9uc19sYWJlbF9jcjAwMzkiOiJFcmZvcmRlcm5pcyIsInJlZmVyZW5jZS12YWxpZGF0aW9uLW9wdGlvbnNfZXJyb3JfY3IwMDM4LW1pbmxlbmd0aCI6Ik1pbmltdW0gRXJsYXVidDogMSIsInJlZmVyZW5jZS12YWxpZGF0aW9uLW9wdGlvbnNfc2VsZWN0LW9wdGlvbl9jcjAwMzktbXVzdC1tYXRjaC1ncm91cC1yZWZlcmVuY2UtZm9ybWF0cy1saXN0IjoiR3J1cHBlIChSZWZlcmVueiBGb3JtYXQpIiwicmVmZXJlbmNlLXZhbGlkYXRpb24tb3B0aW9uc19lcnJvcl9jcjAwMzgtcmVxdWlyZWQiOiJFcmZvcmRlcmxpY2giLCJzZWNvbmRhcnktcmVmZXJlbmNlLW9wdGlvbnNfc3ViLWhlYWRlciI6Ilp1c2F0enJlZmVyZW56IiwicmVmZXJlbmNlLXZhbGlkYXRpb24tb3B0aW9uc19lcnJvcl9jcjAwMzgtbWF4bGVuZ3RoIjoiTWF4aW1hbCBFcmxhdWJ0OiAyNTUiLCJyZWZlcmVuY2UtdmFsaWRhdGlvbi1vcHRpb25zX3NlbGVjdC1vcHRpb25fY3IwMDM5LW11c3QtbWF0Y2gtdXNlci1yZWZlcmVuY2UtbGlzdCI6IlBlcnPDtm5saWNoIChBYnNlbmRlciBSZWZlcmVueikiLCJyZWZlcmVuY2UtdmFsaWRhdGlvbi1vcHRpb25zX3NlbGVjdC1vcHRpb25fY3IwMDM5LW11c3QtbWF0Y2gtdXNlci1yZWZlcmVuY2UtZm9ybWF0cy1saXN0IjoiUGVyc8O2bmxpY2ggKFJlZmVyZW56IEZvcm1hdCkiLCJzZWNvbmRhcnktcmVmZXJlbmNlLW9wdGlvbnNfbGFiZWxfY3IwMjMxIjoiRXJmb3JkZXJuaXMiLCJzZWNvbmRhcnktcmVmZXJlbmNlLW9wdGlvbnNfbGFiZWxfY3IwMjMwIjoiTXVzcyB6dXPDpHR6bGljaGUgUmVmZXJlbnogYmVudXR6ZW4iLCJyZWZlcmVuY2UtdmFsaWRhdGlvbi1vcHRpb25zX3N1Yi1oZWFkZXIiOiI8aDM+V8OkaHJlbmQgZGVyIFNlbmR1bmdzZXJzdGVsbHVuZzxcL2gzPlxuIiwicmVmZXJlbmNlLXZhbGlkYXRpb24tb3B0aW9uc19zZWxlY3Qtb3B0aW9uX2NyMDAzOS1tdXN0LW1hdGNoLWdyb3VwLXJlZmVyZW5jZS1saXN0IjoiR3J1cHBlIChBYnNlbmRlciBSZWZlcmVueikiLCJzZWNvbmRhcnktcmVmZXJlbmNlLW9wdGlvbnNfc2VsZWN0LW9wdGlvbl9jcjAyMzEtbXVzdC1tYXRjaC1jb21wYW55LXNlY29uZGFyeS1yZWZlcmVuY2UtbGlzdCI6IkZpcm1hIFp1c2F0enJlZmVyZW56IiwicmVmZXJlbmNlLXZhbGlkYXRpb24tb3B0aW9uc19sYWJlbF9jcjAwNDAiOiJLYW5uIGFsbGUgUmVmZXJlbnplbiBzZWhlbiJ9LCJjcjAwMTYiOnsiY3ItbmFtZSI6Ik1heGltdW0gRGltZW5zaW9ucyBwZXIgU2hpcG1lbnQ6IEVuYWJsZWQifSwiY3IwMDE3Ijp7ImNyLWVycm9ycy1yZXF1aXJlZCI6IlRoaXMgZmllbGQgaXMgcmVxdWlyZWQiLCJjci1uYW1lIjoiTWF4aW11bSBEaW1lbnNpb25zIHBlciBTaGlwbWVudDogTGVuZ3RoIn0sInBheW1lbnRfb3B0aW9ucy1nbG9iYWxfY29sbGVjdC1wYXltZW50X3R5cGVfbGlzdCI6eyJwYXltZW50Y2F0ZWdvcnktaWIiOiJJbnRlcm5ldCBCYW5raW5nIiwiNDMwLWRlc2NyaXB0aW9uIjoiQ2hpbmEgVW5pb24gUGF5IiwiODA5LWRlc2NyaXB0aW9uIjoiaURFQUwiLCIxMjUtZGVzY3JpcHRpb24iOiJKYXBhbiBDcmVkaXQgQnVyZWF1IiwiMS1kZXNjcmlwdGlvbiI6IlZpc2EiLCJwYXltZW50Y2F0ZWdvcnktZGIiOiJEZWJpdCBDYXJkIiwiODA2LWRlc2NyaXB0aW9uIjoiVHJ1c3RseSIsIjExOS1kZXNjcmlwdGlvbiI6Ik1hc3RlckNhcmQgRGViaXQiLCIyLWRlc2NyaXB0aW9uIjoiQW1lcmljYW4gRXhwcmVzcyBPbmxpbmUiLCIxMzItZGVzY3JpcHRpb24iOiJEaW5lcnMgQ2x1YiIsInBheW1lbnRjYXRlZ29yeS1kYyI6IkRlYml0IFZpc2EgTWFzdGVyIiwiODM2LWRlc2NyaXB0aW9uIjoiU09GT1JUIMOcYmVyd2Vpc3VuZyIsIjMtZGVzY3JpcHRpb24iOiJNYXN0ZXJDYXJkIiwicGF5bWVudGNhdGVnb3J5LWNjIjoiQ3JlZGl0IENhcmQiLCI0MDItZGVzY3JpcHRpb24iOiJlUHJ6ZWxld3kiLCJwYXltZW50Y2F0ZWdvcnktb3QiOiJPdGhlciIsIjU2LWRlc2NyaXB0aW9uIjoiQ2hpbmEgVW5pb24gUGF5IiwiMTE3LWRlc2NyaXB0aW9uIjoiTWFlc3RybyIsIjg0MC1kZXNjcmlwdGlvbiI6IlBheVBhbCIsIjEyOC1kZXNjcmlwdGlvbiI6IkRpc2NvdmVyIiwiODAyLWRlc2NyaXB0aW9uIjoiTm9yZGVhIiwiMTAwLWRlc2NyaXB0aW9uIjoiQW1pcnVsIFBheW1lbnQiLCIxMjItZGVzY3JpcHRpb24iOiJWaXNhIEVsZWN0cm9uIiwiMTE0LWRlc2NyaXB0aW9uIjoiRGViaXQgVmlzYSBNYXN0ZXIifSwiY3IwMDE4Ijp7ImNyLWVycm9ycy1yZXF1aXJlZCI6IlRoaXMgZmllbGQgaXMgcmVxdWlyZWQiLCJjci1uYW1lIjoiTWF4aW11bSBEaW1lbnNpb25zIHBlciBTaGlwbWVudDogV2lkdGgifSwiY3IwMDE5Ijp7ImNyLWVycm9ycy1yZXF1aXJlZCI6IlRoaXMgZmllbGQgaXMgcmVxdWlyZWQiLCJjci1uYW1lIjoiTWF4aW11bSBEaW1lbnNpb25zIHBlciBTaGlwbWVudDogSGVpZ2h0In0sInNoaXBtZW50X3BhcGVyd29yay1tYXN0ZXJfcmVmZXJlbmNlX251bWJlcl9tcm5fLW1ybl9jdXN0b21zX3Byb2NlZHVyZXNfc2NlbmFyaW9zIjp7InR5cGUtZXhwb3J0X29mX2dvb2RzX3RvX25vbi1ldV90YXhfYXJlYSI6IkF1c2Z1aHIgdm9uIEVVLVdhcmVuIGluIFNvbmRlcmdlYmlldGUiLCJ0eXBlLWV4cG9ydF9vZl9nb29kcyI6IkF1c2Z1aHIgdm9uIEVVLVdhcmVuIGluIERyaXR0bMOkbmRlciAoRXhwb3J0KSIsInR5cGUtcmUtZXhwb3J0X29mX2dvb2RzX2luX3RyYW5zaXQiOiJXaWVkZXJhdXNmdWhyIHZvbiBXYXJlbiBpbSBUcmFuc2l0IGluIERyaXR0bMOkbmRlciIsInR5cGUtcmUtZXhwb3J0X29mX2dvb2RzX2luX3RyYW5zaXRfdG9fbm9uLWV1X3RheF9hcmVhIjoiV2llZGVyYXVzZnVociB2b24gRVUtV2FyZW4gaW4gU29uZGVyZ2ViaWV0ZSIsInR5cGUtcmUtZXhwb3J0X29mX2dvb2RzX2FmdGVyX2N1c3RvbXNfd2FyZWhvdXNpbmciOiJXaWVkZXJhdXNmdWhyIHZvbiBOaWNodC1FVS1XYXJlbiBuYWNoIFpvbGxsYWdlcnZlcmZhaHJlbiBpbiBOaWNodC1FVS1Mw6RuZGVyIn0sImNyMDAxMiI6eyJjci1uYW1lIjoiTWluaW11bSBXZWlnaHQgUGVyIHNoaXBtZW50OiBBcHByb3ZhbCByZXF1aXJlZCJ9LCJjcjAwMTMiOnsiY3ItbmFtZSI6Ik1heGltdW0gUGFydHMgKFBpZWNlcy9QYWNrYWdlcykgcGVyIFNoaXBtZW50OiBFbmFibGVkIn0sImNyMDAxNCI6eyJjci1lcnJvcnMtcmVxdWlyZWQiOiJUaGlzIGZpZWxkIGlzIHJlcXVpcmVkIiwiY3ItbmFtZSI6Ik1heGltdW0gUGFydHMgKFBpZWNlcy9QYWNrYWdlcykgcGVyIFNoaXBtZW50OiBMaW1pdCBWYWx1ZSJ9LCJjcjAwMTUiOnsiY3ItbmFtZSI6Ik1heGltdW0gUGFydHMgKFBpZWNlcy9QYWNrYWdlcykgcGVyIFNoaXBtZW50OiBBcHByb3ZhbCBSZXF1aXJlZCJ9LCJjcjAwMjAiOnsiY3ItZXJyb3JzLXJlcXVpcmVkIjoiVmFsdWUgcmVxdWlyZWQgZm9yIHRoaXMgZmllbGQiLCJjci1uYW1lIjoiTWF4aW11bSBEaW1lbnNpb25zIHBlciBTaGlwbWVudDogVW9NIn0sImNyMDAyMSI6eyJjci1uYW1lIjoiTWF4aW11bSBEaW1lbnNpb25zIHBlciBTaGlwbWVudDogQXBwcm92YWwgUmVxdWlyZWQifSwiY3IwMDIyIjp7ImNyLW5hbWUiOiJNaW5pbXVtIERpbWVuc2lvbnMgcGVyIFNoaXBtZW50OiBFbmFibGVkIn0sImxhbmd1YWdlcyI6eyJubyI6Ik5vcndlZ2lhbiIsImhpIjoiSGluZGkiLCJkZSI6Ikdlcm1hbiIsImZpIjoiRmlubmlzaCIsInJ1IjoiUnVzc2lhbiIsInB0IjoiUG9ydHVndWVzZSAiLCJiZyI6IkJ1bGdhcmlhbiIsImx0IjoiTGF0dmlhbiIsImhyIjoiQ3JvYXRpYW4iLCJmciI6IkZyZW5jaCIsImh1IjoiSHVuZ2FyaWFuIiwiYnMiOiJCb3NuaWFuIiwidWsiOiJVa3JhaW5pYW4iLCJrYSI6Ikdlb3JnaWFuIiwic2siOiJTbG92YWtpYW4iLCJzbCI6IlNsb3ZlbmlhbiIsIm1rIjoiTWFjZWRvbmlhbiAiLCJzcSI6IkFsYmFuaWFuIiwic3IiOiJTZXJiaWFuIiwibW4iOiJNb25nb2xpYW4iLCJzdiI6IlN3ZWRpc2giLCJrbyI6IktvcmVhbiIsImluIjoiSW5kb25lc2lhbiIsImVsIjoiR3JlZWsiLCJlbiI6IkVuZ2xpc2giLCJpcyI6IkljZWxhbmRpYyIsIml0IjoiSXRhbGlhbiIsImVzIjoiU3BhbmlzaCIsInpoIjoiU2ltcGxpZmllZCBDaGluZXNlIiwidGMiOiJUcmFkaXRpb25hbCBDaGluZXNlIiwiZXQiOiJFc3RvbmlhbiIsImNzIjoiQ3plY2giLCJ2aSI6IlZpZXRuYW1lc2UiLCJ0aCI6IlRoYWkiLCJqYSI6IkphcGFuZXNlIiwicGwiOiJQb2xpc2giLCJybyI6IlJvbWFuaWFuIiwiZGEiOiJEYW5pc2giLCJoZSI6IkhlYnJldyIsIm5sIjoiRHV0Y2giLCJ0ciI6IlR1cmtpc2gifSwiQklMTElORyI6eyJPTkxJTkVfQklMTElOR19FTlJPTExNRU5UX01TR19TVUJNSVRfQ1JFREVOVElBTFNfRVJST1IiOiJTb3JyeSBcdTIwMTMgdW5zZXIgU3lzdGVtIGlzdCBkZXJ6ZWl0IG5pY2h0IHZlcmbDvGdiYXIuIEJpdHRlIHZlcnN1Y2hlbiBTaWUgZXMgc3DDpHRlciBub2NoIGVpbm1hbCBvZGVyIGtvbnRha3RpZXJlbiBTaWUgdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1ICgyMCBjdCBqZSBBbnJ1ZiBhdXMgZGVuIGRldXRzY2hlbiBGZXN0bmV0emVuLCBtYXguIDYwIGN0IGF1cyBkZW4gZGV1dHNjaGVuIE1vYmlsZnVua25ldHplbikuIiwiSVRBTElBTl9QT1JUQUxfRU5ST0xMTUVOVF9NU0dfUkVRVUVTVF9BQ0NPVU5UX0VSUk9SIjoiU29ycnkgXHUyMDEzIHVuc2VyIFN5c3RlbSBpc3QgZGVyemVpdCBuaWNodCB2ZXJmw7xnYmFyLiBCaXR0ZSB2ZXJzdWNoZW4gU2llIGVzIHNww6R0ZXIgbm9jaCBlaW5tYWwgb2RlciBrb250YWt0aWVyZW4gU2llIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNSAoMjAgY3QgamUgQW5ydWYgYXVzIGRlbiBkZXV0c2NoZW4gRmVzdG5ldHplbiwgbWF4LiA2MCBjdCBhdXMgZGVuIGRldXRzY2hlbiBNb2JpbGZ1bmtuZXR6ZW4pLiIsIklUQUxJQU5fUE9SVEFMX0hFQURFUl9UQVJSSUYiOiJUYXJpZmYgYWNjb3VudCBkZXRhaWxzIiwiSVRBTElBTl9QT1JUQUxfSEVBREVSX1VOREVMIjoiVW5kZWwgYWNjb3VudCBkZXRhaWxzIiwiT05MSU5FX0JJTExJTkdfRU5ST0xMTUVOVF9NU0dfUkVRVUVTVF9BQ0NPVU5UX0VSUk9SIjoiU29ycnkgXHUyMDEzIHVuc2VyIFN5c3RlbSBpc3QgZGVyemVpdCBuaWNodCB2ZXJmw7xnYmFyLiBCaXR0ZSB2ZXJzdWNoZW4gU2llIGVzIHNww6R0ZXIgbm9jaCBlaW5tYWwgb2RlciBrb250YWt0aWVyZW4gU2llIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNSAoMjAgY3QgamUgQW5ydWYgYXVzIGRlbiBkZXV0c2NoZW4gRmVzdG5ldHplbiwgbWF4LiA2MCBjdCBhdXMgZGVuIGRldXRzY2hlbiBNb2JpbGZ1bmtuZXR6ZW4pLiIsIklUQUxJQU5fUE9SVEFMX0VOUk9MTE1FTlRfTVNHX1NVQk1JVF9DUkVERU5USUFMU19FUlJPUiI6IlNvcnJ5IFx1MjAxMyB1bnNlciBTeXN0ZW0gaXN0IGRlcnplaXQgbmljaHQgdmVyZsO8Z2Jhci4gQml0dGUgdmVyc3VjaGVuIFNpZSBlcyBzcMOkdGVyIG5vY2ggZWlubWFsIG9kZXIga29udGFrdGllcmVuIFNpZSB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUgKDIwIGN0IGplIEFucnVmIGF1cyBkZW4gZGV1dHNjaGVuIEZlc3RuZXR6ZW4sIG1heC4gNjAgY3QgYXVzIGRlbiBkZXV0c2NoZW4gTW9iaWxmdW5rbmV0emVuKS4ifSwiT05FX0NMSUNLX1NISVBNRU5UIjp7IkZST01fQUREUkVTU18yIjoiQWRyZXNzZSAyIChBYnNlbmRlcikiLCJQQUNLQUdJTkdfV0VJR0hUIjoiR2V3aWNodCIsIklOVk9JQ0VfTlVNQkVSX09GX1BBTExFVFMiOiJBbnphaGwgUGFsZXR0ZW4iLCJUT1RBTF9JR1NUX1BBSURfSU5SIjoiR2VzYW10IChpbiBJTlIpIiwiSU5WT0lDRV9OQU1FRF9QTEFDRV9PRl9ERVNUSU5BVElPTiI6IkdlbmFubnRlciBaaWVsb3J0IiwiSU5WT0lDRV9DT1VOVFJZX09GX09SSUdJTiI6Ikhlcmt1bmZ0c2xhbmQiLCJJVEVNX0RFU0NSSVBUSU9OIjoiV2FyZW5iZXNjaHJlaWJ1bmciLCJUT19QSE9ORV9DT1VOVFJZX0NPREUiOiJUZWxlZm9ubnVtbWVyIEzDpG5kZXJjb2RlIChFbXBmw6RuZ2VyKSIsIlJFQVNPTl9GT1JfVFJBTlNQT1JUQVRJT04iOiJFeHBvcnQgb2RlciBJbXBvcnQiLCJJTlZPSUNFX05FVF9XRUlHSFQiOiJOZXR0b2dld2ljaHQiLCJJTlZPSUNFX0RBVEUiOiJSZWNobnVuZ3NkYXR1bSIsIlRPX0FERFJFU1NfMiI6IkFkcmVzc2UgMiAoRW1wZsOkbmdlcikiLCJJTlZPSUNFX0NPVU5UUllfT0ZfVUxUSU1BVEVfREVTVElOQVRJT04iOiJlbmRnw7xsdGlnZXMgWmllbCIsIklOVk9JQ0VfSVRFTV9RVUFOVElUWSI6IkFuemFobCAoU2VuZHVuZykiLCJJTlZPSUNFX1BBQ0tBR0VfTUFSS1MiOiJWZXJwYWNrdW5nc2tlbm56ZWljaGVuIiwiUEFDS0FHSU5HX1FVQU5USVRZIjoiQW56YWhsIChab2xscmVjaG51bmcpIiwiRlJPTV9QSE9ORSI6IlRlbGVmb25udW1tZXIgKEFic2VuZGVyKSIsIlBJQ0tVUF9TUEVDSUFMX0lOU1RSVUNUSU9OUyI6IkFud2Vpc3VuZ2VuIGbDvHIgZGVuIEt1cmllciIsIlRPX1BIT05FIjoiVGVsZWZvbm51bW1lciAoRW1wZsOkbmdlcikiLCJUT19DT01QQU5ZIjoiRmlybWEgKEVtcGbDpG5nZXIpIiwiVE9fU1RSRUVUX05VTUJFUiI6IlN0cmHDn2UvSGF1c251bW1lciIsIkRVVElFU19BTkRfVEFYRVNfQkVfUEFJRF9JTlZPSUNFIjoiRHV0aWVzIGFuZCBUYXhlcyBQYWlkIChab2xscmVjaG51bmcpIiwiSU5WT0lDRV9JVEVNX0RFU0NSSVBUSU9OIjoiSW5oYWx0c2Jlc2NocmVpYnVuZyAoWm9sbHJlY2hudW5nKSIsIkZST01fTkFNRSI6Ik5hbWUgKEFic2VuZGVyKSIsIklOVk9JQ0VfSVRFTV9RVUFOVElUWV9VTklUIjoiRWluaGVpdGVuIiwiRFVUSUVTX0JFX1BBSURfSU5WT0lDRSI6IkR1dGllcyBhbmQgVGF4ZXMgUGFpZCAoWm9sbHJlY2hudW5nKSIsIlNISVBNRU5UX0RFU0NSSVBUSU9OIjoiSW5oYWx0c2Jlc2NocmVpYnVuZyAoU2VuZHVuZykiLCJBR0FJTlNUX0JPTkRfT1JfVVQiOiJHZWdlbiBBbmJpbmR1bmcgb2RlciBVbnRlcm5laG1lbiIsIklOVk9JQ0VfUkVDRUlWRVJfUkVGRVJFTkNFIjoiUmVmZXJlbnogKEVtcGbDpG5nZXIpIiwiR1NUX0lOVk9JQ0VfREFURSI6IkdTVCBSZWNobnVuZ3NkYXR1bSIsIlBBWU1FTlRfQUxURVJfREhMX0FDQ19OVU1CRVIiOiJQYXllci9GcmFjaHR6YWhsZXIiLCJJTlZPSUNFX0VYUE9SVEVSX0NPREUiOiJFeHBvcnRldXIgQ29kZSIsIkFQUFJPWF9ESVNUQU5DRV9JTl9LTSI6IkRpc3RhbmNlIGZyb20gUGlja3VwIEFkZHJlc3MgdG8gREhMIGZhY2lsaXR5IChBcHByb3guIGluIGttKSIsIlBBQ0tBR0lOR19IRUlHSFQiOiIiLCJJTlZPSUNFX0lURU1fVkFMVUUiOiJXYXJlbndlcnQiLCJBU1NJR05fTkFNRSI6Ik5hbWUgKEF1ZnRyYWdnZWJlcikiLCJJTlZPSUNFX1RFUk1TX09GX1BBWU1FTlQiOiJaYWhsdW5nc2JlZGluZ3VuZ2VuIiwiQ09NTV9QUk9GX0lOVk9JQ0VfTk8iOiJOdW1tZXIiLCJUT19FTUFJTCI6IkUtTWFpbCBBZHJlc3NlIChFbXBmw6RuZ2VyKSIsIklOVk9JQ0VfRVhQT1JURVJfSUQiOiJFeHBvcnRldXIgSUQiLCJJTlZPSUNFX05BTUUiOiJOYW1lIChab2xscmVjaG51bmcgRXJrbMOkcnVuZykiLCJJTlZPSUNFX0VYUE9SVF9DT01NT0RJVFlfQ09ERSI6Ii9XYXJlbnRhcmlmbnVtbWVyIiwiUEFDS0FHSU5HX0xFTkdUSCI6IiIsIkZST01fUEhPTkVfQ09VTlRSWV9DT0RFIjoiVGVsZWZvbm51bW1lciBMw6RuZGVyY29kZSAoQWJzZW5kZXIpIiwiSU5WT0lDRV9VTFRJTUFURV9DT05TSUdORUUiOiJFbmRnw7xsdGlnZXIgRW1wZsOkbmdlciIsIkRVVElFU19BTkRfVEFYRVNfQkVfUEFJRF9TSElQTUVOVCI6IkR1dGllcyBhbmQgVGF4ZXMgUGFpZCAoU2VuZHVuZykiLCJHU1RfSU5WT0lDRV9OVU1CRVIiOiJHU1QgUmVjaG51bmdzbnVtbWVyIiwiSU5WT0lDRV9QRVJTT05fSk9CX1RJVExFIjoiSWhyZSBCZXJ1ZnNiZXplaWNobnVuZy8gUG9zaXRpb24iLCJJTlZPSUNFX1RZUEVfT0ZfRVhQT1JUIjoiQXJ0IGRlcyBFeHBvcnRzIiwiRE9DVU1FTlRfVFlQRSI6IlNlbmR1bmcgQXJ0IiwiSU5TVVJFRF9WQUxVRSI6IlZlcnNpY2hlcnRlciBXZXJ0IiwiR1NUX1NISVBNRU5UX1RZUEUiOiJTZW5kdW5nc2FydCIsIklOVk9JQ0VfUkVBU09OX09GX0VYUE9SVCI6IlZlcnNlbmRlZ3J1bmQiLCJGUk9NX0NPTVBBTlkiOiJGaXJtYSAoQWJzZW5kZXIpIiwiRFVUSUVTX0JFX1BBSURfU0hJUE1FTlQiOiJaw7ZsbGUgYmV6YWhsdCAoU2VuZHVuZykiLCJUT19aSVAiOiJQb3N0bGVpdHphaGwgKEVtcGbDpG5nZXIpIiwiUEFDS0FHSU5HX1dJRFRIIjoiIiwiSU5WT0lDRV9SRU1BUktTIjoiSGlud2Vpc2UiLCJGUk9NX1pJUCI6IlBvc3RsZWl0emFobCAoQWJzZW5kZXIpIiwiSU5WT0lDRV9PVEhFUl9DSEFSR0VfMyI6IldlaXRlcmUgR2Viw7xociAzIiwiSFNOX0NPREUiOiJDb21tb2RpdHkgQ29kZSAoSFNOKSIsIklOVk9JQ0VfT1RIRVJfQ0hBUkdFXzIiOiJXZWl0ZXJlIEdlYsO8aHIgMiIsIklOVk9JQ0VfT1RIRVJfQ0hBUkdFXzEiOiJXZWl0ZXJlIEdlYsO8aHIgMSIsIklOVk9JQ0VfTlVNQkVSIjoiUmVjaG51bmdzbnVtbWVyIiwiU0hJUE1FTlRfREVUQUlMX1JFRkVSRU5DRSI6IlJlZmVyZW56IiwiVFJBTlNBQ1RJT05fVFlQRSI6IlJlY2hudW5ncy0gdW5kIExpZWZlcmFuc2NocmlmdCBzaW5kIGlkZW50aXNjaCIsIlBBWU1FTlRfVFJBTlNQT1JUQVRJT04iOiJUcmFuc3BvcnRrb3N0ZW4iLCJGUk9NX0VNQUlMIjoiRS1NYWlsIEFkcmVzc2UgKEFic2VuZGVyKSIsIlRSVUNLX05BTUUiOiIiLCJERUNMQVJFRF9WQUxVRSI6IkRla2xhcmllcnRlciBXZXJ0IiwiUEFDS0FHSU5HX05BTUUiOiJWZXJwYWNrdW5nIiwiQVNTSUdOX0VNQUlMX0FERFJFU1MiOiJFLU1haWwgQWRyZXNzZSIsIlRPX05BTUUiOiJOYW1lIChFbXBmw6RuZ2VyKSIsIlJFQ0lQSUVOVF9HU1RJTiI6IkVtcGbDpG5nZXIgR1NUL1BBTi9BYWRoYWFyIE51bW1lciIsIklOVk9JQ0VfR1JPU1NfV0VJR0hUIjoiIiwiQVNTSUdOX0FERElUSU9OQUxfSU5TVFJVQ1RJT04iOiJBbndlaXN1bmdlbiBmw7xyIGF1dG9yaXNpZXJ0ZW4gRW1wZsOkbmdlciAiLCJNT0RFX09GX1RSQU5TUE9SVCI6IkxpZWZlcnVuZ3NhcnQiLCJFWFBPUlRfU1VQUExZX0lHU1RfUEFZTUVOVCI6IklHU1QgWmFobHVuZyIsIlBJQ0tVUF9XRUlHSFQiOiJHZXdpY2h0IChBYmhvbHVuZykifSwiY3VzdG9tZXItZGVsZXRpb24iOnsiY3VzdG9tZXItZGVsZXRpb24tZXJyb3JfY3VzdG9tZXJfZG9lc19ub3RfZXhpc3QiOiJDdXN0b21lciB7MH0gZG9lcyBub3QgZXhpc3QiLCJjdXN0b21lci1kZWxldGlvbi1lcnJvcl9jdXN0b21lcl9lbWFpbF9pc19pbnZhbGlkIjoiQ3VzdG9tZXIgZW1haWwgezB9IGlzIGludmFsaWQiLCJjdXN0b21lci1kZWxldGlvbi1lcnJvcl9jb3JwX2N1c3RvbWVyX2VtYWlsX2NoYW5nZV9pc19hbHJlYWR5X3NjaGVkdWxlZCI6IkNvcnBvcmF0ZSB7Y3VzdG9tZXJOYW1lfSBoYXMvaGF2ZSBhbHJlYWR5IGJlZW4gc2NoZWR1bGVkIGZvciBhbiBlbWFpbCBjaGFuZ2UiLCJjdXN0b21lci1kZWxldGlvbi1lcnJvcl9kZWxldGlvbl9vZl9jb3Jwb3JhdGVfY3VzdG9tZXJzX2lzX3Byb2hpYml0ZWQiOiJEZWxldGlvbiBvZiBjb3Jwb3JhdGUgY3VzdG9tZXJzIGlzIHByb2hpYml0ZWQiLCJjdXN0b21lci1kZWxldGlvbi1kZWxldGlvbl9zY2hlZHVsaW5nX2hhc19iZWVuX3N1Y2Nlc3NmdWxseV9jb21wbGV0ZWQiOiJ7Y3VzdG9tZXJOYW1lfSBoYXZlIGJlZW4gc3VjY2Vzc2Z1bGx5IHNjaGVkdWxlZCBmb3IgZGVsZXRpb24iLCJjdXN0b21lci1kZWxldGlvbi1lcnJvcl9jb3JwX2N1c3RvbWVyX2hhc19zdWJvcmRpbmF0ZXMiOiJ7Y29ycG9yYXRlTnVtT2ZTdWJvcmRpbmF0ZXN9IHVzZXIocykgZGVwZW5kKHMpIG9uIHtjdXN0b21lck5hbWV9IHRoYXRcdTIwMTlzIGdvaW5nIHRvIGJlIGRlbGV0ZWQuIElmIHlvdSBwcm9jZWVkIHdpdGggdGhlIGRlbGV0aW9uIG9mIHtjdXN0b21lck5hbWV9LCBhbGwgdGhlIGRlcGVuZGVudCB1c2VycyB3aWxsIGJlIGRlbGV0ZWQgcGVybWFuZW50bHkgYXMgd2VsbC4iLCJjdXN0b21lci1kZWxldGlvbi1lcnJvcl9lcnJvcl93aGVuX3Jldm9raW5nX2Fzc2lnbl9zaGlwbWVudHNfb3JfYXV0aG9yaXplZF9hY2NvdW50cyI6IkVycm9yIG9jY3VycmVkIHdoZW4gcmV2b2tpbmcgYXNzaWduIHNoaXBtZW50cyBvciBhdXRob3JpemVkIGFjY291bnRzIGZvciB7MH0iLCJjdXN0b21lci1kZWxldGlvbi1lcnJvcl9jdXN0b21lcl9pc19hbHJlYWR5X3NjaGVkdWxlZF9mb3JfZGVsZXRpb24iOiJDdXN0b21lciB7MH0gaXMgYWxyZWFkeSBzY2hlZHVsZWQgZm9yIGRlbGV0aW9uIiwiY3VzdG9tZXItZGVsZXRpb24tZXJyb3JfY3VzdG9tZXJfZW1haWxfY2hhbmdlX2lzX2FscmVhZHlfc2NoZWR1bGVkIjoiQ3VzdG9tZXIgZW1haWwgY2hhbmdlIGlzIGFscmVhZHkgc2NoZWR1bGVkIGZvciB7MH0iLCJjdXN0b21lci1kZWxldGlvbi1lcnJvcl9jb3JwX2N1c3RvbWVyX2lzX2FscmVhZHlfc2NoZWR1bGVkX2Zvcl9kZWxldGlvbiI6IkNvcnBvcmF0ZSB7Y3VzdG9tZXJOYW1lfSBpcy9hcmUgYWxyZWFkeSBzY2hlZHVsZWQgZm9yIGRlbGV0aW9uIiwiY3VzdG9tZXItZGVsZXRpb24tZXJyb3JfY29ycF9zdWJvcmRpbmF0ZXNfdmFsaWRhdGlvbl9mYWlsZWQiOiJUaGUgc3lzdGVtIGlzIHVuYWJsZSB0byBjb21wbGV0ZSBkZWxldGlvbiBvZiB7Y3VzdG9tZXJOYW1lfSBiZWNhdXNlIGVtYWlsIGNoYW5nZSBpcyBpbiBwcm9ncmVzcyBmb3IgYSBkZXBlbmRlbnQgdXNlcihzKS4gUGxlYXNlIHRyeSBhZ2FpbiBsYXRlci4ifSwiUkFURV9BTkRfUVVPVEUiOnsiU0hJUF9OT1ciOiJKZXR6dCB2ZXJzZW5kZW4iLCJCVVRUT05fR0VUX1FVT1RFIjoiUHJlaXMgYW5mcmFnZW4iLCJWQVRfTk9UX0NIQVJHRUQiOiJLZWluZSBNZWhyd2VydHN0ZXVlciBCZXJlY2hudW5nIiwiRklORF9MT0NBVElPTiI6IkVpbmVuIERITCBTdGFuZG9ydCBmaW5kZW4iLCJJTkNMVURFU19WQVQiOiJJbmtsdXNpdmUgTWVocndlcnRzdGV1ZXIifSwibWFzcy11cGxvYWQiOnsibWFzcy11cGxvYWQtZmllbGRfc3VjY2Vzcy1zdGF0dXMiOiJob2NobGFkZW4gVm9sbHN0w6RuZGlnIiwibWFzcy11cGxvYWQtZmllbGRfZmFpbGVkLWV4dGVybmFsLWNyZWRlbnRpYWxzIjoiSG9jaGxhZGVuIGlzdCBhdWZncnVuZCBkZXIgTG9naW4gRGV0YWlscyBmZWhsZ2VzY2hsYWdlbiBmw7xyOiB7c3lzdGVtTmFtZX0iLCJtYXNzLXVwbG9hZC1lcnJvcl91c2VyX2lzX29ubGluZSI6IkRpZXNlciBOdXR6ZXIgbnV0enQgZGVyemVpdCBNeURITCsiLCJtYXNzLXVwbG9hZC1maWVsZF9mYWlsZWQtc3RhdHVzIjoibmljaHQgZXJmb2xncmVpY2giLCJtYXNzLXVwbG9hZC1lcnJvcl91c2VyX2lzX2NvcnBvcmF0ZSI6IkRpZSBFLU1haWwgZGVzIE51dHplcnMgKHtlbWFpbH0pIGthbm4gbmljaHQgYWt0dWFsaXNpZXJ0IHdlcmRlbiIsIm1hc3MtdXBsb2FkLWVycm9yX3NvbWVfZmllbGRzX2ludmFsaWQiOiJTb21lIGZpZWxkcyBhcmUgaW52YWxpZC4gVmlldyBkZXRhaWxzIGluIGZpbGUgY29tbWVudCIsIm1hc3MtdXBsb2FkLWZpZWxkX2ZpZWxkLWludmFsaWQiOiJVbmfDvGx0aWcge2ZpZWxkTmFtZX0iLCJlbWFpbC10ZW1wbGF0ZV9lcnJvcl9zdHJ1Y3R1cmUiOiJDU1YtRGF0ZWkgaG9jaGxhZGVuIiwibWFzcy11cGxvYWQtZXJyb3JfdXNlcl9pc19hbHJlYWR5X3JlZ2lzdGVyZWQiOiJ7dXNlck5hbWV9IGlzdCBiZXJlaXRzIHJlZ2lzdHJpZXJ0IGluIE15REhMKyIsIm1hc3MtdXBsb2FkLWZpZWxkX3N0YXR1cy1oZWFkZXIiOiJTdGF0dXMiLCJlbWFpbC10ZW1wbGF0ZV9lcnJvcl9jb2x1bW4tbnVtYmVyIjoiSmVkZSBSZWloZSBtdXNzIGRpZXNlbGJlIEFuemFobCBhbiBGZWxkZXJuIGhhYmVuIiwibWFzcy11cGxvYWQtZmllbGRfZXJyb3JzLWhlYWRlciI6IkluaGFsdHNiZXNjaHJlaWJ1bmciLCJtYXNzLXVwbG9hZC1maWVsZF9jcmVhdGUtcGFzc3dvcmQtaGVhZGVyIjoiUGFzc3dvcmQgTGluayIsIm1hc3MtdXBsb2FkLWVycm9yX3VwZGF0ZV9leGlzdGluZ191c2VyX3dhc19zZXRfdG9fbiI6IkRpZXNlciBOdXR6ZXIgd3VyZGUgbmljaHQgYWt0dWFsaXNpZXJ0LiBTb2xsdGUgc2VpbjogWSIsIm1hc3MtdXBsb2FkLWVycm9yX2dpdmVuX2NvdW50cnlfaXNfdW5hdmFpbGFibGVfYXRfdGhlX21vbWVudCI6Intjb3VudHJ5TmFtZX0gbmljaHQgZXJsYXVidCIsImVtYWlsLXRlbXBsYXRlX2Vycm9yX2Nzdl9maWxlX2lzX2VtcHR5IjoiQ1NWLURhdGVpIGhvY2hsYWRlbiIsIm1hc3MtdXBsb2FkLWVycm9yX3NtdHAiOiIuIEVtYWlsIHd1cmRlIG5pY2h0IGdlc2VuZGV0IiwibWFzcy11cGxvYWQtZXJyb3JfZ2VuZXJpYyI6IkRpZXNlIFBlcnNvbiBrb25udGUgbmljaHQgcmVnaXN0cmllcnQgd2VyZGVuIn0sIm1hbmFnZS1zaGlwbWVudHMiOnsiaG9tZV9sYWJlbF9zaGlwbWVudC1kb3dubG9hZC1iaWxsaW5nLWFjYy1udW0iOiJBY2NvdW50bnVtbWVyIiwiaG9tZV9sYWJlbF9zaGlwbWVudC1kb3dubG9hZC1zaGlwcGVyLWZ1bGwtbmFtZSI6IkFic2VuZGVyIE5hbWUiLCJob21lX2JhY2tlbmQtZXJyb3JfY2Fubm90LW1hbmlmZXN0LXNoaXBtZW50Ijoia2VpbiBUYWdlc2Fic2NobHVzcyBtaXQgZGllc2VyIFNlbmR1bmcgbcO2Z2xpY2guIiwiaG9tZV9sYWJlbF9zaGlwbWVudC1kb3dubG9hZC1nc3QtZG9jdW1lbnQtdHlwZSI6IlNlbmR1bmcgQXJ0IiwiaG9tZV9sYWJlbF9zaGlwbWVudC1kb3dubG9hZC1ncm91cC1pZCI6IkV4cG9ydC8gUmV0dXJuIFBhYXJlIiwiaG9tZV9sYWJlbF9zaGlwbWVudC1kb3dubG9hZC1yZWNlaXZlci1waG9uZSI6IlRlbGVmb25udW1tZXIgRW1wZsOkbmdlciIsImhvbWVfbGFiZWxfc2hpcG1lbnQtZG93bmxvYWQtZ3N0LW9yaWdpbi1pbnZvaWNlLWRhdGUiOiJob21lX2xhYmVsX3NoaXBtZW50LWRvd25sb2FkLWdzdC1vcmlnaW4taW52b2ljZS1kYXRlIiwiYWxlcnQtYWN0aW9uX21zZ19zZWFyY2gtd2F5YmlsbC1ieS10b2tlbiI6IlNlbmR1bmdzbnVtbWVyIG5pY2h0IGdlZnVuZGVuLiDDnGJlcnByw7xmZW4gU2llIElocmUgQW5nYWJlbiBvZGVyIG5laG1lbiBTaWUgZWluZSBhbmRlcmUgU2VuZHVuZ3NudW1tZXIuIiwiaG9tZV9sYWJlbF9zaGlwbWVudC1kb3dubG9hZC1yZWNlaXZlci1mdWxsLW5hbWUiOiJFbXBmw6RuZ2VyIE5hbWUiLCJob21lX2xhYmVsX3NoaXBtZW50LWRvd25sb2FkLXJlY2VpdmVyLWNpdHkiOiJFbXBmw6RuZ2VyIE9ydCIsImhvbWVfbGFiZWxfc2hpcG1lbnQtZG93bmxvYWQtcmVjZWl2ZXItY291bnRyeSI6IkVtcGbDpG5nZXIgTGFuZCIsImhvbWVfbGFiZWxfc2hpcG1lbnQtZG93bmxvYWQtcGllY2VzLXdlaWdodCI6IlBhY2tzdMO8Y2tlIEdld2ljaHQiLCJhbGVydC1hY3Rpb25fYmFja2VuZC1lcnJvcl9zaGlwbWVudC1jYW5ub3QtYmUtY2FuY2VsZWQiOiJTZW5kdW5nIGthbm4gbmljaHQgc3Rvcm5pZXJ0IHdlcmRlbi4gV2VubiBTaWUgbWl0IEtyZWRpdGthcnRlIGJlemFobHQgaGFiZW4gb2RlciBkZXIgS3VyaWVyZmFocmVyIGRpZSBTZW5kdW5nIGJlcmVpdHMgYWJnZWhvbHQgaGF0LCBrb250YWt0aWVyZW4gU2llIGJpdHRlIGRlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1IiwiaG9tZV9sYWJlbF9zaGlwbWVudC1kb3dubG9hZC1yZWNlaXZlci1jb21wYW55IjoiRW1wZsOkbmdlciBGaXJtYSIsImhvbWVfbGFiZWxfc2hpcG1lbnQtZG93bmxvYWQtZ3N0LWludm9pY2UtbnVtYmVyIjoiR1NUIFJlY2hudW5nc251bW1lciIsImhvbWVfbGFiZWxfc2hpcG1lbnQtZG93bmxvYWQtZGltLXdlaWdodCI6IlZvbHVtZW5nZXdpY2h0IiwiaG9tZV9sYWJlbF9zaGlwbWVudC1kb3dubG9hZC1kZXNjcmlwdGlvbiI6IldhcmVuYmVzY2hyZWlidW5nIiwiaG9tZV9sYWJlbF9zaGlwbWVudC1kb3dubG9hZC1pdG5fbnVtYmVyIjoiSVROIE51bW1lciIsImhvbWVfbGFiZWxfc2hpcG1lbnQtZG93bmxvYWQtZ3N0aW4iOiJob21lX2xhYmVsX3NoaXBtZW50LWRvd25sb2FkLWdzdGluIiwiaG9tZV9sYWJlbF9zaGlwbWVudC1kb3dubG9hZC1nc3QtcmVhc29uLWZvci10cmFuc3BvcnRhdGlvbiI6IkV4cG9ydCBvZGVyIEltcG9ydCIsImFsZXJ0LWFjdGlvbl9iYWNrZW5kLWVycm9yX2NvcHktc2hpcG1lbnQtZm9yYmlkZGVuLWZvci1icmF6aWwiOiJFcyBpc3QgbmljaHQgbcO2Z2xpY2ggZWluZSB2ZXJnYW5nZW5lIFNlbmR1bmcgenUgZHVwbGl6aWVyZW4uIiwiYWxlcnQtYWN0aW9uX21zZ19jb25zb2xpZGF0aW9uLWFjdGlvbi1vcHRpbWFsLWFtb3VudC13YXJuaW5nIjoiRHVyY2ggZGllIGdyb8OfZSBBbnphaGwgYW4gUGFja3N0w7xja2VuIHdpcmQgZGFzIFp1c2FtbWVuZmFzc2VuIGzDpG5nZXIgZGF1ZXJuLiBLbGlja2VuIFNpZSBhdWYga2VpbmUgYW5kZXJlbiBGdW5rdGlvbmVuIGJpcyBkaWUgWnVzYW1tZW5mYXNzdW5nIHZvbGxzdMOkbmRpZyBpc3QuIiwiaG9tZV9sYWJlbF9zaGlwbWVudC1kb3dubG9hZC1nc3QtdHJhbnNhY3Rpb24tdHlwZSI6IlJlY2hudW5ncy0gdW5kIExpZWZlcmFuc2NocmlmdCBzaW5kIGlkZW50aXNjaCIsImhvbWVfbGFiZWxfc2hpcG1lbnQtZG93bmxvYWQtcmVjZWl2ZXItYWRkcmVzcy1saW5lLTIiOiJFbXBmw6RuZ2VyIEFkcmVzc2UgMiIsImhvbWVfbGFiZWxfc2hpcG1lbnQtZG93bmxvYWQtcmVsYXRlZC10byI6IkJlem9nZW4gYXVmIiwiaG9tZV9sYWJlbF9zaGlwbWVudC1kb3dubG9hZC1yZWNlaXZlci1hZGRyZXNzLWxpbmUtMSI6IkVtcGbDpG5nZXIgQWRyZXNzZSAxIiwiaG9tZV9sYWJlbF9zaGlwbWVudC1kb3dubG9hZC1wcm9kdWN0LXR5cGUiOiJadXN0ZWxsb3B0aW9uIiwiaG9tZV9sYWJlbF9zaGlwbWVudC1kb3dubG9hZC1nc3QtdG90YWwtaWdzdC1wYWlkIjoiR2VzYW10IChpbiBJTlIpIiwiYWxlcnQtYWN0aW9uX2JhY2tlbmQtZXJyb3Jfc2hpcG1lbnQtYWN0aW9uLWZvcmJpZGRlbiI6IkJlYXJiZWl0dW5nIGRpZXNlciBTZW5kdW5nIG5pY2h0IGdlbmVobWlndCIsImhvbWVfbGFiZWxfc2hpcG1lbnQtZG93bmxvYWQtZ3N0LXN1cHBsaWVkLWZvci1leHBvcnQiOiJJR1NUIFphaGx1bmciLCJob21lX2xhYmVsX3NoaXBtZW50LWRvd25sb2FkLWdzdC1tb2RlLW9mLXRyYW5zcG9ydCI6IkxpZWZlcnVuZ3NhcnQiLCJob21lX2xhYmVsX3NoaXBtZW50LWRvd25sb2FkLWF3Yi1udW1iZXIiOiJTZW5kdW5nc251bW1lciIsImhvbWVfbGFiZWxfc2hpcG1lbnQtZG93bmxvYWQtcmVmZXJlbmNlIjoiU2VuZHVuZ3NyZWZlcmVueiIsImhvbWVfbGFiZWxfc2hpcG1lbnQtZG93bmxvYWQtZHV0aWFibGUtc3RhdHVzIjoiWm9sbHBmbGljaHRpZ2VyIFN0YXR1cyIsImhvbWVfbGFiZWxfc2hpcG1lbnQtZG93bmxvYWQtdHlwZSI6IkFydCIsImFsZXJ0LWFjdGlvbl9iYWNrZW5kLWVycm9yX3NoaXBtZW50LWNhbm5vdC1iZS1lZGl0ZWQiOiJTZW5kdW5nIGthbm4gaWNodCBiZWFyYmVpdGV0IHdlcmRlbiIsImFsZXJ0LWFjdGlvbl9iYWNrZW5kLWVycm9yX3VzZXItaXMtbm90LWFjY291bnQtaG9sZGVyIjoiU2llIG3DvHNzZW4gQWNjb3VudGluaGFiZXIgc2VpbiB1bSBFLU1haWxsaXN0ZW4gYWxzIFNlbmR1bmdzb3B0aW9uIG51dHplbiB6dSBrw7ZubmVuLiIsImhvbWVfbGFiZWxfc2hpcG1lbnQtZG93bmxvYWQtZ3N0LWludm9pY2UtZGF0ZSI6IkdTVCBSZWNobnVuZ3NkYXR1bSIsImhvbWVfbGFiZWxfc2hpcG1lbnQtZG93bmxvYWQtZ3N0LW9yaWdpbi1pbnZvaWNlLW51bWJlciI6ImhvbWVfbGFiZWxfc2hpcG1lbnQtZG93bmxvYWQtZ3N0LW9yaWdpbi1pbnZvaWNlLW51bWJlciIsImhvbWVfbGFiZWxfc2hpcG1lbnQtZG93bmxvYWQtcmVjZWl2ZXItYWRkcmVzcy16aXAtb3ItcG9zdGFsLWNvZGUiOiJFbXBmw6RuZ2VyIFBMWiIsImFsZXJ0LWFjdGlvbl9tc2dfaW52YWxpZC1zaGlwbWVudC1yZWZlcmVuY2VzIjoiVW5nw7xsdGlnIFNlbmR1bmdzcmVmZXJlbnoiLCJob21lX2FsZXJ0X2Nzdi13cml0aW5nLWVycm9yIjoiRG93bmxvYWQgZmVobGVyaGFmdCIsImhvbWVfbGFiZWxfc2hpcG1lbnQtZG93bmxvYWQtZXN0aW1hdGVkLWNoYXJnZXMiOiJnZXNjaMOkdHp0ZSBHZWLDvGhyZW46IiwiaG9tZV9sYWJlbF9zaGlwbWVudC1kb3dubG9hZC10cmFuc3BvcnRlci1pZCI6IkRITCBMaWVmZXJ1bmdzIElEIiwiaG9tZV9hbGVydF9zaGlwbWVudHMtbm90LWZvdW5kIjoiS2VpbmUgRXJnZWJuaXNzZSBnZWZ1bmRlbi4iLCJob21lX2xhYmVsX3NoaXBtZW50LWRvd25sb2FkLWdzdC1hcHByb3gtZGlzdGFuY2UtaW4ta20iOiJEaXN0YW5jZSBmcm9tIFBpY2t1cCBBZGRyZXNzIHRvIERITCBmYWNpbGl0eSAoQXBwcm94LiBpbiBrbSkiLCJob21lX2xhYmVsX3NoaXBtZW50LWRvd25sb2FkLWdzdC1oc24tY29kZSI6IkNvbW1vZGl0eSBDb2RlIChIU04pIiwiaG9tZV9sYWJlbF9zaGlwbWVudC1kb3dubG9hZC1nc3QtYWdhaW5zdC1ib25kIjoiR2VnZW4gQW5iaW5kdW5nIG9kZXIgVW50ZXJuZWhtZW4iLCJhbGVydC1hY3Rpb25fbXNnX2NvbnNvbGlkYXRpb24tYWN0aW9uLW1heGltdW0tYW1vdW50LW5vdGlmaWNhdGlvbiI6Ilp1c2FtbWVuZmFzc2VuIGRlciBQYWNrc3TDvGNrZSBuaWNodCBlcmZvbGdyZWljaC4gVmVycmluZ2VybiBTaWUgZGllIEFuemFobCBkZXIgUGFja3N0w7xja2UuIiwiYWxlcnQtYWN0aW9uX2JhY2tlbmQtZXJyb3Jfc2hpcG1lbnQtbm90LXByb2Nlc3NhYmxlLW5vdyI6IlNvcnJ5IFx1MjAxMyB1bnNlciBTeXN0ZW0gaXN0IGRlcnplaXQgbmljaHQgdmVyZsO8Z2Jhci4gQml0dGUgdmVyc3VjaGVuIFNpZSBlcyBzcMOkdGVyIG5vY2ggZWlubWFsIG9kZXIga29udGFrdGllcmVuIFNpZSB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUgKDIwIGN0IGplIEFucnVmIGF1cyBkZW4gZGV1dHNjaGVuIEZlc3RuZXR6ZW4sIG1heC4gNjAgY3QgYXVzIGRlbiBkZXV0c2NoZW4gTW9iaWxmdW5rbmV0emVuKS4iLCJob21lX2xhYmVsX3NoaXBtZW50LWRvd25sb2FkLXNoaXBwaW5nLWRhdGUiOiJWZXJzYW5kZGF0dW0ifSwiU0hJUE1FTlRfUkVUVVJOX0xBQkVMIjp7IlJFVFVSTl9MQUJFTF9QQVJBR1JBUEhfQ0FOQ0VMX1JFVFVSTl9TSElQTUVOVCI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPjxkaXYgY2xhc3M9Im1lc3NhZ2Utd3JhcHBlciI+PHA+PGI+V0lDSFRJRzxcL2I+PFwvcD5cbjx1bD5cbjxsaT5GYWxscyBTaWUgZWluZSBLdXJpZXJhYmhvbHVuZyBmw7xyIGRpZXNlIFNlbmR1bmcgcGxhbmVuIDxiPndpcmQgZGllc2UgZ2Vsw7ZzY2h0PFwvYj48XC9saT5cbjxcL3VsPlxuPHVsPlxuPGxpPkZhbGxzIFNpZSBhbmRlcmUgU2VuZHVuZ2VuIGhhYmVuLCBkaWUgYWJnZWhvbHQgd2VyZGVuIG3DvHNzZW4sIG3DvHNzZW4gU2llIGVpbmUgPGI+QWJob2x1bmcgYnVjaGVuPFwvYj48XC9saT5cbjxcL3VsPlxuPHA+PGJyPlxuU2luZCBTaWUgc2ljaGVyLCBkYXNzIFNpZSBkZW4gVm9yZ2FuZyBhYmJyZWNoZW4gbcO2Y2h0ZW4/PFwvcD5cbjxcL2Rpdj48XC9kaXY+IiwiUkVUVVJOX0xBQkVMX01TR19MQUJFTF9BVkFJTEFCSUxJVFlfUFZfVkFMVUUiOiIxMiBNb25hdGUiLCJSRVRVUk5fTEFCRUxfTVNHX0xBQkVMX0FWQUlMQUJJTElUWV9QVF9WQUxVRSI6IjMgTW9uYXRlIiwiUkVUVVJOX0xBQkVMX01TR19MQUJFTF9BVkFJTEFCSUxJVFlfUFdfVkFMVUUiOiIyNCBNb25hdGUiLCJSRVRVUk5fTEFCRUxfTVNHX0xBQkVMX0FWQUlMQUJJTElUWV9QVV9WQUxVRSI6IjYgTW9uYXRlIn0sInJ1bGVzX3JlZ3VsYXRpb24tZGF0YV9wcml2YWN5X2RhdGFfcHJvdGVjdGlvbl9jb21wbGlhbmNlLWRhdGFfcHJpdmFjeV9kYXRhX3Byb3RlY3Rpb25fY29uc2VudF9saXN0Ijp7InRlc3Rwcml2YWN5X25vdGljZS1jb2RlIjoiIiwiY29uc2VudF90ZXh0MS1jb2RlLnByb21wdCI6IiIsImNvbnNlbnRfdGV4dDItY29kZS5wcm9tcHQiOiJNYXJrZXRpbmcsIGV2ZW50IGludml0YXRpb25zIGFuZCBwcm9kdWN0IGluZm9ybWF0aW9uIHByb3ZpZGVkIGJ5IERITCBLT1JFQSBMVEQuIEluZm9ybWF0aW9uIHdpbGwgYmUgc2VudCB0byB5b3UgdmlhIHRlbGVwaG9uZSwgU01TIGFuZCBlLW1haWxzLCBldGMuIiwiY29uc2VudF90ZXh0My1jb2RlLnByb21wdCI6IiIsImNvbnNlbnRfdGV4dDItY29kZSI6IkkgQ29uc2VudCB0byBVc2Ugb2YgUGVyc29uYWwgSW5mb3JtYXRpb24gZm9yIE1hcmtldGluZyBQdXJwb3NlcyIsInRlc3Rwcm9tbzEtY29kZSI6IiIsImNvbnNlbnRfdGV4dDMtY29kZSI6IiIsImNvbnNlbnRfdGV4dDEtY29kZSI6IkkgdW5kZXJzdGFuZCB0aGUgZXhwbGFuYXRpb24gb2YgY29sbGVjdGluZyBteSBwZXJzb25hbCBpbmZvcm1hdGlvbi4ifSwiU0FWRURfU0VUVElOR1MiOnsiU0hJUE1FTlRfUkVGRVJFTkNFU19DT0xfTkFNRV9SRUZFUkVOQ0UiOiJSZWZlcmVueiIsIk5PVElGSUNBVElPTlNfU0hBUklOR19TVEFOREFSRF9PVVRCT1VORF9URU1QTEFURV9URVhUIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+RGllc2UgRS1NYWlsIHdpcmQgZ2VzZW5kZXQgd2VubiBlaW5lIDxiPlNlbmR1bmcgKEV4cG9ydCk8XC9iPiBlcnN0ZWxsdCB3dXJkZS48XC9kaXY+IiwiQVVUSF9QSUNLVVBfQ09MX05BTUVfQ09VTlRSWSI6IkxhbmQiLCJTSElQTUVOVF9SRUZFUkVOQ0VTX01TR19DT05GSVJNX0RFTEVUSU9OIjoiU2luZCBTaWUgc2ljaGVyLCBkYXNzIFNpZSBkZW4gVm9yZ2FuZyBsw7ZzY2hlbiBtw7ZjaHRlbj8iLCJBVVRIX1BJQ0tVUF9DT0xfTkFNRV9DSVRZIjoiU3RhZHQiLCJQQUNLQUdJTkdfTVNHX0NPTkZJUk1fREVMRVRJT04iOiJTaW5kIFNpZSBzaWNoZXIsIGRhc3MgU2llIGRlbiBWb3JnYW5nIGzDtnNjaGVuIG3DtmNodGVuPyIsIk5PVElGSUNBVElPTlNfU0hBUklOR19TRUxFQ1RfT1BUSU9OX0NVU1RPTV9URU1QTEFURV9UWVBFX1NUQU5EQVJEX09VVEJPVU5EIjoiVmVyc2FuZGJlc3TDpHRpZ3VuZyIsIkFVVEhfUElDS1VQX0NPTF9OQU1FX0RBVEVfQURERUQiOiJEYXR1bSBoaW56dWdlZsO8Z3QiLCJQQUNLQUdJTkdfQ09MX05BTUVfTklDS19OQU1FIjoiQWxpYXMgKEJlc2NocmVpYnVuZykiLCJOT1RJRklDQVRJT05TX1NIQVJJTkdfSEVBREVSX0VSUk9SIjoiRWluIEZlaGxlciBpc3QgYXVmZ2V0cmV0ZW4iLCJQUklOVEVSX1NFTEVDVF9PUFRJT05fTEFTRVJfUFJJTlRFUl9UWVBFIjoiTGFzZXItRHJ1Y2tlciIsIlNISVBNRU5UX1JFRkVSRU5DRVNfTEFCRUxfTk9ORSI6IktlaW5lIiwiUEFDS0FHSU5HX0NPTF9OQU1FX0RJTUVOU0lPTlMiOiJNYcOfZSAoTHhIeEIpIiwiTk9USUZJQ0FUSU9OU19TSEFSSU5HX0VSUk9SX0VNQUlMX1NVQkpFQ1RfRklFTERfSVNfRU1QVFkiOiJlTWFpbC1CZXRyZWZmIGVyZm9yZGVybGljaCIsIlBBQ0tBR0lOR19DT0xfTkFNRV9QSUVDRV9SRUZFUkVOQ0VTIjoiUmVmZXJlbnoiLCJOT1RJRklDQVRJT05TX1NIQVJJTkdfRVJST1JfRU1BSUxfQ09OVEVOVF9GSUVMRF9JU19FTVBUWSI6Ik5hY2hyaWNodCBpc3QgbGVlciIsIk5PVElGSUNBVElPTlNfU0hBUklOR19SRU1PVEVfQk9PS0lOR19URU1QTEFURV9URVhUIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+PGRpdiBjbGFzcz0ibWVzc2FnZS13cmFwcGVyIj48cD5EaWVzZSBFLU1haWwgd2lyZCB2ZXJzZW5kZXQgd2VubiBlaW5lIDxiPkltcG9ydHNlbmR1bmc8XC9iPiBlcnN0ZWxsdCB3dXJkZS4gU2llIHdpcmQgZGVtIFZlcnNlbmRlciB6dWdlc2FuZHQgdW0gZGllIFNlbmR1bmcgenUgdmVydm9sbHN0w6RuZGlnZW4gdW5kIHp1bSBFbXBmw6RuZ2VyLjxcL3A+XG48cD7CoDxcL3A+XG48cD5BbHMgVGVpbCBkaWVzZSBUZW1wbGF0ZSBlbnRzY2hlaWRlbiBTaWUgd2VsY2hlIERldGFpbHMgU2llIGluIGRlciBFLU1haWwgaGFiZW4gd29sbGVuLiBTaWUga8O2bm5lbiBEZXRhaWxzIGludGVncmllcmVuIHdpZSB6LkI6PFwvcD5cbjxwPsKgPFwvcD5cbjx1bD5cbjxsaT5TZW5kdW5nc251bW1lciB1bmQgU2VuZHVuZ3NkZXRhaWxzPFwvbGk+XG48bGk+S29udGFrdC0gdW5kIEFkcmVzc2RldGFpbHM8XC9saT5cbjxsaT5JaHJlIFN0YW5kYXJkIFNlbmR1bmdzLSB1bmQgS3VyaWVyYWJob2xpbnN0cnVrdGlvbmVuPFwvbGk+XG48XC91bD5cbjxcL2Rpdj48XC9kaXY+IiwiU0hJUE1FTlRfUkVGRVJFTkNFU19ERUZBVUxUX1JFRkVSRU5DRV9MQUJFTCI6IlJlZmVyZW56IiwiTk9USUZJQ0FUSU9OU19TSEFSSU5HX1JFVFVSTl9URU1QTEFURV9URVhUIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+PGRpdiBjbGFzcz0ibWVzc2FnZS13cmFwcGVyIj48cD5EaWVzZSBFLU1haWwgd2lyZCBnZXNlbmRldCB3ZW5uIGVpbiA8Yj5SZXRvdXJlbmxhYmVsIDxcL2I+ZXJzdGVsbHQgd3VyZGUuPFwvcD5cbjxwPsKgPFwvcD5cbjx1bD5cbjxsaT5FaW4gVGVtcGxhdGUgaXN0IGlkZWFsLCB3ZW5uIFNpZSBkaWVzZWxiZW4gQW5sZWl0dW5nZW4gZsO8ciBhbGxlIFJldG91cmVuLVNlbmR1bmdlbiB2ZXJ3ZW5kZW4uPFwvbGk+XG48XC91bD5cbjx1bD5cbjxsaT5TaWUga8O2bm5lbiBkaWUgQW53ZWlzdW5nZW4gaW4gZGllc2VtIFRlbXBsYXRlIGF1Y2ggaW4gbWVocmVyZW4gU3ByYWNoZW4genVyIFZlcmbDvGd1bmcgc3RlbGxlbi48XC9saT5cbjxcL3VsPlxuPFwvZGl2PjxcL2Rpdj4iLCJBVVRIX1BJQ0tVUF9DT0xfTkFNRV9TVFJFRVQiOiJTdHJhw59lIiwiTk9USUZJQ0FUSU9OU19TSEFSSU5HX1NFTEVDVF9PUFRJT05fQ1VTVE9NX1RFTVBMQVRFX1RZUEVfUkVUVVJOIjoiUmV0b3VyZW5sYWJlbCIsIkFVVEhfUElDS1VQX01TR19DT05GSVJNX0RFTEVUSU9OIjoiU2luZCBTaWUgc2ljaGVyLCBkYXNzIFNpZSBkZW4gVm9yZ2FuZyBsw7ZzY2hlbiBtw7ZjaHRlbj8iLCJOT1RJRklDQVRJT05TX1NIQVJJTkdfQUxFUlRfU0VORElOR19URVNUX0VNQUlMX0ZBSUxFRCI6IlRlc3QtZU1haWwga29ubnRlIG4gaWNodCB2ZXJzZW5kZXQgd2VyZGVuIiwiUEFDS0FHSU5HX0NPTF9OQU1FX1dFSUdIVCI6Ikdld2ljaHQiLCJBVVRIX1BJQ0tVUF9DT0xfTkFNRV9TVEFURSI6IkJ1bmRlc2xhbmQiLCJQUklOVEVSX1NFTEVDVF9PUFRJT05fVEhFUk1BTF9QUklOVEVSX1RZUEUiOiJUaGVybWFsIERydWNrZXIiLCJOT1RJRklDQVRJT05TX1NIQVJJTkdfU0VMRUNUX09QVElPTl9DVVNUT01fVEVNUExBVEVfVFlQRV9SRU1PVEVfQk9PS0lORyI6IkltcG9ydGJlc3TDpHRpZ3VuZyJ9LCJsb2dpbi1mb3Jnb3QtcmVzZXQtcGFzc3dvcmQiOnsibG9naW5fYmFja2VuZC1lcnJvcl9yZXNldC1wYXNzd29yZC1pbnZhbGlkLWVtYWlsIjoiVW5nw7xsdGlnZSBFLU1haWwgQWRyZXNzZSIsImxvZ2luX2JhY2tlbmQtZXJyb3JfbG9naW4tbXNnLXNlc3Npb24tbnVtYmVyLWV4Y2VlZCI6IlNpZSBoYWJlbiBkYXMgTWF4aW11bSBhbiBlcmxhdWJ0ZW4gU2Vzc2lvbnMgw7xiZXJzY2hyaXR0ZW4uIEJpdHRlIHNjaGxpZcOfZW4gU2llIGFsbGUgZ2XDtmZmbmV0ZW4gU2Vzc2lvbnMgdW5kIG1lbGRlbiBTaWUgc2ljaCBlcm5ldXQgYW4uIiwicmVzZXQtcGFzc3dvcmRfYmFja2VuZC1lcnJvcl9iYWQtY3JlZGVudGlhbHMiOiJVbmfDvGx0aWcgQWt0dWVsbGVzIFBhc3N3b3J0IiwibG9naW5fYmFja2VuZC1lcnJvcl9jYXMtY29tbXVuaWNhdGlvbi1lcnJvciI6IlVuZ8O8bHRpZyIsImxvZ2luX2JhY2tlbmQtZXJyb3JfdXNlci1ub3QtdmFsaWQiOiJVbmfDvGx0aWciLCJsb2dpbl9iYWNrZW5kLWVycm9yX2xpbmstaW52YWxpZCI6IlVuZ8O8bHRpZ2VyIExpbmsiLCJsb2dpbl9iYWNrZW5kLWVycm9yX2xvZ2luLW1zZy1hZG1pbi1sb2NrIjoiTG9naW4gbmljaHQgbcO2Z2xpY2guIEtvbnRha3RpZXJlbiBTaWUgZGVuIERITCBLdW5kZW5zZXJ2aWNlIDA4MjAtNTUwNTA1LiIsImxvZ2luX2JhY2tlbmQtZXJyb3JfbG9naW4tbXNnLXBhc3N3b3JkLWV4cGlyZWQiOiLDhG5kZXJuIFNpZSBkYXMgYWJnZWxhdWZlbmUgUGFzc3dvcnQiLCJsb2dpbl9iYWNrZW5kLWVycm9yX2xvZ2luLW1zZy11c2VyLWhhcy1iZWVuLXNlbGYtbG9ja2VkIjoiTG9naW4gbmljaHQgbcO2Z2xpY2guICBCaXR0ZSDDvGJlcnByw7xmZW4gU2llIElocmUgRS1NYWlsLCB1bSBJaHJlIEFubWVsZHVuZyB6dXLDvGNrenVzZXR6ZW4iLCJsb2dpbl9iYWNrZW5kLWVycm9yX2xvZ2luLW1zZy1zZWxmLWxvY2siOiJMb2dpbiBuaWNodCBtw7ZnbGljaC4gS29udGFrdGllcmVuIFNpZSBkZW4gREhMIEt1bmRlbnNlcnZpY2UgMDgyMC01NTA1MDUuIiwicmVzZXQtcGFzc3dvcmRfYmFja2VuZC1lcnJvcl9wYXNzd29yZHMtbm90LXVuaXF1ZS1pbi1oaXN0b3J5IjoiUGFzc3dvcnQgbXVzcyBhbmRlcnMgYWxzIHZvcmhlcmlnZSBQYXNzd8O2cnRlciBzZWluIiwibG9naW5fYmFja2VuZC1lcnJvcl9sb2dpbi1kaGwtdGVybXMtYW5kLWNvbmRpdGlvbnMtb3ItcHJpdmFjeS1wb2xpY3ktbm90LWFjY2VwdGVkIjoiU2llIG3DvHNzZW4gZGllIEdlc2Now6RmdHNiZWRpbmd1bmdlbiBha3plcHRpZXJlbiB1bSBzaWNoIGVpbnp1bG9nZ2VuIiwibG9naW5fYmFja2VuZC1lcnJvcl9sb2dpbi1tc2ctcGVuZGluZy1hY3RpdmF0aW9uIjoiU2llIG3DvHNzZW4gSWhyZSBSZWdpc3RyaWVydW5nIGFrdGl2aWVyZW4iLCJsb2dpbl9iYWNrZW5kLWVycm9yX3VzZXItaWQtc2hvdWxkLW5vdC1iZS1udWxsIjoiRXJmb3JkZXJsaWNoIiwibG9naW5fYmFja2VuZC1lcnJvcl9sb2dpbi1tc2ctd3JvbmctdXNlci1vci1wYXNzd29yZCI6IlVuZ8O8bHRpZ2UgRS1NYWlsIEFkcmVzc2Ugb2RlciBQYXNzd29ydCIsImxvZ2luX2JhY2tlbmQtZXJyb3JfbG9naW4tbXNnLWFjY291bnQtZGVsZXRlZCI6IlVuZ8O8bHRpZ2VyIEFjY291bnQifSwiY3IwMDI3Ijp7ImNyLW5hbWUiOiJNaW5pbXVtIERpbWVuc2lvbnMgcGVyIFNoaXBtZW50OiBBcHByb3ZhbCBSZXF1aXJlZCJ9LCJzaGlwbWVudC1waWNrdXAiOnsic2NoZWR1bGUtcGlja3VwX2JhY2tlbmQtZXJyb3JfcGlja3VwLWNhbm5vdC1iZS1zY2hlZHVsZWQtc2VydmljZS1mYWlsdXJlIjoiU29ycnkgXHUyMDEzIHVuc2VyIFN5c3RlbSBpc3QgZGVyemVpdCBuaWNodCB2ZXJmw7xnYmFyLiBCaXR0ZSB2ZXJzdWNoZW4gU2llIGVzIHNww6R0ZXIgbm9jaCBlaW5tYWwgb2RlciBrb250YWt0aWVyZW4gU2llIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNSAoMjAgY3QgamUgQW5ydWYgYXVzIGRlbiBkZXV0c2NoZW4gRmVzdG5ldHplbiwgbWF4LiA2MCBjdCBhdXMgZGVuIGRldXRzY2hlbiBNb2JpbGZ1bmtuZXR6ZW4pLiIsInNjaGVkdWxlLXBpY2t1cF9iYWNrZW5kLWVycm9yX3BpY2t1cC1jYW5ub3QtYmUtc2NoZWR1bGVkLWludmFsaWQtc2VydmljZS1yZXNwb25zZSI6IlNvcnJ5IFx1MjAxMyB1bnNlciBTeXN0ZW0gaXN0IGRlcnplaXQgbmljaHQgdmVyZsO8Z2Jhci4gQml0dGUgdmVyc3VjaGVuIFNpZSBlcyBzcMOkdGVyIG5vY2ggZWlubWFsIG9kZXIga29udGFrdGllcmVuIFNpZSB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUgKDIwIGN0IGplIEFucnVmIGF1cyBkZW4gZGV1dHNjaGVuIEZlc3RuZXR6ZW4sIG1heC4gNjAgY3QgYXVzIGRlbiBkZXV0c2NoZW4gTW9iaWxmdW5rbmV0emVuKS4iLCJzY2hlZHVsZS1waWNrdXBfYmFja2VuZC1lcnJvcl9pbnZhbGlkLXdheWJpbGwtbnVtYmVyIjoidW5nw7xsdGlnZSBTZW5kdW5nc251bW1lciIsInNjaGVkdWxlLXBpY2t1cF9iYWNrZW5kLWVycm9yX3dheWJpbGwtaXMtaW52YWxpZC1mb3ItdXNlci1jb3VudHJ5IjoiVGhlIGVudGVyZWQgd2F5YmlsbCBpcyBpbnZhbGlkIGZvciB7dXNlckNvdW50cnlOYW1lfSwgcGxlYXNlIHNjaGVkdWxlIGEgcGlja3VwIGZyb20ge3NoaXBGcm9tQ291bnRyeU5hbWV9IHBpY2t1cCBwYWdlIiwic2NoZWR1bGUtcGlja3VwX2JhY2tlbmQtZXJyb3JfcGlja3VwLXdlaWdodC1leGNlZWRzLW1heCI6IsOcYmVyc2NocmVpdGV0IGRhcyB6dWzDpHNzaWdlIE1heGltdW0iLCJzY2hlZHVsZS1waWNrdXBfYmFja2VuZC1lcnJvcl9pbnZhbGlkLXdheWJpbGwtbnVtYmVyLXBpY2t1cC1hbHJlYWR5LWV4aXN0cyI6InVuZ8O8bHRpZ2UgU2VuZHVuZ3NudW1tZXIiLCJzY2hlZHVsZS1waWNrdXBfYmFja2VuZC1lcnJvcl9waWNrdXAtcGFja2FnaW5nLXF1YW50aXR5LWV4Y2VlZHMtbWF4Ijoiw5xiZXJzY2hyZWl0ZXQgZGFzIHp1bMOkc3NpZ2UgTWF4aW11bSB3YXJlbnNlbmR1bmdlbi4gUmVkdXppZXJlbiBTaWUgZGllIEFuemFobCBkZXIgU2VuZHVuZ2VuIG9kZXIga29udGFrdGllcmVuIFNpZSBkZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4iLCJzY2hlZHVsZS1waWNrdXBfYmFja2VuZC1lcnJvcl9waWNrdXAtd2VpZ2h0LWxlc3Nlci1zaGlwbWVudC13ZWlnaHQiOiJBYmhvbGdld2ljaHQga2FubiBuaWNodCBnZXJpbmdlciBzZWluIGFscyBTZW5kdW5nc2dld2ljaHQiLCJzY2hlZHVsZS1waWNrdXBfYmFja2VuZC1lcnJvcl9pbnZhbGlkLXBpY2t1cC13aW5kb3ctcGFyYW1zIjoiV2lyIGJpdHRlbiB1bSBFbnRzY2h1bGRpZ3VuZyAtIElocmUgYXVzZ2V3w6RobHRlIEFiaG9semVpdCBoYXQgYmVyZWl0cyBnZXN0YXJ0ZXQuIEJpdHRlIHfDpGhsZW4gU2llIGVpbiBuZXVlcyBBYmhvbHplaXRmZW5zdGVyIG1pdCBtaW5kZXN0ZW5zIDkwIE1pbnV0ZW4gYWIgZGVyIGFrdHVlbGxlbiBVaHJ6ZWl0IGF1cy7CoCIsInNjaGVkdWxlLXBpY2t1cF9iYWNrZW5kLWVycm9yX3JlcXVlc3RlZC1hdXRob3JpemVkLXBpY2t1cC1sb2NhdGlvbi1ub3QtZXhpc3QiOiJVbmfDvGx0aWdlIEFiaG9sYWRyZXNzZSIsInNjaGVkdWxlLXBpY2t1cF9iYWNrZW5kLWVycm9yX2FkZGluZy1kdXBsaWNhdGUtbG9jYXRpb24iOiJBZHJlc3NlIGV4aXN0aWVydCBiZXJlaXRzIiwic2NoZWR1bGUtcGlja3VwX2JhY2tlbmQtZXJyb3Jfd2F5YmlsbC1oYXMtYmVpbmctdXNlZC1mb3ItcGlja3VwIjoiRXMgd3VyZGUgYmVyZWl0cyBlaW5lbiBBYmhvbHVuZyBmw7xyIGRpZXNlIFNlbmR1bmcgdGVybWluaWVydCIsInNjaGVkdWxlLXBpY2t1cF9iYWNrZW5kLWVycm9yX21hbmRhdG9yeS1waWNrdXAtZG9lcy1ub3QtZXhpc3QiOiIiLCJzY2hlZHVsZS1waWNrdXBfYmFja2VuZC1lcnJvcl9hY2NvdW50LW5vdC1leGlzdCI6IlVuZ8O8bHRpZ2VyIEFjY291bnQiLCJzY2hlZHVsZS1waWNrdXBfYmFja2VuZC1lcnJvcl9hdXRob3JpemVkLXBpY2t1cC1sb2NhdGlvbi1pcy1vbmx5LWFsbG93ZWQiOiJVbmfDvGx0aWdlIEFiaG9sYWRyZXNzZSIsInNjaGVkdWxlLXBpY2t1cF9iYWNrZW5kLWVycm9yX2N1c3RvbS1wYWNrYWdlLXR5cGUtbm90LWFsbG93ZWQtZm9yLWVycm9yIjoiRsO8ciBJaHJlIFZlcnBhY2t1bmdzdm9yZ2FiZW4ga2FubiBrZWluZSBLdXJpZXJhYmhvbHVuZyBnZWJ1Y2h0IHdlcmRlbi4gVW0gZWluZSBBYmhvbHVuZyB6dSBidWNoZW4sIGtvbnRha3RpZXJlbiBTaWUgdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiIsInNjaGVkdWxlLXBpY2t1cF9iYWNrZW5kLWVycm9yX3dheWJpbGwtYmVsb25ncy10by1pbXBvcnQtc2hpcG1lbnQiOiJLdXJpZXJhYmhvbHVuZyBrYW5uIG5pY2h0IGbDvHIgSW1wb3J0c2VuZHVuZ2VuIGdlYnVjaHQgd2VyZGVuLiIsInNjaGVkdWxlLXBpY2t1cF9iYWNrZW5kLWVycm9yX3BpY2t1cC1jYW5jZWxsYXRpb24tbm90LWFsbG93ZWQiOiJEaWUgQWJob2x1bmcga2FubiB6dXIgWmVpdCBuaWNodCBvbmxpbmUgc3Rvcm5pZXJ0IHdlcmRlbi4gRsO8ciB3ZWl0ZXJlIEluZm9ybWF0aW9uZW4ga29udGFrdGllcmVuIFNpZSB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUiLCJzY2hlZHVsZS1waWNrdXBfYmFja2VuZC1lcnJvcl93YXliaWxsLXJlY29yZC1ub3QtZm91bmQiOiJTZW5kdW5nc251bW1lciBuaWNodCBnZWZ1bmRlbiIsInNjaGVkdWxlLXBpY2t1cF9iYWNrZW5kLWVycm9yX2ludmFsaWQtcGlja3VwLWxvY2F0aW9uLW90aGVyIjoiVW5nw7xsdGlnZSBBYmhvbGFkcmVzc2UiLCJzY2hlZHVsZS1waWNrdXBfYmFja2VuZC1lcnJvcl9pbnZhbGlkLXBpY2t1cC1kYXRlIjoiRWluZSBBYmhvbHVuZyBrYW5uIGbDvHIgZGVuIHZvbiBJaG5lbiBhdXNnZXfDpGhsdGVuIFRhZyBuaWNodCBnZWJ1Y2h0IHdlcmRlbi4gV8OkaGxlbiBTaWUgZWluIGFuZGVyZXMgRGF0dW0uIn0sImNyMDAyOCI6eyJjci1uYW1lIjoiTWF4aW11bSBDb3N0IHBlciBTaGlwbWVudDogRW5hYmxlZCJ9LCJjcjAxNDkiOnsiY3ItZXJyb3JzLXJlcXVpcmVkIjoiIiwiY3ItbmFtZSI6IkRlZmF1bHQgbnVtYmVyIG9mIGNvcGllcyByZXF1aXJlZCAtIFNoaXBtZW50IFJlY2VpcHQiLCJjci1lcnJvcnMtcmFuZ2UiOiJWYWx1ZSBpcyBvdXQgb2YgdGhlIHJhbmdlIn0sImNyLXNoaXBwaW5nLWxpbWl0cyI6eyJtYXhpbXVtLXdlaWdodC1vZi1zaGlwbWVudHNfc2VsZWN0LW9wdGlvbl9jcjAxMTQtbW9udGgiOiJNb25hdCIsImdyb3VwLW1heGltdW0td2VpZ2h0LW9mLXNoaXBtZW50c19zZWxlY3Qtb3B0aW9uX2NyMDE5NS15ZWFyIjoiSmFociIsImdyb3VwLW1heGltdW0td2VpZ2h0LW9mLXNoaXBtZW50c19sYWJlbF9jcjAxOTEiOiJEaWUgZ2FuemUgR3J1cHBlIGRhcmYgdmVyc2VuZGVuIChrdW11bGllcnQpIiwibWF4aW11bS13ZWlnaHQtcGVyLXNoaXBtZW50X2xhYmVsX2NyMDAwNyI6IiIsImdyb3VwLW1heGltdW0tbnVtYmVyLW9mLXNoaXBtZW50c19lcnJvcl9jcjAxODItcmVxdWlyZWQiOiJFcmZvcmRlcmxpY2giLCJtYXhpbXVtLXdlaWdodC1wZXItc2hpcG1lbnRfc2VsZWN0LW9wdGlvbl9jcjAwMDctbGIiOiJsYiIsIm1heGltdW0td2VpZ2h0LXBlci1zaGlwbWVudF9sYWJlbF9jcjAwMDgiOiJTaWUgbcO8c3NlbiBlaW5lIEJlc3TDpHRpZ3VuZyBmw7xyIFNlbmR1bmdlbiBlcmhhbHRlbiwgZGllIGRhcyBNYXhpbXVtIMO8YmVyc3RlaWdlbiIsIm1heGltdW0td2VpZ2h0LXBlci1zaGlwbWVudF9sYWJlbF9jcjAwMDUiOiJKZWRlIFBlcnNvbiBkYXJmIHZlcnNlbmRlbiIsIm1heGltdW0td2VpZ2h0LW9mLXNoaXBtZW50c19zZWxlY3Qtb3B0aW9uX2NyMDExMi1sYiI6ImxiIiwibWF4aW11bS13ZWlnaHQtb2Ytc2hpcG1lbnRzX2xhYmVsX2NyMDExMCI6IkplZGUgUGVyc29uIHVuZC9vZGVyIGVpbmUgZ2FuemUgR3J1cHBlIChrdW11bGllcnQpIGRhcmYgdmVyc2VuZGVuIiwiZ3JvdXAtbWF4aW11bS13ZWlnaHQtb2Ytc2hpcG1lbnRzX2xhYmVsX2NyMDE5MyI6IiIsImdyb3VwLW1heGltdW0tbnVtYmVyLW9mLXNoaXBtZW50c19zdWItaGVhZGVyIjoiPGgzPkFuemFobCB2b24gU2VuZHVuZ2VuPFwvaDM+XG4iLCJtYXhpbXVtLXdlaWdodC1wZXItc2hpcG1lbnRfbGFiZWxfY3IwMDA2IjoiTWF4aW1hbCIsImdyb3VwLW1heGltdW0td2VpZ2h0LW9mLXNoaXBtZW50c19sYWJlbF9jcjAxOTIiOiJNYXhpbWFsIiwibWF4aW11bS13ZWlnaHQtb2Ytc2hpcG1lbnRzX2xhYmVsX2NyMDExMSI6Ik1heGltYWwiLCJncm91cC1tYXhpbXVtLXdlaWdodC1vZi1zaGlwbWVudHNfbGFiZWxfY3IwMTk1IjoiIiwiZ3JvdXAtbWF4aW11bS13ZWlnaHQtb2Ytc2hpcG1lbnRzX2Vycm9yX2NyMDE5NS1yZXF1aXJlZCI6IkVyZm9yZGVybGljaCIsImdyb3VwLW1heGltdW0td2VpZ2h0LW9mLXNoaXBtZW50c19zZWxlY3Qtb3B0aW9uX2NyMDE5My1sYiI6ImxiIiwiZ3JvdXAtbWF4aW11bS13ZWlnaHQtb2Ytc2hpcG1lbnRzX2xhYmVsX2NyMDE5NCI6IkFsbGUiLCJtYXhpbXVtLXdlaWdodC1vZi1zaGlwbWVudHNfZXJyb3JfY3IwMTExLXJhbmdlIjoiVEJEIEtleTogbWF4aW11bS13ZWlnaHQtb2Ytc2hpcG1lbnRzX2Vycm9yX2NyMDExMS1yYW5nZSIsImdyb3VwLW1heGltdW0tbnVtYmVyLW9mLXNoaXBtZW50c19lcnJvcl9jcjAxNzktcmVxdWlyZWQiOiJFcmZvcmRlcmxpY2giLCJncm91cC1tYXhpbXVtLXdlaWdodC1vZi1zaGlwbWVudHNfbGFiZWxfY3IwMTk3IjoiU2llIG3DvHNzZW4gZWluZSBCZXN0w6R0aWd1bmcgZsO8ciBTZW5kdW5nZW4gZXJoYWx0ZW4sIGRpZSBkYXMgTWF4aW11bSDDvGJlcnN0ZWlnZW4iLCJncm91cC1tYXhpbXVtLXdlaWdodC1vZi1zaGlwbWVudHNfbGFiZWxfY3IwMTk2IjoiU3RhcnRkYXR1bSIsIm1heGltdW0tY29zdC1vZi1zaGlwbWVudHNfc2VsZWN0LW9wdGlvbl9jcjAxMDctbW9udGgiOiJNb25hdCIsImdyb3VwLW1heGltdW0tbnVtYmVyLW9mLXNoaXBtZW50c19zZWxlY3Qtb3B0aW9uX2NyMDE4MS15ZWFyIjoiSmFociIsImdyb3VwLW1heGltdW0td2VpZ2h0LW9mLXNoaXBtZW50c19zZWxlY3Qtb3B0aW9uX2NyMDE5NS1kYXkiOiJUYWciLCJncm91cC1tYXhpbXVtLWNvc3Qtb2Ytc2hpcG1lbnRzX2Vycm9yX2NyMDE4NS1yYW5nZSI6IlRCRCBLZXk6IGdyb3VwLW1heGltdW0tY29zdC1vZi1zaGlwbWVudHNfZXJyb3JfY3IwMTg1LXJhbmdlIiwiZ3JvdXAtbWF4aW11bS13ZWlnaHQtb2Ytc2hpcG1lbnRzX3NlbGVjdC1vcHRpb25fY3IwMTkzLWtnIjoia2ciLCJtYXhpbXVtLXdlaWdodC1vZi1zaGlwbWVudHNfbGFiZWxfY3IwMTEyIjoiIiwibWF4aW11bS13ZWlnaHQtb2Ytc2hpcG1lbnRzX2xhYmVsX2NyMDExMyI6IkFsbGUiLCJtYXhpbXVtLXdlaWdodC1vZi1zaGlwbWVudHNfbGFiZWxfY3IwMTE0IjoiIiwibWF4aW11bS13ZWlnaHQtb2Ytc2hpcG1lbnRzX2xhYmVsX2NyMDExNSI6IlN0YXJ0ZGF0dW0iLCJtYXhpbXVtLXdlaWdodC1vZi1zaGlwbWVudHNfbGFiZWxfY3IwMTE2IjoiU2llIG3DvHNzZW4gZWluZSBCZXN0w6R0aWd1bmcgZsO8ciBTZW5kdW5nZW4gZXJoYWx0ZW4sIGRpZSBkYXMgTWF4aW11bSDDvGJlcnN0ZWlnZW4iLCJtYXhpbXVtLW51bWJlci1vZi1zaGlwbWVudHNfZXJyb3JfY3IwMDk5LXJlcXVpcmVkIjoiRXJmb3JkZXJsaWNoIiwibWluaW11bS1kaW1lbnNpb25zLXBlci1zaGlwbWVudF9sYWJlbF9jcjAwMjQiOiJCcmVpdGUiLCJtaW5pbXVtLWRpbWVuc2lvbnMtcGVyLXNoaXBtZW50X2xhYmVsX2NyMDAyNSI6IkjDtmhlIiwibWluaW11bS1kaW1lbnNpb25zLXBlci1zaGlwbWVudF9sYWJlbF9jcjAwMjYiOiIiLCJtYXhpbXVtLWRpbWVuc2lvbnMtcGVyLXNoaXBtZW50X2xhYmVsX2NyMDAyMSI6IlNpZSBtw7xzc2VuIGVpbmUgQmVzdMOkdGlndW5nIGbDvHIgU2VuZHVuZ2VuIGVyaGFsdGVuLCBkaWUgZGFzIE1heGltdW0gw7xiZXJzdGVpZ2VuIiwibWF4aW11bS1kaW1lbnNpb25zLXBlci1zaGlwbWVudF9sYWJlbF9jcjAwMjAiOiIiLCJtaW5pbXVtLWRpbWVuc2lvbnMtcGVyLXNoaXBtZW50X2xhYmVsX2NyMDAyNyI6Ik11c3MgZWluZSBCZXN0w6R0aWd1bmcgZXJoYWx0ZW4gZsO8ciBTZW5kdW5nZW4gd2VuaWdlciBhbHMgZGFzIE1pbmltdW0iLCJncm91cC1tYXhpbXVtLXdlaWdodC1vZi1zaGlwbWVudHNfc3ViLWhlYWRlciI6IjxoMz5HZXNhbXRnZXdpY2h0IGFsbGVyIFNlbmR1bmdlbjxcL2gzPlxuIiwibWF4aW11bS1udW1iZXItb2Ytc2hpcG1lbnRzX3NlbGVjdC1vcHRpb25fY3IwMTAwLWRheSI6IlRhZyIsImdyb3VwLW1heGltdW0tbnVtYmVyLW9mLXNoaXBtZW50c19lcnJvcl9jcjAxODEtcmVxdWlyZWQiOiJFcmZvcmRlcmxpY2giLCJtYXhpbXVtLWNvc3Qtb2Ytc2hpcG1lbnRzX2Vycm9yX2NyMDEwNC1yZXF1aXJlZCI6IkVyZm9yZGVybGljaCIsIm1heGltdW0tbnVtYmVyLW9mLXNoaXBtZW50c19sYWJlbF9jcjAwOTciOiJKZWRlIFBlcnNvbiBkYXJmIHZlcnNlbmRlbiIsIm1heGltdW0td2VpZ2h0LXBlci1zaGlwbWVudF9zZWxlY3Qtb3B0aW9uX2NyMDAwNy1rZyI6ImtnIiwibWF4aW11bS1udW1iZXItb2Ytc2hpcG1lbnRzX2xhYmVsX2NyMDA5OSI6IkFsbGUiLCJtYXhpbXVtLW51bWJlci1vZi1zaGlwbWVudHNfbGFiZWxfY3IwMDk4IjoiTWF4aW1hbCIsIm1heGltdW0tZGltZW5zaW9ucy1wZXItc2hpcG1lbnRfbGFiZWxfY3IwMDE5IjoiSMO2aGUiLCJncm91cC1tYXhpbXVtLWNvc3Qtb2Ytc2hpcG1lbnRzX3NlbGVjdC1vcHRpb25fY3IwMTg4LWRheSI6IlRhZyIsIm1pbmltdW0tZGltZW5zaW9ucy1wZXItc2hpcG1lbnRfbGFiZWxfY3IwMDIyIjoiSmVkZSBQZXJzb24gZGFyZiB2ZXJzZW5kZW4iLCJtaW5pbXVtLWRpbWVuc2lvbnMtcGVyLXNoaXBtZW50X2xhYmVsX2NyMDAyMyI6IkzDpG5nZSIsIm1heGltdW0tZGltZW5zaW9ucy1wZXItc2hpcG1lbnRfbGFiZWxfY3IwMDE2IjoiSmVkZSBQZXJzb24gZGFyZiB2ZXJzZW5kZW4iLCJtYXhpbXVtLWRpbWVuc2lvbnMtcGVyLXNoaXBtZW50X2xhYmVsX2NyMDAxOCI6IkJyZWl0ZSIsImdyb3VwLW1heGltdW0td2VpZ2h0LW9mLXNoaXBtZW50c19lcnJvcl9jcjAxOTYtcmVxdWlyZWQiOiJFcmZvcmRlcmxpY2giLCJtYXhpbXVtLWRpbWVuc2lvbnMtcGVyLXNoaXBtZW50X2xhYmVsX2NyMDAxNyI6IkzDpG5nZSIsIm1pbmltdW0td2VpZ2h0LXBlci1zaGlwbWVudF9zZWxlY3Qtb3B0aW9uX2NyMDAxMS1sYiI6ImxiIiwibWF4aW11bS1udW1iZXItb2Ytc2hpcG1lbnRzX2Vycm9yX2NyMDA5OC1yYW5nZSI6IlRCRCBLZXk6IG1heGltdW0tbnVtYmVyLW9mLXNoaXBtZW50c19lcnJvcl9jcjAwOTgtcmFuZ2UiLCJncm91cC1tYXhpbXVtLW51bWJlci1vZi1zaGlwbWVudHNfZXJyb3JfY3IwMTc5LXJhbmdlIjoiVEJEIEtleTogZ3JvdXAtbWF4aW11bS1udW1iZXItb2Ytc2hpcG1lbnRzX2Vycm9yX2NyMDE3OS1yYW5nZSIsIm1heGltdW0td2VpZ2h0LW9mLXNoaXBtZW50c19zZWxlY3Qtb3B0aW9uX2NyMDExNC13ZWVrIjoiV29jaGUiLCJtYXhpbXVtLXdlaWdodC1wZXItc2hpcG1lbnRfc3ViLWhlYWRlciI6IjxoMz5HZXdpY2h0IHBybyBTZW5kdW5nPFwvaDM+XG4iLCJncm91cC1tYXhpbXVtLWNvc3Qtb2Ytc2hpcG1lbnRzX3N1Yi1oZWFkZXIiOiI8aDM+S29zdGVuIGFsbGVyIFNlbmR1bmdlbjxcL2gzPlxuIiwibWF4aW11bS1jb3N0LXBlci1zaGlwbWVudF9sYWJlbF9jcjAwMzAiOiIiLCJtYXhpbXVtLWNvc3QtcGVyLXNoaXBtZW50X2xhYmVsX2NyMDAzMSI6IlNpZSBtw7xzc2VuIGVpbmUgQmVzdMOkdGlndW5nIGbDvHIgU2VuZHVuZ2VuIGVyaGFsdGVuLCBkaWUgZGFzIE1heGltdW0gw7xiZXJzdGVpZ2VuIiwibWF4aW11bS1jb3N0LW9mLXNoaXBtZW50c19lcnJvcl9jcjAxMDUtcmVxdWlyZWQiOiJFcmZvcmRlcmxpY2giLCJtYXhpbXVtLWRpbWVuc2lvbnMtcGVyLXNoaXBtZW50X2Vycm9yX2NyMDAxNy1yZXF1aXJlZCI6IkVyZm9yZGVybGljaCIsImdyb3VwLW1heGltdW0td2VpZ2h0LW9mLXNoaXBtZW50c19lcnJvcl9jcjAxOTItcmFuZ2UiOiJUQkQgS2V5OiBncm91cC1tYXhpbXVtLXdlaWdodC1vZi1zaGlwbWVudHNfZXJyb3JfY3IwMTkyLXJhbmdlIiwiZ3JvdXAtbWF4aW11bS13ZWlnaHQtb2Ytc2hpcG1lbnRzX3NlbGVjdC1vcHRpb25fY3IwMTk1LW1vbnRoIjoiTW9uYXQiLCJtaW5pbXVtLXdlaWdodC1wZXItc2hpcG1lbnRfc3ViLWhlYWRlciI6IjxoMz5NaW5pbXVtIEdld2ljaHQgcHJvIFNlbmR1bmc8XC9oMz5cbiIsIm1heGltdW0td2VpZ2h0LXBlci1zaGlwbWVudF9lcnJvcl9jcjAwMDYtcmFuZ2UiOiJUQkQgS2V5OiBtYXhpbXVtLXdlaWdodC1wZXItc2hpcG1lbnRfZXJyb3JfY3IwMDA2LXJhbmdlIiwibWF4aW11bS1kaW1lbnNpb25zLXBlci1zaGlwbWVudF9zdWItaGVhZGVyIjoiPGgzPk1hw59lIHBybyBTZW5kdW5nPFwvaDM+XG4iLCJtYXhpbXVtLWNvc3QtcGVyLXNoaXBtZW50X2xhYmVsX2NyMDAyOCI6IkplZGUgUGVyc29uIGRhcmYgdmVyc2VuZGVuIiwibWluaW11bS13ZWlnaHQtcGVyLXNoaXBtZW50X3NlbGVjdC1vcHRpb25fY3IwMDExLWtnIjoia2ciLCJtYXhpbXVtLWNvc3QtcGVyLXNoaXBtZW50X2xhYmVsX2NyMDAyOSI6Ik1heGltYWwiLCJtYXhpbXVtLW51bWJlci1vZi1zaGlwbWVudHNfZXJyb3JfY3IwMTAxLXJlcXVpcmVkIjoiRXJmb3JkZXJsaWNoIiwiZ3JvdXAtbmFtZV9oZWFkZXIiOiJWZXJzYW5kZ3JlbnplbiIsIm1heGltdW0tY29zdC1vZi1zaGlwbWVudHNfZXJyb3JfY3IwMTA3LXJlcXVpcmVkIjoiRXJmb3JkZXJsaWNoIiwibWF4aW11bS13ZWlnaHQtb2Ytc2hpcG1lbnRzX2Vycm9yX2NyMDExMS1yZXF1aXJlZCI6IkVyZm9yZGVybGljaCIsIm1heGltdW0td2VpZ2h0LW9mLXNoaXBtZW50c19zZWxlY3Qtb3B0aW9uX2NyMDExMi1rZyI6ImtnIiwiZ3JvdXAtbWF4aW11bS13ZWlnaHQtb2Ytc2hpcG1lbnRzX2Vycm9yX2NyMDE5NC1yZXF1aXJlZCI6IkVyZm9yZGVybGljaCIsIm1pbmltdW0td2VpZ2h0LXBlci1zaGlwbWVudF9sYWJlbF9jcjAwMTIiOiJNdXNzIGVpbmUgQmVzdMOkdGlndW5nIGVyaGFsdGVuIGbDvHIgU2VuZHVuZ2VuIHdlbmlnZXIgYWxzIGRhcyBNaW5pbXVtIiwibWluaW11bS13ZWlnaHQtcGVyLXNoaXBtZW50X2xhYmVsX2NyMDAxMSI6IiIsIm1pbmltdW0td2VpZ2h0LXBlci1zaGlwbWVudF9sYWJlbF9jcjAwMTAiOiJOaWNodCB3ZW5pZ2VyIGFscyIsImdyb3VwLW1heGltdW0tbnVtYmVyLW9mLXNoaXBtZW50c19sYWJlbF9jcjAxODMiOiJTaWUgbcO8c3NlbiBlaW5lIEJlc3TDpHRpZ3VuZyBmw7xyIFNlbmR1bmdlbiBlcmhhbHRlbiwgZGllIGRhcyBNYXhpbXVtIMO8YmVyc3RlaWdlbiIsIm1heGltdW0tbnVtYmVyLW9mLXNoaXBtZW50c19sYWJlbF9jcjAxMDEiOiJTdGFydGRhdHVtIiwiZ3JvdXAtbWF4aW11bS1jb3N0LW9mLXNoaXBtZW50c19lcnJvcl9jcjAxODgtcmVxdWlyZWQiOiJFcmZvcmRlcmxpY2giLCJncm91cC1tYXhpbXVtLW51bWJlci1vZi1zaGlwbWVudHNfbGFiZWxfY3IwMTgyIjoiU3RhcnRkYXR1bSIsIm1heGltdW0tbnVtYmVyLW9mLXNoaXBtZW50c19sYWJlbF9jcjAxMDAiOiIiLCJtYXhpbXVtLW51bWJlci1vZi1zaGlwbWVudHNfbGFiZWxfY3IwMTAyIjoiU2llIG3DvHNzZW4gZWluZSBCZXN0w6R0aWd1bmcgZsO8ciBTZW5kdW5nZW4gZXJoYWx0ZW4sIGRpZSBkYXMgTWF4aW11bSDDvGJlcnN0ZWlnZW4iLCJtYXhpbXVtLXBhcnRzLXBpZWNlcy1wYWNrYWdlcy1wZXItc2hpcG1lbnRfc3ViLWhlYWRlciI6IjxoMz5QYWNrc3TDvGNrZSBwcm8gU2VuZHVuZzxcL2gzPlxuIiwibWF4aW11bS1kaW1lbnNpb25zLXBlci1zaGlwbWVudF9lcnJvcl9jcjAwMjAtcmVxdWlyZWQiOiJFcmZvcmRlcmxpY2giLCJtaW5pbXVtLXdlaWdodC1wZXItc2hpcG1lbnRfbGFiZWxfY3IwMDA5IjoiSmVkZSBQZXJzb24gZGFyZiB2ZXJzZW5kZW4iLCJtaW5pbXVtLWRpbWVuc2lvbnMtcGVyLXNoaXBtZW50X2Vycm9yX2NyMDAyMy1yZXF1aXJlZCI6IkVyZm9yZGVybGljaCIsIm1pbmltdW0tZGltZW5zaW9ucy1wZXItc2hpcG1lbnRfc3ViLWhlYWRlciI6IjxoMz5NaW5pbXVtIE1hw59lIHBybyBTZW5kdW5nPFwvaDM+XG4iLCJtYXhpbXVtLXdlaWdodC1wZXItc2hpcG1lbnRfZXJyb3JfY3IwMDA2LXJlcXVpcmVkIjoiRXJmb3JkZXJsaWNoIiwiZ3JvdXAtbWF4aW11bS13ZWlnaHQtb2Ytc2hpcG1lbnRzX3NlbGVjdC1vcHRpb25fY3IwMTk1LXdlZWsiOiJXb2NoZSIsImdyb3VwLW1heGltdW0tbnVtYmVyLW9mLXNoaXBtZW50c19sYWJlbF9jcjAxODEiOiIiLCJncm91cC1tYXhpbXVtLW51bWJlci1vZi1zaGlwbWVudHNfbGFiZWxfY3IwMTgwIjoiQWxsZSIsIm1heGltdW0tZGltZW5zaW9ucy1wZXItc2hpcG1lbnRfZXJyb3JfY3IwMDE5LXJlcXVpcmVkIjoiRXJmb3JkZXJsaWNoIiwibWF4aW11bS13ZWlnaHQtcGVyLXNoaXBtZW50X2Vycm9yX2NyMDAwNy1yZXF1aXJlZCI6IkVyZm9yZGVybGljaCIsIm1heGltdW0tY29zdC1vZi1zaGlwbWVudHNfc2VsZWN0LW9wdGlvbl9jcjAxMDcteWVhciI6IkphaHIiLCJtYXhpbXVtLW51bWJlci1vZi1zaGlwbWVudHNfc2VsZWN0LW9wdGlvbl9jcjAxMDAteWVhciI6IkphaHIiLCJtYXhpbXVtLXdlaWdodC1vZi1zaGlwbWVudHNfZXJyb3JfY3IwMTEzLXJlcXVpcmVkIjoiRXJmb3JkZXJsaWNoIiwiZ3JvdXAtbWF4aW11bS1udW1iZXItb2Ytc2hpcG1lbnRzX2xhYmVsX2NyMDE3OSI6Ik1heGltYWwiLCJtYXhpbXVtLXdlaWdodC1vZi1zaGlwbWVudHNfc2VsZWN0LW9wdGlvbl9jcjAxMTQteWVhciI6IkphaHIiLCJncm91cC1tYXhpbXVtLW51bWJlci1vZi1zaGlwbWVudHNfc2VsZWN0LW9wdGlvbl9jcjAxODEtZGF5IjoiVGFnIiwibWF4aW11bS13ZWlnaHQtb2Ytc2hpcG1lbnRzX3N1Yi1oZWFkZXIiOiI8aDM+R2VzYW10Z2V3aWNodCBhbGxlciBTZW5kdW5nZW48XC9oMz5cbiIsIm1heGltdW0tbnVtYmVyLW9mLXNoaXBtZW50c19zdWItaGVhZGVyIjoiPGgzPkFuemFobCB2b24gU2VuZHVuZ2VuPFwvaDM+XG4iLCJtYXhpbXVtLWNvc3Qtb2Ytc2hpcG1lbnRzX2Vycm9yX2NyMDEwNi1yZXF1aXJlZCI6IkVyZm9yZGVybGljaCIsImdyb3VwLW1heGltdW0tY29zdC1vZi1zaGlwbWVudHNfZXJyb3JfY3IwMTg1LXJlcXVpcmVkIjoiRXJmb3JkZXJsaWNoIiwiZ3JvdXAtbWF4aW11bS1udW1iZXItb2Ytc2hpcG1lbnRzX2xhYmVsX2NyMDE3OCI6IkRpZSBnYW56ZSBHcnVwcGUgZGFyZiB2ZXJzZW5kZW4gKGt1bXVsaWVydCkiLCJncm91cC1tYXhpbXVtLXdlaWdodC1vZi1zaGlwbWVudHNfZXJyb3JfY3IwMTkyLXJlcXVpcmVkIjoiRXJmb3JkZXJsaWNoIiwibWF4aW11bS1udW1iZXItb2Ytc2hpcG1lbnRzX2Vycm9yX2NyMDA5OS1yYW5nZSI6IlRCRCBLZXk6IG1heGltdW0tbnVtYmVyLW9mLXNoaXBtZW50c19lcnJvcl9jcjAwOTktcmFuZ2UiLCJtYXhpbXVtLWNvc3QtcGVyLXNoaXBtZW50X2Vycm9yX2NyMDAzMC1yZXF1aXJlZCI6IkVyZm9yZGVybGljaCIsImdyb3VwLW1heGltdW0tY29zdC1vZi1zaGlwbWVudHNfZXJyb3JfY3IwMTg3LXJhbmdlIjoiVEJEIEtleTogZ3JvdXAtbWF4aW11bS1jb3N0LW9mLXNoaXBtZW50c19lcnJvcl9jcjAxODctcmFuZ2UiLCJtYXhpbXVtLWNvc3Qtb2Ytc2hpcG1lbnRzX3NlbGVjdC1vcHRpb25fY3IwMTA3LWRheSI6IlRhZyIsImdyb3VwLW1heGltdW0tbnVtYmVyLW9mLXNoaXBtZW50c19zZWxlY3Qtb3B0aW9uX2NyMDE4MS1tb250aCI6Ik1vbmF0IiwibWluaW11bS13ZWlnaHQtcGVyLXNoaXBtZW50X2Vycm9yX2NyMDAxMC1yZXF1aXJlZCI6IkVyZm9yZGVybGljaCIsIm1pbmltdW0tZGltZW5zaW9ucy1wZXItc2hpcG1lbnRfZXJyb3JfY3IwMDI2LXJlcXVpcmVkIjoiRXJmb3JkZXJsaWNoIiwibWF4aW11bS1jb3N0LW9mLXNoaXBtZW50c19sYWJlbF9jcjAxMDciOiIiLCJtYXhpbXVtLWNvc3Qtb2Ytc2hpcG1lbnRzX2xhYmVsX2NyMDEwNiI6IkFsbGUiLCJtYXhpbXVtLWNvc3Qtb2Ytc2hpcG1lbnRzX2xhYmVsX2NyMDEwNSI6IiIsIm1heGltdW0tY29zdC1vZi1zaGlwbWVudHNfbGFiZWxfY3IwMTA0IjoiTWF4aW1hbCIsIm1pbmltdW0tZGltZW5zaW9ucy1wZXItc2hpcG1lbnRfc2VsZWN0LW9wdGlvbl9jcjAwMjYtaW4iOiJpbiIsImdyb3VwLW1heGltdW0tY29zdC1vZi1zaGlwbWVudHNfc2VsZWN0LW9wdGlvbl9jcjAxODgteWVhciI6IkphaHIiLCJtYXhpbXVtLWNvc3Qtb2Ytc2hpcG1lbnRzX2Vycm9yX2NyMDEwNi1yYW5nZSI6IlRCRCBLZXk6IG1heGltdW0tY29zdC1vZi1zaGlwbWVudHNfZXJyb3JfY3IwMTA2LXJhbmdlIiwibWF4aW11bS1jb3N0LW9mLXNoaXBtZW50c19sYWJlbF9jcjAxMDkiOiJTaWUgbcO8c3NlbiBlaW5lIEJlc3TDpHRpZ3VuZyBmw7xyIFNlbmR1bmdlbiBlcmhhbHRlbiwgZGllIGRhcyBNYXhpbXVtIMO8YmVyc3RlaWdlbiIsIm1heGltdW0tbnVtYmVyLW9mLXNoaXBtZW50c19lcnJvcl9jcjAxMDAtcmVxdWlyZWQiOiJFcmZvcmRlcmxpY2giLCJtYXhpbXVtLWNvc3Qtb2Ytc2hpcG1lbnRzX2xhYmVsX2NyMDEwOCI6IlN0YXJ0ZGF0dW0iLCJtaW5pbXVtLWRpbWVuc2lvbnMtcGVyLXNoaXBtZW50X2Vycm9yX2NyMDAyNS1yZXF1aXJlZCI6IkVyZm9yZGVybGljaCIsIm1heGltdW0tbnVtYmVyLW9mLXNoaXBtZW50c19lcnJvcl9jcjAwOTgtcmVxdWlyZWQiOiJFcmZvcmRlcmxpY2giLCJncm91cC1tYXhpbXVtLW51bWJlci1vZi1zaGlwbWVudHNfZXJyb3JfY3IwMTgwLXJhbmdlIjoiVEJEIEtleTogZ3JvdXAtbWF4aW11bS1udW1iZXItb2Ytc2hpcG1lbnRzX2Vycm9yX2NyMDE4MC1yYW5nZSIsImdyb3VwLW1heGltdW0tY29zdC1vZi1zaGlwbWVudHNfZXJyb3JfY3IwMTg2LXJlcXVpcmVkIjoiRXJmb3JkZXJsaWNoIiwibWF4aW11bS1kaW1lbnNpb25zLXBlci1zaGlwbWVudF9zZWxlY3Qtb3B0aW9uX2NyMDAyMC1jbSI6ImNtIiwibWF4aW11bS13ZWlnaHQtb2Ytc2hpcG1lbnRzX2Vycm9yX2NyMDExNC1yZXF1aXJlZCI6IkVyZm9yZGVybGljaCIsIm1heGltdW0tY29zdC1vZi1zaGlwbWVudHNfbGFiZWxfY3IwMTAzIjoiSmVkZSBQZXJzb24gZGFyZiB2ZXJzZW5kZW4iLCJtYXhpbXVtLXdlaWdodC1vZi1zaGlwbWVudHNfZXJyb3JfY3IwMTEzLXJhbmdlIjoiVEJEIEtleTogbWF4aW11bS13ZWlnaHQtb2Ytc2hpcG1lbnRzX2Vycm9yX2NyMDExMy1yYW5nZSIsIm1heGltdW0tY29zdC1wZXItc2hpcG1lbnRfZXJyb3JfY3IwMDI5LXJlcXVpcmVkIjoiRXJmb3JkZXJsaWNoIiwiZ3JvdXAtbWF4aW11bS1jb3N0LW9mLXNoaXBtZW50c19sYWJlbF9jcjAxODYiOiIiLCJncm91cC1tYXhpbXVtLWNvc3Qtb2Ytc2hpcG1lbnRzX2xhYmVsX2NyMDE4NyI6IkFsbGUiLCJtaW5pbXVtLXdlaWdodC1wZXItc2hpcG1lbnRfZXJyb3JfY3IwMDExLXJlcXVpcmVkIjoiRXJmb3JkZXJsaWNoIiwibWF4aW11bS1wYXJ0cy1waWVjZXMtcGFja2FnZXMtcGVyLXNoaXBtZW50X2xhYmVsX2NyMDAxNCI6Ik1heGltYWwiLCJncm91cC1tYXhpbXVtLWNvc3Qtb2Ytc2hpcG1lbnRzX2xhYmVsX2NyMDE4OCI6IiIsIm1heGltdW0tbnVtYmVyLW9mLXNoaXBtZW50c19zZWxlY3Qtb3B0aW9uX2NyMDEwMC13ZWVrIjoiV29jaGUiLCJtYXhpbXVtLXBhcnRzLXBpZWNlcy1wYWNrYWdlcy1wZXItc2hpcG1lbnRfbGFiZWxfY3IwMDE1IjoiU2llIG3DvHNzZW4gZWluZSBCZXN0w6R0aWd1bmcgZsO8ciBTZW5kdW5nZW4gZXJoYWx0ZW4sIGRpZSBkYXMgTWF4aW11bSDDvGJlcnN0ZWlnZW4iLCJncm91cC1tYXhpbXVtLWNvc3Qtb2Ytc2hpcG1lbnRzX2xhYmVsX2NyMDE4OSI6IlN0YXJ0ZGF0dW0iLCJtYXhpbXVtLWNvc3Qtb2Ytc2hpcG1lbnRzX2Vycm9yX2NyMDEwOC1yZXF1aXJlZCI6IkVyZm9yZGVybGljaCIsIm1heGltdW0td2VpZ2h0LW9mLXNoaXBtZW50c19lcnJvcl9jcjAxMTItcmVxdWlyZWQiOiJFcmZvcmRlcmxpY2giLCJtYXhpbXVtLXBhcnRzLXBpZWNlcy1wYWNrYWdlcy1wZXItc2hpcG1lbnRfZXJyb3JfY3IwMDE0LXJlcXVpcmVkIjoiRXJmb3JkZXJsaWNoIiwiZ3JvdXAtbWF4aW11bS1udW1iZXItb2Ytc2hpcG1lbnRzX2Vycm9yX2NyMDE4MC1yZXF1aXJlZCI6IkVyZm9yZGVybGljaCIsImdyb3VwLW1heGltdW0tY29zdC1vZi1zaGlwbWVudHNfbGFiZWxfY3IwMTg0IjoiSmVkZSBQZXJzb24gdW5kL29kZXIgZWluZSBnYW56ZSBHcnVwcGUgKGt1bXVsaWVydCkgZGFyZiB2ZXJzZW5kZW4iLCJtYXhpbXVtLXdlaWdodC1vZi1zaGlwbWVudHNfZXJyb3JfY3IwMTE1LXJlcXVpcmVkIjoiRXJmb3JkZXJsaWNoIiwiZ3JvdXAtbWF4aW11bS1jb3N0LW9mLXNoaXBtZW50c19sYWJlbF9jcjAxODUiOiJNYXhpbWFsIiwibWF4aW11bS1jb3N0LW9mLXNoaXBtZW50c19zZWxlY3Qtb3B0aW9uX2NyMDEwNy13ZWVrIjoiV29jaGUiLCJncm91cC1tYXhpbXVtLWNvc3Qtb2Ytc2hpcG1lbnRzX2Vycm9yX2NyMDE4Ny1yZXF1aXJlZCI6IkVyZm9yZGVybGljaCIsImdyb3VwLW1heGltdW0tbnVtYmVyLW9mLXNoaXBtZW50c19zZWxlY3Qtb3B0aW9uX2NyMDE4MS13ZWVrIjoiV29jaGUiLCJtaW5pbXVtLWRpbWVuc2lvbnMtcGVyLXNoaXBtZW50X2Vycm9yX2NyMDAyNC1yZXF1aXJlZCI6IkVyZm9yZGVybGljaCIsIm1heGltdW0tY29zdC1wZXItc2hpcG1lbnRfc3ViLWhlYWRlciI6IjxoMz5Lb3N0ZW4gcHJvIFNlbmR1bmc8XC9oMz5cbiIsImdyb3VwLW1heGltdW0tY29zdC1vZi1zaGlwbWVudHNfc2VsZWN0LW9wdGlvbl9jcjAxODgtbW9udGgiOiJNb25hdCIsIm1heGltdW0tZGltZW5zaW9ucy1wZXItc2hpcG1lbnRfZXJyb3JfY3IwMDE4LXJlcXVpcmVkIjoiRXJmb3JkZXJsaWNoIiwiZ3JvdXAtbWF4aW11bS1jb3N0LW9mLXNoaXBtZW50c19lcnJvcl9jcjAxODktcmVxdWlyZWQiOiJFcmZvcmRlcmxpY2giLCJtYXhpbXVtLWNvc3Qtb2Ytc2hpcG1lbnRzX2Vycm9yX2NyMDEwNC1yYW5nZSI6IlRCRCBLZXk6IG1heGltdW0tY29zdC1vZi1zaGlwbWVudHNfZXJyb3JfY3IwMTA0LXJhbmdlIiwibWF4aW11bS1udW1iZXItb2Ytc2hpcG1lbnRzX3NlbGVjdC1vcHRpb25fY3IwMTAwLW1vbnRoIjoiTW9uYXQiLCJtYXhpbXVtLXdlaWdodC1vZi1zaGlwbWVudHNfc2VsZWN0LW9wdGlvbl9jcjAxMTQtZGF5IjoiVGFnIiwibWluaW11bS1kaW1lbnNpb25zLXBlci1zaGlwbWVudF9zZWxlY3Qtb3B0aW9uX2NyMDAyNi1jbSI6ImNtIiwiZ3JvdXAtbWF4aW11bS1jb3N0LW9mLXNoaXBtZW50c19sYWJlbF9jcjAxOTAiOiJTaWUgbcO8c3NlbiBlaW5lIEJlc3TDpHRpZ3VuZyBmw7xyIFNlbmR1bmdlbiBlcmhhbHRlbiwgZGllIGRhcyBNYXhpbXVtIMO8YmVyc3RlaWdlbiIsImdyb3VwLW1heGltdW0td2VpZ2h0LW9mLXNoaXBtZW50c19lcnJvcl9jcjAxOTMtcmVxdWlyZWQiOiJFcmZvcmRlcmxpY2giLCJtYXhpbXVtLWNvc3Qtb2Ytc2hpcG1lbnRzX3N1Yi1oZWFkZXIiOiI8aDM+S29zdGVuIGFsbGVyIFNlbmR1bmdlbjxcL2gzPlxuIiwibWF4aW11bS1wYXJ0cy1waWVjZXMtcGFja2FnZXMtcGVyLXNoaXBtZW50X2xhYmVsX2NyMDAxMyI6IkplZGUgUGVyc29uIGRhcmYgdmVyc2VuZGVuIiwibWF4aW11bS1kaW1lbnNpb25zLXBlci1zaGlwbWVudF9zZWxlY3Qtb3B0aW9uX2NyMDAyMC1pbiI6ImluIiwiZ3JvdXAtbWF4aW11bS1jb3N0LW9mLXNoaXBtZW50c19zZWxlY3Qtb3B0aW9uX2NyMDE4OC13ZWVrIjoiV29jaGUiLCJncm91cC1tYXhpbXVtLXdlaWdodC1vZi1zaGlwbWVudHNfZXJyb3JfY3IwMTk0LXJhbmdlIjoiVEJEIEtleTogZ3JvdXAtbWF4aW11bS13ZWlnaHQtb2Ytc2hpcG1lbnRzX2Vycm9yX2NyMDE5NC1yYW5nZSJ9LCJjcjAwMjkiOnsiY3ItZXJyb3JzLXJlcXVpcmVkIjoiVGhpcyBmaWVsZCBpcyByZXF1aXJlZCIsImNyLW5hbWUiOiJNYXhpbXVtIENvc3QgcGVyIFNoaXBtZW50OiBMaW1pdCBWYWx1ZSJ9LCJjcjAwMjMiOnsiY3ItZXJyb3JzLXJlcXVpcmVkIjoiVGhpcyBmaWVsZCBpcyByZXF1aXJlZCIsImNyLW5hbWUiOiJNaW5pbXVtIERpbWVuc2lvbnMgcGVyIFNoaXBtZW50OiBMZW5ndGgifSwiY3IwMDI0Ijp7ImNyLWVycm9ycy1yZXF1aXJlZCI6IlRoaXMgZmllbGQgaXMgcmVxdWlyZWQiLCJjci1uYW1lIjoiTWluaW11bSBEaW1lbnNpb25zIHBlciBTaGlwbWVudDogV2lkdGgifSwiY3IwMDI1Ijp7ImNyLWVycm9ycy1yZXF1aXJlZCI6IlRoaXMgZmllbGQgaXMgcmVxdWlyZWQiLCJjci1uYW1lIjoiTWluaW11bSBEaW1lbnNpb25zIHBlciBTaGlwbWVudDogSGVpZ2h0In0sImFkdF9jb3Jwb3JhdGVfZ2VuZXJhbF9idXNpbmVzc19kYXRhIjp7ImNyLXN1Ymdyb3VwLXJlc3RyaWN0X3NoaXB0b19hZGRyZXNzIjoiRWluc2NocsOkbmtlbiBBZHJlc3NlIChFbXBmw6RuZ2VyKSIsImNyLXN1Ymdyb3VwLW1heGltdW1fd2VpZ2h0X3Blcl9zaGlwbWVudCI6Ik1heGltYWwgR2V3aWNodCAocHJvIFNlbmR1bmcpIiwiY3Itc3ViZ3JvdXAtcmVzdHJpY3RfdGF4ZXMiOiJFaW5zY2hyw6Rua2VuIFN0ZXVlciIsImNyLWdyb3VwLXBpY2t1cCI6IkFiaG9sdW5nZW4iLCJjci1zdWJncm91cC1ncm91cF9tYXhpbXVtX3dlaWdodF9vZl9zaGlwbWVudHMiOiJHcnVwcGUgTWF4aW1hbCBHZXdpY2h0IChHZXNhbXQgU2VuZHVuZ2VuKSIsImNyLXN1Ymdyb3VwLWR1dGllc19hbmRfdGF4ZXNfcGFpZCI6IkR1dGllcyBhbmQgVGF4ZXMgUGFpZCIsImNyLXN1Ymdyb3VwLXNoaXBtZW50X3R5cGVfZG9jdW1lbnQiOiJTZW5kdW5nc2FydCAoRG9rdW1lbnQpIiwiY3Itc3ViZ3JvdXAtaW5zdXJhbmNlX3NlcnZpY2UiOiJTZW5kdW5nc3ZlcnNpY2hlcnVuZyIsImNyLXN1Ymdyb3VwLW1heGltdW1fY29zdF9wZXJfc2hpcG1lbnQiOiJNYXhpbWFsIEtvc3RlbiAocHJvIFNlbmR1bmcpIiwiY3Itc3ViZ3JvdXAtb25saW5lX3BheW1lbnRfb3B0aW9ucyI6Ik9ubGluZWJlemFobG3DtmdsaWNoa2VpdGVuIiwiY3Itc3ViZ3JvdXAtcHJpdmF0ZV9hZGRyZXNzX2Jvb2siOiJQZXJzw7ZubGljaGVzIEFkcmVzc2J1Y2giLCJjci1zdWJncm91cC1jb21wYW55X2FkZHJlc3NfYm9vayI6IiIsImNyLXN1Ymdyb3VwLWFjY291bnRzIjoiQWNjb3VudHMiLCJjci1zdWJncm91cC1taW5pbXVtX2RpbWVuc2lvbnNfcGVyX3NoaXBtZW50IjoiTWluaW11bSBNYcOfZSAocHJvIFNlbmR1bmcpIiwiY3Itc3ViZ3JvdXAtZGlzcGxheV9wcmljaW5nX2luX3NoaXBtZW50IjoiRGlzcGxheSBzaGlwcGluZyByYXRlcyBhbmQgY2hhcmdlcyIsImNyLWdyb3VwLXNoaXBtZW50X2RlZmF1bHRzIjoiRHJ1Y2tlcnZvcmVpbnN0ZWxsdW5nZW4iLCJjci1ncm91cC1zaGlwcGluZ19yZXN0cmljdGlvbnMiOiJTZW5kdW5nc2Jlc2NocsOkbmt1bmdlbiIsImNyLXN1Ymdyb3VwLXNoaXBtZW50X2RlZmF1bHRzIjoiRHJ1Y2tlcnZvcmVpbnN0ZWxsdW5nZW4iLCJjci1zdWJncm91cC1zaGlwbWVudF90eXBlX25vbl9kb2N1bWVudCI6IlNlbmR1bmdzYXJ0IChTZW5kdW5nKSIsImNyLXN1Ymdyb3VwLWdyb3VwX21heGltdW1fY29zdF9vZl9zaGlwbWVudHMiOiJHcnVwcGUgTWF4aW1hbCBLb3N0ZW4gKEdlc2FtdCBTZW5kdW5nZW4pIiwiY3ItZ3JvdXAtb3B0aW9uYWxfc2VydmljZXMiOiJPcHRpb25hbGUgU2VydmljZXMiLCJjci1zdWJncm91cC1yZXN0cmljdF90cmFuc3BvcnRhdGlvbl9hY2NvdW50cyI6IkVpbnNjaHLDpG5rZW4gVHJhbnNwb3J0IEFjY291bnRzIiwiY3Itc3ViZ3JvdXAtc2NoZWR1bGVfYV9waWNrdXAiOiJBYmhvbHVuZyBidWNoZW4iLCJjci1zdWJncm91cC1kaWdpdGFsX2N1c3RvbXNfaW52b2ljZSI6IkRpZ2l0YWxlIFpvbGxyZWNobnVuZ2VuIiwiY3Itc3ViZ3JvdXAtcmVzdHJpY3Rfc2hpcHBpbmdfYWNjb3VudHMiOiJFaW5zY2hyw6Rua2VuIFZlcnNlbmRlbiBBY2NvdW50cyIsImNyLWdyb3VwLXNoaXBwaW5nX2xpbWl0cyI6IlZlcnNhbmRncmVuemVuIiwiY3Itc3ViZ3JvdXAtcmVzdHJpY3Rfc2hpcGZyb21fYWRkcmVzcyI6IkVpbnNjaHLDpG5rZW4gQWRyZXNzZSAoQWJzZW5kZXIpIiwiY3Itc3ViZ3JvdXAtbWF4aW11bV9udW1iZXJfb2Zfc2hpcG1lbnRzIjoiTWF4aW1hbCBOdW1tZXIgdm9uIFNlbmR1bmdlbiIsImNyLWdyb3VwLWFkZHJlc3NfYm9vayI6IkFkcmVzc2LDvGNoZXIiLCJjci1ncm91cC1zaGlwcGluZ19kZWxpdmVyeV9vcHRpb25zIjoiWnVzdGVsbG9wdGlvbmVuIiwiY3ItZ3JvdXAtYWNjb3VudHNfYW5kX3BheW1lbnRfb3B0aW9ucyI6IktvbnRlbiB1bmQgWmFobHVuZyIsImNyLXN1Ymdyb3VwLW1heGltdW1fcGFydHNfcGllY2VzX3BhY2thZ2VzX3Blcl9zaGlwbWVudCI6Ik1heGltYWwgUGFja3N0w7xja2UvV2FyZW5zZW5kdW5nZW4gKHBybyBTZW5kdW5nKSIsImNyLXN1Ymdyb3VwLW1heGltdW1fd2VpZ2h0X29mX3NoaXBtZW50cyI6Ik1heGltYWwgR2V3aWNodCAoR2VzYW10IFNlbmR1bmdlbikiLCJjci1ncm91cC1yZWZlcmVuY2Vfb3B0aW9ucyI6IlNlbmR1bmdzcmVmZXJlbnoiLCJjci1ncm91cC1nZW5lcmFsX3NldHRpbmdzIjoiU2VuZHVuZ2VuIGJlYXJiZWl0ZW4iLCJjci1zdWJncm91cC1tYW5hZ2Vfc2hpcG1lbnRzIjoiVmVyd2FsdGVuIiwiY3Itc3ViZ3JvdXAtcmVzdHJpY3RfZHV0aWVzIjoiRWluc2NocsOkbmtlbiBab2xsYWJnYWJlbiIsImNyLXN1Ymdyb3VwLWdyb3VwX2FkZHJlc3NfYm9vayI6IiIsImNyLXN1Ymdyb3VwLW1heGltdW1fZGltZW5zaW9uc19wZXJfc2hpcG1lbnQiOiJNYXhpbWFsIE1hw59lIChwcm8gU2VuZHVuZykiLCJjci1ncm91cC1kaWdpdGFsX2N1c3RvbXNfaW52b2ljZSI6IkRpZ2l0YWxlIFpvbGxyZWNobnVuZ2VuIiwiY3Itc3ViZ3JvdXAtYXNzaWduX3NoaXBtZW50cyI6IlNlbmR1bmdzYmVhcmJlaXR1bmcgw7xiZXJnZWJlbiIsImNyLXN1Ymdyb3VwLW1heGltdW1fY29zdF9vZl9zaGlwbWVudHMiOiJNYXhpbWFsIEtvc3RlbiAoR2VzYW10IFNlbmR1bmdlbikiLCJjci1zdWJncm91cC1yZXBvcnRzIjoiUmVwb3J0cyIsImNyLWdyb3VwLWFjY291bnRfcmVzdHJpY3Rpb25zIjoiQWNjb3VudCBCZXNjaHLDpG5rdW5nZW4iLCJjci1ncm91cC1yZXBvcnRzIjoiUmVwb3J0cyIsImNyLXN1Ymdyb3VwLW1pbmltdW1fd2VpZ2h0X3Blcl9zaGlwbWVudCI6Ik1pbmltdW0gR2V3aWNodCAocHJvIFNlbmR1bmcpIiwiY3ItZ3JvdXAtcHJpY2luZyI6IlByZWlzZSB1bmQgR2Viw7xocmVuIiwiY3Itc3ViZ3JvdXAtcmVmZXJlbmNlX3ZhbGlkYXRpb25fb3B0aW9ucyI6IlNlbmR1bmdzcmVmZXJlbnoiLCJjci1zdWJncm91cC1kaXNwbGF5X3ByaWNpbmdfaW5fcmF0ZV90aW1lX3F1b3RlX3Rvb2wiOiJEaXNwbGF5IHNoaXBwaW5nIHJhdGVzIG9uIHF1b3RlcyIsImNyLXN1Ymdyb3VwLWdyb3VwX21heGltdW1fbnVtYmVyX29mX3NoaXBtZW50cyI6IkdydXBwZSBNYXhpbWFsIE51bW1lciB2b24gU2VuZHVuZ2VuIn0sImNyMDAyNiI6eyJjci1lcnJvcnMtcmVxdWlyZWQiOiJWYWx1ZSByZXF1aXJlZCBmb3IgdGhpcyBmaWVsZCIsImNyLW5hbWUiOiJNaW5pbXVtIERpbWVuc2lvbnMgcGVyIFNoaXBtZW50OiBVb00ifSwiY3IwMTk1Ijp7ImNyLWVycm9ycy1yZXF1aXJlZCI6IlRoaXMgZmllbGQgaXMgcmVxdWlyZWQiLCJjci1uYW1lIjoiR3JvdXAgTWF4aW11bSBXZWlnaHQgb2YgU2hpcG1lbnRzOiBVbml0IG9mIFBlcmlvZCJ9LCJjcjAwNzQiOnsiY3ItbmFtZSI6IkFsbG93IEFjY2VzcyB0byBQcml2YXRlIEFkZHJlc3MgQm9vayJ9LCJjb3VudHJ5Ijp7InByIjoiUHVlcnRvIFJpY28iLCJwdCI6IlBvcnR1Z2FsIiwicHciOiJQYWxhdSIsInB5IjoiUGFyYWd1YXkiLCJxYSI6IlFhdGFyIiwiYWQiOiJBbmRvcnJhIiwiYWUiOiJVbml0ZWQgQXJhYiBFbWlyYXRlcyIsImFmIjoiQWZnaGFuaXN0YW4iLCJhZyI6IkFudGlndWEgYW5kIEJhcmJ1ZGEiLCJhaSI6IkFuZ3VpbGxhIiwiYWwiOiJBbGJhbmlhIiwiYW0iOiJBcm1lbmlhIiwiYW8iOiJBbmdvbGEiLCJhciI6IkFyZ2VudGluYSIsImFzIjoiQW1lcmljYW4gU2Ftb2EiLCJhdCI6IkF1c3RyaWEiLCJyZSI6IlJldW5pb24sIElzbGFuZCBvZiIsImF1IjoiQXVzdHJhbGlhIiwiYXciOiJBcnViYSIsImF6IjoiQXplcmJhaWphbiIsInJvIjoiUm9tYW5pYSIsImJhIjoiQm9zbmlhIGFuZCBIZXJ6ZWdvdmluYSIsImJiIjoiQmFyYmFkb3MiLCJycyI6IlNlcmJpYSIsImJkIjoiQmFuZ2xhZGVzaCIsImJlIjoiQmVsZ2l1bSIsInJ1IjoiUnVzc2lhIiwiYmYiOiJCdXJraW5hIEZhc28iLCJiZyI6IkJ1bGdhcmlhIiwicnciOiJSd2FuZGEiLCJiaCI6IkJhaHJhaW4iLCJiaSI6IkJ1cnVuZGkiLCJiaiI6IkJlbmluIiwiYm0iOiJCZXJtdWRhIiwiYm4iOiJCcnVuZWkiLCJibyI6IkJvbGl2aWEiLCJzYSI6IlNhdWRpIEFyYWJpYSIsImJyIjoiQnJhemlsIiwic2MiOiJTZXljaGVsbGVzIiwiYnMiOiJCYWhhbWFzIiwic2QiOiJTdWRhbiIsImJ0IjoiQmh1dGFuIiwic2UiOiJTd2VkZW4iLCJzZyI6IlNpbmdhcG9yZSIsImJ3IjoiQm90c3dhbmEiLCJzaSI6IlNsb3ZlbmlhIiwiYnkiOiJCZWxhcnVzIiwiYnoiOiJCZWxpemUiLCJzayI6IlNsb3Zha2lhIiwic2wiOiJTaWVycmEgTGVvbmUiLCJzbiI6IlNlbmVnYWwiLCJjYSI6IkNhbmFkYSIsInNyIjoiU3VyaW5hbWUiLCJzcyI6IlNvdXRoIFN1ZGFuIiwiY2QiOiJDb25nbywgRGVtb2NyYXRpYyBSZXB1YmxpYyBvZiIsImNmIjoiQ2VudHJhbCBBZnJpY2FuIFJlcHVibGljIiwic3YiOiJFbCBTYWx2YWRvciIsImNnIjoiQ29uZ28iLCJjaCI6IlN3aXR6ZXJsYW5kIiwiY2kiOiJJdm9yeSBDb2FzdCIsInN5IjoiU3lyaWEiLCJzeiI6IlN3YXppbGFuZCIsImNsIjoiQ2hpbGUiLCJjbSI6IkNhbWVyb29uIiwiY24iOiJDaGluYSIsImNvIjoiQ29sb21iaWEiLCJjciI6IkNvc3RhIFJpY2EiLCJ0YyI6IlR1cmtzIGFuZCBDYWljb3MgSXNsYW5kcyIsInRkIjoiQ2hhZCIsImN1IjoiQ3ViYSIsInRnIjoiVG9nbyIsInRoIjoiVGhhaWxhbmQiLCJjeSI6IkN5cHJ1cyIsImN6IjoiQ3plY2ggUmVwdWJsaWMiLCJ0bCI6IkVhc3QgVGltb3IiLCJ0biI6IlR1bmlzaWEiLCJ0ciI6IlR1cmtleSIsInR0IjoiVHJpbmlkYWQgJiBUb2JhZ28iLCJkZSI6Ikdlcm1hbnkiLCJ0dyI6IlRhaXdhbiIsImRqIjoiRGppYm91dGkiLCJ0eiI6IlRhbnphbmlhIiwiZGsiOiJEZW5tYXJrIiwiZG0iOiJEb21pbmljYSIsImRvIjoiRG9taW5pY2FuIFJlcHVibGljIiwidWEiOiJVa3JhaW5lIiwidWciOiJVZ2FuZGEiLCJkeiI6IkFsZ2VyaWEiLCJlYyI6IkVjdWFkb3IiLCJ1cyI6IlVuaXRlZCBTdGF0ZXMgb2YgQW1lcmljYSIsImVlIjoiRXN0b25pYSIsImVnIjoiRWd5cHQiLCJ1eSI6IlVydWd1YXkiLCJ2YyI6IlN0LiBWaW5jZW50IiwiZXMiOiJTcGFpbiIsImV0IjoiRXRoaW9waWEiLCJ2ZSI6IlZlbmV6dWVsYSIsInZnIjoiVmlyZ2luIElzbGFuZHMgKEJyaXRpc2gpIiwidmkiOiJWaXJnaW4gSXNsYW5kcyAoVVMpIiwidm4iOiJWaWV0bmFtIiwiZmkiOiJGaW5sYW5kIiwiZmoiOiJGaWppIiwiZm0iOiJNaWNyb25lc2lhIiwiZnIiOiJGcmFuY2UiLCJnYSI6IkdhYm9uIiwiZ2IiOiJVbml0ZWQgS2luZ2RvbSIsImdkIjoiR3JlbmFkYSIsImdmIjoiR3V5YW5hIChGcmVuY2gpIiwiZ2ciOiJHdWVybnNleSIsImdoIjoiR2hhbmEiLCJnaSI6IkdpYnJhbHRhciIsImdtIjoiR2FtYmlhIiwiZ24iOiJHdWluZWEgUmVwdWJsaWMiLCJncCI6Ikd1YWRlbG91cGUiLCJ4YiI6IkJvbmFpcmUiLCJncSI6IkVxdWl0b3JpYWwgR3VpbmVhIiwiZ3IiOiJHcmVlY2UiLCJ4YyI6IkN1cmFjYW8iLCJ4ZSI6IlN0LiBFdXN0YXRpdXMiLCJndCI6Ikd1YXRlbWFsYSIsImd1IjoiR3VhbSIsImd3IjoiR3VpbmVhLUJpc3NhdSIsImd5IjoiR3V5YW5hIChCcml0aXNoKSIsInhtIjoiU3QuIE1hYXJ0ZW4iLCJ4biI6Ik5ldmlzIiwieHMiOiJTb21hbGlsYW5kIiwieHkiOiJTdC4gQmFydGhlbGVteSIsImhrIjoiSG9uZyBLb25nIiwiaG4iOiJIb25kdXJhcyIsImhyIjoiQ3JvYXRpYSIsInllIjoiWWVtZW4iLCJodCI6IkhhaXRpIiwiaHUiOiJIdW5nYXJ5IiwiaWMiOiJDYW5hcnkgSXNsYW5kcyIsImlkIjoiSW5kb25lc2lhIiwieXQiOiJNYXlvdHRlIiwiaWUiOiJJcmVsYW5kIiwiaWwiOiJJc3JhZWwiLCJpbiI6IkluZGlhIiwiemEiOiJTb3V0aCBBZnJpY2EiLCJpcSI6IklyYXEiLCJpciI6IklyYW4iLCJpcyI6IkljZWxhbmQiLCJpdCI6Ikl0YWx5Iiwiem0iOiJaYW1iaWEiLCJqZSI6IkplcnNleSIsInp3IjoiWmltYmFid2UiLCJqbSI6IkphbWFpY2EiLCJqbyI6IkpvcmRhbiIsImpwIjoiSmFwYW4iLCJrZSI6IktlbnlhIiwia2ciOiJLeXJneXpzdGFuIiwia2giOiJDYW1ib2RpYSIsImtuIjoiU3QuIEtpdHRzIGFuZCBOZXZpcyIsImtyIjoiU291dGggS29yZWEiLCJrdiI6Iktvc292byIsImt3IjoiS3V3YWl0Iiwia3kiOiJDYXltYW4gSXNsYW5kcyIsImt6IjoiS2F6YWtoc3RhbiIsImxhIjoiTGFvcyIsImxiIjoiTGViYW5vbiIsImxjIjoiU3QuIEx1Y2lhIiwibGsiOiJTcmkgTGFua2EiLCJsciI6IkxpYmVyaWEiLCJscyI6Ikxlc290aG8iLCJsdCI6IkxpdGh1YW5pYSIsImx1IjoiTHV4ZW1ib3VyZyIsImx2IjoiTGF0dmlhIiwibHkiOiJMaWJ5YSIsIm1hIjoiTW9yb2NjbyIsIm1kIjoiTW9sZG92YSwgUmVwdWJsaWMgb2YiLCJtZSI6Ik1vbnRlbmVncm8iLCJtZyI6Ik1hZGFnYXNjYXIiLCJtaCI6Ik1hcnNoYWxsIElzbGFuZHMiLCJtayI6Ik5vcnRoIE1hY2Vkb25pYSIsIm1sIjoiTWFsaSIsIm1tIjoiTXlhbm1hciIsIm1uIjoiTW9uZ29saWEiLCJtbyI6Ik1hY2F1IiwibXAiOiJDb21tb253ZWFsdGggb2YgTm9ydGhlcm4gTWFyaWFuYSBJc2xhbmRzIiwibXEiOiJNYXJ0aW5pcXVlIiwibXIiOiJNYXVyaXRhbmlhIiwibXMiOiJNb250c2VycmF0IiwibXQiOiJNYWx0YSIsIm11IjoiTWF1cml0aXVzIiwibXYiOiJNYWxkaXZlcyIsIm13IjoiTWFsYXdpIiwibXgiOiJNZXhpY28iLCJteSI6Ik1hbGF5c2lhIiwibXoiOiJNb3phbWJpcXVlIiwibmEiOiJOYW1pYmlhIiwibmUiOiJOaWdlciIsIm5nIjoiTmlnZXJpYSIsIm5pIjoiTmljYXJhZ3VhIiwibmwiOiJOZXRoZXJsYW5kcyIsIm5vIjoiTm9yd2F5IiwibnAiOiJOZXBhbCIsIm56IjoiTmV3IFplYWxhbmQiLCJvbSI6Ik9tYW4iLCJwYSI6IlBhbmFtYSIsInBlIjoiUGVydSIsInBnIjoiUGFwdWEgTmV3IEd1aW5lYSIsInBoIjoiUGhpbGlwcGluZXMiLCJwayI6IlBha2lzdGFuIiwicGwiOiJQb2xhbmQifSwiTE9DQVRPUiI6eyJMT0NBVE9SX1JFU1VMVF9QQVJBR1JBUEhfUEFZX0NBU0giOiJCYXJ6YWhsdW5nIGFremVwdGllcnQiLCJMT0NBVElPTl9SRVNVTFRTX0hFQURFUl9ERVBPU0lUX0xPQ0FUSU9OIjoiV8OkaGxlbiBTaWUgZWluZW4gT3J0IGF1cyIsIkxPQ0FUT1JfTVNHX1NFUlZFUl9FUlJPUiI6IlNvcnJ5IFx1MjAxMyB1bnNlciBTeXN0ZW0gaXN0IGRlcnplaXQgbmljaHQgdmVyZsO8Z2Jhci4gQml0dGUgdmVyc3VjaGVuIFNpZSBlcyBzcMOkdGVyIG5vY2ggZWlubWFsIG9kZXIga29udGFrdGllcmVuIFNpZSB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUgKDIwIGN0IGplIEFucnVmIGF1cyBkZW4gZGV1dHNjaGVuIEZlc3RuZXR6ZW4sIG1heC4gNjAgY3QgYXVzIGRlbiBkZXV0c2NoZW4gTW9iaWxmdW5rbmV0emVuKS4iLCJMT0NBVElPTl9SRVNVTFRTX0VSUk9SX0lOVkFMSURfUEFSQU1FVEVSIjoiS2VpbmUgw5xiZXJlaW5zdGltbXVuZyBnZWZ1bmRlbi4gQml0dGUgw7xiZXJwcsO8ZmVuIFNpZSBJaHJlIEFkcmVzc2FuZ2FiZW4gdW5kIHZlcnN1Y2hlbiBTaWUgZXMgZXJuZXV0IiwiTE9DQVRPUl9NU0dfSU5WQUxJRF9BRERSRVNTIjoiS2VpbmUgw5xiZXJlaW5zdGltbXVuZyBnZWZ1bmRlbi4gQml0dGUgw7xiZXJwcsO8ZmVuIFNpZSBJaHJlIEFkcmVzc2FuZ2FiZW4gdW5kIHZlcnN1Y2hlbiBTaWUgZXMgZXJuZXV0IiwiU0VSVklDRV9QT0lOVFNfU0VBUkNIX1JFU1VMVFMiOiJBbnplaWdlbiB7cG9pbnRzUXR5fSIsIkxPQ0FUT1JfUkVTVUxUX1BBUkFHUkFQSF9QQVlfQ0hFUVVFUyI6IlNjaGVjayB3aXJkIGFremVwdGllcnQiLCJMT0NBVE9SX1JFU1VMVF9QQVJBR1JBUEhfUEFZX0NBUkRTIjoiS3JlZGl0a2FydGVuIGFremVwdGllcnQiLCJMT0NBVElPTl9SRVNVTFRTX0VSUk9SX0NPVU5UUllfSVNfTk9UX0FDVElWRV9JTl9HU1BMIjoiS2VpbmUgw5xiZXJlaW5zdGltbXVuZyBnZWZ1bmRlbi4gQml0dGUgw7xiZXJwcsO8ZmVuIFNpZSBJaHJlIEFkcmVzc2FuZ2FiZW4gdW5kIHZlcnN1Y2hlbiBTaWUgZXMgZXJuZXV0IiwiTE9DQVRJT05fUkVTVUxUU19QQVJBR1JBUEhfRFJPUF9PRkZfU0VSVklDRSI6IktvbnRha3RpZXJlbiBvZGVyIGJlc3VjaGVuIFNpZSB1bnNlcmUgU2VydmljZSBQb2ludHMsIHVtIEVpbmxpZWZlcnplaXRlbiBlaW5zZWhlbiB6dSBrw7ZubmVuLiIsIkxPQ0FUT1JfUkVTVUxUX1BBUkFHUkFQSF9QQVlfQ0FTSF9DQVJEUyI6IktyZWRpdGthcnRlbiB1bmQgQmFyemFobHVuZyBha3plcHRpZXJ0IiwiTE9DQVRPUl9NU0dfTk9fU0VSVklDRV9QT0lOVF9UWVBFX1NFTEVDVEVEIjoiV8OkaGxlbiBTaWUgYXVzIGRpZXNlbiBPcHRpb25lbiBlaW5lIFN0YW5kb3J0YXJ0IGF1cyIsIkxPQ0FUT1JfUkVTVUxUX1BBUkFHUkFQSF9QQVlfQ0FTSF9DSEVRVUVTIjoiQmFyemFobHVuZyB1bmQgU2NoZWNrcyBha3plcHRpZXJ0IiwiTE9DQVRPUl9NU0dfTk9fUEhZU0lDQUxfUFJPQ0VTU19DQVBBQklMSVRJRVNfU0VMRUNURUQiOiJXw6RobGVuIFNpZSBaYWhsdW5nc29wdGlvbmVuIiwiTE9DQVRJT05fUkVTVUxUU19FUlJPUl9HRU9DT0RJTkdfT0ZfQUREUkVTU19GQUlMRUQiOiJLZWluZSDDnGJlcmVpbnN0aW1tdW5nIGdlZnVuZGVuLiBCaXR0ZSDDvGJlcnByw7xmZW4gU2llIElocmUgQWRyZXNzYW5nYWJlbiB1bmQgdmVyc3VjaGVuIFNpZSBlcyBlcm5ldXQiLCJMT0NBVElPTl9SRVNVTFRTX0VSUk9SX05PX1NFUlZJQ0VfUE9JTlRTX0ZPVU5EIjoiS2VpbmUgRXJnZWJuaXNzZSBnZWZ1bmRlbi4iLCJGSU5EX0xPQ0FUSU9OU19MQUJFTF9EUk9QX0JPWEVTIjoiREhMIERyb3AgQm94ZW4iLCJGSU5EX0xPQ0FUSU9OU19MQUJFTF9BVVRIT1JJWkVEX1NISVBQSU5HX0NFTlRFUlMiOiJBdXRob3Jpc2llcnRlIFBhcnRuZXIiLCJGSU5EX0xPQ0FUSU9OU19MQUJFTF9TVEFGRkVEX0ZBQ0lMSVRJRVMiOiJESEwgU3RhdGlvbmVuIiwiTE9DQVRJT05fUkVTVUxUU19FUlJPUl9VTktOT1dOX0VSUk9SIjoiRWluIEZlaGxlciBpc3QgYXVmZ2V0cmV0ZW4iLCJMT0NBVE9SX1JFU1VMVF9QQVJBR1JBUEhfUEFZX0NBU0hfQ0FSRFNfQ0hFUVVFUyI6IktyZWRpdGthcnRlbiwgU2NoZWNrcyB1bmQgQmFyemFobHVuZyBha3plcHRpZXJ0IiwiTE9DQVRJT05fUkVTVUxUU19FUlJPUl9HRU9MT0NBVElPTl9OT1RfUEVSTUlUVEVEIjoiWnVsYXNzZW4sIGRhc3MgTXlESEwrIG1laW5lbiBTdGFuZG9ydCBlcm1pdHRlbHQiLCJMT0NBVElPTl9SRVNVTFRTX1BBUkFHUkFQSF9EUk9QX09GRl9DT1VSSUVSIjoiU3DDpHRlc3RlciBFaW5saWVmZXJ6ZWl0cHVua3QgKE0tRik6IHt0aW1lfSIsIkxPQ0FUT1JfUkVTVUxUX1BBUkFHUkFQSF9QQVlfQ0FSRFNfQ0hFUVVFUyI6IktyZWRpdGthcnRlbiB1bmQgU2NoZWNrcyBha3plcHRpZXJ0IiwiTE9DQVRJT05fUkVTVUxUU19FUlJPUl9NQU5EQVRPUllfUEFSQU1FVEVSX0lTX01JU1NJTkciOiJLZWluZSDDnGJlcmVpbnN0aW1tdW5nIGdlZnVuZGVuLiBCaXR0ZSDDvGJlcnByw7xmZW4gU2llIElocmUgQWRyZXNzYW5nYWJlbiB1bmQgdmVyc3VjaGVuIFNpZSBlcyBlcm5ldXQifSwiY3IwMTk2Ijp7ImNyLWVycm9ycy1yZXF1aXJlZCI6IlRoaXMgZmllbGQgaXMgcmVxdWlyZWQiLCJjci1uYW1lIjoiR3JvdXAgTWF4aW11bSBXZWlnaHQgb2YgU2hpcG1lbnRzOiBFZmZlY3RpdmUgRGF0ZSBTdGFydCJ9LCJyZXBvcnRzIjp7Imxpc3RpbmdfY29sLW5hbWVfY29tcGFueS1uYW1lIjoiRW1wZsOkbmdlciBGaXJtYSBOYW1lIiwiY29ycG9yYXRlLXNoaXBtZW50LWFwcHJvdmFsLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9jcmVhdG9yLWZpcnN0LW5hbWUiOiJWb3JuYW1lIChFcnN0ZWxsdCB2b24pIiwic2hpcG1lbnQtZGV0YWlscy1yZXBvcnQtdGVtcGxhdGVfbGFiZWxfc2hpcG1lbnQtcmVmMSI6IlNlbmR1bmdzcmVmZXJlbnogMSIsImNvcnBvcmF0ZS1waWNrdXAtaGlzdG9yeS1yZXBvcnQtdGVtcGxhdGVfbGFiZWxfY3ZzLWxhc3QtdXBkYXRlIjoiUHJvdG9rb2xsIHp1ciBBbnBhc3N1bmcgZGVyIFNlbmR1bmdzZGF0ZW4iLCJzaGlwbWVudC1kZXRhaWxzLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9zaGlwbWVudC1yZWYyIjoiU2VuZHVuZ3NyZWZlcmVueiAoU2VuZHVuZ3NkZXRhaWxzKSIsImNvcnBvcmF0ZS11c2VyLWRldGFpbC1yZXBvcnQtdGVtcGxhdGVfdXNlci1yb2xlIjoiR3J1cHBlbm5hbWUiLCJzaGlwbWVudC1kZXRhaWxzLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9zaGlwbWVudC1yZWYzIjoiU2VuZHVuZ3NyZWZlcmVueiAzIiwic2hpcG1lbnQtZGV0YWlscy1yZXBvcnQtdGVtcGxhdGVfbGFiZWxfc2hpcG1lbnQtcmVmNCI6IlNlbmR1bmdzcmVmZXJlbnogNCIsImFkZHJlc3MtYm9vay1yZXBvcnQtdGVtcGxhdGVfbGFiZWxfcGhvbmVfZXh0ZW5zaW9uIjoiRHVyY2h3YWhsIiwibGlzdGluZ19sYWJlbF9ncmFiLXNoaXAtZnJvbSI6IkdydXBwZSBBYnNlbmRlcjoge2dyb3VwTmFtZX0iLCJzaGlwbWVudC1zdW1tYXJ5LXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF93YXliaWxscyI6IiIsImRldGFpbHMtcmV2aWV3X2xhYmVsX3N0YW5kYXJkLXNoaXBtZW50LWRlc2NyaXB0aW9uIjoiU2VuZHVuZ3NzcGV6aWZpc2NoZSBEZXRhaWxzIiwic2hpcG1lbnQtc3VtbWFyeS1yZXBvcnQtdGVtcGxhdGVfbGFiZWxfaW50ZXJuYXRpb25hbCI6IkludGVybmF0aW9uYWwiLCJkZXRhaWxzLXJldmlld19sYWJlbF91c2VyLWZpbHRlciI6IlBlcnNvbiIsImRldGFpbHMtcmV2aWV3X2xpbmtfY3VzdG9taXplLmlIZWxwIjoiPHA+U2llIGvDtm5uZW4gZGllc2VuIFJlcG9ydCBnYW56IGVpbmZhY2ggaW5kaXZpZHVhbGlzaWVyZW4hPFwvcD5cbjx1bD5cbjxsaT5Xw6RobGVuIFNpZSBkaWUgRmVsZGVyLyBEYXRlbiBhdXMsIGRpZSBTaWUgaGVydW50ZXJsYWRlbiBtw7ZjaHRlbjxcL2xpPlxuPGxpPkJlc3RpbW1lbiBTaWUgZGllIFJlaWhlbmZvbGdlIGluIGRlciBkaWUgRGF0ZW4gYXVmIGlocmVtIERva3VtZW50IGF1ZmdlbGlzdGV0IHdlcmRlbiBzb2xsZW4uPFwvbGk+XG48XC91bD5cbiIsImRldGFpbHMtcmV2aWV3X3ZhbHVlLWxhYmVsX3JlcG9ydC1mcmVxdWVuY3kiOiIiLCJMQi1jb2x1bW5zLXNlbGVjdGlvbl9idXR0b25fYWRkLWFsbCI6Ikhpbnp1ZsO8Z2VuIEFsbGUiLCJzaGlwbWVudC1kZXRhaWxzLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9zaGlwLWZyb20tY291bnRyeS1uYW1lIjoiTGFuZCAoQWJzZW5kZXIpIiwiYWRkcmVzcy1ib29rLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9yZWZlcmVuY2VfbmV3IjoiU2VuZHVuZ3NyZWZlcmVueiA0IiwiY29ycG9yYXRlLXVzZXItZGV0YWlsLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9maXJzdC1uYW1lIjoiVm9ybmFtZSIsInNoaXBtZW50LXBhY2thZ2UtZGV0YWlscy1yZXBvcnQtdGVtcGxhdGVfbGFiZWxfd2lkdGgiOiJCcmVpdGUiLCJlb2QtcmVwb3J0LXRlbXBsYXRlX2xhYmVsX3NoaXBtZW50LXJlZmVyZW5jZSI6IlNlbmR1bmdzcmVmZXJlbnoiLCJjb3Jwb3JhdGUtcGlja3VwLWhpc3RvcnktcmVwb3J0LXRlbXBsYXRlX2xhYmVsX3dlaWdodC11bml0IjoiRWluaGVpdGVuIiwiTEItY29sdW1ucy1zZWxlY3Rpb25fYnV0dG9uX3NhdmUiOiJTcGVpY2hlcm4iLCJhZGRyZXNzLWJvb2stcmVwb3J0LXRlbXBsYXRlX2xhYmVsX3JlZmVyZW5jZV9vcHRpb25hbCI6IlNlbmR1bmdzcmVmZXJlbnogMiIsImNvcnBvcmF0ZS1zaGlwbWVudC1hcHByb3ZhbC1yZXBvcnQtdGVtcGxhdGVfbGFiZWxfc2hpcHBlci1yZWZlcmVuY2UiOiJBYnNlbmRlciBSZWZlcmVueiIsImRldGFpbHMtcmV2aWV3X3NlbGVjdC1vcHRpb25fZWRpdC1yZXF1ZXN0ZWQiOiIiLCJjb3Jwb3JhdGUtc2hpcG1lbnQtYXBwcm92YWwtcmVwb3J0LXRlbXBsYXRlX2xhYmVsX2FwcHJvdmVyLWxhc3QtbmFtZSI6Ik5hY2huYW1lIChHZW5laG1pbmdlbmRlcikiLCJzaGlwbWVudC1kZXRhaWxzLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9iaWxsaW5nLWFjY291bnQtbnVtYmVyIjoiRnJhY2h0emFobGVyIEFjY291bnQiLCJzaGlwbWVudC1kZXRhaWxzLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9zaGlwLWZyb20tZW1haWwiOiJFLU1haWwgQWRyZXNzZSAoQWJzZW5kZXIpIiwiZGV0YWlscy1yZXZpZXdfc2VsZWN0LW9wdGlvbl9hbGwtdXNlci1mcm9tLWdyb3VwIjoiQXVzd2FobCBBbGxlIiwiY29ycG9yYXRlLXVzZXItZGV0YWlsLXJlcG9ydC10ZW1wbGF0ZV9kb2N1bWVudC10eXBlLWFwcHJvdmFsIjoiQmVzdMOkdGlndW5nIEVyZm9yZGVybGljaCAoRG9rdW1lbnQpIiwiY29ycG9yYXRlLXBpY2t1cC1oaXN0b3J5LXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9waWNrdXAtcG9zdGFsLWNvZGUiOiJQb3N0bGVpdHphaGwgKEFiaG9sdW5nKSIsInNoaXBtZW50LWRldGFpbHMtcmVwb3J0LXRlbXBsYXRlX2xhYmVsX3BheW1lbnQtcHJvZHVjdCI6IlphaGx1bmdzbWV0aG9kZSIsImVvZC1yZXBvcnQtdGVtcGxhdGVfbGFiZWxfbm8tc2hpcG1lbnRzLWZvdW5kIjoiS2VpbmUgU2VuZHVuZ2VuIiwic2hpcG1lbnQtZGV0YWlscy1yZXBvcnQtdGVtcGxhdGVfbGFiZWxfc2hpcC10by1lbWFpbCI6IkUtTWFpbCBBZHJlc3NlIChFbXBmw6RuZ2VyKSIsImNvcnBvcmF0ZS1zaGlwbWVudC1yZWZlcmVuY2UtcmVwb3J0LXRlbXBsYXRlX2xhYmVsX2RlY2xpbmVkLWRhdGUiOiJBYmdlbGVobnQgRGF0dW0iLCJjb3Jwb3JhdGUtcGlja3VwLWhpc3RvcnktcmVwb3J0LXRlbXBsYXRlX2xhYmVsX2V3ZiI6Ik15REhMKyIsImRldGFpbHMtcmV2aWV3X2J1dHRvbl9zYXZlIjoiVm9ybGFnZSBzcGVpY2hlcm4iLCJsaXN0aW5nX2xhYmVsX2NhYiI6IkZpcm1hIEFkcmVzc2J1Y2giLCJlb2QtcmVwb3J0LXRlbXBsYXRlX2xhYmVsX2RobCI6IkRITCBFeHByZXNzIiwic2hpcG1lbnQtaW52b2ljZS1kZXRhaWxzLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF90aXRsZS1vZi1zaWduZXIiOiJUaXRlbCBkZXMgVW50ZXJ6ZWljaG5lcnMiLCJsaXN0aW5nX3ZhbHVlLWxhYmVsX3N0YW5kYXJkLWludm9pY2UtZGV0YWlscyI6IlRyYW5zcG9ydHJlY2hudW5nIERldGFpbCBSZXBvcnQiLCJzaGlwbWVudC1kZXRhaWxzLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9zaGlwLXRvLWNvbnRhY3QiOiJLb250YWt0IChFbXBmw6RuZ2VyKSIsImVvZC1yZXBvcnQtdGVtcGxhdGVfbGFiZWxfbnVtYmVyLW9mLXBpZWNlcyI6IkFuemFobCBkZXIgUGFja3N0w7xja2UiLCJhZGRyZXNzLWJvb2stcmVwb3J0LXRlbXBsYXRlX2xhYmVsX2NvdW50cnktY29kZSI6IkzDpG5kZXJjb2RlIiwic2hpcG1lbnQtaW52b2ljZS1kZXRhaWxzLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9uZXQtd2VpZ2h0LXBlci1waWVjZSI6Ik5ldHRvZ2V3aWNodCAocHJvIFBhY2tzdMO8Y2spIiwiZGV0YWlscy1yZXZpZXdfc2VsZWN0LW9wdGlvbl9kZWxpdmVyZWQiOiJadWdlc3RlbGx0IiwiY29ycG9yYXRlLXBpY2t1cC1oaXN0b3J5LXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9hY2NvdW50LW51bWJlciI6IkRITCBBY2NvdW50IE51bW1lciIsImRldGFpbHMtcmV2aWV3X2xhYmVsX2NzdiI6IkNTViBEYXRlaSAoLmNzdikiLCJjb3Jwb3JhdGUtcGlja3VwLWhpc3RvcnktcmVwb3J0LXRlbXBsYXRlX2xhYmVsX3BpY2t1cC1udW1iZXIiOiJBYmhvbHVuZyBCZXN0w6R0aWd1bmdzbnVtbWVyIiwiZGV0YWlscy1yZXZpZXdfbGFiZWxfc3RhbmRhcmQtY29ycG9yYXRlLXNoaXBtZW50LWFwcHJvdmFsLXJlcG9ydC1kZXNjcmlwdGlvbiI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPjxkaXYgY2xhc3M9Im1lc3NhZ2Utd3JhcHBlciI+PHA+RGllc2VyIEJlcmljaHQgYmVpbmhhbHRldDo8XC9wPlxuPHVsPlxuPGxpPlNlbmR1bmdzYmVzdMOkdGlndW5nIGplIEdydXBwZTxcL2xpPlxuPGxpPkRldGFpbHMgYWJsZWhuZW4gb2RlciBiZXN0w6R0aWdlbjxcL2xpPlxuPGxpPlNlbmR1bmdzZGV0YWlsczxcL2xpPlxuPFwvdWw+XG48XC9kaXY+PFwvZGl2PiIsImxpc3RpbmdfbGFiZWxfaW52b2ljZS10eXBlLWNvbW1lcmNpYWwiOiJIYW5kZWxzcmVjaG51bmciLCJkZXRhaWxzLXJldmlld19iYWNrZW5kLWVycm9yX2luY29ycmVjdC1yZXBvcnQtY29sdW1uIjoiRG93bmxvYWQgZmVobGVyaGFmdCIsImFkZHJlc3MtYm9vay1yZXBvcnQtdGVtcGxhdGVfbGFiZWxfYWRkcmVzczIiOiJhZHJlc3NlIiwiYWRkcmVzcy1ib29rLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9waG9uZSI6IlRlbGVmb25udW1tZXIiLCJhZGRyZXNzLWJvb2stcmVwb3J0LXRlbXBsYXRlX2xhYmVsX2FkZHJlc3MzIjoiQWRyZXNzZSAzIiwiYWRkcmVzcy1ib29rLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9hZGRyZXNzMSI6IkFkcmVzc2UiLCJsaXN0aW5nX3ZhbHVlLWxhYmVsX3N0YW5kYXJkLWZ1bGwtc2hpcG1lbnQiOiJEZXRhaWwgQnJlYWtkb3duIFJlcG9ydCIsImxpc3RpbmdfYnV0dG9uX2FkZCI6IlJlcG9ydCBlcnN0ZWxsZW4iLCJzaGlwbWVudC1zdW1tYXJ5LXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9zaGlwbWVudC1jaGFyZ2VzIjoiZ2VzY2jDpHR6dGUgR2Viw7xocmVuOiIsImxpc3RpbmdfbGFiZWxfcGhvbmUtd2l0aC1leHRlbnNpb24iOiJ7Y291bnRyeVBob25lQ29kZX17bG9jYWxQaG9uZU51bWJlcn0gRHVyY2h3YWhsIHtwaG9uZUV4dGVuc2lvbn0iLCJzaGlwbWVudC1kZXRhaWxzLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9kdXRpYWJsZS1zdGF0dXMiOiJab2xscGZsaWNodGlnZXIgU3RhdHVzIiwiY29ycG9yYXRlLXNoaXBtZW50LWFwcHJvdmFsLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbC10aXRsZSI6IkJlc3TDpHRpZ3VuZyBSZXBvcnRzIiwibGlzdGluZ19jb2wtbmFtZV9yZXBvcnQtc2NoZWR1bGUiOiIiLCJjb3Jwb3JhdGUtc2hpcG1lbnQtcmVmZXJlbmNlLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9sb2dpbiI6IkUtTWFpbCBBZHJlc3NlIiwiZW9kLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9iaWxsaW5nLWFjY291bnQtbnVtYmVyIjoiQWNjb3VudG51bW1lci9FbXBmw6RuZ2VyIEZpcm1hIiwiY29ycG9yYXRlLXNoaXBtZW50LXJlZmVyZW5jZS1yZXBvcnQtdGVtcGxhdGVfbGFiZWxfcHJpbnRlZCI6IkRhdHVtL1plaXQgR2VkcnVja3QiLCJzaGlwbWVudC1kZXRhaWxzLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9lc3RpbWF0ZWQtY2hhcmdlcyI6Imdlc2Now6R0enRlIEdlYsO8aHJlbjoiLCJsaXN0aW5nX2hlYWRlcl9yZXBvcnRzIjoiUmVwb3J0cyIsImNvcnBvcmF0ZS11c2VyLWRldGFpbC1yZXBvcnQtdGVtcGxhdGVfbGFiZWxfbGFzdC1uYW1lIjoiTmFjaG5hbWUiLCJzaGlwbWVudC1pbnZvaWNlLWRldGFpbHMtcmVwb3J0LXRlbXBsYXRlX2xhYmVsX2V4cG9ydC10eXBlIjoiQXJ0IGRlcyBFeHBvcnRzIiwiY29ycG9yYXRlLXNoaXBtZW50LWFwcHJvdmFsLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9kZWNsYXJlZC12YWx1ZS1jdXJyZW5jeSI6IkFuZ2VnZWJlbmUgV8OkaHJ1bmcgdm9uIFdlcnQiLCJjb3Jwb3JhdGUtc2hpcG1lbnQtYXBwcm92YWwtcmVwb3J0LXRlbXBsYXRlX2xhYmVsX3NoaXBtZW50LWRhdGUiOiJWZXJzYW5kZGF0dW0iLCJkZXRhaWxzLXJldmlld19saW5rX2N1c3RvbWl6ZSI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPjxkaXYgY2xhc3M9Im1lc3NhZ2Utd3JhcHBlciI+RmVsZGVyIGF1c3fDpGhsZW4gPGRpdiBjbGFzcz1cImluZm9cIj48ZGl2PjxwPlNpZSBrw7ZubmVuIGRpZXNlbiBSZXBvcnQgZ2FueiBlaW5mYWNoIGluZGl2aWR1YWxpc2llcmVuITxcL3A+XG48dWw+XG48bGk+V8OkaGxlbiBTaWUgZGllIEZlbGRlci8gRGF0ZW4gYXVzLCBkaWUgU2llIGhlcnVudGVybGFkZW4gbcO2Y2h0ZW48XC9saT5cbjxsaT5CZXN0aW1tZW4gU2llIGRpZSBSZWloZW5mb2xnZSBpbiBkZXIgZGllIERhdGVuIGF1ZiBpaHJlbSBEb2t1bWVudCBhdWZnZWxpc3RldCB3ZXJkZW4gc29sbGVuLjxcL2xpPlxuPFwvdWw+XG48XC9kaXY+PFwvZGl2PjxcL2Rpdj48XC9kaXY+IiwiZGV0YWlscy1yZXZpZXdfc2VsZWN0LW9wdGlvbl91bmRlZmluZWQiOiJOaWNodCBhbiBESEwgw7xiZXJtaXR0ZWx0IiwiaW1wb3J0LXVzZXJzLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9yYXctbnVtYmVyIjoiUmVpaGUiLCJsaXN0aW5nX2xhYmVsX2NyYWItc2hpcC10byI6IkZpcm1hIEFkcmVzc2J1Y2ggRW1wZsOkbmdlcjoge2dyb3VwTmFtZX0iLCJMQi1jb2x1bW5zLXNlbGVjdGlvbl9idXR0b25fcmVtb3ZlIjoiRW50ZmVybmVuIiwic2hpcG1lbnQtc3VtbWFyeS1yZXBvcnQtdGVtcGxhdGVfbGFiZWxfaGlkZGVuLXJhdGVzLWRpc2NsYWltZXIiOiJEaWUgS29zdGVuIHNpbmQgbnVyIGbDvHIgZGVuIEluaGFiZXIgZGVyIEt1bmRlbm51bW1lciBzaWNodGJhciIsImxpc3RpbmdfdmFsdWUtbGFiZWxfc2NoZWR1bGUtc2NoZWR1bGVkIjoiR2VwbGFudCIsImNvcnBvcmF0ZS1waWNrdXAtaGlzdG9yeS1yZXBvcnQtdGVtcGxhdGVfbGFiZWxfcGlja3VwLXN1YnVyYiI6IlZvcm9ydCAoQWJob2x1bmcpIiwiY29ycG9yYXRlLXBpY2t1cC1oaXN0b3J5LXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9jbG9zZS10aW1lIjoiU2NobHVzc3plaXQiLCJjb3Jwb3JhdGUtc2hpcG1lbnQtYXBwcm92YWwtcmVwb3J0LXRlbXBsYXRlX2xhYmVsX2xvZ2luLWRhdGUiOiJMb2dpbiBEYXR1bSIsImxpc3RpbmdfbGFiZWxfZ2FiIjoiR3J1cHBlIEFkcmVzc2J1Y2g6IHtncm91cE5hbWV9IiwiY29ycG9yYXRlLXNoaXBtZW50LWFwcHJvdmFsLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9kZXN0aW5hdGlvbi1jb3VudHJ5IjoiRW1wZmFuZ3NsYW5kIExhbmQiLCJzbGlkZXItbGlua19DTVMiOiJUaXBwcyB1bSBiZW51dHplcmRlZmluaWVydGUgQmVyaWNodGUgenUgZXJzdGVsbGVuIiwiYWRkcmVzcy1ib29rLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9jaXR5IjoiU3RhZHQiLCJsaXN0aW5nX3ZhbHVlLWxhYmVsX3NjaGVkdWxlLW9uZS10aW1lIjoiIiwic2hpcG1lbnQtZGV0YWlscy1yZXBvcnQtdGVtcGxhdGVfbGFiZWxfc2hpcC1mcm9tLWFkZHJlc3MyIjoiQWRyZXNzZSAyIChBYnNlbmRlcikiLCJzaGlwbWVudC1kZXRhaWxzLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9zaGlwLWZyb20tYWRkcmVzczEiOiJBZHJlc3NlIDEgKEFic2VuZGVyKSIsInNoaXBtZW50LWRldGFpbHMtcmVwb3J0LXRlbXBsYXRlX2xhYmVsX3NoaXAtZnJvbS1hZGRyZXNzMyI6IkFkcmVzc2UgMyAoQWJzZW5kZXIpIiwic2hpcG1lbnQtbm90aWZpY2F0aW9uLWRldGFpbHMtcmVwb3J0LXRlbXBsYXRlX2xhYmVsX3R5cGUiOiJBcnQiLCJzaGlwbWVudC1ub3RpZmljYXRpb24tZGV0YWlscy1yZXBvcnQtdGVtcGxhdGVfbGFiZWxfc2hpcG1lbnQtaWQiOiJWb3LDvGJlcmdlaGVuZGUgSUQiLCJkZXRhaWxzLXJldmlld19sYWJlbF9zaGlwcGVyLWFkZHJlc3MiOiJBYnNlbmRlcmFkcmVzc2UiLCJzaGlwbWVudC1zdW1tYXJ5LXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9hbGxfYWNjb3VudHMiOiJBbGxlIiwic2hpcG1lbnQtaW52b2ljZS1kZXRhaWxzLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9pbnZvaWNlLW5vIjoiUmVjaG51bmdzbnVtbWVyIiwiYWRkcmVzcy1ib29rLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9zdGF0ZSI6IkJlemlyayIsInNoaXBtZW50LXN1bW1hcnktcmVwb3J0LXRlbXBsYXRlX2xhYmVsX3NpZ25hdHVyZSI6IlVudGVyc2NocmlmdCBkZXMgS3VyaWVyZmFocmVycyIsImxpc3RpbmdfbGFiZWxfZ3JhYi1zaGlwLXRvIjoiR3J1cHBlIEVtcGbDpG5nZXI6IHtncm91cE5hbWV9IiwiZW9kLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9kZWNsYXJlZC12YWx1ZSI6ImRla2xhcmllcnRlciBXZXJ0LyBXZXJ0IGRlciBUcmFuc3BvcnR2ZXJzaWNoZXJ1bmcvIFfDpGhydW5nIiwibGlzdGluZ19sYWJlbF9leHBvcnQiOiJFeHBvcnQiLCJhZGRyZXNzLWJvb2stcmVwb3J0LXRlbXBsYXRlX2xhYmVsX2NucGpfb3JfY3BmX3RheF90eXBlIjoiQ05QSi9DUEYgVGF4IFR5cGUiLCJzaGlwbWVudC1pbnZvaWNlLWRldGFpbHMtcmVwb3J0LXRlbXBsYXRlX2xhYmVsX2luY290ZXJtLWV4cG9ydCI6IkhhbmRlbHNiZWRpbmd1bmdlbiIsImNvcnBvcmF0ZS11c2VyLWRldGFpbC1yZXBvcnQtdGVtcGxhdGVfbW9kaWZpZWQtZGF0ZSI6IktvbnRha3QgYWt0dWFsaXNpZXJ0IiwiZGV0YWlscy1yZXZpZXdfYnV0dG9uX2VkaXQiOiJCZWFyYmVpdGVuIiwiY29ycG9yYXRlLXVzZXItZGV0YWlsLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9waG9uZSI6IlRlbGVmb24iLCJhZGRyZXNzLWJvb2stcmVwb3J0LXRlbXBsYXRlX2xhYmVsX2VtYWlsIjoiRS1NYWlsIEFkcmVzc2UiLCJsaXN0aW5nX3ZhbHVlLWxhYmVsX3N0YW5kYXJkLXBhY2thZ2UtZGV0YWlscyI6IlNlbmR1bmdzdmVycGFja3VuZyIsInNoaXBtZW50LWRldGFpbHMtcmVwb3J0LXRlbXBsYXRlX2xhYmVsX3NoaXAtdG8tY29tcGFueSI6IkZpcm1hIChFbXBmw6RuZ2VyKSIsImRldGFpbHMtcmV2aWV3X2xhYmVsX3N0YW5kYXJkLWVvZC1tYW5pZmVzdC1kZXNjcmlwdGlvbiI6IkRpZSB0w6RnbGljaGUgVmVyc2FuZGxpc3RlIHd1cmRlIGFuIGRlbiBESEwgS3VyaWVyIHp1ciBBYmhvbHVuZyDDvGJlcmdlYmVuIiwiZGV0YWlscy1yZXZpZXdfYmFja2VuZC1lcnJvcl9uby1zZWxlY3RlZC1maWVsZHMiOiJNaW5kZXN0ZW5zIGVpbi9lIGF1c3fDpGhsZW4iLCJkZXRhaWxzLXJldmlld19oZWFkZXJfZGV0YWlscyI6IkRldGFpbHMiLCJkZXRhaWxzLXJldmlld19zZWxlY3Qtb3B0aW9uX2luLXRyYW5zaXQiOiJJbSBUcmFuc2l0IiwiY29ycG9yYXRlLXBpY2t1cC1oaXN0b3J5LXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9zaGlwbWVudC13ZWlnaHQiOiJTZW5kdW5nIEdld2ljaHQiLCJhZGRyZXNzLWJvb2stcmVwb3J0LXRlbXBsYXRlX2xhYmVsX3N1YnVyYiI6IlZvcm9ydCIsImxpc3RpbmdfbGFiZWxfaW52b2ljZS10eXBlLXByb2Zvcm1hIjoiUHJvZm9ybWEiLCJhZGRyZXNzLWJvb2stcmVwb3J0LXRlbXBsYXRlX2xhYmVsX3NoaXBtZW50X3RvIjoiRmF2b3VyaXQgRW1wZsOkbmdlciIsIkxCLWNvbHVtbnMtc2VsZWN0aW9uX2J1dHRvbl9yZW1vdmUtYWxsIjoiQWxsZSBlbnRmZXJuZW4iLCJjb3Jwb3JhdGUtcGlja3VwLWhpc3RvcnktcmVwb3J0LXRlbXBsYXRlX2xhYmVsX3BpY2t1cC1waG9uZSI6IlRlbGVmb25udW1tZXIgKEFiaG9sdW5nKSIsImRldGFpbHMtcmV2aWV3X3NlbGVjdC1vcHRpb25fYWxsLXVzZXItZ3JvdXAiOiJBdXN3YWhsIEFsbGUiLCJzaGlwbWVudC1zdW1tYXJ5LXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9kYXRlLXJhbmdlIjoiVmVyc2FuZHplaXRyYXVtIiwic2hpcG1lbnQtZGV0YWlscy1yZXBvcnQtdGVtcGxhdGVfbGFiZWxfb3JpZ2luLWNvZGUiOiJBYmhvbG9ydCIsInNsaWRlci1wYXJhZ3JhcGgtdGV4dC1zbGlkZS0xX0NNUyI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPjxkaXYgY2xhc3M9Im1lc3NhZ2Utd3JhcHBlciI+PHA+PGI+VW0gZWluZW4gYmVudXR6ZXJkZWZpbmllcnRlbiBSZXBvcnQgenUgZXJzdGVsbGVuOjxcL2I+PFwvcD5cbjx1bD5cbjxsaT5LbGlja2VuOiA8Yj5iZW51dHplcmRlZmluaWVydGVuIFJlcG9ydCBlcnN0ZWxsZW48XC9iPjxcL2xpPlxuPGxpPjxiPk5hbWUgPFwvYj5kZXMgUmVwb3J0czxcL2xpPlxuPGxpPkJlcmljaHQgPGI+YmVzY2hyZWliZW48XC9iPjxcL2xpPlxuPGxpPlfDpGhsZW4gU2llIGF1cyBvYiBTaWUgPGI+YWxsZSBvZGVyIG51ciBlaW5pZ2UgRmVsZGVyL0RhdGVuPFwvYj4gaW4gZGVtIFJlcG9ydCBhaGJlbiB3b2xsZW48XC9saT5cbjxsaT5GYWxscyBuw7Z0aWcsIDxiPmRlZmluaWVyZW4gU2llIGRpZSBSZWloZW5mb2xnZTxcL2I+IGRlciBGZWxkZXIgaW0gUmVwb3J0PFwvbGk+XG48bGk+QmVlbmRlbiBtaXQ6IGJlbnV0emVyZGVmaW5pZXJ0ZSA8Yj5CZXJpY2h0ZSBzcGVpY2hlcm48XC9iPjxicj5cbjxcL2xpPlxuPFwvdWw+XG48XC9kaXY+PFwvZGl2PiIsInNoaXBtZW50LWRldGFpbHMtcmVwb3J0LXRlbXBsYXRlX2xhYmVsX3NoaXAtdG8tdmF4LXRheCI6Ik1laHJ3ZXJ0c3RldWVyIChFbXBmw6RuZ2VyKSIsImRldGFpbHMtcmV2aWV3X2xhYmVsX3ppcCI6IlpJUCBmaWxlICguemlwKSIsInNoaXBtZW50LWRldGFpbHMtcmVwb3J0LXRlbXBsYXRlX2xhYmVsX3NoaXAtZnJvbS1zdWJ1cmIiOiJWb3JvcnQgKEFic2VuZGVyKSIsImxpc3RpbmdfbGFiZWxfaW1wb3J0IjoiSW1wb3J0IiwiY29ycG9yYXRlLXNoaXBtZW50LWFwcHJvdmFsLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9kZWNsaW5lZC1ieS1sYXN0LW5hbWUiOiJOYWNobmFtZSAoQWJnZWxlaG50IHZvbikiLCJzaGlwbWVudC1ub3RpZmljYXRpb24tZGV0YWlscy1yZXBvcnQtdGVtcGxhdGVfbGFiZWxfcGljay11cC1jb3VyaWVyIjoiQWJob2x1bmcgZHVyY2ggS3VyaWVyIiwic2hpcG1lbnQtaW52b2ljZS1kZXRhaWxzLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9jb21tb2RpdHktY29kZSI6IldhcmVudGFyaWZudW1tZXIiLCJzaGlwbWVudC1kZXRhaWxzLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9pbnN1cmVkLWN1cnJlbmN5IjoiU2VuZHVuZ3N2ZXJzaWNoZXJ1bmcgV8OkaHJ1bmciLCJsaXN0aW5nX2xhYmVsX2NyYWItc2hpcC1mcm9tIjoiRmlybWEgQWRyZXNzYnVjaCBBYnNlbmRlcjoge2dyb3VwTmFtZX0iLCJjb3Jwb3JhdGUtcGlja3VwLWhpc3RvcnktcmVwb3J0LXRlbXBsYXRlX2xhYmVsX2F3Yi1udW1iZXIiOiJTZW5kdW5nc251bW1lciIsImFkZHJlc3MtYm9vay1yZXBvcnQtdGVtcGxhdGVfbGFiZWxfeWVzIjoiSmEiLCJjb3Jwb3JhdGUtc2hpcG1lbnQtYXBwcm92YWwtcmVwb3J0LXRlbXBsYXRlX2xhYmVsX2NyZWF0b3ItZW1haWwtaWQiOiJFLU1haWwgQWRyZXNzZSAoRXJzdGVsbHQgdm9uKSIsImNvcnBvcmF0ZS1zaGlwbWVudC1yZWZlcmVuY2UtcmVwb3J0LXRlbXBsYXRlX2xhYmVsX3NoaXBtZW50LXJlZmVyZW5jZSI6IlNlbmR1bmdzcmVmZXJlbnoiLCJkZXRhaWxzLXJldmlld19sYWJlbF9zdGFuZGFyZC1hZGRyZXNzLWJvb2stZGVzY3JpcHRpb24iOiJLb250YWt0aW5mb3JtYXRpb25lbiB2b24gSWhyZW0gQWRyZXNzYnVjaCIsImNvcnBvcmF0ZS1waWNrdXAtaGlzdG9yeS1yZXBvcnQtdGVtcGxhdGVfbGFiZWxfcGlja3VwLWNvdW50cnktY29kZSI6IkzDpG5kZXJjb2RlIChBYmhvbHVuZykiLCJjb3Jwb3JhdGUtc2hpcG1lbnQtcmVmZXJlbmNlLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF91c2VyLWVtYWlsIjoiRS1NYWlsIEFkcmVzc2UiLCJjb3Jwb3JhdGUtcGlja3VwLWhpc3RvcnktcmVwb3J0LXRlbXBsYXRlX2xhYmVsX3BpY2t1cC1zdGF0ZSI6IkJlemlyayAoQWJob2x1bmcpIiwiZGV0YWlscy1yZXZpZXdfc2VsZWN0LW9wdGlvbl9wZW5kaW5nLWFzc2lnbmVlLWFjdGlvbiI6IkF1c3N0ZWhlbmRlIEJlYXJiZWl0dW5nIGR1cmNoIEVtcGbDpG5nZXIiLCJlb2QtcmVwb3J0LXRlbXBsYXRlX2xhYmVsX2VudGVyZWQtd2VpZ2h0IjoiR2VhbXRnZXdpY2h0IGFsbGVyIFNlbmR1bmdlbiIsImRldGFpbHMtcmV2aWV3X2J1dHRvbl9kb3dubG9hZCI6IkRvd25sb2FkIiwic2hpcG1lbnQtc3VtbWFyeS1yZXBvcnQtdGVtcGxhdGVfbGFiZWxfY3VycmVuY3kiOiJXw6RocnVuZyB7Y3VycmVuY3l9Iiwic2hpcG1lbnQtZGV0YWlscy1yZXBvcnQtdGVtcGxhdGVfbGFiZWxfaXMtaW50ZXJuYXRpb25hbCI6IkludGVybmF0aW9uYWwvSW5sYW5kIiwic2hpcG1lbnQtaW52b2ljZS1kZXRhaWxzLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9kZXNjcmlwdGlvbi1vZi1wb3NpdGlvbiI6IldhcmVuYmVzY2hyZWlidW5nIiwibGlzdGluZ192YWx1ZS1sYWJlbF9zdGFuZGFyZC1zaGlwbWVudCI6IlNoaXBtZW50IERldGFpbCBSZXBvcnQiLCJjb3Jwb3JhdGUtcGlja3VwLWhpc3RvcnktcmVwb3J0LXRlbXBsYXRlX2xhYmVsX3NwZWNpYWwtaW5zdHJ1Y3Rpb24iOiJBbndlaXN1bmdlbiBmw7xyIGRlbiBLdXJpZXIiLCJkZXRhaWxzLXJldmlld19iYWNrZW5kLWVycm9yX2ltcG9zc2libGUtY29udmVydC1yZXBvcnQtY29sdW1uIjoiRG93bmxvYWQgZmVobGVyaGFmdCIsIkxCLWNvbHVtbnMtc2VsZWN0aW9uX2J1dHRvbl9sYXN0IjoiTGV0enRlKHIpIiwiY29ycG9yYXRlLXVzZXItZGV0YWlsLXJlcG9ydC10ZW1wbGF0ZV9yZWdpc3RyYXRpb24tZGF0ZSI6IlJlZ2lzdHJpZXJ0IiwiZW9kLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9udW1iZXItb2Ytc2hpcG1lbnRzIjoiQW56YWhsIGRlciBTZW5kdW5nZW4iLCJkZXRhaWxzLXJldmlld19zZWxlY3Qtb3B0aW9uX3Vuc3VibWl0dGVkIjoiTmljaHQgw7xiZXJtaXR0ZWx0IiwiZGV0YWlscy1yZXZpZXdfdmFsdWUtbGFiZWxfcmVwb3J0LWRlc2NyaXB0aW9uIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+PGI+RGllc2VyPFwvYj48Yj4gQmVyaWNodDxcL2I+PGI+IGJlaW5oYWx0ZXQ6PFwvYj48XC9kaXY+IiwiYWRkcmVzcy1ib29rLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9yZWZlcmVuY2VfbWFuZGF0b3J5IjoiU2VuZHVuZ3NyZWZlcmVueiAzIiwiTEItY29sdW1ucy1zZWxlY3Rpb25fZXJyb3JfcGxlYXNlLXNlbGVjdC1vbmUiOiJNaW5kZXN0ZW5zIGVpbi9lIGF1c3fDpGhsZW4iLCJjb3Jwb3JhdGUtc2hpcG1lbnQtYXBwcm92YWwtcmVwb3J0LXRlbXBsYXRlX2xhYmVsX2dyb3VwLW5hbWUiOiJHcnVwcGVubmFtZSIsInNoaXBtZW50LWRldGFpbHMtcmVwb3J0LXRlbXBsYXRlX2xhYmVsX3NoaXAtZnJvbS1waG9uZSI6IlRlbGVmb25udW1tZXIgKEFic2VuZGVyKSIsImFkZHJlc3MtYm9vay1yZXBvcnQtdGVtcGxhdGVfbGFiZWxfZHV0aWVzX2FjY291bnRfbnVtYmVyIjoiU3RhbmRhcmQgRHV0aWVzIiwibGlzdGluZ192YWx1ZS1sYWJlbF9zdGFuZGFyZC1lb2QtbWFuaWZlc3QiOiJDb3VyaWVyIFJlcG9ydCAoVGFnZXNhYnNjaGx1c3MpIiwiY29ycG9yYXRlLXBpY2t1cC1oaXN0b3J5LXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9waWNrdXAtZGF0ZSI6IkFiaG9sdW5nIERhdHVtIiwiY29ycG9yYXRlLXNoaXBtZW50LWFwcHJvdmFsLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9jb25zaWduZWUtY29tcGFueSI6IkZpcm1hIChFbXBmw6RuZ2VyKSIsImltcG9ydC11c2Vycy1yZXBvcnQtdGVtcGxhdGVfbGFiZWxfdHJhbnNpdGlvbi1zdGF0dXMiOiJTdGF0dXMiLCJhZGRyZXNzLWJvb2stcmVwb3J0LXRlbXBsYXRlX2xhYmVsX3R5cGUiOiJBZHJlc3NidWNoIEFydCIsIkxCLWNvbHVtbnMtc2VsZWN0aW9uX2J1dHRvbl9jYW5jZWwiOiJhYmJyZWNoZW4iLCJzaGlwbWVudC1kZXRhaWxzLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9ub24tZHV0aWFibGUiOiJOaWNodCB6b2xscGZsaWNodGlnIiwic2hpcG1lbnQtc3VtbWFyeS1yZXBvcnQtdGVtcGxhdGVfbGFiZWxfc2hpcG1lbnQtd2VpZ2h0IjoiR2VzYW10Z2V3aWNodCBkZXIgU2VuZHVuZ2VuIiwiZGV0YWlscy1yZXZpZXdfbGFiZWxfdXNlci1ncm91cC1maWx0ZXIiOiJHcnVwcGUiLCJkZXRhaWxzLXJldmlld19zZWxlY3Qtb3B0aW9uX2FsbC1zdGF0dXNlcyI6IkF1c3dhaGwgQWxsZSIsImxpc3RpbmdfbGFiZWxfZ3JvdXAtYWRtaW4iOiJHcnVwcGVuYWRtaW4iLCJzaGlwbWVudC1kZXRhaWxzLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9zaGlwLXRvLWNvdW50cnkiOiJMw6RuZGVyY29kZSAoRW1wZsOkbmdlcikiLCJhZGRyZXNzLWJvb2stcmVwb3J0LXRlbXBsYXRlX2xhYmVsX2RldmljZV90eXBlX290aGVyIjoiYW5kZXJlIiwic2hpcG1lbnQtZGV0YWlscy1yZXBvcnQtdGVtcGxhdGVfbGFiZWxfZGVjbGFyZWQtY3VycmVuY3kiOiJBbmdlZ2ViZW4gV8OkaHJ1bmciLCJzaGlwbWVudC1kZXRhaWxzLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9kZXN0aW5hdGlvbi1jb2RlIjoiRW1wZsOkbmdlciBMw6RuZGVyY29kZSIsInNoaXBtZW50LWRldGFpbHMtcmVwb3J0LXRlbXBsYXRlX2xhYmVsX2R1dGlhYmxlIjoiWm9sbHBmbGljaHRpZyIsInNoaXBtZW50LWludm9pY2UtZGV0YWlscy1yZXBvcnQtdGVtcGxhdGVfbGFiZWxfc2hpcG1lbnQtYXdiIjoiU2VuZHVuZ3NudW1tZXIiLCJjb3Jwb3JhdGUtcGlja3VwLWhpc3RvcnktcmVwb3J0LXRlbXBsYXRlX2xhYmVsX3BpY2t1cC1hZGRyZXNzIjoiQWJob2xhZHJlc3NlIiwic2hpcG1lbnQtbm90aWZpY2F0aW9uLWRldGFpbHMtcmVwb3J0LXRlbXBsYXRlX2xhYmVsX2RlbGl2ZXJ5LWRlbGF5IjoiIiwic2hpcG1lbnQtZGV0YWlscy1yZXBvcnQtdGVtcGxhdGVfbGFiZWxfcHJvZHVjdC1jb2RlIjoiWnVzdGVsbG9wdGlvbiBDb2RlIiwiYWRkcmVzcy1ib29rLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9kZXZpY2VfdHlwZSI6IlRlbGVmb25hcnQiLCJzaGlwbWVudC1kZXRhaWxzLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9kdXRpZXMtYWNjb3VudCI6IlpvbGwiLCJpbXBvcnQtdXNlcnMtcmVwb3J0LXRlbXBsYXRlX2xhYmVsX3N0YXR1cy1uZXciOiIiLCJjb3Jwb3JhdGUtcGlja3VwLWhpc3RvcnktcmVwb3J0LXRlbXBsYXRlX2xhYmVsXzNyZF9wYXJ0eSI6IkFuZGVyZSBBcHBzIChBYmhvbHVuZ2VuIG5pY2h0IMO8YmVyIE15REhMKyBnZWJ1Y2h0KSIsImxpc3RpbmdfbGFiZWxfcmV0dXJuIjoiWnVyw7xjayIsImNvcnBvcmF0ZS1hY2NvdW50cy1yZXBvcnQtdGVtcGxhdGVfbGFiZWxfdGl0bGUiOiJBZG1pbiBPdmVydmlldyAtIGJ5IFBlcnNvbiIsInNoaXBtZW50LW5vdGlmaWNhdGlvbi1kZXRhaWxzLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9leGNlcHRpb24iOiJBdXNuYWhtZSIsInNoaXBtZW50LWludm9pY2UtZGV0YWlscy1yZXBvcnQtdGVtcGxhdGVfbGFiZWxfdGVybXMtb2YtdHJhZGUiOiJIYW5kZWxzYmVkaW5ndW5nZW4iLCJlb2QtcmVwb3J0LXRlbXBsYXRlX2xhYmVsX2xvY2FsLXByb2R1Y3QtY29kZSI6IlByb2R1a3Rjb2RlL1RyYWRlIFRlcm0iLCJzaGlwbWVudC1zdW1tYXJ5LXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF90b3RhbCI6Ikdlc2FtdCIsIkxCLWNvbHVtbnMtc2VsZWN0aW9uX2NvbC1uYW1lX2F2YWlsYWJsZS1maWVsZHMiOiJEaWVzZSBGZWxkZXIgbmljaHQgYW56ZWlnZW4iLCJkZXRhaWxzLXJldmlld19wYXJhZ3JhcGhfZGVsZXRlLXBvcHVwLXF1ZXN0aW9uIjoiV29sbGVuIFNpZSBkaWVzZW4gQmVyaWNodCB3aXJrbGljaCBsw7ZzY2hlbj8iLCJkZXRhaWxzLXJldmlld19zZWxlY3Qtb3B0aW9uX3BlbmRpbmctYWRtaW4tYXBwcm92YWwiOiJhdXNzdGVoZW5kZSBCZXdpbGxpZ3VuZyIsInNoaXBtZW50LWRldGFpbHMtcmVwb3J0LXRlbXBsYXRlX2xhYmVsX3R5cGUiOiJBcnQiLCJhZGRyZXNzLWJvb2stcmVwb3J0LXRlbXBsYXRlX2xhYmVsX2FjY291bnRfbnVtYmVyIjoiS3VuZGVubnVtbWVyIGRlcyBBYnNlbmRlcnMiLCJjb3Jwb3JhdGUtdXNlci1kZXRhaWwtcmVwb3J0LXRlbXBsYXRlX2xhc3QtbG9naW4iOiJMZXR6dGUocikgTG9naW4iLCJMQi1jb2x1bW5zLXNlbGVjdGlvbl9idXR0b25fdXAiOiJWb3IiLCJlb2QtcmVwb3J0LXRlbXBsYXRlX2xhYmVsX3BpY2tlZC11cCI6IkFiZ2Vob2x0IHZvbSBESEwgS3VyaWVyIiwiY29ycG9yYXRlLWFjY291bnRzLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9hY2NvdW50LW51bWJlciI6IkRITCBBY2NvdW50IE51bW1lciIsImNvcnBvcmF0ZS1zaGlwbWVudC1hcHByb3ZhbC1yZXBvcnQtdGVtcGxhdGVfbGFiZWxfd2F5YmlsbC1udW1iZXIiOiJTZW5kdW5nc251bW1lciIsImVvZC1yZXBvcnQtdGVtcGxhdGVfbGFiZWxfc2hpcHBlci1uYW1lIjoiIiwibGlzdGluZ19jb2wtbmFtZV9hd2ItbnVtYmVyIjoiU2VuZHVuZ3NudW1tZXIiLCJsaXN0aW5nX3NlbGVjdC1vcHRpb25fZGVsZXRlLXNlbGVjdGVkIjoiQXVzd2FobCBsw7ZzY2hlbiIsInNoaXBtZW50LWRldGFpbHMtcmVwb3J0LXRlbXBsYXRlX2xhYmVsX3NoaXAtZnJvbS1jb3VudHJ5IjoiTMOkbmRlcmNvZGUgKEFic2VuZGVyKSIsInNoaXBtZW50LWludm9pY2UtZGV0YWlscy1yZXBvcnQtdGVtcGxhdGVfbGFiZWxfY2l0eS1vZi1saWFiaWxpdHkiOiJVcnNwcnVuZ3NsYW5kIiwiZGV0YWlscy1yZXZpZXdfbGFiZWxfc3RhbmRhcmQtcGlja3VwLWhpc3RvcnktZGVzY3JpcHRpb24iOiI8ZGl2IGNsYXNzPVwiZXdmX2RpY3Rpb25hcnlfdmFsdWVcIj48ZGl2IGNsYXNzPSJtZXNzYWdlLXdyYXBwZXIiPjxwPkFiaG9sZGV0YWlsczo8XC9wPlxuPHVsPlxuPGxpPkJlc3TDpHRpZ3VuZ251bW1lciwgU3RhdHVzLCBFcnN0ZWxsZXIgdW5kIERhdHVtPFwvbGk+XG48bGk+QWJob2xrb250YWt0IHVuZCBBZHJlc3NkZXRhaWxzPFwvbGk+XG48bGk+S3VyaWVyaW5zdHJ1a3Rpb25lbjxcL2xpPlxuPGxpPlNlbmR1bmdzZGV0YWlsczxcL2xpPlxuPFwvdWw+XG48XC9kaXY+PFwvZGl2PiIsImFkZHJlc3MtYm9vay1yZXBvcnQtdGVtcGxhdGVfbGFiZWxfZGVmYXVsdF9kdXRpZXNfYW5kX3RheGVzIjoiU3RhbmRhcmQgRHV0aWVzIHVuZCBUYXhlcyIsImxpc3RpbmdfdmFsdWUtbGFiZWxfc3RhbmRhcmQtYWNjb3VudHMtYnktdXNlciI6IkFjY291bnQgTnVtYmVyIC0gYnkgUGVyc29uIiwic2hpcG1lbnQtZGV0YWlscy1yZXBvcnQtdGVtcGxhdGVfbGFiZWxfc2hpcC10by1zdWJ1cmIiOiJWb3JvcnQgKEVtcGbDpG5nZXIpIiwiYWRkcmVzcy1ib29rLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9jb3VudHJ5IjoiTGFuZCIsInNsaWRlci1oZWFkZXItc2xpZGUtMV9DTVMiOiJTdGFuZGFyZCBESEwgUmVwb3J0cyBoZXJ1bnRlcmxhZGVuIG9kZXIgZ2V3w7xuc2NodGUgRGV0YWlscyBoaW56dWbDvGdlbi4iLCJzaGlwbWVudC1zdW1tYXJ5LXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9sb2dpbi1pZCI6IkUtTWFpbCBBZHJlc3NlIiwiY29ycG9yYXRlLXVzZXItZGV0YWlsLXJlcG9ydC10ZW1wbGF0ZV9wZXJzb25hbC1hZGRyZXNzLWJvb2stdmlzaWJpbGl0eSI6IlBlcnPDtm5saWNoZXMgQWRyZXNzYnVjaCBadWdhbmciLCJpbXBvcnQtdXNlcnMtcmVwb3J0LXRlbXBsYXRlX2xhYmVsX3VzZXItZW1haWwiOiJFLU1haWwgQWRyZXNzZSIsInNoaXBtZW50LWludm9pY2UtZGV0YWlscy1yZXBvcnQtdGVtcGxhdGVfbGFiZWxfdmFsdWUtcGVyLXBpZWNlIjoiV2FyZW53ZXJ0IChwcm8gUGFja3N0w7xjaykiLCJsaXN0aW5nX3BhcmFncmFwaF9kZWxldGUtcG9wdXAtcXVlc3Rpb24iOiJNw7ZjaHRlbiBTaWUgZGllc2UvbiBSZXBvcnQvZSBsw7ZzY2hlbj8iLCJzaGlwbWVudC1kZXRhaWxzLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9zaGlwbWVudC1hd2IiOiJTZW5kdW5nc251bW1lciIsInNoaXBtZW50LWRldGFpbHMtcmVwb3J0LXRlbXBsYXRlX2xhYmVsX2R1dGllcy10YXhlcy1zcGxpdCI6IlN0ZXVlcm4gdW5kIEFiZ2FiZW4gc3BsaXR0ZW4iLCJsaXN0aW5nX2J1dHRvbl9hZGQtcmVwb3J0IjoiUmVwb3J0IGhpbnp1ZsO8Z2VuIiwibGlzdGluZ192YWx1ZS1sYWJlbF9zdGF0dXMtZW5hYmxlZCI6IkFrdGl2aWVydCIsImVvZC1yZXBvcnQtdGVtcGxhdGVfbGFiZWxfcGllY2VzIjoiUGFja3N0w7xjayIsImFkZHJlc3MtYm9vay1yZXBvcnQtdGVtcGxhdGVfbGFiZWxfcmVjZWl2ZXJfaWQiOiJOYW1lIiwic2hpcG1lbnQtc3VtbWFyeS1yZXBvcnQtdGVtcGxhdGVfbGFiZWxfZW1wdHktcmVwb3J0IjoiS2VpbmUgU2VuZHVuZ2VuIiwiY29ycG9yYXRlLXNoaXBtZW50LWFwcHJvdmFsLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9ncm91cC1pZCI6Ii4iLCJjb3Jwb3JhdGUtdXNlci1kZXRhaWwtcmVwb3J0LXRlbXBsYXRlX2N1c3RvbWVyLWFjY291bnQtbnVtYmVyIjoiS3VuZGVubnVtbWVyIiwiZW9kLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9kYXRlIjoiRGF0dW0iLCJsaXN0aW5nX2NvbC1uYW1lX3JlcG9ydC1uYW1lIjoiQmVyaWNodC9SZXBvcnQgTmFtZSIsImRldGFpbHMtcmV2aWV3X3NlbGVjdC1vcHRpb25fcmVhZHktdG8tc2hpcCI6IlZlcnNhbmRiZXJlaXQiLCJkZXRhaWxzLXJldmlld19sYWJlbF9yZXBvcnQtZGF0YSI6IkF1c2dld8OkaGx0ZSBGZWxkZXIvRGF0ZW4iLCJzaGlwbWVudC1kZXRhaWxzLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9zaGlwLWZyb20tc3RhdGUiOiJCZXppcmsgKEFic2VuZGVyKSIsInNoaXBtZW50LWRldGFpbHMtcmVwb3J0LXRlbXBsYXRlX2xhYmVsX3NoaXBtZW50LWNvbnRlbnQiOiJJbmhhbHRzYmVzY2hyZWlidW5nIiwibGlzdGluZ19zZWxlY3Qtb3B0aW9uX2Rpc2FibGUtc2VsZWN0ZWQiOiJBdXN3YWhsIGRvd25sb2FkZW4iLCJzaGlwbWVudC1zdW1tYXJ5LXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9kYXRlIjoiRGF0dW0iLCJzaGlwbWVudC1kZXRhaWxzLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9zaGlwLWZyb20tY2l0eSI6IlN0YWR0IChBYnNlbmRlcikiLCJzaGlwbWVudC1kZXRhaWxzLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9kdXRpZXMtdGF4ZXMtYWNjb3VudCI6IlpvbGwvU3RldWVybiBBY2NvdW50IiwiY29ycG9yYXRlLXBpY2t1cC1oaXN0b3J5LXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9pbnN1cmVkLXZhbHVlIjoiVmVyc2ljaGVydGVyIFdlcnQiLCJkZXRhaWxzLXJldmlld19hbGVydF9lcnJvci1pbi1jb2RlIjoiRWluIEZlaGxlciBpc3QgYXVmZ2V0cmV0ZW4iLCJzaGlwbWVudC1zdW1tYXJ5LXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF90aW1lIjoiWmVpdCIsImRldGFpbHMtcmV2aWV3X3NlbGVjdC1vcHRpb25fcmVhZHktdG8tcHJpbnQiOiJCZXJlaXQgenVtIERydWNrZW4iLCJjb3Jwb3JhdGUtc2hpcG1lbnQtYXBwcm92YWwtcmVwb3J0LXRlbXBsYXRlX2xhYmVsX2RlY2xpbmVkLWJ5IjoiRGVjbGluZWQgYnkiLCJlb2QtcmVwb3J0LXRlbXBsYXRlX2xhYmVsX2RhdGVfdXBwZXJjYXNlIjoiRGF0dW0iLCJkZXRhaWxzLXJldmlld19zZWxlY3Qtb3B0aW9uX2N1c3RvbS1kYXRlLXJhbmdlIjoiVmVyc2FuZHplaXRyYXVtIiwiZGV0YWlscy1yZXZpZXdfYmFja2VuZC1lcnJvcl9yZXBvcnQtY3JlYXRpb24tcHJvYmxlbXMiOiJFbnRzY2h1bGRpZ2VuIFNpZSAtIGVzIGlzdCB6dXIgWmVpdCBuaWNodCBtw7ZnbGljaCBJaHJlbiBSZXBvcnQgenUgZ2VuZXJpZXJlbi4gVmVyc3VjaGVuIFNpZSBlcyBzcMOkdGVyIGVybmV1dCBvZGVyIGtvbnRha3RpZXJlbiBTaWUgZGVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuIiwic2hpcG1lbnQtZGV0YWlscy1yZXBvcnQtdGVtcGxhdGVfbGFiZWxfZ3JvdXAtaWQiOiJFeHBvcnQvIFJldHVybiBQYWFyZSIsImNvcnBvcmF0ZS1zaGlwbWVudC1hcHByb3ZhbC1yZXBvcnQtdGVtcGxhdGVfbGFiZWxfY29udGVudCI6IkluaGFsdHNiZXNjaHJlaWJ1bmciLCJzaGlwbWVudC1zdW1tYXJ5LXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9zdW1tYXJ5IjoiWnVzYW1tZW5mYXNzdW5nIiwiaW1wb3J0LXVzZXJzLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9zdGF0dXMtZmFpbGVkIjoibmljaHQgZXJmb2xncmVpY2giLCJjb3Jwb3JhdGUtYWNjb3VudHMtcmVwb3J0LXRlbXBsYXRlX2xhYmVsX2xvZ2luIjoiLiIsImxpc3RpbmdfaGVhZGVyX2RlbGV0ZS1zaW5nbGUtcG9wdXAiOiJCZXJpY2h0IGzDtnNjaGVuIiwiaW1wb3J0LXVzZXJzLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9tZXNzYWdlIjoiR3J1bmQiLCJhZGRyZXNzLWJvb2stcmVwb3J0LXRlbXBsYXRlX2xhYmVsX2lzX3Jlc2lkZW50YWxfYWRkcmVzcyI6IlByaXZhdGFkcmVzc2UiLCJkZXRhaWxzLXJldmlld19sYWJlbF9zdGFuZGFyZC1mdWxsLXNoaXBtZW50LWRlc2NyaXB0aW9uIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+PGRpdiBjbGFzcz0ibWVzc2FnZS13cmFwcGVyIj48cD5TZW5kdW5nc2RldGFpbHMgZsO8cjo8XC9wPlxuPHVsPlxuPGxpPlZlcnBhY2t1bmcvIFBhY2tzdMO8Y2tlPFwvbGk+XG48bGk+Wm9sbHJlY2hudW5nZW48XC9saT5cbjxsaT5XZXIgd3VyZGUgYmVuYWNocmljaHRpZ3Q8XC9saT5cbjxcL3VsPlxuPFwvZGl2PjxcL2Rpdj4iLCJjb3Jwb3JhdGUtcGlja3VwLWhpc3RvcnktcmVwb3J0LXRlbXBsYXRlX2xhYmVsX2FwcGxpY2F0aW9uIjoiTXlESEwrIHVuZCBhbmRlcmUgQXBwcyIsImVvZC1yZXBvcnQtdGVtcGxhdGVfbGFiZWxfdG8tY2l0eS1jb3VudHJ5IjoiVmVyc2VuZGVuIG5hY2ggT3J0L0xhbmQiLCJsaXN0aW5nX2xhYmVsX3Bob25lLXdpdGhvdXQtZXh0ZW5zaW9uIjoie2NvdW50cnlQaG9uZUNvZGV9e2xvY2FsUGhvbmVOdW1iZXJ9IiwiYWRkcmVzcy1ib29rLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9kZXZpY2VfdHlwZV9tb2JpbGUiOiJIYW5keSIsImNvcnBvcmF0ZS11c2VyLWRldGFpbC1yZXBvcnQtdGVtcGxhdGVfYWRkcmVzcy1ib29rLXZpc2liaWxpdHkiOiJGaXJtYSBBZHJlc3NidWNoIFp1Z2FuZyIsImNvcnBvcmF0ZS1waWNrdXAtaGlzdG9yeS1yZXBvcnQtdGVtcGxhdGVfbGFiZWxfcmVhZHktdGltZSI6IlNlbmR1bmcgYWJob2xiZXJlaXQgYWIiLCJsaXN0aW5nX3ZhbHVlLWxhYmVsX2ltcG9ydC11c2VycyI6IkNvcnAgQWNjb3VudCAtIE1pZ3JhdGVkIFBlb3BsZSIsImFkZHJlc3MtYm9vay1yZXBvcnQtdGVtcGxhdGVfbGFiZWxfY3VycmVuY3kiOiJBbmdlZ2ViZW5lIFfDpGhydW5nIHZvbiBXZXJ0IiwiY29ycG9yYXRlLXBpY2t1cC1oaXN0b3J5LXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9wcm9kdWN0LWNvZGUiOiJQcm9kdWt0Y29kZSIsImRldGFpbHMtcmV2aWV3X2JhY2tlbmQtZXJyb3JfcmVwb3J0LW5vdC1mb3VuZCI6IktlaW5lIEVyZ2Vibmlzc2UgZ2VmdW5kZW4uIiwiYWRkcmVzcy1ib29rLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9ub3RlcyI6Ik5vdGl6ZW4iLCJhZGRyZXNzLWJvb2stcmVwb3J0LXRlbXBsYXRlX2xhYmVsX3JlZmVyZW5jZSI6IlNlbmR1bmdzcmVmZXJlbnoiLCJzaGlwbWVudC1ub3RpZmljYXRpb24tZGV0YWlscy1yZXBvcnQtdGVtcGxhdGVfbGFiZWxfZW1haWwtc21zIjoiQmVuYWNocmljaHRpZ3QiLCJzaGlwbWVudC1kZXRhaWxzLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9zaGlwLWZyb20tY29udGFjdCI6IktvbnRha3QgKEFic2VuZGVyKSIsInNoaXBtZW50LXBhY2thZ2UtZGV0YWlscy1yZXBvcnQtdGVtcGxhdGVfbGFiZWxfcGllY2UtcmVmZXJlbmNlIjoiUGFja3N0w7xja3JlZmVyZW56IiwiZGV0YWlscy1yZXZpZXdfbGFiZWxfc3RhbmRhcmQtaW1wb3J0LXVzZXJzLWRlc2NyaXB0aW9uIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+PGRpdiBjbGFzcz0ibWVzc2FnZS13cmFwcGVyIj48cD5SZXBvcnQgaXN0IGbDvHIgZGllIFBlcnNvbmVuLCBkaWUgYmVyZWl0cyBpbiBNeURITCsgcmVnaXN0cmllcnQgc2luZCB1bmQgbnVuIHp1IGVpbmVtIENvcnBvcmF0ZSBBY2NvdW50IG1pZ3JpZXJ0IHd1cmRlbjxcL3A+XG48cD7CoDxcL3A+XG48cD5EaWVzZXIgQmVyaWNodCBiZWluaGFsdGV0OjxcL3A+XG48dWw+XG48bGk+RGF0ZWluYW1lIHVuZCBEYXR1bSBob2NobGFkZW48XC9saT5cbjxsaT5EaWUgRS1NYWlsIEFkcmVzc2UgamVkZXMgQmVudXR6ZXJzPFwvbGk+XG48bGk+U3RhdHVzIGhvY2hsYWRlbiB1bmQgR3LDvG5kZSBmw7xyIEZlaGxlciAoZmFsbHMgenV0cmVmZmVuZCk8XC9saT5cbjxcL3VsPlxuPFwvZGl2PjxcL2Rpdj4iLCJkZXRhaWxzLXJldmlld19sYWJlbF9yZXBvcnQiOiJSZXBvcnQiLCJzaGlwbWVudC1ub3RpZmljYXRpb24tZGV0YWlscy1yZXBvcnQtdGVtcGxhdGVfbGFiZWxfY3VzdG9tcy1kZXBheSI6IkNsZWFyYW5jZSBFdmVudCIsImRldGFpbHMtcmV2aWV3X2xhYmVsX3N0YW5kYXJkLXBhY2thZ2UtZGVzY3JpcHRpb24iOiI8ZGl2IGNsYXNzPVwiZXdmX2RpY3Rpb25hcnlfdmFsdWVcIj48ZGl2IGNsYXNzPSJtZXNzYWdlLXdyYXBwZXIiPjx1bD5cbjxsaT5EZXRhaWxzIHp1ciBWZXJwYWNrdW5nc2dydXBwZSAoQW56YWhsIGRlciBQYWNrc3TDvGNrZSBlaW5lciBTZW5kdW5nKTxcL2xpPlxuPGxpPkRldGFpbHMgenVyIEJlbmFjaHJpY2h0aWd1bmdzZ3J1cHBlICh3ZXIgd3VyZGUgYmVuYWNocmljaHRpZ3QpPFwvbGk+XG48bGk+RGV0YWlscyB6dXIgWm9sbHJlY2hudW5nIChCZXNjaHJlaWJ1bmcgZGVyIFdhcmUgdW5kIFRyYW5zcG9ydGJlZGluZ3VuZ2VuIGbDvHIgamVkZXMgUGFja3N0w7xjayk8XC9saT5cbjxcL3VsPlxuPFwvZGl2PjxcL2Rpdj4iLCJhZGRyZXNzLWJvb2stcmVwb3J0LXRlbXBsYXRlX2xhYmVsX3NoaXBtZW50X2Zyb20iOiJGYXZvdXJpdCBBYnNlbmRlciIsImNvcnBvcmF0ZS11c2VyLWRldGFpbC1yZXBvcnQtdGVtcGxhdGVfc2hpcHBlci1yZWZlcmVuY2UiOiJTZW5kdW5nc3JlZmVyZW56IiwiZGV0YWlscy1yZXZpZXdfYmFja2VuZF9lcnJvcl9hY2Nlc3MtZm9yYmlkZGVuIjoiRGllc2UgUGVyc29uIGhhdCBrZWluZW4gWnVncmlmZiBhdWYgZGllIFJlcG9ydHMuIiwiZGV0YWlscy1yZXZpZXdfc2VsZWN0LW9wdGlvbl9sYXN0LTctZGF5cyI6IkxldHp0ZShyKSA3IFRhZ2UiLCJzaGlwbWVudC1kZXRhaWxzLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF90b3RhbC1waWVjZXMiOiJHZXNhbXRhbnphaGwgUGFja3N0w7xja2UiLCJzaGlwbWVudC1kZXRhaWxzLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF90YXhlcy1hY2NvdW50IjoiU3RldWVybiBLdW5kZW5udW1tZXIiLCJzaGlwbWVudC1kZXRhaWxzLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9wYXltZW50LXR5cGUiOiJaYWhsdW5nc2FydCIsImRldGFpbHMtcmV2aWV3X3ZhbHVlLWxhYmVsX3JlcG9ydC1mb3JtYXQiOiJGb3JtYXQiLCJkZXRhaWxzLXJldmlld19sYWJlbF9yZXBvcnQtb24iOiJWZXJzYW5kemVpdHJhdW0iLCJpbXBvcnQtdXNlcnMtcmVwb3J0LXRlbXBsYXRlX2xhYmVsX3N0YXR1cy1zdWNjZXNzIjoiaG9jaGdlbGFkZW4iLCJkZXRhaWxzLXJldmlld19zZWxlY3Qtb3B0aW9uX2RlY2xpbmVkLWJ5LXNoaXBwZXIiOiJBYmdlbGVobnQgdm9uIGF1dG9yaXNpZXJ0ZW0gRW1wZsOkbmdlciIsInNoaXBtZW50LWRldGFpbHMtcmVwb3J0LXRlbXBsYXRlX2xhYmVsX2luc3VyZWQtdmFsdWUiOiJWZXJzaWNoZXJ0ZXIgV2VydCIsImxpc3RpbmdfYnV0dG9uX2FjdGlvbnMiOiJBa3Rpb25lbiIsImltcG9ydC11c2Vycy1yZXBvcnQtdGVtcGxhdGVfbGFiZWxfZmlsZS1uYW1lIjoiRGF0ZWkgTmFtZSIsInNoaXBtZW50LXN1bW1hcnktcmVwb3J0LXRlbXBsYXRlX2xhYmVsX3JvdXRlIjoiUm91dGUiLCJhZGRyZXNzLWJvb2stcmVwb3J0LXRlbXBsYXRlX2xhYmVsX3NwbGl0X2R1dGllc190YXhlcyI6IlN0ZXVlcm4gdW5kIEFiZ2FiZW4gc3BsaXR0ZW4iLCJpbXBvcnQtdXNlcnMtcmVwb3J0LXRlbXBsYXRlX2xhYmVsX3VwbG9hZC1kYXRlIjoiaG9jaGxhZGVuIERhdHVtIiwiY29ycG9yYXRlLXNoaXBtZW50LXJlZmVyZW5jZS1yZXBvcnQtdGVtcGxhdGVfbGFiZWxfdG90YWwtcmVmZXJlbmNlcyI6IlNlbmR1bmcgR2VzYW10IiwibGlzdGluZ192YWx1ZS1sYWJlbF9hcHByb3ZhbCI6IkJlc3TDpHRpZ3VuZyBSZXBvcnQiLCJMQi1jb2x1bW5zLXNlbGVjdGlvbl9idXR0b25fYWRkIjoiSGluenVmw7xnZW4iLCJkZXRhaWxzLXJldmlld19zZWxlY3Qtb3B0aW9uX3NlbGVjdC1vbmUiOiJBdXN3w6RobGVuICIsInNoaXBtZW50LXBhY2thZ2UtZGV0YWlscy1yZXBvcnQtdGVtcGxhdGVfbGFiZWxfaGVpZ2h0IjoiSMO2aGUiLCJzaGlwbWVudC1kZXRhaWxzLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9hY2NvdW50LW51bWJlciI6IlZlcnNlbmRlciBBY2NvdW50IiwibGlzdGluZ192YWx1ZS1sYWJlbF9zdGFuZGFyZC1hZGRyZXNzLWJvb2siOiJBZGRyZXNzIEJvb2sgUmVwb3J0IiwibGlzdGluZ19sYWJlbF9pbnRlcm5hdGlvbmFsIjoiSW50ZXJuYXRpb25hbCIsImRldGFpbHMtcmV2aWV3X2xhYmVsX3N0YW5kYXJkLWNvcnBvcmF0ZS1zaGlwbWVudC1yZWZlcmVuY2UtcmVwb3J0LWRlc2NyaXB0aW9uIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+PGRpdiBjbGFzcz0ibWVzc2FnZS13cmFwcGVyIj48cD5adXNhbW1lbmZhc3NlbmRlciBSZXBvcnQgZsO8cjo8XC9wPlxuPHVsPlxuPGxpPkUtTWFpbCBBZHJlc3NlPFwvbGk+XG48bGk+TmFtZTxcL2xpPlxuPGxpPlNlbmR1bmdzcmVmZXJlbno8XC9saT5cbjxcL3VsPlxuPFwvZGl2PjxcL2Rpdj4iLCJzaGlwbWVudC1kZXRhaWxzLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9zaGlwbWVudC1udW1iZXIiOiJTZW5kdW5nc251bW1lciIsImRldGFpbHMtcmV2aWV3X21zZ19yZXBvcnQtYWxyZWFkeS1leGlzdHMiOiJOYW1lIGJlcmVpdHMgdmVyZ2ViZW4iLCJkZXRhaWxzLXJldmlld19zZWxlY3Qtb3B0aW9uX2FsbC1wYXltZW50LW9wdGlvbnMiOiJBdXN3YWhsIEFsbGUiLCJjb3Jwb3JhdGUtc2hpcG1lbnQtYXBwcm92YWwtcmVwb3J0LXRlbXBsYXRlX2xhYmVsX2RlY2xpbmUtcmVhc29uIjoiR3J1bmQgZGVyIEFibGVobnVuZyIsImRldGFpbHMtcmV2aWV3X2FsZXJ0X2RhdGFiYXNlLWlzLW5vdC1hdmFpbGFibGUiOiJTZXJ2aWNlIGRlemVpdCBuaWNodCB2ZXJmw7xnYmFyIiwibGlzdGluZ19zdWItaGVhZGVyX215LXJlcG9ydHMiOiJNZWluIFJlcG9ydCIsImVvZC1yZXBvcnQtdGVtcGxhdGVfbGFiZWxfYXdiIjoiU2VuZHVuZ3NudW1tZXIiLCJkZXRhaWxzLXJldmlld192YWx1ZS1sYWJlbF9yZXBvcnQtdHlwZSI6IlJlcG9ydHR5cCIsInNoaXBtZW50LWludm9pY2UtZGV0YWlscy1yZXBvcnQtdGVtcGxhdGVfbGFiZWxfc2hpcG1lbnQtaWQiOiJWb3LDvGJlcmdlaGVuZGUgSUQiLCJzaGlwbWVudC1kZXRhaWxzLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9zaGlwLWZyb20tY29tcGFueSI6IkZpcm1hIChBYnNlbmRlcikiLCJkZXRhaWxzLXJldmlld19zZWxlY3Qtb3B0aW9uX2FwcHJvdmVkIjoiR2VuZWhtaWd0IiwiY29ycG9yYXRlLXVzZXItZGV0YWlsLXJlcG9ydC10ZW1wbGF0ZV9ub24tZG9jdW1lbnQtdHlwZS1hcHByb3ZhbCI6IkJlc3TDpHRpZ3VuZyBFcmZvcmRlcmxpY2ggKFNlbmR1bmcpIiwibGlzdGluZ19jb2wtbmFtZV9yZXBvcnQtdHlwZSI6IlJlcG9ydHR5cCIsInNoaXBtZW50LXN1bW1hcnktcmVwb3J0LXRlbXBsYXRlX2xhYmVsX3ByaW50ZWQiOiJEYXR1bS8gVWhyemVpdCBnZWRydWNrdCIsImxpc3RpbmdfdmFsdWUtbGFiZWxfdXNlci1kZXRhaWwtZGVzY3JpcHRpb24iOiI8ZGl2IGNsYXNzPVwiZXdmX2RpY3Rpb25hcnlfdmFsdWVcIj48ZGl2IGNsYXNzPSJtZXNzYWdlLXdyYXBwZXIiPjxwPkRpZXNlciBCZXJpY2h0IGJlaW5oYWx0ZXQgcHJvIEJlbnV0emVyIERldGFpbHMgenU6PFwvcD5cbjx1bD5cbjxsaT5Lb250YWt0ZGV0YWlscywgR3J1cHBlbm5hbWUgdW5kIFJvbGxlPFwvbGk+XG48bGk+UmVnaXN0cmllcnVuZywgZ2XDpG5kZXJ0ZSB1bmQgbGV0enRlIExvZ2luLVplaXRwdW5rdGU8XC9saT5cbjxsaT5FaW5zdGVsbHVuZ2VuIGbDvHIgUmVmZXJlbnplbiwgQWRyZXNzYsO8Y2hlcm4sIFNlbmR1bmdzdHlwIHVuZCBCZXN0w6R0aWd1bmdzLUJlbmFjaHJpY2h0aWd1bmdlbjxcL2xpPlxuPFwvdWw+XG48XC9kaXY+PFwvZGl2PiIsImxpc3RpbmdfdmFsdWUtbGFiZWxfdXNlci1kZXRhaWwiOiJBZG1pbiBPdmVydmlldyAtIGJ5IFBlcnNvbiIsImxpc3RpbmdfdmFsdWUtbGFiZWxfc3RhdHVzLWRpc2FibGVkIjoiR2VzcGVycnQiLCJjb3Jwb3JhdGUtYWNjb3VudHMtcmVwb3J0LXRlbXBsYXRlX2xhYmVsX3VzZXItZW1haWwiOiJFLU1haWwgQWRyZXNzZSIsImNvcnBvcmF0ZS1waWNrdXAtaGlzdG9yeS1yZXBvcnQtdGVtcGxhdGVfbGFiZWxfdXNlci1uYW1lIjoiTmFtZSAoRXJzdGVsbHQgdm9uKSIsImVvZC1yZXBvcnQtdGVtcGxhdGVfbGFiZWxfd2VpZ2h0IjoiR2VzYW10Z2V3aWNodCAoUHJvIFNlbmR1bmcpIiwiZGV0YWlscy1yZXZpZXdfc2VsZWN0LW9wdGlvbl9waWNrZWQtdXAiOiJQaWNrZWQgVXAiLCJzaGlwbWVudC1kZXRhaWxzLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9zaGlwLXRvLWNvdW50cnktbmFtZSI6IkxhbmQgKEVtcGbDpG5nZXIpIiwiZGV0YWlscy1yZXZpZXdfbGFiZWxfc3RhbmRhcmQtc2hpcG1lbnQtc3VtbWFyeS1kZXNjcmlwdGlvbiI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPjxkaXYgY2xhc3M9Im1lc3NhZ2Utd3JhcHBlciI+PHA+w5xiZXJzaWNodHNkYXRlbiBmw7xyOjxcL3A+XG48dWw+XG48bGk+QW56YWhsIGRlciBQYWNrc3TDvGNrZTxcL2xpPlxuPGxpPkdlc2FtdGdld2ljaHQ8XC9saT5cbjxsaT5HZXNhbXRiZXRyYWcgZGVyIGFuenVuZWhtZW5kZW4gS29zdGVuPFwvbGk+XG48bGk+WmVpdG9wdGlvbmVuPFwvbGk+XG48XC91bD5cbjxcL2Rpdj48XC9kaXY+Iiwic2hpcG1lbnQtcGFja2FnZS1kZXRhaWxzLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9zaGlwbWVudC1pZCI6IlZvcsO8YmVyZ2VoZW5kZSBJRCIsImxpc3RpbmdfdmFsdWUtbGFiZWxfc2hpcG1lbnQtcmVmZXJlbmNlcy1ieS11c2VyIjoiU2hpcG1lbnQgUmVmZXJlbmNlcyBSZXBvcnQgLSBieSBQZXJzb24iLCJjb3Jwb3JhdGUtc2hpcG1lbnQtcmVmZXJlbmNlLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF91c2VyLW5hbWUiOiJOYW1lIiwiZGV0YWlscy1yZXZpZXdfYnV0dG9uX2RlbGV0ZSI6IkzDtnNjaGVuIiwiZGV0YWlscy1yZXZpZXdfc2VsZWN0LW9wdGlvbl9jYW5jZWxsZWQiOiJHZWzDtnNjaHQiLCJjb3Jwb3JhdGUtdXNlci1kZXRhaWwtcmVwb3J0LXRlbXBsYXRlX2VtYWlsLWFwcHJvdmFsLW5vdGlmaWNhdGlvbiI6IkJlbmFjaHJpY2h0aWd1bmcgenUgYXVzc3RlaGVuZGVuIEJlc3TDpHRpZ3VuZ2VuIiwiYWRkcmVzcy1ib29rLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF96aXAiOiJQb3N0bGVpdHphaGwiLCJhZGRyZXNzLWJvb2stcmVwb3J0LXRlbXBsYXRlX2xhYmVsX2ZheCI6IkZheCIsImRldGFpbHMtcmV2aWV3X2JhY2tlbmQtZXJyb3JfaW52YWxpZC1wcmV2aWV3LWZvcm1hdCI6Im51ciBQREYgIiwiYWRkcmVzcy1ib29rLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF92YXRfdGF4IjoiTXdTdCBHZXNhbXQiLCJzaGlwbWVudC1kZXRhaWxzLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF90b3RhbC1kaW0td2VpZ2h0IjoiR2VzYW10IFZvbHVtZW5nZXdpY2h0IiwiaW1wb3J0LXVzZXJzLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9zdGF0dXMtc2tpcHBlZCI6IiIsInNoaXBtZW50LWRldGFpbHMtcmVwb3J0LXRlbXBsYXRlX2xhYmVsX3NoaXAtZnJvbS12YXgtdGF4IjoiTWVocndlcnRzdGV1ZXIgKEFic2VuZGVyKSIsInNoaXBtZW50LXN1bW1hcnktcmVwb3J0LXRlbXBsYXRlX2xhYmVsX2FjY291bnQtbnVtYmVycyI6IkFjY291bnQgTnVtbWVyKG4pIiwiY29ycG9yYXRlLXVzZXItZGV0YWlsLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF91c2VyLWVtYWlsIjoiRS1NYWlsIEFkcmVzc2UiLCJjb3Jwb3JhdGUtc2hpcG1lbnQtYXBwcm92YWwtcmVwb3J0LXRlbXBsYXRlX2xhYmVsX2FwcHJvdmVyLWxvZ2luIjoiRS1NYWlsIEFkcmVzc2UgKEdlbmVobWluZ2VuZGVyKSIsInNoaXBtZW50LXBhY2thZ2UtZGV0YWlscy1yZXBvcnQtdGVtcGxhdGVfbGFiZWxfcGllY2Utd2VpZ2h0IjoiUGFja3N0w7xjay1HZXdpY2h0IiwiZGV0YWlscy1yZXZpZXdfc2VsZWN0LW9wdGlvbl9hc3NpZ25lZC10by1tZSI6IkJlYXJiZWl0dW5nIGR1cmNoIG1pY2giLCJzaGlwbWVudC1kZXRhaWxzLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9zdGF0dXMiOiJTdGF0dXMiLCJkZXRhaWxzLXJldmlld19sYWJlbF9zdGFuZGFyZC1ub3RpZmljYXRpb24tZGVzY3JpcHRpb24iOiJEZXRhaWxzIHp1ciBCZW5hY2hyaWNodGlndW5nICh3ZXIgYmVuYWNocmljaHRpZ3Qgd3VyZGUpIiwiY29ycG9yYXRlLXBpY2t1cC1oaXN0b3J5LXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9zdGF0dXMiOiJTdGF0dXMiLCJjb3Jwb3JhdGUtcGlja3VwLWhpc3RvcnktcmVwb3J0LXRlbXBsYXRlX2xhYmVsX3BpY2t1cC1jb21wYW55IjoiRmlybWEgKEFiaG9sdW5nKSIsInNoaXBtZW50LWRldGFpbHMtcmVwb3J0LXRlbXBsYXRlX2xhYmVsX3NoaXAtdG8tYWRkcmVzczIiOiJBZHJlc3NlIDIgKEVtcGbDpG5nZXIpIiwiZGV0YWlscy1yZXZpZXdfc2VsZWN0LW9wdGlvbl9wZW5kaW5nLXJlcXVlc3Rvci1hcHByb3ZhbCI6ImF1c3N0ZWhlbmRlIEdlbmVobWlndW5nIHZvbiBBdWZ0cmFnc2Fic2VuZGVyIiwic2hpcG1lbnQtZGV0YWlscy1yZXBvcnQtdGVtcGxhdGVfbGFiZWxfc2hpcC10by1hZGRyZXNzMyI6IkFkcmVzc2UgMyAoRW1wZsOkbmdlcikiLCJzaGlwbWVudC1pbnZvaWNlLWRldGFpbHMtcmVwb3J0LXRlbXBsYXRlX2xhYmVsX2lzby1jb3VudHJ5LWNvZGUtb3JpZ2luIjoiTMOkbmRlcmNvZGUiLCJzaGlwbWVudC1zdW1tYXJ5LXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9zaGlwbWVudC1jb3VudCI6Ikdlc2FtdGFuemFobCBkZXIgUGFja3N0w7xja2UiLCJzaGlwbWVudC1kZXRhaWxzLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9zaGlwLXRvLWFkZHJlc3MxIjoiQWRyZXNzZSAxIChFbXBmw6RuZ2VyKSIsIkxCLWNvbHVtbnMtc2VsZWN0aW9uX2NvbC1uYW1lX3NlbGVjdGVkLWZpZWxkcyI6IkRpZXNlIEZlbGRlciBhbnplaWdlbiIsImNvcnBvcmF0ZS11c2VyLWRldGFpbC1yZXBvcnQtdGVtcGxhdGVfZ3JvdXAtbmFtZSI6IkdydXBwZW5uYW1lIiwic2hpcG1lbnQtaW52b2ljZS1kZXRhaWxzLXJlcG9ydC10aXRsZS1vZi1zaWduZXIiOiJUaXRlbCBkZXMgVW50ZXJ6ZWljaG5lcnMiLCJzaGlwbWVudC1pbnZvaWNlLWRldGFpbHMtcmVwb3J0LXRlbXBsYXRlX2xhYmVsX2dyb3NzLXdlaWdodC1wZXItcGllY2UiOiJCcnV0dG9nZXdpY2h0IChwcm8gUGFja3N0w7xjaykiLCJkZXRhaWxzLXJldmlld19saW5rX2JhY2stdG8tbGlzdCI6Inp1csO8Y2siLCJkZXRhaWxzLXJldmlld192YWx1ZS1sYWJlbF9yZXBvcnQtbmFtZS1wbGFjZWhvbGRlciI6IkdlYmVuIFNpZSBkaWVzZW0gS3VuZGVucmVwb3J0IGVpbmVuIE5hbWVuIiwiZW9kLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9vcmlnaW4tY29kZSI6IkFiaG9sb3J0IiwiYWRkcmVzcy1ib29rLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9kZXZpY2VfdHlwZV9vZmZpY2UiOiJCw7xybyIsImNvcnBvcmF0ZS1waWNrdXAtaGlzdG9yeS1yZXBvcnQtdGVtcGxhdGVfbGFiZWxfaW5zdXJlZC1jdXJyZW5jeSI6IlZlcnNpY2hlcnRlciBXZXJ0IFfDpGhydW5nIiwiYWRkcmVzcy1ib29rLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9kZXZpY2VfdHlwZV9mYXgiOiJGYXgiLCJhZGRyZXNzLWJvb2stcmVwb3J0LXRlbXBsYXRlX2xhYmVsX3Rlcm1zLW9mLXRyYWRlIjoiV2FyZW50YXJpZm51bW1lci9UcmFkZSBUZXJtIiwiZW9kLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9lb2QtcmVwb3J0LXRpdGxlIjoiQ291cmllciBSZXBvcnQgKFRhZ2VzYWJzY2hsdXNzKSIsImxpc3Rpbmdfc3ViLWhlYWRlcl9wcmVkZWZpbmVkLXJlcG9ydHMiOiI8ZGl2IGNsYXNzPVwiZXdmX2RpY3Rpb25hcnlfdmFsdWVcIj5ESEwgUmVwb3J0czxicj5cbjxcL2Rpdj4iLCJjb3Jwb3JhdGUtc2hpcG1lbnQtYXBwcm92YWwtcmVwb3J0LXRlbXBsYXRlX2xhYmVsX3Byb2R1Y3QtdHlwZSI6Ilp1c3RlbGxvcHRpb24iLCJsaXN0aW5nX2xhYmVsX2RvbWVzdGljIjoiSW5sYW5kIiwiZGV0YWlscy1yZXZpZXdfaGVhZGVyX2RlbGV0ZS1wb3B1cCI6IkJlcmljaHQgbMO2c2NoZW4iLCJzaGlwbWVudC1kZXRhaWxzLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9wcm9kdWN0LXR5cGUiOiJadXN0ZWxsb3B0aW9uIEFydCIsImNvcnBvcmF0ZS1waWNrdXAtaGlzdG9yeS1yZXBvcnQtdGVtcGxhdGVfbGFiZWxfcGlja3VwLWxvY2F0aW9uIjoiQWJob2x1bmcgT3J0IiwiYWRkcmVzcy1ib29rLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9ubyI6Ik5laW4iLCJjb3Jwb3JhdGUtcGlja3VwLWhpc3RvcnktcmVwb3J0LXRlbXBsYXRlX2xhYmVsX3BpY2t1cC1lbWFpbCI6IkUtTWFpbCBBZHJlc3NlIChBYmhvbHVuZykiLCJkZXRhaWxzLXJldmlld19zZWxlY3Qtb3B0aW9uX2xhc3QtOTAtZGF5cyI6IkxldHp0ZShyKSA5MCBUYWdlIiwic2hpcG1lbnQtZGV0YWlscy1yZXBvcnQtdGVtcGxhdGVfbGFiZWxfc2hpcC10by1waG9uZSI6IlRlbGVmb25udW1tZXIgKEVtcGbDpG5nZXIpIiwibGlzdGluZ19hbGVydF9zdWNjZXNzLWRlbGV0ZWQtcmVwb3J0cyI6IntyZXBvcnRzQ291bnR9IGdlbMO2c2NodCIsImNvcnBvcmF0ZS1hY2NvdW50cy1yZXBvcnQtdGVtcGxhdGVfbGFiZWxfdXNlci1uYW1lIjoiTmFtZSIsImFkZHJlc3MtYm9vay1yZXBvcnQtdGVtcGxhdGVfbGFiZWxfY29tcGFueV9uYW1lIjoiRmlybWEiLCJjb3Jwb3JhdGUtc2hpcG1lbnQtYXBwcm92YWwtcmVwb3J0LXRlbXBsYXRlX2xhYmVsX2RlY2xhcmVkLXZhbHVlIjoiRGVrbGFyaWVydGVyIFdlcnQiLCJzaGlwbWVudC1ub3RpZmljYXRpb24tZGV0YWlscy1yZXBvcnQtdGVtcGxhdGVfbGFiZWxfcmVjaXBpZW50LW5hbWUiOiJFbXBmw6RuZ2VyIE5hbWUiLCJkZXRhaWxzLXJldmlld19zZWxlY3Qtb3B0aW9uX3RvZGF5IjoiaGV1dGUiLCJzaGlwbWVudC1pbnZvaWNlLWRldGFpbHMtcmVwb3J0LXRlbXBsYXRlX2xhYmVsX2Ftb3VudC1vZi1wb3NpdGlvbiI6IldhcmVud2VydCIsImRldGFpbHMtcmV2aWV3X3NlbGVjdC1vcHRpb25fc2F2ZWQtYnktbWUiOiJHZXNwZWljaGVydCIsInNoaXBtZW50LWRldGFpbHMtcmVwb3J0LXRlbXBsYXRlX2xhYmVsX3JlbGF0ZWQtdG8iOiJCZXpvZ2VuIGF1ZiIsIkxCLWNvbHVtbnMtc2VsZWN0aW9uX2J1dHRvbl9kb3duIjoiWnVyw7xjayIsImFkZHJlc3MtYm9vay1yZXBvcnQtdGVtcGxhdGVfbGFiZWxfYXNzaWduZWRfdG8iOiJGYXZvdXJpdCIsImVvZC1yZXBvcnQtdGVtcGxhdGVfbGFiZWxfc2VydmljZXMiOiJadXN0ZWxsb3B0aW9uIiwiYWRkcmVzcy1ib29rLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9lbWFpbDEiOiJFLU1haWwgQWRyZXNzZSAyIiwiTEItY29sdW1ucy1zZWxlY3Rpb25fYnV0dG9uX2ZpcnN0IjoiRXJzdGVucyIsImRldGFpbHMtcmV2aWV3X3NlbGVjdC1vcHRpb25fbGFzdC0zMC1kYXlzIjoiTGV0enRlKHIpIDMwIFRhZ2UiLCJhZGRyZXNzLWJvb2stcmVwb3J0LXRlbXBsYXRlX2xhYmVsX3RheF9hbHRlcm5hdGVfYWNjX25hbWUiOiJTdGFuZGFyZCBUYXhlcyIsInNoaXBtZW50LWRldGFpbHMtcmVwb3J0LXRlbXBsYXRlX2xhYmVsX3NoaXAtdG8temlwIjoiUG9zdGxlaXR6YWhsIChFbXBmw6RuZ2VyKSIsImxpc3RpbmdfbGFiZWxfZW5kLXVzZXIiOiJHcnVwcGVubWl0Z2xpZWQiLCJhZGRyZXNzLWJvb2stcmVwb3J0LXRlbXBsYXRlX2xhYmVsX2VtYWlsNCI6IkUtTWFpbCBBZHJlc3NlIDUiLCJkZXRhaWxzLXJldmlld19idXR0b25fcmVwb3J0LXByZXZpZXciOiJWb3JzY2hhdSIsInNoaXBtZW50LWRldGFpbHMtcmVwb3J0LXRlbXBsYXRlX2xhYmVsX3RvdGFsLXdlaWdodCI6Ikdlc2FtdGdld2ljaHQiLCJhZGRyZXNzLWJvb2stcmVwb3J0LXRlbXBsYXRlX2xhYmVsX2VtYWlsMiI6IkUtTWFpbCBBZHJlc3NlIDMiLCJhZGRyZXNzLWJvb2stcmVwb3J0LXRlbXBsYXRlX2xhYmVsX2VtYWlsMyI6IkUtTWFpbCBBZHJlc3NlIDQiLCJzaGlwbWVudC1pbnZvaWNlLWRldGFpbHMtcmVwb3J0LXRlbXBsYXRlX2xhYmVsX2ludm9pY2UtdHlwZSI6IlJlY2hudW5nc2FydCIsImFkZHJlc3MtYm9vay1yZXBvcnQtdGVtcGxhdGVfbGFiZWxfY25wal9vcl9jcGZfdGF4X3ZhbHVlIjoiQ05KL0NQRiBTdGV1ZXJudW1tZXIiLCJsaXN0aW5nX2FsZXJ0X3N1Y2Nlc3MtY3JlYXRlZC1yZXBvcnQiOiJ7cmVwb3J0TmFtZX0gR2VzcGVpY2hlcnQiLCJsaXN0aW5nX2J1dHRvbl9kb3dubG9hZCI6IkRvd25sb2FkIiwiZGV0YWlscy1yZXZpZXdfdmFsdWUtbGFiZWxfcmVwb3J0LWRlc2NyaXB0aW9uLXBsYWNlaG9sZGVyIjoiUmVwb3J0IGJlc2NocmVpYmVuIiwiZGV0YWlscy1yZXZpZXdfbGFiZWxfcGRmIjoiUERGIERhdGVpICgucGRmKSIsImxpc3RpbmdfbGFiZWxfcGFiIjoiUGVyc8O2bmxpY2hlcyBBZHJlc3NidWNoIiwiZW9kLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9jb250ZW50LW9mLXNoaXBtZW50IjoiU2hpcG1lbnQgQ29udGVudCIsImVvZC1yZXBvcnQtdGVtcGxhdGVfbGFiZWxfYXBwcm92ZWQtYnktY3VzdG9tZXIiOiJVbnRlcnNjaHJpZnQgZGVzIEt1bmRlbiIsImxpc3RpbmdfdmFsdWUtbGFiZWxfcGlja3VwLWhpc3RvcnkiOiJQaWNrdXAgSGlzdG9yeSBSZXBvcnQiLCJjb3Jwb3JhdGUtcGlja3VwLWhpc3RvcnktcmVwb3J0LXRlbXBsYXRlX2xhYmVsX3BpY2t1cC1jb250YWN0IjoiTmFtZSAoQWJob2x1bmcpIiwiZGV0YWlscy1yZXZpZXdfbGFiZWxfYWNjb3VudC1zZWxlY3Rpb24iOiJLdW5kZW5udW1tZXIiLCJsaXN0aW5nX3NlbGVjdC1vcHRpb25fZHVwbGljYXRlLXNlbGVjdGVkIjoiQXVzd2FobCBrb3BpZXJlbiIsImNvcnBvcmF0ZS11c2VyLWRldGFpbC1yZXBvcnQtdGVtcGxhdGVfZ3JvdXAtYWRkcmVzcy1ib29rLXZpc2liaWxpdHkiOiJHcnVwcGUgQWRyZXNzYnVjaCBadWdhbmciLCJsaXN0aW5nX3ZhbHVlLWxhYmVsX3N0YW5kYXJkLXNoaXBtZW50LXN1bW1hcnkiOiJTaGlwbWVudCBTdW1tYXJ5IFJlcG9ydCIsImNvcnBvcmF0ZS1zaGlwbWVudC1hcHByb3ZhbC1yZXBvcnQtdGVtcGxhdGVfbGFiZWxfZGVjbGluZWRfYnlfZmlyc3QtbmFtZSI6IlZvcm5hbWUgKEFiZ2VsZWhudCB2b24pIiwiY29ycG9yYXRlLXBpY2t1cC1oaXN0b3J5LXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9waWVjZS1xdWFudGl0eSI6IkFuemFobCIsInNoaXBtZW50LWRldGFpbHMtcmVwb3J0LXRlbXBsYXRlX2xhYmVsX3NoaXAtdG8tYWRkaXRpb25hbC1ub3RlcyI6Ik5vdGl6ZW4gKEVtcGbDpG5nZXIpIiwiZGV0YWlscy1yZXZpZXdfc2VsZWN0LW9wdGlvbl95ZXN0ZXJkYXkiOiJHZXN0ZXJuIiwic2hpcG1lbnQtbm90aWZpY2F0aW9uLWRldGFpbHMtcmVwb3J0LXRlbXBsYXRlX2xhYmVsX3NoaXBtZW50LWF3YiI6IlNlbmR1bmdzbnVtbWVyIiwiZGV0YWlscy1yZXZpZXdfc2VsZWN0LW9wdGlvbl9wZW5kaW5nLW15LWFwcHJvdmFsIjoiQXVzc3RlaGVuZGUgWnVzdGltbXVuZyIsImNvcnBvcmF0ZS1waWNrdXAtaGlzdG9yeS1yZXBvcnQtdGVtcGxhdGVfbGFiZWxfcGlja3VwLWNpdHkiOiJTdGFkdCAoQWJob2x1bmcpIiwiY29ycG9yYXRlLXBpY2t1cC1oaXN0b3J5LXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9waWNrdXAtcmVjb3JkLWNyZWF0aW9uLWRhdGUiOiJBYmhvbGF1ZnRyYWcgZXJoYWx0ZW4iLCJzaGlwbWVudC1ub3RpZmljYXRpb24tZGV0YWlscy1yZXBvcnQtdGVtcGxhdGVfbGFiZWxfZGVsaXZlcmVkIjoiWnVnZXN0ZWxsdCIsInNoaXBtZW50LWRldGFpbHMtcmVwb3J0LXRlbXBsYXRlX2xhYmVsX3NoaXAtZnJvbS16aXAiOiJQb3N0bGVpdHphaGwgKEFic2VuZGVyKSIsImFkZHJlc3MtYm9vay1yZXBvcnQtdGVtcGxhdGVfbGFiZWxfbWF0Y2hfY29kZSI6IkFsaWFzIChCZXNjaHJlaWJ1bmcpIDIiLCJsaXN0aW5nX2hlYWRlcl9kZWxldGUtbXVsdGlwbGUtcG9wdXAiOiJSZXBvcnRlIGdlbMO2c2NodCIsImRldGFpbHMtcmV2aWV3X2xhYmVsX3N0YW5kYXJkLWFjY291bnRzLWJ5LXVzZXItZGVzY3JpcHRpb24iOiJOYW1lIHVuZCBFLU1haWwgQWRyZXNzZSB1bmQgS3VuZGVubnVtbWVyIiwic2hpcG1lbnQtbm90aWZpY2F0aW9uLWRldGFpbHMtcmVwb3J0LXRlbXBsYXRlX2xhYmVsX2NsZWFyZWQtY3VzdG9tcyI6IlZlcnpvbGx1bmciLCJsaXN0aW5nX3ZhbHVlLWxhYmVsX3N0YW5kYXJkLW5vdGlmaWNhdGlvbi1kZXRhaWxzIjoiU2VuZHVuZ3NiZW5hY2hyaWNodGlndW5nIiwiYWRkcmVzcy1ib29rLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9lb3JpIjoiRU9SSSBOdW1tZXIiLCJzaGlwbWVudC1wYWNrYWdlLWRldGFpbHMtcmVwb3J0LXRlbXBsYXRlX2xhYmVsX3NoaXBtZW50LWF3YiI6IlNlbmR1bmdzbnVtbWVyIiwiZGV0YWlscy1yZXZpZXdfbGFiZWxfc3RhbmRhcmQtaW52b2ljZS1kZXNjcmlwdGlvbiI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPjxkaXYgY2xhc3M9Im1lc3NhZ2Utd3JhcHBlciI+PHA+Wm9sbHJlY2hudW5nIERldGFpbHM6PFwvcD5cbjx1bD5cbjxsaT5WZXJwYWNrdW5nLyBQYWNrc3TDvGNrZTxcL2xpPlxuPGxpPkJlc2NocmVpYnVuZyBkZXIgV2FyZSB1bmQgR2VzY2jDpGZ0c2JlZGluZ3VuZ2VuPFwvbGk+XG48XC91bD5cbjxcL2Rpdj48XC9kaXY+Iiwic2hpcG1lbnQtaW52b2ljZS1kZXRhaWxzLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9yZW1hcmsiOiJIaW53ZWlzZSIsImRldGFpbHMtcmV2aWV3X2J1dHRvbl9jYW5jZWwiOiJhYmJyZWNoZW4iLCJjb3Jwb3JhdGUtc2hpcG1lbnQtYXBwcm92YWwtcmVwb3J0LXRlbXBsYXRlX2xhYmVsX3NoaXBtZW50LXN0YXR1cyI6IlNlbmR1bmcgU3RhdHVzIiwiYWRkcmVzcy1ib29rLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9jaGFyZ2VzX2FjY291bnRfbnVtYmVyIjoiUmVjaG51bmcgZGVyIFRyYW5zcG9ydGtvc3RlbiBhbiIsImRldGFpbHMtcmV2aWV3X3NlbGVjdC1vcHRpb25fc2hpcHBpbmctdG9kYXkiOiJBa3R1ZWxsZSBTZW5kdW5nZW4iLCJjb3Jwb3JhdGUtc2hpcG1lbnQtYXBwcm92YWwtcmVwb3J0LXRlbXBsYXRlX2xhYmVsX2FwcHJvdmVyLWZpcnN0LW5hbWUiOiJWb3JuYW1lIChHZW5laG1pbmdlbmRlcikiLCJzaGlwbWVudC1zdW1tYXJ5LXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF90b3RhbC1hY2NvdW50cyI6Ikdlc2FtdCBBY2NvdW50cyIsImRldGFpbHMtcmV2aWV3X2xhYmVsX3NoaXBtZW50LXN0YXR1cyI6IlN0YXR1cyIsInNoaXBtZW50LXN1bW1hcnktcmVwb3J0LXRlbXBsYXRlX2xhYmVsX3dpdGhvdXQtdG90YWwtY2hhcmdlcyI6IktlaW5lIFNlbmR1bmdlbiIsImNvcnBvcmF0ZS1zaGlwbWVudC1hcHByb3ZhbC1yZXBvcnQtdGVtcGxhdGVfbGFiZWxfYXBwcm92ZWQtZGF0ZSI6IkdlbmVobWlndCIsInNoaXBtZW50LXBhY2thZ2UtZGV0YWlscy1yZXBvcnQtdGVtcGxhdGVfbGVuZ3RoIjoiTMOkbmdlIiwibGlzdGluZ19hbGVydF9zdWNjZXNzLXVwZGF0ZWQtcmVwb3J0Ijoie3JlcG9ydE5hbWV9IGFrdHVhbGlzaWVydCIsInNoaXBtZW50LWRldGFpbHMtcmVwb3J0LXRlbXBsYXRlX2xhYmVsX3NoaXBtZW50LWRhdGUiOiJWZXJzYW5kZGF0dW0iLCJkZXRhaWxzLXJldmlld192YWx1ZS1sYWJlbF9yZXBvcnQtbmFtZSI6IlJlcG9ydG5hbWUiLCJjb3Jwb3JhdGUtc2hpcG1lbnQtYXBwcm92YWwtcmVwb3J0LXRlbXBsYXRlX2xhYmVsX2NyZWF0b3ItbGFzdC1uYW1lIjoiTmFjaG5hbWUgKEVyc3RlbGx0IHZvbikiLCJzaGlwbWVudC1wYWNrYWdlLWRldGFpbHMtcmVwb3J0LXRlbXBsYXRlX2xhYmVsX3BpZWNlLWlkIjoiUGllY2UgSUQiLCJlb2QtcmVwb3J0LXRlbXBsYXRlX2xhYmVsX2Nvc3Qtb2Ytc2hpcG1lbnQiOiJWZXJzYW5ka29zdGVuLyBCZXNjaHJlaWJ1bmciLCJzaGlwbWVudC1kZXRhaWxzLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9kZWNsYXJlZC12YWx1ZSI6IkRla2xhcmllcnRlciBXZXJ0IiwiYWRkcmVzcy1ib29rLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9uaWNrbmFtZSI6IkFsaWFzIChCZXNjaHJlaWJ1bmcpIiwiZGV0YWlscy1yZXZpZXdfbGFiZWxfbm8tc2hpcHBlci1hZGRyZXNzZXMtZm91bmQiOiJLZWluZSBFcmdlYm5pc3NlIGdlZnVuZGVuLiIsImRldGFpbHMtcmV2aWV3X2JhY2tlbmRfZXJyb3Jfd3JvbmctZGF0ZS1yYW5nZSI6Ik1heGltYWwgOTAgVGFnZSIsImxpc3RpbmdfY29sLW5hbWVfcmVwb3J0LXN0YXR1cyI6IlN0YXR1cyIsImNvcnBvcmF0ZS1zaGlwbWVudC1yZWZlcmVuY2UtcmVwb3J0LXRlbXBsYXRlX2xhYmVsX3RpdGxlIjoiU2hpcG1lbnQgUmVmZXJlbmNlcyBSZXBvcnQgLSBieSBQZXJzb24iLCJzaGlwbWVudC1kZXRhaWxzLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9zaGlwLXRvLWNpdHkiOiJTdGFkdCAoRW1wZsOkbmdlcikiLCJzaGlwbWVudC1zdW1tYXJ5LXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9kb21lc3RpYyI6IklubGFuZCIsImxpc3RpbmdfcGFyYWdyYXBoX25vLWN1c3RvbS1yZXBvcnRzIjoiSWhuZW4gbGllZ3Qga2VpbiBlaWdlbmVyIFJlcG9ydCB2b3IiLCJzaGlwbWVudC1pbnZvaWNlLWRldGFpbHMtcmVwb3J0LXRlbXBsYXRlX2xhYmVsX2ludm9pY2UtZGF0ZSI6IlJlY2hudW5nc2RhdHVtIiwic2hpcG1lbnQtaW52b2ljZS1kZXRhaWxzLXJlcG9ydC10ZW1wbGF0ZV9sYWJlbF9yZWFzb24tZm9yLWV4cG9ydCI6IkdydW5kIGbDvHIgZGVuIEV4cG9ydCIsInNoaXBtZW50LWRldGFpbHMtcmVwb3J0LXRlbXBsYXRlX2xhYmVsX3NoaXAtdG8tc3RhdGUiOiJCZXppcmsgKEVtcGbDpG5nZXIpIiwic2hpcG1lbnQtc3VtbWFyeS1yZXBvcnQtdGVtcGxhdGVfbGFiZWxfcmVwb3J0LXRpdGxlIjoiU2hpcG1lbnQgU3VtbWFyeSBSZXBvcnQiLCJhZGRyZXNzLWJvb2stcmVwb3J0LXRlbXBsYXRlX2xhYmVsX2llX3RheF92YWx1ZSI6IklFL1JHIiwiZGV0YWlscy1yZXZpZXdfc2VsZWN0LW9wdGlvbl9mdXR1cmUtc2hpcG1lbnQiOiJadWvDvG5mdGlnZSJ9LCJjcjAxOTciOnsiY3ItbmFtZSI6Ikdyb3VwIE1heGltdW0gV2VpZ2h0IG9mIFNoaXBtZW50czogQXBwcm92YWwgUmVxdWlyZWQifSwiY3IwMTk4Ijp7ImNyLW5hbWUiOiJFbmFibGUgU2hpcHBpbmcgQWNjb3VudHMgUmVzdHJpY3Rpb24ifSwiY3IwMDcwIjp7ImNyLW5hbWUiOiJHQUI6IE1vZGlmeSBjb250YWN0cyJ9LCJjcjAxOTEiOnsiY3ItbmFtZSI6Ikdyb3VwIE1heGltdW0gV2VpZ2h0IG9mIFNoaXBtZW50czogRW5hYmxlZCJ9LCJjci1kaWdpdGFsLWN1c3RvbXMtaW52b2ljZSI6eyJncm91cC1uYW1lX2hlYWRlciI6IkRpZ2l0YWxlIFpvbGxyZWNobnVuZyIsImRpZ2l0YWwtY3VzdG9tcy1pbnZvaWNlX2Vycm9yX2NyMDE3NC1yZXF1aXJlZCI6IkVyZm9yZGVybGljaCIsImRpZ2l0YWwtY3VzdG9tcy1pbnZvaWNlX2xhYmVsX2NyMDE3MCI6IkRhcmYgZGlnaXRhbGUgUmVjaG51bmdlbiBzZW5kZW4iLCJkaWdpdGFsLWN1c3RvbXMtaW52b2ljZV9zZWxlY3Qtb3B0aW9uX2NyMDE3NC1jb21wYW55IjoiVW50ZXJuZWhtZW5zLUFkbWluaXN0cmF0b3IiLCJkaWdpdGFsLWN1c3RvbXMtaW52b2ljZV9zdWItaGVhZGVyIjoiIiwiZGlnaXRhbC1jdXN0b21zLWludm9pY2Vfc2VsZWN0LW9wdGlvbl9jcjAxNzQtdXNlciI6ImplZGUvci9zIFBlcnNvbiIsImRpZ2l0YWwtY3VzdG9tcy1pbnZvaWNlX2xhYmVsX2NyMDE3NCI6IkF1ZmdlZ2ViZW4gdm9uIiwiZGlnaXRhbC1jdXN0b21zLWludm9pY2VfbGFiZWxfY3IwMTMwIjoiS2FubiBkaWdpdGFsZSBSZWNobnVuZ2VuIGVyc3RlbGxlbiJ9LCJjcjAwNzEiOnsiY3ItbmFtZSI6IkdBQjogRGVsZXRlIGNvbnRhY3RzIn0sImNyMDE5MiI6eyJjci1lcnJvcnMtcmVxdWlyZWQiOiJUaGlzIGZpZWxkIGlzIHJlcXVpcmVkIiwiY3ItbmFtZSI6Ikdyb3VwIE1heGltdW0gV2VpZ2h0IG9mIFNoaXBtZW50czogVmFsdWUiLCJjci1lcnJvcnMtcmFuZ2UiOiJWYWx1ZSBpcyBvdXQgb2YgdGhlIHJhbmdlIn0sImNyMDA3MiI6eyJjci1uYW1lIjoiR0FCOiBJbXBvcnQgY29udGFjdHMifSwiY3IwMTkzIjp7ImNyLWVycm9ycy1yZXF1aXJlZCI6IlRoaXMgZmllbGQgaXMgcmVxdWlyZWQiLCJjci1uYW1lIjoiR3JvdXAgTWF4aW11bSBXZWlnaHQgb2YgU2hpcG1lbnRzOiBVb00ifSwiY3IwMDczIjp7ImNyLW5hbWUiOiJHQUI6IEV4cG9ydCBjb250YWN0cyJ9LCJjcjAxOTQiOnsiY3ItZXJyb3JzLXJlcXVpcmVkIjoiVGhpcyBmaWVsZCBpcyByZXF1aXJlZCIsImNyLW5hbWUiOiJHcm91cCBNYXhpbXVtIFdlaWdodCBvZiBTaGlwbWVudHM6IFBlcmlvZCIsImNyLWVycm9ycy1yYW5nZSI6IlZhbHVlIGlzIG91dCBvZiB0aGUgcmFuZ2UifSwiY3IwMTkwIjp7ImNyLW5hbWUiOiJHcm91cCBNYXhpbXVtIENvc3Qgb2YgU2hpcG1lbnRzOiBBcHByb3ZhbCBSZXF1aXJlZCJ9LCJDVVNUT01TX0NMRUFSQU5DRV9TRVRUSU5HUyI6eyJDVVNUT01TX0lOVk9JQ0VfVEVNUExBVEVTX1NFTEVDVF9PUFRJT05fSU5WT0lDRV9FWFBPUlRfVFlQRSI6IkFydCBkZXMgRXhwb3J0cyIsIkxCX1NFQVJDSF9JVEVNX0NPTF9OQU1FX1BST0RVQ1RfTkFNRSI6Ik5hbWUiLCJDVVNUT01TX0lOVk9JQ0VfVEVNUExBVEVTX1NFTEVDVF9PUFRJT05fSU5WT0lDRV9UWVBFIjoiUmVjaG51bmdzYXJ0IiwiQ1VTVE9NU19JTlZPSUNFX1RFTVBMQVRFU19CVVRUT05fUFJPRk9STUFfSU5WT0lDRSI6IlByb2Zvcm1hIiwiUFJPRFVDVF9JVEVNX0xJU1RfTEFCRUxfU0VBUkNIX0xJU1QiOiJTdWNoZSIsIlBST0RVQ1RfSVRFTV9MSVNUX0NPTF9OQU1FX0RFU0NSSVBUSU9OIjoiSW5oYWx0c2Jlc2NocmVpYnVuZyIsIlBST0RVQ1RfSVRFTV9MSVNUX1NFTEVDVF9PUFRJT05fREVTQ1JJUFRJT04iOiJJbmhhbHRzYmVzY2hyZWlidW5nIiwiQ1VTVE9NU19JTlZPSUNFX1RFTVBMQVRFU19DT0xfTkFNRV9JTlZPSUNFX1RZUEUiOiJSZWNobnVuZ3NhcnQiLCJDVVNUT01TX0lOVk9JQ0VfVEVNUExBVEVTX0NPTF9OQU1FX0lOVk9JQ0VfRVhQT1JUX1RZUEUiOiJBcnQgZGVzIEV4cG9ydHMiLCJQUk9EVUNUX0lURU1fTElTVF9MQUJFTF9GSUxURVJfTElTVCI6IkZpbHRlciIsIkxCX0NVU1RPTVNfSU5WT0lDRV9URU1QTEFURVNfTVNHX0NPTkZJUk1fVVBEQVRFIjoiU2luZCBTaWUgc2ljaGVyLCBkYXNzIFNpZSBkaWVzZSBFaW5zdGVsbHVuZyBsw7ZzY2hlbiBtw7ZjaHRlbj8iLCJDVVNUT01TX0lOVk9JQ0VfVEVNUExBVEVTX0ZJRUxEX1BMQUNFSE9MREVSX1NFQVJDSCI6IlN1Y2hlIiwiQ1VTVE9NU19JTlZPSUNFX1RFTVBMQVRFU19QQVJBR1JBUEhfU0VBUkNIX05PX1JFU1VMVFMiOiJLZWluZSBFcmdlYm5pc3NlIGdlZnVuZGVuLiIsIlBST0RVQ1RfSVRFTV9MSVNUX0NPTF9OQU1FX0NPTU1PRElUWV9DT0RFIjoiTGFuZCBkZXIgSGVyc3RlbGx1bmciLCJDVVNUT01TX0lOVk9JQ0VfVEVNUExBVEVTX0NPTF9OQU1FX0lOVk9JQ0VfTkFNRSI6IlJlY2hudW5nc25hbWUiLCJMQl9TRUFSQ0hfSVRFTV9NU0dfTk9fUkVTVUxUUyI6IktlaW5lIEVyZ2Vibmlzc2UgZ2VmdW5kZW4uIiwiTEJfU0VBUkNIX0lURU1fQ09MX05BTUVfQ09VTlRSWSI6IkxhbmQgZGVyIEhlcnN0ZWxsdW5nIiwiUFJPRFVDVF9JVEVNX0xJU1RfQ09MX05BTUVfTkFNRSI6Ik5hbWUgZGVyIFdhcmUiLCJQUk9EVUNUX0lURU1fTElTVF9QQVJBR1JBUEhfV0FOVF9UT19ERUxFVEUiOiJTb2xsIGRpZXNlIFdhcmVuIHdpcmtsaWNoIGdlbMO2c2NodCB3ZXJkZW4/IiwiQ1VTVE9NU19JTlZPSUNFX1RFTVBMQVRFU19TRUxFQ1RfT1BUSU9OX0lOVk9JQ0VfTkFNRSI6IlJlY2hudW5nc25hbWUiLCJMQl9TRUFSQ0hfSVRFTV9DT0xfTkFNRV9DT01NT0RJVFlfQ09ERSI6IldhcmVudGFyaWZudW1tZXIiLCJQUk9EVUNUX0lURU1fTElTVF9TRUxFQ1RfT1BUSU9OX0NPVU5UUlkiOiJMYW5kIiwiQ1VTVE9NU19JTlZPSUNFX1RFTVBMQVRFU19QQVJBR1JBUEhfV0FOVF9UT19ERUxFVEUiOiJTb2xsZW4gZGllc2UgV2FyZW4gd2lya2xpY2ggZ2Vsw7ZzY2h0IHdlcmRlbj8iLCJMQl9TRUFSQ0hfSVRFTV9DT0xfTkFNRV9QUk9EVUNUX0RFU0NSSVBUSU9OIjoiSW5oYWx0c2Jlc2NocmVpYnVuZyIsIkNVU1RPTVNfSU5WT0lDRV9URU1QTEFURVNfQlVUVE9OX0NPTU1FUkNJQUxfSU5WT0lDRSI6IkhhbmRlbHNyZWNobnVuZyIsIlBST0RVQ1RfSVRFTV9MSVNUX0VSUk9SX1NFQVJDSF9OT19SRVNVTFRTIjoiS2VpbmUgRXJnZWJuaXNzZSBnZWZ1bmRlbi4iLCJQUk9EVUNUX0lURU1fTElTVF9GSUVMRF9QTEFDRUhPTERFUl9TRUFSQ0giOiJTdWNoZSIsIlBST0RVQ1RfSVRFTV9MSVNUX1NFTEVDVF9PUFRJT05fTkFNRSI6Ik5hbWUifSwiY3Itc2hpcHBpbmctcmVzdHJpY3Rpb25zIjp7Imdyb3VwLW5hbWVfaGVhZGVyIjoiU2VuZHVuZ3NiZXNjaHLDpG5rdW5nZW4iLCJkdXRpZXMtYW5kLXRheGVzLXBhaWRfbGFiZWxfY3IwMDkyIjoiIiwiZHV0aWVzLWFuZC10YXhlcy1wYWlkX3NlbGVjdC1vcHRpb25fY3IwMDkyLWR1dGllcy1hbmQtdGF4ZXMtcGFpZCI6IiIsImJsYW5rX2xhYmVsX2NyMDA5MSI6Ikthbm4gU2VuZHVuZ2VuIGJlYXJiZWl0ZW4iLCJkdXRpZXMtYW5kLXRheGVzLXBhaWRfc2VsZWN0LW9wdGlvbl9jcjAwOTItZHV0aWVzLWFuZC10YXhlcy11bnBhaWQiOiIiLCJibGFua19sYWJlbF9jcjAwODYiOiJLYW5uIFNlbmR1bmdzZGF0ZWkgaG9jaGxhZGVuIiwic2hpcG1lbnQtdHlwZS1kb2N1bWVudF9sYWJlbF9jcjAwODMiOiJCZXN0w6R0aWd1bmcgZXJmb3JkZXJsaWNoIiwic2hpcG1lbnQtdHlwZS1kb2N1bWVudF9zdWItaGVhZGVyIjoiPGgzPkRva3VtZW50IFNlbmR1bmdlbjxcL2gzPlxuIiwiYmxhbmtfbGFiZWxfY3IwMDg5IjoiS2FubiBTZW5kdW5nc2RhdGVuIG1hbmlmZXN0aWVyZW4iLCJkdXRpZXMtYW5kLXRheGVzLXBhaWRfc3ViLWhlYWRlciI6IiIsImJsYW5rX2xhYmVsX2NyMDA4NyI6Ikthbm4gUmV0b3VyZW5zZW5kdW5nZW4gZXJzdGVsbGVuIiwic2hpcG1lbnQtdHlwZS1ub24tZG9jdW1lbnRfbGFiZWxfY3IwMDg1IjoiQmVzdMOkdGlndW5nIGVyZm9yZGVybGljaCIsInNoaXBtZW50LXR5cGUtbm9uLWRvY3VtZW50X3N1Yi1oZWFkZXIiOiI8aDM+U2VuZHVuZyBTZW5kdW5nZW48XC9oMz5cbiJ9LCJsYW5lX2FsZXJ0cy1sYW5lX2FsZXJ0cyI6eyJzaGlwcGVyY291bnRyeS1sayI6IkxLIiwic2hpcHBlcmNvdW50cnktbGkiOiJMSSIsInJlY2VpdmVyY291bnRyeS1mciI6IkZSIiwic2hpcHBlcmNvdW50cnktbHIiOiJMUiIsInNoaXBwZXJjb3VudHJ5LWxzIjoiTFMiLCJyZWNlaXZlcmNvdW50cnktZmkiOiJGSSIsInNoaXBwZXJjb3VudHJ5LWt2IjoiS1YiLCJyZWNlaXZlcmNvdW50cnktZmsiOiJGSyIsInJlY2VpdmVyY291bnRyeS1maiI6IkZKIiwicmVjZWl2ZXJjb3VudHJ5LWZtIjoiRk0iLCJzaGlwcGVyY291bnRyeS1reSI6IktZIiwic2hpcHBlcmNvdW50cnkta3oiOiJLWiIsInNoaXBwZXJjb3VudHJ5LWt3IjoiS1ciLCJyZWNlaXZlcmNvdW50cnktZm8iOiJGTyIsInNoaXBwZXJjb3VudHJ5LWxiIjoiTEIiLCJzaGlwcGVyY291bnRyeS1sYyI6IkxDIiwic2hpcHBlcmNvdW50cnktbGEiOiJMQSIsInNoaXBwZXJjb3VudHJ5LWtlIjoiS0UiLCJyZWNlaXZlcmNvdW50cnktZ3kiOiJHWSIsInNoaXBwZXJjb3VudHJ5LWtpIjoiS0kiLCJzaGlwcGVyY291bnRyeS1rZyI6IktHIiwic2hpcHBlcmNvdW50cnkta2giOiJLSCIsInNoaXBwZXJjb3VudHJ5LWttIjoiS00iLCJyZWNlaXZlcmNvdW50cnktZ3IiOiJHUiIsInNoaXBwZXJjb3VudHJ5LWtuIjoiS04iLCJyZWNlaXZlcmNvdW50cnktZ3EiOiJHUSIsInJlY2VpdmVyY291bnRyeS1ndCI6IkdUIiwicmVjZWl2ZXJjb3VudHJ5LWd1IjoiR1UiLCJzaGlwcGVyY291bnRyeS1rciI6IktSIiwic2hpcHBlcmNvdW50cnkta3AiOiJLUCIsInJlY2VpdmVyY291bnRyeS1ndyI6IkdXIiwicmVjZWl2ZXJjb3VudHJ5LWdpIjoiR0kiLCJyZWNlaXZlcmNvdW50cnktZ2wiOiJHTCIsInJlY2VpdmVyY291bnRyeS1nbiI6IkdOIiwicmVjZWl2ZXJjb3VudHJ5LWdtIjoiR00iLCJyZWNlaXZlcmNvdW50cnktZ3AiOiJHUCIsInJlY2VpdmVyY291bnRyeS1nYiI6IkdCIiwicmVjZWl2ZXJjb3VudHJ5LWdhIjoiR0EiLCJyZWNlaXZlcmNvdW50cnktZ2QiOiJHRCIsInJlY2VpdmVyY291bnRyeS1nZiI6IkdGIiwicmVjZWl2ZXJjb3VudHJ5LWdlIjoiR0UiLCJyZWNlaXZlcmNvdW50cnktZ2giOiJHSCIsInJlY2VpdmVyY291bnRyeS1nZyI6IkdHIiwic2hpcHBlcmNvdW50cnktbmkiOiJOSSIsInNoaXBwZXJjb3VudHJ5LW5mIjoiTkYiLCJzaGlwcGVyY291bnRyeS1uZyI6Ik5HIiwianBfanBfYjJiLWxhbmVhbGVydG1lc3NhZ2VubyI6IkxhbmUgYWxlcnQgdGVzdCAzIiwic2hpcHBlcmNvdW50cnktbmwiOiJOTCIsInNoaXBwZXJjb3VudHJ5LW5wIjoiTlAiLCJyZWNlaXZlcmNvdW50cnktaHIiOiJIUiIsInJlY2VpdmVyY291bnRyeS1odSI6IkhVIiwic2hpcHBlcmNvdW50cnktbm8iOiJOTyIsInJlY2VpdmVyY291bnRyeS1odCI6IkhUIiwic2hpcHBlcmNvdW50cnktbnUiOiJOVSIsInNoaXBwZXJjb3VudHJ5LW5yIjoiTlIiLCJzaGlwcGVyY291bnRyeS1tdyI6Ik1XIiwicmVjZWl2ZXJjb3VudHJ5LWhrIjoiSEsiLCJzaGlwcGVyY291bnRyeS1teCI6Ik1YIiwic2hpcHBlcmNvdW50cnktbXUiOiJNVSIsInNoaXBwZXJjb3VudHJ5LW12IjoiTVYiLCJyZWNlaXZlcmNvdW50cnktaG4iOiJITiIsInNoaXBwZXJjb3VudHJ5LW15IjoiTVkiLCJzaGlwcGVyY291bnRyeS1teiI6Ik1aIiwic2hpcHBlcmNvdW50cnktbmEiOiJOQSIsInNoaXBwZXJjb3VudHJ5LW5lIjoiTkUiLCJzaGlwcGVyY291bnRyeS1uYyI6Ik5DIiwic2hpcHBlcmNvdW50cnktbWciOiJNRyIsInNoaXBwZXJjb3VudHJ5LW1oIjoiTUgiLCJzaGlwcGVyY291bnRyeS1tZSI6Ik1FIiwic2hpcHBlcmNvdW50cnktbWsiOiJNSyIsInNoaXBwZXJjb3VudHJ5LW1sIjoiTUwiLCJzaGlwcGVyY291bnRyeS1tbyI6Ik1PIiwicmVjZWl2ZXJjb3VudHJ5LWl0IjoiSVQiLCJzaGlwcGVyY291bnRyeS1tcCI6Ik1QIiwicmVjZWl2ZXJjb3VudHJ5LWlzIjoiSVMiLCJzaGlwcGVyY291bnRyeS1tbSI6Ik1NIiwic2hpcHBlcmNvdW50cnktbW4iOiJNTiIsInNoaXBwZXJjb3VudHJ5LW1zIjoiTVMiLCJzaGlwcGVyY291bnRyeS1tdCI6Ik1UIiwic2hpcHBlcmNvdW50cnktbXEiOiJNUSIsInNoaXBwZXJjb3VudHJ5LW1yIjoiTVIiLCJyZWNlaXZlcmNvdW50cnktaWwiOiJJTCIsInNoaXBwZXJjb3VudHJ5LWx2IjoiTFYiLCJyZWNlaXZlcmNvdW50cnktaW4iOiJJTiIsInNoaXBwZXJjb3VudHJ5LWx0IjoiTFQiLCJzaGlwcGVyY291bnRyeS1sdSI6IkxVIiwicmVjZWl2ZXJjb3VudHJ5LWlyIjoiSVIiLCJyZWNlaXZlcmNvdW50cnktaXEiOiJJUSIsInNoaXBwZXJjb3VudHJ5LWx5IjoiTFkiLCJyZWNlaXZlcmNvdW50cnktaWQiOiJJRCIsInJlY2VpdmVyY291bnRyeS1pYyI6IklDIiwicmVjZWl2ZXJjb3VudHJ5LWllIjoiSUUiLCJzaGlwcGVyY291bnRyeS1tYyI6Ik1DIiwic2hpcHBlcmNvdW50cnktbWQiOiJNRCIsInNoaXBwZXJjb3VudHJ5LW1hIjoiTUEiLCJzaGlwcGVyY291bnRyeS1wayI6IlBLIiwicmVjZWl2ZXJjb3VudHJ5LWJ0IjoiQlQiLCJzaGlwcGVyY291bnRyeS1waCI6IlBIIiwicmVjZWl2ZXJjb3VudHJ5LWJ3IjoiQlciLCJyZWNlaXZlcmNvdW50cnktYnkiOiJCWSIsInNoaXBwZXJjb3VudHJ5LXBsIjoiUEwiLCJyZWNlaXZlcmNvdW50cnktYnoiOiJCWiIsInJlY2VpdmVyY291bnRyeS1ibSI6IkJNIiwic2hpcHBlcmNvdW50cnktcHIiOiJQUiIsInJlY2VpdmVyY291bnRyeS1ibCI6IkJMIiwicmVjZWl2ZXJjb3VudHJ5LWJvIjoiQk8iLCJyZWNlaXZlcmNvdW50cnktYm4iOiJCTiIsInJlY2VpdmVyY291bnRyeS1icSI6IkJRIiwic2hpcHBlcmNvdW50cnktcHciOiJQVyIsInJlY2VpdmVyY291bnRyeS1icyI6IkJTIiwic2hpcHBlcmNvdW50cnktcHQiOiJQVCIsInJlY2VpdmVyY291bnRyeS1iciI6IkJSIiwicmVjZWl2ZXJjb3VudHJ5LWJlIjoiQkUiLCJyZWNlaXZlcmNvdW50cnktYmQiOiJCRCIsInJlY2VpdmVyY291bnRyeS1iZyI6IkJHIiwicmVjZWl2ZXJjb3VudHJ5LWJmIjoiQkYiLCJyZWNlaXZlcmNvdW50cnktYmkiOiJCSSIsInJlY2VpdmVyY291bnRyeS1iaCI6IkJIIiwicmVjZWl2ZXJjb3VudHJ5LWJqIjoiQkoiLCJzaGlwcGVyY291bnRyeS1wYSI6IlBBIiwic2hpcHBlcmNvdW50cnktcGYiOiJQRiIsInJlY2VpdmVyY291bnRyeS1iYSI6IkJBIiwic2hpcHBlcmNvdW50cnktcGciOiJQRyIsIm15X2N1X2IyYi1sYW5lYWxlcnRtZXNzYWdlbm8iOiJFZmZlY3RpdmUgMXN0IFNlcHRlbWJlciAyMDE5LCAgd2Ugd2lsbCBubyBsb25nZXIgcGljayB1cCBzaGlwbWVudHMgZ29pbmcgdG8gdGhpcyBzYW5jdGlvbiBjb3VudHJ5LiBJZiB5b3UgaGF2ZSBhbnkgZGVsaXZlcnkgbmVlZHMsIGtpbmRseSBkcm9wIHlvdXIgc2hpcG1lbnRzIGF0IGFueSBvZiBvdXIgc2VydmljZSBjZW50ZXJzIG9yIHNlcnZpY2UgcG9pbnRzLiBPbmx5IENhc2ggcGF5bWVudCBpcyBhY2NlcHRlZC4iLCJyZWNlaXZlcmNvdW50cnktYmIiOiJCQiIsInNoaXBwZXJjb3VudHJ5LXBlIjoiUEUiLCJyZWNlaXZlcmNvdW50cnktY3YiOiJDViIsInJlY2VpdmVyY291bnRyeS1jdSI6IkNVIiwiY2FfdXNfYjJiLWxhbmVhbGVydG1lc3NhZ2VubyI6IkJDIFRlc3QgTGFuZSBBbGVydCBNZXNzYWdlIiwicmVjZWl2ZXJjb3VudHJ5LWN4IjoiQ1giLCJyZWNlaXZlcmNvdW50cnktY3ciOiJDVyIsInNoaXBwZXJjb3VudHJ5LW9tIjoiT00iLCJyZWNlaXZlcmNvdW50cnktY3oiOiJDWiIsInJlY2VpdmVyY291bnRyeS1jeSI6IkNZIiwicmVjZWl2ZXJjb3VudHJ5LWNuIjoiQ04iLCJyZWNlaXZlcmNvdW50cnktY20iOiJDTSIsInJlY2VpdmVyY291bnRyeS1jbyI6IkNPIiwicmVjZWl2ZXJjb3VudHJ5LWNyIjoiQ1IiLCJyZWNlaXZlcmNvdW50cnktY2YiOiJDRiIsInJlY2VpdmVyY291bnRyeS1jaCI6IkNIIiwicmVjZWl2ZXJjb3VudHJ5LWNnIjoiQ0ciLCJyZWNlaXZlcmNvdW50cnktY2kiOiJDSSIsInNoaXBwZXJjb3VudHJ5LW56IjoiTloiLCJyZWNlaXZlcmNvdW50cnktY2wiOiJDTCIsInJlY2VpdmVyY291bnRyeS1jayI6IkNLIiwicmVjZWl2ZXJjb3VudHJ5LWNhIjoiQ0EiLCJyZWNlaXZlcmNvdW50cnktY2QiOiJDRCIsInJlY2VpdmVyY291bnRyeS1jYyI6IkNDIiwiaXRfdXNfYjJjLWxhbmVhbGVydG1lc3NhZ2VubyI6IkRpZXNlcyBMYW5kIGVybGF1YnQga2VpbmUgV2VpbnNlbmR1bmdlbiBhbiBwcml2YXRlIEVtcGbDpG5nZXIgKGtlaW5lIEdlc2Now6RmdHNrdW5kZW4pIiwicmVjZWl2ZXJjb3VudHJ5LWR6IjoiRFoiLCJzaGlwcGVyY291bnRyeS1ybyI6IlJPIiwicmVjZWl2ZXJjb3VudHJ5LWRvIjoiRE8iLCJzaGlwcGVyY291bnRyeS1ydSI6IlJVIiwic2hpcHBlcmNvdW50cnktcnMiOiJSUyIsInNoaXBwZXJjb3VudHJ5LXJ3IjoiUlciLCJyZWNlaXZlcmNvdW50cnktZGsiOiJESyIsInJlY2VpdmVyY291bnRyeS1kaiI6IkRKIiwicmVjZWl2ZXJjb3VudHJ5LWRtIjoiRE0iLCJzaGlwcGVyY291bnRyeS1yZSI6IlJFIiwibXlfaXJfYjJiLWxhbmVhbGVydG1lc3NhZ2VubyI6IkVmZmVjdGl2ZSAxc3QgU2VwdGVtYmVyIDIwMTksICB3ZSB3aWxsIG5vIGxvbmdlciBwaWNrIHVwIHNoaXBtZW50cyBnb2luZyB0byB0aGlzIHNhbmN0aW9uIGNvdW50cnkuIElmIHlvdSBoYXZlIGFueSBkZWxpdmVyeSBuZWVkcywga2luZGx5IGRyb3AgeW91ciBzaGlwbWVudHMgYXQgYW55IG9mIG91ciBzZXJ2aWNlIGNlbnRlcnMgb3Igc2VydmljZSBwb2ludHMuIE9ubHkgQ2FzaCBwYXltZW50IGlzIGFjY2VwdGVkLiIsInJlY2VpdmVyY291bnRyeS1kZSI6IkRFIiwibXlfYjJiLWxhbmVhbGVydG1lc3NhZ2VubyI6IkVmZmVjdGl2ZSAxc3QgU2VwdGVtYmVyIDIwMTksICB3ZSB3aWxsIG5vIGxvbmdlciBwaWNrIHVwIHNoaXBtZW50cyBnb2luZyB0byB0aGlzIHNhbmN0aW9uIGNvdW50cnkuIElmIHlvdSBoYXZlIGFueSBkZWxpdmVyeSBuZWVkcywga2luZGx5IGRyb3AgeW91ciBzaGlwbWVudHMgYXQgYW55IG9mIG91ciBzZXJ2aWNlIGNlbnRlcnMgb3Igc2VydmljZSBwb2ludHMuIE9ubHkgQ2FzaCBwYXltZW50IGlzIGFjY2VwdGVkLiIsInJlY2VpdmVyY291bnRyeS1lciI6IkVSIiwidHJfYXVfYjJiLWxhbmVhbGVydG1lc3NhZ2VubyI6IklmIHlvdXIgc2hpcG1lbnQgY29udGFpbnMgRWxlY3Ryb21lY2hhbmljYWwgZGV2aWNlcyBvciBwYXJ0cyBmb3IgdGhlc2UgZGV2aWNlcywgdW5mb3J0dW5hdGVseSwgdGhlc2UgYXJlIG5vdCBwZXJtaXR0ZWQgdG8gYmUgc2VudCB0byBBdXN0cmFsaWEgYnkgYWlyIGZyb20gVHVya2V5IGR1ZSB0byBnb3Zlcm5tZW50IHJlc3RyaWN0aW9ucy4iLCJyZWNlaXZlcmNvdW50cnktZXQiOiJFVCIsInJlY2VpdmVyY291bnRyeS1lcyI6IkVTIiwicmVjZWl2ZXJjb3VudHJ5LWVnIjoiRUciLCJzaGlwcGVyY291bnRyeS1weSI6IlBZIiwic2hpcHBlcmNvdW50cnktcWEiOiJRQSIsInJlY2VpdmVyY291bnRyeS1lYyI6IkVDIiwicmVjZWl2ZXJjb3VudHJ5LWVlIjoiRUUiLCJzaGlwcGVyY291bnRyeS1kZSI6IkRFIiwic2hpcHBlcmNvdW50cnktZGoiOiJESiIsInNoaXBwZXJjb3VudHJ5LWRrIjoiREsiLCJzaGlwcGVyY291bnRyeS1jbSI6IkNNIiwic2hpcHBlcmNvdW50cnktY24iOiJDTiIsInNoaXBwZXJjb3VudHJ5LWNrIjoiQ0siLCJzaGlwcGVyY291bnRyeS1jbCI6IkNMIiwic2hpcHBlcmNvdW50cnktY3IiOiJDUiIsIml0X3J1X2IyYy1sYW5lYWxlcnRtZXNzYWdlbm8iOiJEaWVzZXMgTGFuZCBlcmxhdWJ0IGtlaW5lIFNlbmR1bmdlbiBhbiBwcml2YXRlIEVtcGbDpG5nZXIgKGtlaW5lIEdlc2Now6RmdHNrdW5kZW4pIiwic2hpcHBlcmNvdW50cnktY28iOiJDTyIsInNrX3J1X2IyYi1sYW5lYWxlcnRtZXNzYWdlbm8iOiJCZWZvcmUgY3JlYXRpbmcgb3Igc2VuZGluZyB5b3VyIHNoaXBtZW50IHRvIFJ1c3NpYSwgcGxlYXNlIGNvbnRhY3Qgb3VyIGN1c3RvbWVyIHNlcnZpY2UgdW5kZXI6IDE4IDgxMSwgKzQyMTI0ODIyOTIyOSwgaW4gb3JkZXIgdG8gdmVyaWZ5IHRoZSBaSVAgY29kZS4iLCJzaGlwcGVyY291bnRyeS1jdSI6IkNVIiwic2hpcHBlcmNvdW50cnktY3YiOiJDViIsInNoaXBwZXJjb3VudHJ5LWN5IjoiQ1kiLCJzaGlwcGVyY291bnRyeS1jeiI6IkNaIiwic2hpcHBlcmNvdW50cnktY3ciOiJDVyIsInNoaXBwZXJjb3VudHJ5LWN4IjoiQ1giLCJzaGlwcGVyY291bnRyeS1ieiI6IkJaIiwic2hpcHBlcmNvdW50cnktY2EiOiJDQSIsInNoaXBwZXJjb3VudHJ5LWNmIjoiQ0YiLCJzaGlwcGVyY291bnRyeS1jYyI6IkNDIiwic2hpcHBlcmNvdW50cnktY2QiOiJDRCIsInNoaXBwZXJjb3VudHJ5LWNpIjoiQ0kiLCJzaGlwcGVyY291bnRyeS1jZyI6IkNHIiwic2hpcHBlcmNvdW50cnktY2giOiJDSCIsInNoaXBwZXJjb3VudHJ5LWJsIjoiQkwiLCJzaGlwcGVyY291bnRyeS1ibSI6IkJNIiwic2hpcHBlcmNvdW50cnktYmoiOiJCSiIsInNoaXBwZXJjb3VudHJ5LWJxIjoiQlEiLCJzaGlwcGVyY291bnRyeS1ibiI6IkJOIiwic2hpcHBlcmNvdW50cnktYm8iOiJCTyIsInNoaXBwZXJjb3VudHJ5LWJ0IjoiQlQiLCJzaGlwcGVyY291bnRyeS1iciI6IkJSIiwic2hpcHBlcmNvdW50cnktYnMiOiJCUyIsInNoaXBwZXJjb3VudHJ5LWJ5IjoiQlkiLCJzaGlwcGVyY291bnRyeS1idyI6IkJXIiwic2hpcHBlcmNvdW50cnktZmkiOiJGSSIsInNoaXBwZXJjb3VudHJ5LWZtIjoiRk0iLCJzaGlwcGVyY291bnRyeS1maiI6IkZKIiwic2hpcHBlcmNvdW50cnktZmsiOiJGSyIsInNoaXBwZXJjb3VudHJ5LWVzIjoiRVMiLCJzaGlwcGVyY291bnRyeS1ldCI6IkVUIiwic2hpcHBlcmNvdW50cnktZXIiOiJFUiIsInVzX3VhX2IyYi1sYW5lYWxlcnRtZXNzYWdlbm8iOiJMYW5lIGFsZXJ0IHRlc3QgMSIsInJlY2VpdmVyY291bnRyeS1hdCI6IkFUIiwicmVjZWl2ZXJjb3VudHJ5LWFzIjoiQVMiLCJyZWNlaXZlcmNvdW50cnktYXUiOiJBVSIsInNoaXBwZXJjb3VudHJ5LWVjIjoiRUMiLCJnYl9pcl9iMmItbGFuZWFsZXJ0bWVzc2FnZW5vIjoiVGhlIGRlc3RpbmF0aW9uIGNvdW50cnkgc2VsZWN0ZWQgZm9yIHRoaXMgc2hpcG1lbnQgaXMgYSBVTiBzYW5jdGlvbmVkIGNvdW50cnkuIiwicmVjZWl2ZXJjb3VudHJ5LWF3IjoiQVciLCJyZWNlaXZlcmNvdW50cnktYXoiOiJBWiIsInNoaXBwZXJjb3VudHJ5LWVnIjoiRUciLCJyZWNlaXZlcmNvdW50cnktYWwiOiJBTCIsInJlY2VpdmVyY291bnRyeS1hbiI6IkFOIiwic2hpcHBlcmNvdW50cnktZWUiOiJFRSIsInJlY2VpdmVyY291bnRyeS1hbSI6IkFNIiwicmVjZWl2ZXJjb3VudHJ5LWFvIjoiQU8iLCJyZWNlaXZlcmNvdW50cnktYXIiOiJBUiIsInJlY2VpdmVyY291bnRyeS1hZCI6IkFEIiwic2hpcHBlcmNvdW50cnktZG8iOiJETyIsInJlY2VpdmVyY291bnRyeS1hZiI6IkFGIiwic2hpcHBlcmNvdW50cnktZG0iOiJETSIsInJlY2VpdmVyY291bnRyeS1hZSI6IkFFIiwicmVjZWl2ZXJjb3VudHJ5LWFnIjoiQUciLCJyZWNlaXZlcmNvdW50cnktYWkiOiJBSSIsInNoaXBwZXJjb3VudHJ5LWR6IjoiRFoiLCJzaGlwcGVyY291bnRyeS1oayI6IkhLIiwic2hpcHBlcmNvdW50cnktaG4iOiJITiIsInNoaXBwZXJjb3VudHJ5LWdxIjoiR1EiLCJzaGlwcGVyY291bnRyeS1nciI6IkdSIiwic2hpcHBlcmNvdW50cnktZ3AiOiJHUCIsInNoaXBwZXJjb3VudHJ5LWd1IjoiR1UiLCJzaGlwcGVyY291bnRyeS1ndCI6IkdUIiwic2hpcHBlcmNvdW50cnktZ3kiOiJHWSIsInJlY2VpdmVyY291bnRyeS16dyI6IlpXIiwic2hpcHBlcmNvdW50cnktZ3ciOiJHVyIsInNoaXBwZXJjb3VudHJ5LWdhIjoiR0EiLCJzaGlwcGVyY291bnRyeS1nYiI6IkdCIiwic2hpcHBlcmNvdW50cnktZ2UiOiJHRSIsInNoaXBwZXJjb3VudHJ5LWdmIjoiR0YiLCJzaGlwcGVyY291bnRyeS1nZCI6IkdEIiwic2hpcHBlcmNvdW50cnktZ2kiOiJHSSIsInNoaXBwZXJjb3VudHJ5LWdnIjoiR0ciLCJzaGlwcGVyY291bnRyeS1naCI6IkdIIiwic2hpcHBlcmNvdW50cnktZ20iOiJHTSIsInNoaXBwZXJjb3VudHJ5LWduIjoiR04iLCJzaGlwcGVyY291bnRyeS1nbCI6IkdMIiwic2hpcHBlcmNvdW50cnktZm8iOiJGTyIsInNoaXBwZXJjb3VudHJ5LWZyIjoiRlIiLCJteV9rcF9iMmMtbGFuZWFsZXJ0bWVzc2FnZW5vIjoiRWZmZWN0aXZlIDFzdCBTZXB0ZW1iZXIgMjAxOSwgIHdlIHdpbGwgbm8gbG9uZ2VyIHBpY2sgdXAgc2hpcG1lbnRzIGdvaW5nIHRvIHRoaXMgc2FuY3Rpb24gY291bnRyeS4gSWYgeW91IGhhdmUgYW55IGRlbGl2ZXJ5IG5lZWRzLCBraW5kbHkgZHJvcCB5b3VyIHNoaXBtZW50cyBhdCBhbnkgb2Ygb3VyIHNlcnZpY2UgY2VudGVycyBvciBzZXJ2aWNlIHBvaW50cy4gT25seSBDYXNoIHBheW1lbnQgaXMgYWNjZXB0ZWQuIiwic2hpcHBlcmNvdW50cnktamUiOiJKRSIsInNoaXBwZXJjb3VudHJ5LWptIjoiSk0iLCJjYV9iZV9iMmItbGFuZWFsZXJ0bWVzc2FnZW5vIjoiYmMgdGVzdCIsInNoaXBwZXJjb3VudHJ5LWpwIjoiSlAiLCJzaGlwcGVyY291bnRyeS1qbyI6IkpPIiwic2hpcHBlcmNvdW50cnktaXMiOiJJUyIsInNoaXBwZXJjb3VudHJ5LWl0IjoiSVQiLCJzaGlwcGVyY291bnRyeS1pcSI6IklRIiwibmxfdHdfYjJjLWxhbmVhbGVydG1lc3NhZ2VubyI6IlRhaXdhbiBDdXN0b21zIGhhdmUgYW5ub3VuY2VkIHBsYW5zIHRvIHZlcmlmeSB0aGUgYXV0aGVudGljaXR5IG9mIHRoZSBuYW1lcyBvZiBpbXBvcnRlcnMgZHVyaW5nIHRoZSBpbXBvcnQgY2xlYXJhbmNlIHByb2Nlc3MuIEFsbCBub24tQjJCIGltcG9ydGVycyBuZWVkIHRvIHJlZ2lzdGVyIG9uIHRoZSBmb2xsb3dpbmcgZ292ZXJubWVudCBwbGF0Zm9ybTogaHR0cHM6Ly9lY2NzLnRyYWRldmFuLmNvbS50dy8uIiwic2hpcHBlcmNvdW50cnktaXIiOiJJUiIsInNoaXBwZXJjb3VudHJ5LWljIjoiSUMiLCJzaGlwcGVyY291bnRyeS1pZCI6IklEIiwic2hpcHBlcmNvdW50cnktaWUiOiJJRSIsInNoaXBwZXJjb3VudHJ5LWlsIjoiSUwiLCJzaGlwcGVyY291bnRyeS1pbiI6IklOIiwic2hpcHBlcmNvdW50cnktaHIiOiJIUiIsInNoaXBwZXJjb3VudHJ5LWh0IjoiSFQiLCJzaGlwcGVyY291bnRyeS1odSI6IkhVIiwicmVjZWl2ZXJjb3VudHJ5LXdmIjoiV0YiLCJyZWNlaXZlcmNvdW50cnktdnUiOiJWVSIsInJlY2VpdmVyY291bnRyeS14bSI6IlhNIiwicmVjZWl2ZXJjb3VudHJ5LXhuIjoiWE4iLCJyZWNlaXZlcmNvdW50cnkteGMiOiJYQyIsInJlY2VpdmVyY291bnRyeS14YiI6IlhCIiwicmVjZWl2ZXJjb3VudHJ5LXhlIjoiWEUiLCJyZWNlaXZlcmNvdW50cnkteGciOiJYRyIsInJlY2VpdmVyY291bnRyeS13cyI6IldTIiwicmVjZWl2ZXJjb3VudHJ5LXllIjoiWUUiLCJyZWNlaXZlcmNvdW50cnkteHMiOiJYUyIsIm15X2N1X2IyYy1sYW5lYWxlcnRtZXNzYWdlbm8iOiJFZmZlY3RpdmUgMXN0IFNlcHRlbWJlciAyMDE5LCAgd2Ugd2lsbCBubyBsb25nZXIgcGljayB1cCBzaGlwbWVudHMgZ29pbmcgdG8gdGhpcyBzYW5jdGlvbiBjb3VudHJ5LiBJZiB5b3UgaGF2ZSBhbnkgZGVsaXZlcnkgbmVlZHMsIGtpbmRseSBkcm9wIHlvdXIgc2hpcG1lbnRzIGF0IGFueSBvZiBvdXIgc2VydmljZSBjZW50ZXJzIG9yIHNlcnZpY2UgcG9pbnRzLiBPbmx5IENhc2ggcGF5bWVudCBpcyBhY2NlcHRlZC4iLCJyZWNlaXZlcmNvdW50cnkteHkiOiJYWSIsInJlY2VpdmVyY291bnRyeS16bSI6IlpNIiwicmVjZWl2ZXJjb3VudHJ5LXphIjoiWkEiLCJyZWNlaXZlcmNvdW50cnkteXQiOiJZVCIsInJlY2VpdmVyY291bnRyeS1zZSI6IlNFIiwicmVjZWl2ZXJjb3VudHJ5LXNoIjoiU0giLCJyZWNlaXZlcmNvdW50cnktc2ciOiJTRyIsIm15X2lyX2IyYy1sYW5lYWxlcnRtZXNzYWdlbm8iOiJFZmZlY3RpdmUgMXN0IFNlcHRlbWJlciAyMDE5LCAgd2Ugd2lsbCBubyBsb25nZXIgcGljayB1cCBzaGlwbWVudHMgZ29pbmcgdG8gdGhpcyBzYW5jdGlvbiBjb3VudHJ5LiBJZiB5b3UgaGF2ZSBhbnkgZGVsaXZlcnkgbmVlZHMsIGtpbmRseSBkcm9wIHlvdXIgc2hpcG1lbnRzIGF0IGFueSBvZiBvdXIgc2VydmljZSBjZW50ZXJzIG9yIHNlcnZpY2UgcG9pbnRzLiBPbmx5IENhc2ggcGF5bWVudCBpcyBhY2NlcHRlZC4iLCJyZWNlaXZlcmNvdW50cnktc2kiOiJTSSIsInJlY2VpdmVyY291bnRyeS1zbCI6IlNMIiwicmVjZWl2ZXJjb3VudHJ5LXNrIjoiU0siLCJyZWNlaXZlcmNvdW50cnktc2IiOiJTQiIsInJlY2VpdmVyY291bnRyeS1zYSI6IlNBIiwicmVjZWl2ZXJjb3VudHJ5LXNkIjoiU0QiLCJkZV9kZV9iMmMtbGFuZWFsZXJ0bWVzc2FnZW5vIjoiVGFrZSBnb29nIGNhcmUgb2YgYSByZXNpZGVudGlhbCBhZGRyZXNzIGluIEdlcm1hbnkiLCJyZWNlaXZlcmNvdW50cnktc2MiOiJTQyIsInJlY2VpdmVyY291bnRyeS1ydSI6IlJVIiwicmVjZWl2ZXJjb3VudHJ5LXJ3IjoiUlciLCJyZWNlaXZlcmNvdW50cnktcm8iOiJSTyIsInJlY2VpdmVyY291bnRyeS1ycyI6IlJTIiwicmVjZWl2ZXJjb3VudHJ5LXRnIjoiVEciLCJyZWNlaXZlcmNvdW50cnktdGgiOiJUSCIsInJlY2VpdmVyY291bnRyeS10aiI6IlRKIiwicmVjZWl2ZXJjb3VudHJ5LXRtIjoiVE0iLCJza19ydV9iMmMtbGFuZWFsZXJ0bWVzc2FnZW5vIjoiQmVmb3JlIGNyZWF0aW5nIGFuZCBzZW5kaW5nIHlvdXIgc2hpcG1lbnQgdG8gUnVzc2lhLCBwbGVhc2UgY29udGFjdCBvdXIgY3VzdG9tZXIgc2VydmljZSBhdCB0aGUgbnVtYmVyIDE4IDgxMSwgKzQyMTI0ODIyOTIyOSwgdG8gdmVyaWZ5IFppcCBjb2RlLiIsInJlY2VpdmVyY291bnRyeS10bCI6IlRMIiwicmVjZWl2ZXJjb3VudHJ5LXRjIjoiVEMiLCJyZWNlaXZlcmNvdW50cnktdGQiOiJURCIsInJlY2VpdmVyY291bnRyeS1zdiI6IlNWIiwicmVjZWl2ZXJjb3VudHJ5LXN6IjoiU1oiLCJyZWNlaXZlcmNvdW50cnktc3kiOiJTWSIsInJlY2VpdmVyY291bnRyeS1zbiI6IlNOIiwicmVjZWl2ZXJjb3VudHJ5LXNtIjoiU00iLCJyZWNlaXZlcmNvdW50cnktc28iOiJTTyIsInJlY2VpdmVyY291bnRyeS1zciI6IlNSIiwicmVjZWl2ZXJjb3VudHJ5LXN0IjoiU1QiLCJyZWNlaXZlcmNvdW50cnktc3MiOiJTUyIsInJlY2VpdmVyY291bnRyeS11ZyI6IlVHIiwic2hpcHBlcmNvdW50cnktYXoiOiJBWiIsInNoaXBwZXJjb3VudHJ5LWJhIjoiQkEiLCJzaGlwcGVyY291bnRyeS1iZCI6IkJEIiwic2hpcHBlcmNvdW50cnktYmUiOiJCRSIsInNoaXBwZXJjb3VudHJ5LWJiIjoiQkIiLCJyZWNlaXZlcmNvdW50cnktdWEiOiJVQSIsInNoaXBwZXJjb3VudHJ5LWJoIjoiQkgiLCJzaGlwcGVyY291bnRyeS1iaSI6IkJJIiwic2hpcHBlcmNvdW50cnktYmYiOiJCRiIsInNoaXBwZXJjb3VudHJ5LWJnIjoiQkciLCJyZWNlaXZlcmNvdW50cnktdHciOiJUVyIsInNoaXBwZXJjb3VudHJ5LWFsIjoiQUwiLCJyZWNlaXZlcmNvdW50cnktdHYiOiJUViIsInNoaXBwZXJjb3VudHJ5LWFpIjoiQUkiLCJzaGlwcGVyY291bnRyeS1hbyI6IkFPIiwicmVjZWl2ZXJjb3VudHJ5LXR6IjoiVFoiLCJzaGlwcGVyY291bnRyeS1hbSI6IkFNIiwic2hpcHBlcmNvdW50cnktYW4iOiJBTiIsInNoaXBwZXJjb3VudHJ5LWFzIjoiQVMiLCJyZWNlaXZlcmNvdW50cnktdG8iOiJUTyIsInNoaXBwZXJjb3VudHJ5LWF0IjoiQVQiLCJyZWNlaXZlcmNvdW50cnktdG4iOiJUTiIsInNoaXBwZXJjb3VudHJ5LWFyIjoiQVIiLCJzaGlwcGVyY291bnRyeS1hdyI6IkFXIiwicmVjZWl2ZXJjb3VudHJ5LXRyIjoiVFIiLCJzaGlwcGVyY291bnRyeS1hdSI6IkFVIiwicmVjZWl2ZXJjb3VudHJ5LXR0IjoiVFQiLCJyZWNlaXZlcmNvdW50cnktdmkiOiJWSSIsIm15X2IyYy1sYW5lYWxlcnRtZXNzYWdlbm8iOiJFZmZlY3RpdmUgMXN0IFNlcHRlbWJlciAyMDE5LCAgd2Ugd2lsbCBubyBsb25nZXIgcGljayB1cCBzaGlwbWVudHMgZ29pbmcgdG8gdGhpcyBzYW5jdGlvbiBjb3VudHJ5LiBJZiB5b3UgaGF2ZSBhbnkgZGVsaXZlcnkgbmVlZHMsIGtpbmRseSBkcm9wIHlvdXIgc2hpcG1lbnRzIGF0IGFueSBvZiBvdXIgc2VydmljZSBjZW50ZXJzIG9yIHNlcnZpY2UgcG9pbnRzLiBPbmx5IENhc2ggcGF5bWVudCBpcyBhY2NlcHRlZC4iLCJyZWNlaXZlcmNvdW50cnktdm4iOiJWTiIsInJlY2VpdmVyY291bnRyeS12YSI6IlZBIiwic2hpcHBlcmNvdW50cnktYWQiOiJBRCIsInJlY2VpdmVyY291bnRyeS12YyI6IlZDIiwiYmVfcnVfYjJjLWxhbmVhbGVydG1lc3NhZ2VubyI6IkFUVEVOVElPTjogU29tZSBwb3N0YWwgY29kZXMgaW4gUnVzc2lhIGNhbiBvbmx5IGJlIHNlcnZlZCB1c2luZyBhIFJ1c3NpYW4gaW1wZXggYWNjb3VudC4gRm9yIG1vcmUgaW5mb3JtYXRpb24gcGxlYXNlIGNvbnRhY3QgeW91ciBsb2NhbCBESEwgY3VzdG9tZXIgc2VydmljZS4iLCJyZWNlaXZlcmNvdW50cnktdmUiOiJWRSIsInNoaXBwZXJjb3VudHJ5LWFnIjoiQUciLCJzaGlwcGVyY291bnRyeS1hZSI6IkFFIiwicmVjZWl2ZXJjb3VudHJ5LXZnIjoiVkciLCJ0cl9hdV9iMmMtbGFuZWFsZXJ0bWVzc2FnZW5vIjoiSWYgeW91ciBzaGlwbWVudCBjb250YWlucyBFbGVjdHJvbWVjaGFuaWNhbCBkZXZpY2VzIG9yIHBhcnRzIGZvciB0aGVzZSBkZXZpY2VzLCB1bmZvcnR1bmF0ZWx5LCB0aGVzZSBhcmUgbm90IHBlcm1pdHRlZCB0byBiZSBzZW50IHRvIEF1c3RyYWxpYSBieSBhaXIgZnJvbSBUdXJrZXkgZHVlIHRvIGdvdmVybm1lbnQgcmVzdHJpY3Rpb25zLiIsInNoaXBwZXJjb3VudHJ5LWFmIjoiQUYiLCJnYl9kZV9iMmMtbGFuZWFsZXJ0bWVzc2FnZW5vIjoiTGFuZSBhbGVydCB0ZXN0IDIiLCJyZWNlaXZlcmNvdW50cnktdXoiOiJVWiIsImNhX2pwX2IyYi1sYW5lYWxlcnRtZXNzYWdlbm8iOiJMYW5lIGFsZXJ0IENBIHRvIEpQIiwicmVjZWl2ZXJjb3VudHJ5LXV5IjoiVVkiLCJyZWNlaXZlcmNvdW50cnktdXMiOiJVUyIsInNoaXBwZXJjb3VudHJ5LXRuIjoiVE4iLCJzaGlwcGVyY291bnRyeS10byI6IlRPIiwic2hpcHBlcmNvdW50cnktdGwiOiJUTCIsInNoaXBwZXJjb3VudHJ5LXRtIjoiVE0iLCJzaGlwcGVyY291bnRyeS10ciI6IlRSIiwic2hpcHBlcmNvdW50cnktdHYiOiJUViIsImNhX2IyYi1sYW5lYWxlcnRtZXNzYWdlbm8iOiJiYyB0ZXN0IGFsbCBjbnRyeSBtZXNzYWdlIiwic2hpcHBlcmNvdW50cnktdHciOiJUVyIsInNoaXBwZXJjb3VudHJ5LXR0IjoiVFQiLCJ1c191c19iMmMtbGFuZWFsZXJ0bWVzc2FnZW5vIjoiVGVzdCBkb21lc3RpYyBVUyBVUyBsYW5lIGlubGluZSBhbGVydCIsInJlY2VpdmVyY291bnRyeS1ueiI6Ik5aIiwic2hpcHBlcmNvdW50cnktdHoiOiJUWiIsIm5sX3R3X2IyYi1sYW5lYWxlcnRtZXNzYWdlbm8iOiJUYWl3YW4gQ3VzdG9tcyBoYXZlIGFubm91bmNlZCBwbGFucyB0byB2ZXJpZnkgdGhlIGF1dGhlbnRpY2l0eSBvZiB0aGUgbmFtZXMgb2YgaW1wb3J0ZXJzIGR1cmluZyB0aGUgaW1wb3J0IGNsZWFyYW5jZSBwcm9jZXNzLiBBbGwgbm9uLUIyQiBpbXBvcnRlcnMgbmVlZCB0byByZWdpc3RlciBvbiB0aGUgZm9sbG93aW5nIGdvdmVybm1lbnQgcGxhdGZvcm06IGh0dHBzOi8vZWNjcy50cmFkZXZhbi5jb20udHcvLiIsInJlY2VpdmVyY291bnRyeS1ucCI6Ik5QIiwicmVjZWl2ZXJjb3VudHJ5LW5yIjoiTlIiLCJyZWNlaXZlcmNvdW50cnktbnUiOiJOVSIsInNoaXBwZXJjb3VudHJ5LXRjIjoiVEMiLCJyZWNlaXZlcmNvdW50cnktbmkiOiJOSSIsInNoaXBwZXJjb3VudHJ5LXRnIjoiVEciLCJzaGlwcGVyY291bnRyeS10ZCI6IlREIiwic2hpcHBlcmNvdW50cnktdGoiOiJUSiIsInJlY2VpdmVyY291bnRyeS1ubCI6Ik5MIiwicmVjZWl2ZXJjb3VudHJ5LW5vIjoiTk8iLCJzaGlwcGVyY291bnRyeS10aCI6IlRIIiwic2hpcHBlcmNvdW50cnktc20iOiJTTSIsInNoaXBwZXJjb3VudHJ5LXNuIjoiU04iLCJzaGlwcGVyY291bnRyeS1zayI6IlNLIiwicmVjZWl2ZXJjb3VudHJ5LXBlIjoiUEUiLCJzaGlwcGVyY291bnRyeS1zbCI6IlNMIiwicmVjZWl2ZXJjb3VudHJ5LXBnIjoiUEciLCJyZWNlaXZlcmNvdW50cnktcGYiOiJQRiIsInNoaXBwZXJjb3VudHJ5LXNyIjoiU1IiLCJzaGlwcGVyY291bnRyeS1zbyI6IlNPIiwicmVjZWl2ZXJjb3VudHJ5LXBoIjoiUEgiLCJzaGlwcGVyY291bnRyeS1zdiI6IlNWIiwic2hpcHBlcmNvdW50cnktc3MiOiJTUyIsInNoaXBwZXJjb3VudHJ5LXN0IjoiU1QiLCJzaGlwcGVyY291bnRyeS1zeSI6IlNZIiwic2hpcHBlcmNvdW50cnktc3oiOiJTWiIsInJlY2VpdmVyY291bnRyeS1wYSI6IlBBIiwic2hpcHBlcmNvdW50cnktc2EiOiJTQSIsInNoaXBwZXJjb3VudHJ5LXNiIjoiU0IiLCJzaGlwcGVyY291bnRyeS1zZSI6IlNFIiwic2hpcHBlcmNvdW50cnktc2MiOiJTQyIsInNoaXBwZXJjb3VudHJ5LXNkIjoiU0QiLCJzaGlwcGVyY291bnRyeS1zaSI6IlNJIiwicmVjZWl2ZXJjb3VudHJ5LW9tIjoiT00iLCJzaGlwcGVyY291bnRyeS1zZyI6IlNHIiwic2hpcHBlcmNvdW50cnktc2giOiJTSCIsInNoaXBwZXJjb3VudHJ5LXZuIjoiVk4iLCJnYl9ka19iMmItbGFuZWFsZXJ0bWVzc2FnZW5vIjoiVGhpcyBpcyBhIHRlc3QgbWVzc2FnZSBmcm9tIFBlciBIYW5zZW4gLSBMYW5lIEFsZXJ0Iiwic2hpcHBlcmNvdW50cnktdnUiOiJWVSIsInJlY2VpdmVyY291bnRyeS1xYSI6IlFBIiwic2hpcHBlcmNvdW50cnktdmEiOiJWQSIsInJlY2VpdmVyY291bnRyeS1wciI6IlBSIiwicmVjZWl2ZXJjb3VudHJ5LXB0IjoiUFQiLCJyZWNlaXZlcmNvdW50cnktcHciOiJQVyIsInNoaXBwZXJjb3VudHJ5LXZlIjoiVkUiLCJyZWNlaXZlcmNvdW50cnktcHkiOiJQWSIsInNoaXBwZXJjb3VudHJ5LXZjIjoiVkMiLCJyZWNlaXZlcmNvdW50cnktcGsiOiJQSyIsInNoaXBwZXJjb3VudHJ5LXZpIjoiVkkiLCJzaGlwcGVyY291bnRyeS12ZyI6IlZHIiwicmVjZWl2ZXJjb3VudHJ5LXBsIjoiUEwiLCJyZWNlaXZlcmNvdW50cnktcmUiOiJSRSIsInNoaXBwZXJjb3VudHJ5LXVzIjoiVVMiLCJzaGlwcGVyY291bnRyeS11eSI6IlVZIiwic2hpcHBlcmNvdW50cnktdXoiOiJVWiIsInNoaXBwZXJjb3VudHJ5LXVhIjoiVUEiLCJzaGlwcGVyY291bnRyeS11ZyI6IlVHIiwiY2FfbXlfYjJiLWxhbmVhbGVydG1lc3NhZ2VubyI6IkRpc3BhbHkgdGhpcyBtZXNzYWdlIG9ubHkgaWYgQ0EgZW5hYmxlZCBmb3IgQjJCIiwiaXRfdXlfYjJjLWxhbmVhbGVydG1lc3NhZ2VubyI6IkRpZXNlcyBMYW5kIGVybGF1YnQga2VpbmUgTGViZW5zbWl0dGVsc2VuZHVuZ2VuLiIsInNoaXBwZXJjb3VudHJ5LXhzIjoiWFMiLCJjYV9iZV9iMmMtbGFuZWFsZXJ0bWVzc2FnZW5vIjoidGVzdCIsInNoaXBwZXJjb3VudHJ5LXh5IjoiWFkiLCJyZWNlaXZlcmNvdW50cnktam0iOiJKTSIsInNoaXBwZXJjb3VudHJ5LXhiIjoiWEIiLCJzaGlwcGVyY291bnRyeS14YyI6IlhDIiwicmVjZWl2ZXJjb3VudHJ5LWpvIjoiSk8iLCJzaGlwcGVyY291bnRyeS14ZyI6IlhHIiwicmVjZWl2ZXJjb3VudHJ5LWpwIjoiSlAiLCJzaGlwcGVyY291bnRyeS14ZSI6IlhFIiwicmVjZWl2ZXJjb3VudHJ5LWplIjoiSkUiLCJzaGlwcGVyY291bnRyeS14biI6IlhOIiwic2hpcHBlcmNvdW50cnkteG0iOiJYTSIsInJlY2VpdmVyY291bnRyeS1sYSI6IkxBIiwicmVjZWl2ZXJjb3VudHJ5LWxjIjoiTEMiLCJyZWNlaXZlcmNvdW50cnktbGIiOiJMQiIsInNoaXBwZXJjb3VudHJ5LXdzIjoiV1MiLCJyZWNlaXZlcmNvdW50cnkta3YiOiJLViIsInJlY2VpdmVyY291bnRyeS1rdyI6IktXIiwicmVjZWl2ZXJjb3VudHJ5LWt6IjoiS1oiLCJyZWNlaXZlcmNvdW50cnkta3kiOiJLWSIsInJlY2VpdmVyY291bnRyeS1rbiI6IktOIiwicmVjZWl2ZXJjb3VudHJ5LWttIjoiS00iLCJyZWNlaXZlcmNvdW50cnkta3AiOiJLUCIsInJlY2VpdmVyY291bnRyeS1rciI6IktSIiwic2hpcHBlcmNvdW50cnktd2YiOiJXRiIsIm15X2twX2IyYi1sYW5lYWxlcnRtZXNzYWdlbm8iOiJFZmZlY3RpdmUgMXN0IFNlcHRlbWJlciAyMDE5LCAgd2Ugd2lsbCBubyBsb25nZXIgcGljayB1cCBzaGlwbWVudHMgZ29pbmcgdG8gdGhpcyBzYW5jdGlvbiBjb3VudHJ5LiBJZiB5b3UgaGF2ZSBhbnkgZGVsaXZlcnkgbmVlZHMsIGtpbmRseSBkcm9wIHlvdXIgc2hpcG1lbnRzIGF0IGFueSBvZiBvdXIgc2VydmljZSBjZW50ZXJzIG9yIHNlcnZpY2UgcG9pbnRzLiBPbmx5IENhc2ggcGF5bWVudCBpcyBhY2NlcHRlZC4iLCJyZWNlaXZlcmNvdW50cnkta2UiOiJLRSIsInJlY2VpdmVyY291bnRyeS1raCI6IktIIiwicmVjZWl2ZXJjb3VudHJ5LWtnIjoiS0ciLCJyZWNlaXZlcmNvdW50cnkta2kiOiJLSSIsInJlY2VpdmVyY291bnRyeS1tYSI6Ik1BIiwicmVjZWl2ZXJjb3VudHJ5LW1kIjoiTUQiLCJyZWNlaXZlcmNvdW50cnktbWMiOiJNQyIsInNoaXBwZXJjb3VudHJ5LXp3IjoiWlciLCJyZWNlaXZlcmNvdW50cnktbWUiOiJNRSIsInJlY2VpdmVyY291bnRyeS1sdiI6IkxWIiwicmVjZWl2ZXJjb3VudHJ5LWx5IjoiTFkiLCJyZWNlaXZlcmNvdW50cnktbHMiOiJMUyIsInJlY2VpdmVyY291bnRyeS1sciI6IkxSIiwicmVjZWl2ZXJjb3VudHJ5LWx1IjoiTFUiLCJyZWNlaXZlcmNvdW50cnktbHQiOiJMVCIsInNoaXBwZXJjb3VudHJ5LXptIjoiWk0iLCJyZWNlaXZlcmNvdW50cnktbGkiOiJMSSIsInJlY2VpdmVyY291bnRyeS1sayI6IkxLIiwicmVjZWl2ZXJjb3VudHJ5LW5hIjoiTkEiLCJzaGlwcGVyY291bnRyeS15dCI6IllUIiwicmVjZWl2ZXJjb3VudHJ5LW5jIjoiTkMiLCJyZWNlaXZlcmNvdW50cnktbmUiOiJORSIsInJlY2VpdmVyY291bnRyeS1uZyI6Ik5HIiwicmVjZWl2ZXJjb3VudHJ5LW5mIjoiTkYiLCJyZWNlaXZlcmNvdW50cnktbXgiOiJNWCIsInJlY2VpdmVyY291bnRyeS1tdyI6Ik1XIiwicmVjZWl2ZXJjb3VudHJ5LW16IjoiTVoiLCJyZWNlaXZlcmNvdW50cnktbXkiOiJNWSIsInNoaXBwZXJjb3VudHJ5LXphIjoiWkEiLCJyZWNlaXZlcmNvdW50cnktbXAiOiJNUCIsInJlY2VpdmVyY291bnRyeS1tbyI6Ik1PIiwicmVjZWl2ZXJjb3VudHJ5LW1yIjoiTVIiLCJyZWNlaXZlcmNvdW50cnktbXEiOiJNUSIsInJlY2VpdmVyY291bnRyeS1tdCI6Ik1UIiwicmVjZWl2ZXJjb3VudHJ5LW1zIjoiTVMiLCJyZWNlaXZlcmNvdW50cnktbXYiOiJNViIsInNoaXBwZXJjb3VudHJ5LXllIjoiWUUiLCJyZWNlaXZlcmNvdW50cnktbXUiOiJNVSIsInJlY2VpdmVyY291bnRyeS1taCI6Ik1IIiwicmVjZWl2ZXJjb3VudHJ5LW1nIjoiTUciLCJyZWNlaXZlcmNvdW50cnktbWwiOiJNTCIsInJlY2VpdmVyY291bnRyeS1tayI6Ik1LIiwicmVjZWl2ZXJjb3VudHJ5LW1uIjoiTU4iLCJyZWNlaXZlcmNvdW50cnktbW0iOiJNTSJ9LCJDT01QQU5ZX09WRVJWSUVXIjp7IkNPTVBBTllfT1ZFUlZJRVdfQ09MX05BTUVfVVNFUl9TVEFUVVMiOiJTdGF0dXMiLCJDT01QQU5ZX09WRVJWSUVXX0NPTF9OQU1FX0dST1VQX0FTU0lHTk1FTlRTIjoiTWl0Z2xpZWQgdm9uIiwiQ09NUEFOWV9PVkVSVklFV19DT0xfTkFNRV9VU0VSTkFNRSI6IkUtTWFpbCBBZHJlc3NlIiwiQ09NUEFOWV9PVkVSVklFV19DT0xfTkFNRV9VU0VSX1RZUEUiOiJVbnRlcm5laG1lbnMtQWRtaW5pc3RyYXRvciIsIkNPTVBBTllfT1ZFUlZJRVdfQ09MX05BTUVfRlVMTE5BTUUiOiJOYW1lIn0sInNoaXBtZW50LW9wdGlvbmFsLXNlcnZpY2VzIjp7InNoaXBtZW50LW9wdGlvbmFsLXNlcnZpY2VzX2JhY2tlbmQtZXJyb3JfaW52YWxpZC1vcHRpb25hbC1zZXJ2aWNlcyI6IlVuZ8O8bHRpZyBPcHRpb25hbGUgU2VydmljZXMifSwiY3IwMTk5Ijp7ImNyLWVycm9ycy1taW5sZW5ndGgiOiJNaW5pbXVtIGxlbmd0aCBmb3IgdGhpcyBmaWVsZCBpcyAwIiwiY3ItZXJyb3JzLXJlcXVpcmVkIjoiVGhpcyBmaWVsZCBpcyByZXF1aXJlZCIsImNyLW5hbWUiOiJSZXN0cmljdGVkIFNoaXBwaW5nIEFjY291bnQgTnVtYmVyIiwiY3ItZXJyb3JzLW1heGxlbmd0aCI6Ik1heGltdW0gbGVuZ3RoIGZvciB0aGlzIGZpZWxkIGlzIDI1NSJ9LCJiYXJjb2RlIjp7ImJhcmNvZGVfaGVhZGVyX3NjYW4tYmFyY29kZSI6IkJhcmNvZGUgc2Nhbm5lbiAtIHZlcnNhbmRiZXJlaXQiLCJiYXJjb2RlX2J1dHRvbl9wcmludCI6IkRydWNrZW4iLCJiYXJjb2RlX2FsZXJ0X21hbmlmZXN0YXRpb24tZmFpbGVkIjoiRGllIMOcYmVybWl0dGx1bmcgZGVyIFNlbmR1bmdzZGF0ZW4genUgREhMIChUYWdlc2Fic2NobHVzcykgaXN0IGZlaGxnZXNjaGxhZ2VuIGbDvHIgZm9sZ2VuZGUgU2VuZHVuZzogIiwiYmFyY29kZV9wYXJhZ3JhcGhfdXNlLXNjYW5uZXItb3ItZW50ZXItbWFudWFsbHkiOiJTY2FubmVuIFNpZSBJaHJlIFNlbmR1bmcgb2RlciBnZWJlbiBTaWUgbWFudWVsbCBlaW5lIFNlbmR1bmdzcmVmZXJlbnogZWluLiIsImJhcmNvZGVfbGlua19zY2FuLWFub3RoZXItb3ItZW50ZXItbWFudWFsbHkiOiJTY2FubmVuIFNpZSBJaHJlIFNlbmR1bmcgb2RlciBnZWJlbiBTaWUgbWFudWVsbCBlaW5lIFNlbmR1bmdzcmVmZXJlbnogZWluLiIsImJhcmNvZGVfbGlua19yZXRyeS1tYW5pZmVzdGF0aW9uIjoiQml0dGUgdmVyc3VjaGVuIFNpZSBlcyBlcm5ldXQiLCJiYXJjb2RlX2FsZXJ0X3NoaXBtZW50LXJlZmVyZW5jZS1ub3QtZm91bmQiOiJTZW5kdW5nc3JlZmVyZW56IG5pY2h0IGdlZnVuZGVuIiwiYmFyY29kZV9hbGVydF9kb3dubG9hZC1ydW4tc2lsZW50LXByaW50aW5nIjoiRXMgaXN0IGVpbiBQcm9ibGVtIGJlaW0gRHJ1Y2tlbiBJaHJlciBEb2t1bWVudGUvTGFiZWxzIGF1ZmdldHJldGVuLiBCaXR0ZSB2ZXJzdWNoZW4gU2llIGVzIGVybmV1dCBvZGVyIGtvbnRha3RpZXJlbiBTaWUgREhMICJ9LCJjb21tb24tZXJyb3JzIjp7ImNvbW1vbl9iYWNrZW5kLWVycm9yX2ludmFsaWRfdGltZXpvbmVfb2Zmc2V0IjoiVW5nw7xsdGlnZSBaZWl0em9uZSIsImJ0bF9iYWNrZW5kLWVycm9yX2VtcHR5X21hbmRhdG9yeV9maWVsZHMiOiJQZmxpY2h0ZmVsZGVyIG3DvHNzZW4gYXVzZ2Vmw7xsbHQgd2VyZGVuIiwiYnRsX2JhY2tlbmQtZXJyb3JfdW9tLWlzLW5vdC1hdmFpbGFibGUiOiJNYcOfZWluaGVpdCBuaWNodCBlcmxhdWJ0In0sImNyMDA4NSI6eyJjci1uYW1lIjoiU2hpcHBpbmcgUmVzdHJpY3Rpb24gTm9uLURvY3VtZW50IDogQXBwcm92YWwgcmVxdWlyZWQifSwiY3IwMDg2Ijp7ImNyLW5hbWUiOiJTaGlwcGluZyBSZXN0cmljdGlvbiBEb2N1bWVudCA6IFVwbG9hZCBhbGxvd2VkIn0sImNyMDA4NyI6eyJjci1uYW1lIjoiU2hpcHBpbmcgUmVzdHJpY3Rpb24gUmV0dXJuIFNoaXBtZW50IDogZW5hYmxlZCJ9LCJjcjAwODMiOnsiY3ItbmFtZSI6IlNoaXBwaW5nIFJlc3RyaWN0aW9uIERvY3VtZW50IDogQXBwcm92YWwgcmVxdWlyZWQifSwiY3Itc2hpcHBpbmctZGVsaXZlcnktb3B0aW9ucyI6eyJibGFua19sYWJlbF9jcjAwNDEiOiI8ZGl2IGNsYXNzPVwiZXdmX2RpY3Rpb25hcnlfdmFsdWVcIj48ZGl2IGNsYXNzPSJtZXNzYWdlLXdyYXBwZXIiPjxoMz4kKHdoZW4tY3JlYXRpbmctc2hpcG1lbnQpPFwvaDM+XG48cD5LYW5uIGRpZXNlIExpZWZlcm9wdGlvbmVuIGF1c3fDpGhsZW48XC9wPlxuPFwvZGl2PjxcL2Rpdj4iLCJncm91cC1uYW1lX2hlYWRlciI6Ilp1c3RlbGxvcHRpb25lbiIsImJsYW5rX2NvbC1uYW1lX2NyMDA0MS1wcm9kdWN0Y29udGVudGNvZGUiOiJQcm9kdWt0Y29kZSIsImJsYW5rX2NvbC1uYW1lX2NyMDA0MS1kZXNjcmlwdGlvbiI6Ik5hbWUiLCJibGFua19jb2wtbmFtZV9jcjAwNDEtbG9jYWxjb2RlIjoiTG9rYWwgUHJvZHVrdGNvZGUiLCJibGFua19jb2wtbmFtZV9jcjAwNDEtZGVmYXVsdCI6IlN0YW5kYXJkIiwiYmxhbmtfY29sLW5hbWVfY3IwMDQxLWVuYWJsZWQiOiJFcmxhdWJ0IiwiYmxhbmtfY29sLW5hbWVfY3IwMDQxLWNvZGUiOiJHbG9iYWwgUHJvZHVrdGNvZGUifSwiZ2VuZXJhbF9zZXR0aW5ncy1ub25fYWNjb3VudF9wcm9oaWJpdGVkX2l0ZW1zIjp7ImxhcHRvcF9jb21wdXRlcnMtbmFtZSI6IiIsImZ1cnMtZGVzY3JpcHRpb24iOiJQZWx6ZSIsImlsbGVnYWxfZ29vZHMtbmFtZSI6IklsbGVnYWxlIEfDvHRlciwgd2llIGdlZsOkbHNjaHRlIFdhcmVuIHVuZCBCZXTDpHVidW5nc21pdHRlbCIsIm1vdG9yYmlrZS1kZXNjcmlwdGlvbiI6IiIsInRvYmFjY28tZGVzY3JpcHRpb24iOiJUYWJhaywgbG9zZSBUYWJha2Jsw6R0dGVyLVByb2R1a3RlIHVuZCB2b3JnZXJvbGx0ZSBaaWdhcmV0dGVuIiwidXNlZF9jYXJfcGFydHNfYW5kX2VuZ2luZXMtZGVzY3JpcHRpb24iOiJCZW51dHp0ZSBBdXRvdGVpbGUgdW5kIE1vdG9yZW4gLSBudXIgYWt6ZXB0YWJlbCwgd2VubiBhbGxlIFNjaHJpdHRlIHVudGVybm9tbWVuIHd1cmRlbiB1bSBnZWbDpGhybGljaGUgUsO8Y2tzdMOkbmRlIHp1IGJlc2VpdGlnZW4iLCJodW1hbl9yZW1haW5zLWRlc2NyaXB0aW9uIjoiTWVuc2NobGljaGUgw5xiZXJyZXN0ZSBvZGVyIEFzY2hlIiwiY2FzaF9hbmRfdHJhdmVsbGVyc19jaGVxdWVzLW5hbWUiOiJHZWxkIChnZXNldHpsaWNoZXMgWmFobHVuZ3NtaXR0ZWwgLSBCYW5rbm90ZW4sIFfDpGhydW5nc25vdGVuLCBNw7xuemVuKSB1bmQgUmVpc2UtQ2hlY2tzIiwibGl0aGl1bV9iYXR0ZXJpZXMtZGVzY3JpcHRpb24iOiJMaXRoaXVtIEJhdHRlcmllbjogQWxsZSBtZXRhbGxpc2NoZW4gTGl0aGl1bSBCYXR0ZXJpZW4uIExpdGhpdW0gQmF0dGVyaWVuIHNpbmQgZ2VuZXJlbGwgbmljaHQgYXVmbGFkYmFyIHVuZCBlbnRoYWx0ZW4gbWV0YWxsaXNjaGVzIExpdGhpdW0iLCJwb3Jub2dyYXBoeS1kZXNjcmlwdGlvbiI6IlBvcm5vZ3JhZmllIChvYiBpbSBEcnVjay0sIEZpbG0tIG9kZXIgaW4gZGlnaXRhbGVtIEZvcm1hdCkiLCJsYXB0b3BfY29tcHV0ZXJzLWRlc2NyaXB0aW9uIjoiIiwiY2xpbmljYWxfc2FtcGxlcy1uYW1lIjoiS2xpbmlzY2hlIHVuZC9vZGVyIGJpb2xvZ2lzY2hlIFByb2JlbiAoZWluc2NobGllw59saWNoIEvDtnJwZXJmbMO8c3NpZ2tlaXRlbiB1bmQgR2V3ZWJlcHJvYmVuKSIsImh1bWFuX3JlbWFpbnMtbmFtZSI6Ik1lbnNjaGxpY2hlIMOcYmVycmVzdGUgb2RlciBBc2NoZSIsImxpdGhpdW1fYmF0dGVyaWVzLW5hbWUiOiJMaXRoaXVtIEJhdHRlcmllbjogQWxsZSBtZXRhbGxpc2NoZW4gTGl0aGl1bSBCYXR0ZXJpZW4uIiwiYWxjb2hvbC1kZXNjcmlwdGlvbiI6IkFsY29ob2wgLSB0byBvdGhlciBFVSBjb3VudHJpZXMgKHNlbmRpbmcgYWxjb2hvbCB3aXRoaW4gdGhlIFVLIGlzIHBlcm1pdHRlZCkuIFNoaXBtZW50cyBjb250YWluaW5nIGFsY29ob2wgdG8gZGVzdGluYXRpb25zIG91dHNpZGUgdGhlIEVVIG1heSBiZSBzdWJqZWN0IHRvIGxvY2FsIHJlc3RyaWN0aW9ucyIsImxvb3NlX3ByZWNpb3VzX2FuZF9zZW1pLXByZWNpb3VzX3N0b25lcy1kZXNjcmlwdGlvbiI6Ikxvc2Ugd2VydHZvbGxlIHVuZCBzZW1pLXdlcnR2b2xsZSBTdGVpbmUgKGdlc2NobGlmZmVuIG9kZXIgdW5nZXNjaGxpZmZlbiwgcG9saWVydCBvZGVyIHVucG9saWVydCkiLCJjb21wbGV0ZV9vcmlnaW5hbF9hbmRfaW1pdGF0aW9uX2ZpcmVhcm1zX2FuZF9maXJlYXJtX3BhcnRzLWRlc2NyaXB0aW9uIjoiS29tcGxldHQgb3JpZ2luYWxlIHVuZCBnZWbDpGxzY2h0ZSBTY2h1c3N3YWZmZW4gdW5kIFRlaWxlIHZvbiBTY2h1c3N3YWZmZW4sIChlaW5nZXNjaGxvc3NlbiBHZXdlaHJrb2xiZW4sIEF1c2zDtnNlcnZvcnJpY2h0dW5nZW4sIFN0ZWxsc2NocmF1YmVuL0JvbHplbiBldGMuIGRlcmVuIGF1c3NjaGxpZcOfbGljaGVyIFp3ZWNrIGRpZSBFcnNjaGFmZnVuZyB2b24gZnVua3Rpb25pZXJlbmRlbiBTY2h1c3N3YWZmZW4gaXN0KSBNdW5pdGlvbiwgRXhwbG9zaXZlcy9leHBsb3NpdmUgR2VnZW5zdMOkbmRlIiwiamF3ZWxsZXJ5LWRlc2NyaXB0aW9uIjoiIiwiZGFuZ2Vyb3VzX2dvb2RzX2luY2x1ZGluZ19wZXJmdW1lc19hZnRlcnNoYXZlc19hZXJvc29sc19kcnlpY2UtZGVzY3JpcHRpb24iOiJFaW5zY2hsaWXDn2xpY2ggZ2Vmw6RocmxpY2hlciBHw7x0ZXIsIGRpZSBhYmVyIG5pY2h0IGJlZ3Jlbnp0IHNpbmQgYXVmIFBhcmZ1bXMsIEFmdGVyc2hhdmVzLCBBZXJvc29sZSwgZW50ZmxhbW1iYXJlIFN1YnN0YW56ZW4sIFRyb2NrZW5laXMsIGJpb2xvZ2lzY2hlIFN1YnN0YW56ZW4sIFVOIGtsYXNzaWZpemllcnRlIGdlZsOkaHJsaWNoZSBHw7x0ZXIgdW5kIGplZ2xpY2hlIEfDvHRlciwgZGllIGFscyBzb2xjaGUgZHVyY2ggZGllIEludGVybmF0aW9uYWwgQWlyIFRyYW5zcG9ydCBBc3NvY2lhdGlvbiBSZWd1bGllcnVuZyAoXCJJQVRBXCIpLCBkYXMgQWdyZWVtZW50IG9uIERhbmdlcm91cyBHb29kcyBieSBSb2FkIChcIkFEUlwiKSBvZGVyIEludGVybmF0aW9uYWwgTWFyaXRpbWUgRGFuZ2Vyb3VzIEdvb2RzIChcIklNREdcIikgUmVndWxpZXJ1bmcgc3BlemlmaXppZXJ0IHNpbmQuIiwiY2FzaF9hbmRfdHJhdmVsbGVyc19jaGVxdWVzLWRlc2NyaXB0aW9uIjoiR2VsZCAoZ2VzZXR6bGljaGVzIFphaGx1bmdzbWl0dGVsIC0gQmFua25vdGVuLCBXw6RocnVuZ3Nub3RlbiwgTcO8bnplbikgdW5kIFJlaXNlLUNoZWNrcyIsInBvcm5vZ3JhcGh5LW5hbWUiOiJQb3Jub2dyYWZpZSAob2IgaW0gRHJ1Y2stLCBGaWxtLSBvZGVyIGluIGRpZ2l0YWxlbSBGb3JtYXQpIiwiZGFuZ2Vyb3VzX2dvb2RzX2luY2x1ZGluZ19wZXJmdW1lc19hZnRlcnNoYXZlc19hZXJvc29sc19kcnlpY2UtbmFtZSI6IkdlZsOkaHJsaWNoZS9yaXNrYW50ZSBHw7x0ZXIgZWluc2NobGllw59saWNoIGFiZXIgbmljaHQgYmVncmVuenQgYXVmIFBhcmZ1bXMsIEFmdGVyc2hhdmVzLCBBZXJvc29sZSwgZW50ZmxhbW1iYXJlIFN1YnN0YW56ZW4sIFRyb2NrZW5laXMsIGJpb2xvZ2lzY2hlIFN1YnN0YW56ZW4iLCJsaXZlX2FuaW1hbHMtZGVzY3JpcHRpb24iOiJMZWJlbmRpZ2UgVGllcmUgKGlua2x1c2l2ZSBhYmVyIG5pY2h0IGJlc2NocsOkbmt0IGF1ZiBTw6R1Z2V0aWVyZSwgUmVwdGlsaWVuLCBGaXNjaGUsIHdpcmJlbGxvc2UgVGllcmUsIEFtcGhpYmllbiwgVsO2Z2VsLCBJbnNla3RlbiwgTGFydmVuIHVuZCBQdXBwZW4pIiwiZWxlY3Ryb25pY19pdGVtc19jb250YWluaW5nX2xpdGhpdW0tZGVzY3JpcHRpb24iOiJMaXRoaXVtIEJhdHRlcmllbjsgS2xlaW5lIGVsZWt0cmlzY2hlIEdlZ2Vuc3TDpG5kZSwgaW5rbHVzaXZlIEhhbmR5cywgZGllIExpdGhpdW0gQmF0dGVyaWVuIGVudGhhbHRlbiAtIGplZGVzIFBha2V0IGRhcmYgbmljaHQgbWVociBhbHMgMiBCYXR0ZXJpZW4gZW50aGFsdGVuLCBkaWUgaW5uZXJoYWxiIGRlcyBFbGVrdHJvbmlzY2hlbiBHZXLDpHRlcyBzZWluIG3DvHNzZW4uIE5pY2h0IG1laHIgYWxzIHp3ZWkgUGFja3VuZ2VuIHBybyBMaWVmZXJ1bmciLCJiY190ZXN0XzI4MDAxNy1kZXNjcmlwdGlvbiI6IiIsIm1vdG9yYmlrZS1uYW1lIjoiIiwiaWxsZWdhbF9nb29kcy1kZXNjcmlwdGlvbiI6IklsbGVnYWxlIEfDvHRlciwgd2llIGdlZsOkbHNjaHRlIFdhcmVuIHVuZCBCZXTDpHVidW5nc21pdHRlbCIsImNvbXBsZXRlX29yaWdpbmFsX2FuZF9pbWl0YXRpb25fZmlyZWFybXNfYW5kX2ZpcmVhcm1fcGFydHMtbmFtZSI6IktvbXBsZXR0IG9yaWdpbmFsZSB1bmQgZ2Vmw6Rsc2NodGUgU2NodXNzd2FmZmVuIHVuZCBUZWlsZSB2b24gU2NodXNzd2FmZmVuLCBNdW5pdGlvbiwgRXhwbG9zaXZlcy9leHBsb3NpdmUgR2VnZW5zdMOkbmRlIiwicHJvaGliaXRlZF8xLW5hbWUiOiIiLCJhbGNvaG9sLW5hbWUiOiJBbGNvaG9sID8gdG8gb3RoZXIgRVUgY291bnRyaWVzIChwZXJtaXR0ZWQgd2l0aGluIHRoZSBVSyBvbmx5KSIsImxpdGhpdW1faW9uX2JhdHRlcmllcy1kZXNjcmlwdGlvbiI6IkxpdGhpdW0gQmF0dGVyaWVuOiBMb29zZSBMaXRoaXVtaW9uZW4gQmF0dGVyaWVuLiBMaXRoaXVtaW9uZW4gQmF0dGVyaWVuIGVudGhhbHRlbiBrZWluZSBtZXRhbGxpc2NoZXMgTGl0aGl1bSB1bmQgc2luZCB3aWVkZXJhdWZsYWRiYXIuIERpZXMgc2luZCB6LkIuIFBvd2VyYmFua3MgdW5kIFVTQi1MYWRlZ2Vyw6R0ZSIsImh1bnRpbmdfdHJvcGhpZXMtbmFtZSI6IkphZ2R0cm9waMOkZW4sIFRlaWxlIHZvbiBUaWVyZW4gd2llIEVsZmVuYmVpbiB1bmQgSGFpZmxvc3NlbiwgVGllcsO8YmVycmVzdGUgdW5kIEFzY2hlLCB0aWVyaXNjaGUgTmViZW5wcm9kdWt0ZSIsImVsZWN0cm9uaWNfY2lnYXJldHRlcy1kZXNjcmlwdGlvbiI6IkVsZWt0cm9uaXNjaGUgWmlnYXJldHRlbiIsImh1bnRpbmdfdHJvcGhpZXMtZGVzY3JpcHRpb24iOiJKYWdkdHJvcGjDpGVuLCBUZWlsZSB2b24gVGllcmVuIHdpZSBFbGZlbmJlaW4gdW5kIEhhaWZsb3NzZW4sIFRpZXLDvGJlcnJlc3RlIHVuZCBBc2NoZSwgb2RlciB0aWVyaXNjaGUgTmViZW5wcm9kdWt0ZSB1bmQgRXJ6ZXVnbmlzc2UsIGRpZSBuaWNodCBmw7xyIGRlbiBtZW5zY2hsaWNoZW4gS29uc3VtIGdlZGFjaHQgc2luZCwgc2luZCB2b24gZGVyIENJVEVTIENvbnZlbnRpb24gdW5kL29kZXIgdm9tIEdlc2V0eiBoZXIgdmVyYm90ZW4genUgdmVyc2VuZGVuLiIsImFudGlxdWVzX2FuZF93b3JrX29mX2FydF93aXRoX2luZGl2aWR1YWxfdmFsdWVfbW9yZV81MDAwX3BvdW5kcy1kZXNjcmlwdGlvbiI6IiIsImNsaW5pY2FsX3NhbXBsZXMtZGVzY3JpcHRpb24iOiJLbGluaXNjaGUgdW5kL29kZXIgYmlvbG9naXNjaGUgUHJvYmVuIChlaW5zY2hsaWXDn2xpY2gsIGFiZXIgbmljaHQgYmVncmVuenQgYXVmIEvDtnJwZXJmbMO8c3NpZ2tlaXRlbiB1bmQgR2V3ZWJlcHJvYmVuKSIsImxpdmVfYW5pbWFscy1uYW1lIjoiTGViZW5kaWdlIFRpZXJlIChpbmtsdXNpdmUgYWJlciBuaWNodCBiZXNjaHLDpG5rdCBhdWYgU8OkdWdldGllcmUsIFJlcHRpbGllbiwgRmlzY2hlLCB3aXJiZWxsb3NlIFRpZXJlLCBBbXBoaWJpZW4sIFbDtmdlbCwgSW5zZWt0ZW4sIExhcnZlbiB1bmQgUHVwcGVuKSIsInNhbXN1bmdfZ2FsYXp5X25vdGU3LW5hbWUiOiJBbGxlIFNhbXN1bmcgR2FsYXh5IE5vdGUgNyB1bmQgU2Ftc3VuZyBOb3RlIDcgR2Vyw6R0ZSIsImxpdGhpdW1faW9uX2JhdHRlcmllcy1uYW1lIjoiTGl0aGl1bSBCYXR0ZXJpZW46IExvc2UgTGl0aGl1bWlvbmVuIEJhdHRlcmllbi4gRGllcyBzaW5kIHouQi4gUG93ZXJiYW5rcyB1bmQgVVNCLUxhZGVnZXLDpHRlIiwidXNlZF9jYXJfcGFydHNfYW5kX2VuZ2luZXMtbmFtZSI6IkJlbnV0enRlIEF1dG90ZWlsZSB1bmQgTW90b3JlbiAtIG51ciBha3plcHRhYmVsLCB3ZW5uIGFsbGUgU2Nocml0dGUgdW50ZXJub21tZW4gd3VyZGVuIHVtIGdlZsOkaHJsaWNoZSBSw7xja3N0w6RuZGUgenUgYmVzZWl0aWdlbiIsImVsZWN0cm9uaWNfY2lnYXJldHRlcy1uYW1lIjoiRWxla3Ryb25pc2NoZSBaaWdhcmV0dGVuIiwidG9iYWNjby1uYW1lIjoiVGFiYWssIGxvc2UgVGFiYWtibMOkdHRlci1Qcm9kdWt0ZSB1bmQgdm9yZ2Vyb2xsdGUgWmlnYXJldHRlbiIsInNhbXN1bmdfZ2FsYXp5X25vdGU3LWRlc2NyaXB0aW9uIjoiQWxsZSBTYW1zdW5nIEdhbGF4eSBOb3RlIDcgdW5kIFNhbXN1bmcgTm90ZSA3IEdlcsOkdGUiLCJhbnRpcXVlc19hbmRfd29ya19vZl9hcnRfd2l0aF9pbmRpdmlkdWFsX3ZhbHVlX21vcmVfNTAwMF9wb3VuZHMtbmFtZSI6IiIsImZ1cnMtbmFtZSI6IlBlbHplIiwiYnVsbGlvbl9vZl9hbnlfcHJlY2lvdXNfbWV0YWwtZGVzY3JpcHRpb24iOiJCYXJyZW4gKGF1cyBqZWdsaWNoZW0gRWRlbG1ldGFsbCkiLCJiY190ZXN0XzI4MDAxNy1uYW1lIjoiIiwiamF3ZWxsZXJ5LW5hbWUiOiIiLCJlbGVjdHJvbmljX2l0ZW1zX2NvbnRhaW5pbmdfbGl0aGl1bS1uYW1lIjoiTGl0aGl1bSBCYXR0ZXJpZW47IEtsZWluZSBlbGVrdHJpc2NoZSBHZWdlbnN0w6RuZGUsIGlua2x1c2l2ZSBIYW5keXMsIGRpZSBMaXRoaXVtIEJhdHRlcmllbiBlbnRoYWx0ZW4gLSBqZWRlcyBQYWtldCBkYXJmIG5pY2h0IG1laHIgYWxzIDIgQmF0dGVyaWVuIGVudGhhbHRlbiwgZGllIGlubmVyaGFsYiBkZXMgRWxla3Ryb25pc2NoZW4gR2Vyw6R0ZXMgc2VpbiBtw7xzc2VuLiBOaWNodCBtZWhyIGFscyB6d2VpIFBhY2t1bmdlbiBwcm8gTGllZmVydW5nIiwiYnVsbGlvbl9vZl9hbnlfcHJlY2lvdXNfbWV0YWwtbmFtZSI6IkJhcnJlbiAoYXVzIGplZ2xpY2hlbSBFZGVsbWV0YWxsKSIsImxvb3NlX3ByZWNpb3VzX2FuZF9zZW1pLXByZWNpb3VzX3N0b25lcy1uYW1lIjoiTG9zZSB3ZXJ0dm9sbGUgdW5kIHNlbWktd2VydHZvbGxlIFN0ZWluZSAoZ2VzY2hsaWZmZW4gb2RlciB1bmdlc2NobGlmZmVuLCBwb2xpZXJ0IG9kZXIgdW5wb2xpZXJ0KSIsInByb2hpYml0ZWRfMS1kZXNjcmlwdGlvbiI6IiJ9LCJjci1ib29raW5nMmxhYmVsIjp7ImJsYW5rX2Vycm9yX2NyMDIyNS1yZXF1aXJlZCI6IlRoaXMgZmllbGQgaXMgcmVxdWlyZWQiLCJibGFua19zZWxlY3Qtb3B0aW9uX2NyMDIyNi1lZGl0YWJsZSI6IkVkaXRhYmxlIiwiYmxhbmtfc2VsZWN0LW9wdGlvbl9jcjAyMjUtaGlkZGVuIjoiSGlkZGVuIiwiYmxhbmtfc2VsZWN0LW9wdGlvbl9jcjAyMjYtaGlkZGVuIjoiSGlkZGVuIiwiYmxhbmtfc2VsZWN0LW9wdGlvbl9jcjAyMjMtZWRpdGFibGUiOiJFZGl0YWJsZSIsImJsYW5rX2xhYmVsX2NyMDIxNSI6IlJlY2VpdmVyIENvdW50cnkgRW5hYmxlZCIsImJsYW5rX2xhYmVsX2NyMDIxNCI6IlNoaXBwZXIgQ2l0eSBFbmFibGVkIiwiYmxhbmtfc2VsZWN0LW9wdGlvbl9jcjAyMjYtbm9uLWVkaXRhYmxlIjoiTm9uLWVkaXRhYmxlIiwiYmxhbmtfc2VsZWN0LW9wdGlvbl9jcjAyMjQtZWRpdGFibGUiOiJFZGl0YWJsZSIsImJsYW5rX2Vycm9yX2NyMDIyMy1yZXF1aXJlZCI6IlRoaXMgZmllbGQgaXMgcmVxdWlyZWQiLCJibGFua19sYWJlbF9jcjAyMTMiOiJTaGlwcGVyIFBvc3RhbCBDb2RlIEVuYWJsZWQiLCJibGFua19zZWxlY3Qtb3B0aW9uX2NyMDIyNS1ub24tZWRpdGFibGUiOiJOb24tRWRpdGFibGUiLCJibGFua19sYWJlbF9jcjAyMTIiOiJTaGlwcGVyIENvdW50cnkgRW5hYmxlZCIsImJsYW5rX2xhYmVsX2NyMDIxOSI6IlBpZWNlIERldGFpbHMgRW5hYmxlZCIsImJsYW5rX3NlbGVjdC1vcHRpb25fY3IwMjIzLW5vbi1lZGl0YWJsZSI6Ik5vbi1FZGl0YWJsZSIsImJsYW5rX2xhYmVsX2NyMDIxOCI6IlBhY2thZ2luZyBUeXBlIEVuYWJsZWQiLCJibGFua19sYWJlbF9jcjAyMTciOiJSZWNlaXZlciBDaXR5IEVuYWJsZWQiLCJibGFua19sYWJlbF9jcjAyMTYiOiJSZWNlaXZlciBQb3N0YWwgQ29kZSBFbmFibGVkIiwiYmxhbmtfc2VsZWN0LW9wdGlvbl9jcjAyMjQtbm9uLWVkaXRhYmxlIjoiTm9uLUVkaXRhYmxlIiwiZ3JvdXAtbmFtZV9oZWFkZXIiOiJCb29raW5nMkxhYmVsIiwiYmxhbmtfZXJyb3JfY3IwMjI2LXJlcXVpcmVkIjoiVGhpcyBmaWVsZCBpcyByZXF1aXJlZCIsImJsYW5rX3NlbGVjdC1vcHRpb25fY3IwMjI1LWVkaXRhYmxlIjoiRWRpdGFibGUiLCJibGFua19zZWxlY3Qtb3B0aW9uX2NyMDIyMy1oaWRkZW4iOiJIaWRkZW4iLCJibGFua19zZWxlY3Qtb3B0aW9uX2NyMDIyNC1oaWRkZW4iOiJIaWRkZW4iLCJibGFua19sYWJlbF9jcjAyMjIiOiJTaGlwbWVudCBEYXRlIEVuYWJsZWQiLCJibGFua19sYWJlbF9jcjAyMjEiOiJQYWNrYWdlcyBTaGlwbWVudCBUeXBlIEVuYWJsZWQiLCJibGFua19sYWJlbF9jcjAyMjAiOiJEb2N1bWVudHMgU2hpcG1lbnQgVHlwZSBFbmFibGVkIiwiYmxhbmtfbGFiZWxfY3IwMjI2IjoiSW5zdXJhbmNlIFZhbHVlIEF2YWlsYWJpbGl0eSIsImJsYW5rX2xhYmVsX2NyMDIyNSI6IkRlY2xhcmVkIFZhbHVlIEF2YWlsYWJpbGl0eSIsImJsYW5rX2xhYmVsX2NyMDIyNCI6IkR1dGllcyBhbmQgVGF4ZXMgYW5kIEFjY291bnQgTnVtYmVyIFZpc2libGUiLCJibGFua19lcnJvcl9jcjAyMjQtcmVxdWlyZWQiOiJUaGlzIGZpZWxkIGlzIHJlcXVpcmVkIiwiYmxhbmtfbGFiZWxfY3IwMjIzIjoiQmlsbCBUbyBhbmQgQWNjb3VudCBOdW1iZXIgQXZhaWxhYmlsaXR5IiwiYmxhbmtfbGFiZWxfY3IwMjI5IjoiQWxsb3cgQ2FzaCBQYXltZW50cyIsImJsYW5rX2xhYmVsX2NyMDIyOCI6IkRhdGUgVGltZSBCMkwgRGVsaXZlcnkgT3B0aW9ucyIsImJsYW5rX2xhYmVsX2NyMDIyNyI6Ik9wdGlvbmFsIFNlcnZpY2VzIEVuYWJsZWQifSwiY3Itb3B0aW9uYWwtc2VydmljZXMiOnsiZ3JvdXAtbmFtZV9oZWFkZXIiOiJPcHRpb25hbGUgU2VydmljZXMiLCJibGFua19lcnJvcl9jcjAwNTctbWluc2l6ZSI6IiIsImluc3VyYW5jZS1zZXJ2aWNlX2Vycm9yX2NyMDA1OS1yZXF1aXJlZCI6IkVyZm9yZGVybGljaCIsImluc3VyYW5jZS1zZXJ2aWNlX2xhYmVsX2NyMDA1OCI6Ikthbm4gVHJhbnNwb3J0dmVyc2ljaGVydW5nIHp1IGVpbmVyIFNlbmR1bmcgaGluenVmw7xnZW4iLCJpbnN1cmFuY2Utc2VydmljZV9sYWJlbF9jcjAwNTkiOiJNYXhpbWFsIHZvbiIsImJsYW5rX2Vycm9yX2NyMDA1Ny1tYXhzaXplIjoiIiwiYmxhbmtfY29sLW5hbWVfY3IwMDU3LWVuYWJsZWQiOiJFcmxhdWJ0IiwiYmxhbmtfY29sLW5hbWVfY3IwMDU3LWxvY2FsY29kZSI6Ikxva2FsIFNlcnZpY2UgQ29kZSIsImluc3VyYW5jZS1zZXJ2aWNlX2xhYmVsX2NyMDA2MCI6IiIsImJsYW5rX2NvbC1uYW1lX2NyMDA1Ny1jb2RlIjoiR2xvYmFsIFNlcnZpY2UgQ29kZSIsImJsYW5rX2xhYmVsX2NyMDA1NyI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPjxiPkthbm4gZGllc2UgT3B0aW9uYWxlbiBTZXJ2aWNlcyBhdXN3w6RobGVuPFwvYj48XC9kaXY+IiwiYmxhbmtfY29sLW5hbWVfY3IwMDU3LWRlc2NyaXB0aW9uIjoiTmFtZSIsImluc3VyYW5jZS1zZXJ2aWNlX3N1Yi1oZWFkZXIiOiI8ZGl2IGNsYXNzPVwiZXdmX2RpY3Rpb25hcnlfdmFsdWVcIj48Yj5XZW5uIFNlbmR1bmdlbiBlcnN0ZWxsdCB3ZXJkZW48XC9iPjxcL2Rpdj4iLCJpbnN1cmFuY2Utc2VydmljZV9lcnJvcl9jcjAwNjAtcmVxdWlyZWQiOiJFcmZvcmRlcmxpY2gifSwiU0NIRURVTEVfTUFOQUdFX1BJQ0tVUCI6eyJMQUJFTF9SRUZFUkVOQ0VfRVJST1JfQUNDT1VOVF9OVU1CRVJfSVNfSU5WQUxJRCI6IlVuZ8O8bHRpZ2VyIEFjY291bnQiLCJMQUJFTF9SRUZFUkVOQ0VfRVJST1JfQ09VTlRSWV9ET0VTTlRfTUFUQ0hfQUNDT1VOVF9DT1VOVFJZIjoiTGFuZCBtdXNzIG1pdCBkZW0gTGFuZCwgd28gZGVyIERITCBBY2NvdW50IHJlZ2lzdHJpZXJ0IGlzdCwgw7xiZXJlaW5zdGltbWVuIiwiTUFOQUdFX1NFQVJDSF9TRUxFQ1RfT1BUSU9OX01ZREhMX0VYUE9SVCI6IkV4cG9ydCIsIkxBQkVMX1JFRkVSRU5DRV9FUlJPUl9JTVBPUlRfQUNDT1VOVF9JU19OT1RfQUxMT1dFRF9GT1JfUElDS1VQIjoiRGVyIEltcG9ydCBBY2NvdW50IGlzdCBuaWNodCBnZWVpZ25ldCBmw7xyIGVpbmUgQWJob2x1bmciLCJQSUNLVVBfREVUQUlMU19WQUxVRV9MQUJFTF9CT09LSU5HX1NFTlRfVE9fRElTUEFUQ0giOiJBbiBLdXJpZXJmYWhyZXIgw7xiZXJtaXR0ZWx0IiwiUElDS1VQX0RPV05MT0FEX1ZBTFVFX0xBQkVMX1BBQ0tBR0lOR19SRVFVRVNURUQiOiJBbmdlZnJhZ3RlIFZlcnBhY2t1bmciLCJQSUNLVVBfREVUQUlMU19WQUxVRV9MQUJFTF9CT09LSU5HX0FDS05PV0xFREdFIjoiQWJob2xhdWZ0cmFnIGVyaGFsdGVuIiwiUElDS1VQX0RPV05MT0FEX1ZBTFVFX0xBQkVMX0FERFJFU1NfTElORV8xIjoiQWJob2xhZHJlc3NlIiwiUEFDS0FHRVMiOiJXYXJlbnNlbmR1bmdlbiIsIlBJQ0tVUF9ERVRBSUxTX1BBUkFHUkFQSF9QSUNLVVBfVFlQRV9JTVBPUlQiOiJJbXBvcnQiLCJQSUNLVVBfRE9XTkxPQURfVkFMVUVfTEFCRUxfU0hJUE1FTlRfUkVGRVJFTkNFIjoiU2VuZHVuZ3NyZWZlcmVueiIsIlBJQ0tVUF9ET1dOTE9BRF9WQUxVRV9MQUJFTF9BQ0NPVU5UX05VTUJFUiI6Ikt1bmRlbm51bW1lciIsIlBJQ0tVUF9ET1dOTE9BRF9WQUxVRV9MQUJFTF9QSUNLVVBfT1dORVJfVVNFUk5BTUUiOiJBYmhvbHVuZyBnZWJ1Y2h0IHZvbiIsIlBBQ0tBR0UiOiJTZW5kdW5nIiwiTEFCRUxfUkVGRVJFTkNFX1NFTEVDVF9PUFRJT05fUkVUVVJOX1NISVBNRU5UX09SX1JFQ0VJVkVSIjoiSWNoIGhhYmUgZWluZSBESEwgU2VuZHVuZ3NudW1tZXIiLCJET0NVTUVOVCI6IkRva3VtZW50IiwiUElDS1VQX0RFVEFJTFNfVkFMVUVfTEFCRUxfU0VOVF9UT19ST1VURSI6IkF1ZiBUb3VyIGVpbmVzIEt1cmllcmZhaHJlcnMgZGlzcG9uaWVydCIsIlBJQ0tVUF9DT05GSVJNQVRJT05fQUxFUlRfTk9USUZJQ0FUSU9OU19BUkVfTk9UX1NFTkQiOiJCZW5hY2hyaWNodGlndW5nZW4gdmVyc2VuZGVuIGlzdCBuaWNodCBtw7ZnbGljaCIsIlBJQ0tVUF9ET1dOTE9BRF9WQUxVRV9MQUJFTF9QSUNLVVBfU1RBVFVTIjoiQWJob2xzdGF0dXMiLCJNQU5BR0VfTElTVF9MSU5LX1NFVF9OT1RJRklDQVRJT05TX0FDVElPTiI6IkJlbmFjaHJpY2h0aWd1bmdlbiBlaW5yaWNodGVuIiwiUElDS1VQX0RPV05MT0FEX1ZBTFVFX0xBQkVMX1BJQ0tVUF9XSU5ET1dfRUFSTElFU1QiOiJmcsO8aGVzdGUgQWJob2x6ZWl0IiwiTUFOQUdFX1NFQVJDSF9MSU5LX1NFQVJDSF9UWVBFQUhFQURfTElORTEiOiJ7cmVmZXJlbmNlTnVtYmVyfSBhbiB7ZGF0ZX0iLCJNQU5BR0VfU0VBUkNIX1NFTEVDVF9PUFRJT05fQ1VTVE9NX0RBVEVfUkFOR0UiOiJWZXJzYW5kemVpdHJhdW0iLCJNQU5BR0VfU0VBUkNIX1NFTEVDVF9PUFRJT05fTVlESExfSU1QT1JUX0FORF8zUkRfUEFSVFlfQ09VTlRSWSI6IkltcG9ydCIsIk1BTkFHRV9TRUFSQ0hfU0VMRUNUX09QVElPTl9MQVNUXzkwX0RBWVMiOiJMZXR6dGUocikgOTAgVGFnZSIsIlBJQ0tVUF9ET1dOTE9BRF9WQUxVRV9MQUJFTF9QSUNLVVBfTE9DQVRJT04iOiJBYmhvbG9ydCIsIk1BTkFHRV9MSVNUX0NPTF9OQU1FX1BJQ0tVUF9XSU5ET1ciOiJBYmhvbHplaXRmZW5zdGVyIiwiTUFOQUdFX1NFQVJDSF9TRUxFQ1RfT1BUSU9OX0NBVEVHT1JZX0FTU0lHTkVEX1RPX01FIjoiYW4gbWljaCB6dWdld2llc2VuZSBBYmhvbHVuZ2VuICIsIlBJQ0tVUF9ERVRBSUxTX1BBUkFHUkFQSF9QSUNLVVBfVFlQRV9FWFBPUlQiOiJFeHBvcnQiLCJMQUJFTF9SRUZFUkVOQ0VfRVJST1JfQ09VTlRSWV9ET0VTTlRfTUFUQ0hfSU1QT1JUIjoiTGFuZCBtdXNzIG1pdCBkZW0gTGFuZCwgd28gZGVyIEltcG9ydCBBY2NvdW50aW5oYWJlciBhbnPDpHNzaWcgaXN0LCDDvGJlcmVpbnN0aW1tZW4iLCJQSUNLVVBfRE9XTkxPQURfVkFMVUVfTEFCRUxfUElDS1VQX0RBVEUiOiJBYmhvbGRhdHVtIiwiUElDS1VQX0NPTkZJUk1BVElPTl9TRUxFQ1RfT1BUSU9OX1NNUyI6IlNNUyIsIlBJQ0tVUF9ET1dOTE9BRF9WQUxVRV9MQUJFTF9QSUNLVVBfV0lORE9XX0xBVEVTVCI6IlNww6R0ZXN0ZSBBYmhvbHplaXQiLCJQSUNLVVBfQ09ORklSTUFUSU9OX1NFTEVDVF9PUFRJT05fRU1BSUwiOiJFLU1haWwiLCJQSUNLVVBfRE9XTkxPQURfVkFMVUVfTEFCRUxfTlVNQkVSX09GX1BJRUNFUyI6IkFuemFobCBTZW5kdW5nZW4vUGFja3N0w7xja2UgIiwiTUFOQUdFX1NFQVJDSF9TRUxFQ1RfT1BUSU9OX1VQQ09NSU5HIjoiWnVrw7xuZnRpZ2UiLCJNQU5BR0VfTElTVF9MSU5LX0NBTkNFTF9BQ1RJT04iOiJhYmJyZWNoZW4iLCJNQU5BR0VfU0VBUkNIX1NFTEVDVF9PUFRJT05fTEFTVF9EQVkiOiJMZXR6dGUocikgVGFnIiwiRE9DVU1FTlRTIjoiRG9rdW1lbnRlbnNlbmR1bmdlbiIsIk1BTkFHRV9MSVNUX0NPTF9OQU1FX0NPTkZJUk1BVElPTiI6IkF1ZnRyYWdzbnVtbWVyIiwiUElDS1VQX0RPV05MT0FEX1ZBTFVFX0xBQkVMX1RPVEFMX1BBQ0tBR0lOR19DT1VOVCI6IkFuemFobCBQYWNrc3TDvGNrZSIsIlBJQ0tVUF9ET1dOTE9BRF9WQUxVRV9MQUJFTF9CT09LSU5HX1JFRkVSRU5DRV9OVU1CRVIiOiJBYmhvbG51bW1lciIsIlBJQ0tVUF9ERVRBSUxTX1ZBTFVFX0xBQkVMX1VOQVNTSUdORUQiOiJOaWNodCBhdXRvcmlzaWVydCIsIk1BTkFHRV9TRUFSQ0hfU0VMRUNUX09QVElPTl9DQVRFR09SWV9BU1NJR05FRF9CWV9NRSI6IlZvbiBtaXIgenVnZXdpZXNlbiIsIkhPTUVfSU5GT19URVhUX1BBR0VfUkFOR0UiOiJBbnplaWdlbiB7Zmlyc3RSZWNvcmRJbmRleH0gLSB7bGFzdFJlY29yZEluZGV4fSB2b24ge3RvdGFsUmVjb3Jkc30gQWJob2x1bmdlbiIsIlBJQ0tVUF9ERVRBSUxTX1ZBTFVFX0xBQkVMX0NBTkNFTExFRCI6IkdlbMO2c2NodCIsIlBJQ0tVUF9ET1dOTE9BRF9WQUxVRV9MQUJFTF9DT1JQT1JBVEVfR1JPVVBfTkFNRSI6IkdydXBwZW5uYW1lIiwiUElDS1VQX0RFVEFJTFNfVkFMVUVfTEFCRUxfQUxMT0NBVEVEX1RPX1JPVVRFIjoiQXVmIFRvdXIgZWluZXMgS3VyaWVyZmFocmVycyBkaXNwb25pZXJ0IiwiUElDS1VQX0RFVEFJTFNfVkFMVUVfTEFCRUxfQk9PS0lOR19DUkVBVEVEIjoiQW4gS3VyaWVyZmFocmVyIMO8YmVybWl0dGVsdCIsIk1BTkFHRV9MSVNUX0NPTF9OQU1FX1NUQVRVUyI6IlN0YXR1cyIsIk1BTkFHRV9MSVNUX0xJTktfRE9XTkxPQURfQUNUSU9OIjoiQXVzd2FobCBkb3dubG9hZGVuIiwiTUFOQUdFX1NFQVJDSF9TRUxFQ1RfT1BUSU9OX0xBU1RfVFdPX1dFRUtTIjoiTGV0enRlKHIpIDIgV29jaGVuIiwiTUFOQUdFX1NFQVJDSF9TRUxFQ1RfT1BUSU9OX0xBU1RfV0VFSyI6IkxldHp0ZShyKSBXb2NoZSIsIlBJQ0tVUF9ERVRBSUxTX1ZBTFVFX0xBQkVMX0NPTVBMRVRFRCI6IlZvbGxzdMOkbmRpZyIsIk1BTkFHRV9MSVNUX0NPTF9OQU1FX0xPQ0FUSU9OIjoiQWRyZXNzZSIsIlBJQ0tVUF9ET1dOTE9BRF9WQUxVRV9MQUJFTF9UT1RBTF9XRUlHSFQiOiJHZXNhbXRnZXdpY2h0IiwiUElDS1VQX0RFVEFJTFNfVkFMVUVfTEFCRUxfU0NIRURVTEVEIjoiR2VwbGFudCIsIlBJQ0tVUF9ERVRBSUxTX1ZBTFVFX0xBQkVMX0JPT0tJTkdfQ09NUExFVEVEIjoiVm9sbHN0w6RuZGlnIiwiTEFCRUxfUkVGRVJFTkNFX1NFTEVDVF9PUFRJT05fSV9IQVZFX0FfREhMX0FDQ09VTlRfTlVNQkVSIjoiSWNoIGhhYmUgZWluZSBESEwgS3VuZGVubnVtbWVyIiwiTUFOQUdFX1NFQVJDSF9TRUxFQ1RfT1BUSU9OX0FMTF9EQVlTIjoiQWxsZSIsIlBJQ0tVUF9ERVRBSUxTX1BBUkFHUkFQSF9QSUNLVVBfVEhJUkRfUEFSVFkiOiJBbmRlcmUgQXBwcyAoQWJob2x1bmdlbiBuaWNodCDDvGJlciBNeURITCsgZ2VidWNodCkiLCJQSUNLVVBfREVUQUlMU19WQUxVRV9MQUJFTF9CT09LSU5HX0FDQ0VQVEVEIjoiQXVmIFRvdXIgZWluZXMgS3VyaWVyZmFocmVycyIsIk1BTkFHRV9TRUFSQ0hfU0VMRUNUX09QVElPTl8zUkRfUEFSVFlfQVBQTElDQVRJT04iOiJBbmRlcmUgQXBwcyAoQWJob2x1bmdlbiBuaWNodCDDvGJlciBNeURITCsgZ2VidWNodCkiLCJNQU5BR0VfTElTVF9DT0xfTkFNRV9QSUNLVVBfREFURSI6IkFiaG9sZGF0dW0iLCJNQU5BR0VfTElTVF9MSU5LX0VESVRfQUNUSU9OIjoiQmVhcmJlaXRlbiIsIlBJQ0tVUF9ERVRBSUxTX1ZBTFVFX0xBQkVMX0JPT0tJTkdfQ0FOQ0VMIjoiR2Vsw7ZzY2h0IiwiUElDS1VQX0RFVEFJTFNfVkFMVUVfTEFCRUxfQk9PS0lOR19FWENFUFRJT04iOiJBdXNuYWhtZSIsIk1BTkFHRV9TRUFSQ0hfU0VMRUNUX09QVElPTl9DQVRFR09SWV9NWV9QSUNLVVBTIjoiTWVpbmUgQWJob2x1bmdlbiJ9LCJBRERSRVNTX0JPT0tfSU1QT1JUIjp7IlNDSEVNRV9BTFJFQURZX0RFTEVURUQiOiJNYXBwaW5nIHd1cmRlIHZvbiBlaW5lbSBhbmRlcmVuIE51dHplciBnZWzDtnNjaHQiLCJBRERSRVNTX0JPT0tfSU1QT1JUX1BBUkFHUkFQSF9HT19CQUNLX0NPTkZJUk1BVElPTiI6IlNpbmQgU2llIHNpY2hlciwgZGFzcyBTaWUgZGllc2UgU2VpdGUgdmVybGFzc2VuIG3DtmNodGVuPyIsIkFERFJFU1NfQk9PS19JTVBPUlRfTk9UX1VOSVFVRV9TQ0hFTUVfTkFNRSI6Ik5hbWUgYmVyZWl0cyB2ZXJnZWJlbiJ9LCJjdXN0b21zLWNsZWFyYW5jZS1zZXR0aW5ncyI6eyJwcm9kdWN0LWl0ZW1fYmFja2VuZC1lcnJvcl9kdXBsaWNhdGUtZGVzY3JpcHRpb24iOiJXYXJlIGV4aXN0aWVydCBiZXJlaXRzIn0sImNyMDA4OSI6eyJjci1uYW1lIjoiRW5kIG9mIERheSBNYW5pZmVzdDogRW5hYmxlIn0sImNyMDA1MyI6eyJjci1uYW1lIjoiQWxsb3cgdG8gc2NoZWR1bGUgYSBwaWNrdXAifSwiY3IwMTc0Ijp7ImNyLWVycm9ycy1yZXF1aXJlZCI6IlRoaXMgZmllbGQgaXMgcmVxdWlyZWQiLCJjci1uYW1lIjoiUExUIEVucm9sbG1lbnQgVHlwZSJ9LCJjcjAxNzYiOnsiY3ItZXJyb3JzLXJlcXVpcmVkIjoiIiwiY3ItbmFtZSI6IkRlZmF1bHQgbnVtYmVyIG9mIGNvcGllcyByZXF1aXJlZCAtIEFyY2hpdmUgTGFiZWwiLCJjci1lcnJvcnMtcmFuZ2UiOiJWYWx1ZSBpcyBvdXQgb2YgdGhlIHJhbmdlIn0sImNyLXByaWNpbmciOnsiZGlzcGxheS1wcmljaW5nLWluLXJhdGUtdGltZS1xdW90ZS10b29sX3N1Yi1oZWFkZXIiOiI8ZGl2IGNsYXNzPVwiZXdmX2RpY3Rpb25hcnlfdmFsdWVcIj48ZGl2IGNsYXNzPSJtZXNzYWdlLXdyYXBwZXIiPjxoMz5XZW5uIFByZWlzYW5nZWJvdGUgYW5nZXplaWd0IHdlcmRlbjxcL2gzPlxuPHA+QW56ZWlnZTxcL3A+XG48XC9kaXY+PFwvZGl2PiIsImdyb3VwLW5hbWVfaGVhZGVyIjoiUHJlaXNlIHVuZCBUcmFuc3BvcnRrb3N0ZW4iLCJkaXNwbGF5LXByaWNpbmctaW4tcmF0ZS10aW1lLXF1b3RlLXRvb2xfbGFiZWxfY3IwMDUwIjoiWnVzY2hsw6RnZSIsImRpc3BsYXktcHJpY2luZy1pbi1yYXRlLXRpbWUtcXVvdGUtdG9vbF9sYWJlbF9jcjAwNDQiOiJUYXJpZmUiLCJkaXNwbGF5LXByaWNpbmctaW4tc2hpcG1lbnRfbGFiZWxfY3IwMDQzIjoiU2VuZHVuZ3NnZWLDvGhyZW4iLCJkaXNwbGF5LXByaWNpbmctaW4tc2hpcG1lbnRfc3ViLWhlYWRlciI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPjxkaXYgY2xhc3M9Im1lc3NhZ2Utd3JhcHBlciI+PGgzPldlbm4gU2VuZHVuZ2VuIGVyc3RlbGx0LCBiZWFyYmVpdGV0LCBhbmdlemVpZ3QgdW5kIGdlZHJ1Y2t0IHdlcmRlbjxcL2gzPlxuPHA+QW56ZWlnZTxcL3A+XG48XC9kaXY+PFwvZGl2PiIsImRpc3BsYXktcHJpY2luZy1pbi1zaGlwbWVudF9sYWJlbF9jcjAwNDYiOiJHZWLDvGhyZW4gYXVmIFNlbmR1bmdzYmVsZWdlIiwiYmxhbmtfbGFiZWxfY3IwMDQ4IjoiS2FubiBQcmVpc2FuZ2Vib3RlIGJla29tbWVuIiwiZGlzcGxheS1wcmljaW5nLWluLXNoaXBtZW50X2xhYmVsX2NyMDA0NSI6Ilp1c2NobMOkZ2UiLCJkaXNwbGF5LXByaWNpbmctaW4tc2hpcG1lbnRfbGFiZWxfY3IwMDQ3IjoiR2Viw7xocmVuIGF1ZiBLdXJpZXJyZXBvcnRlIn0sImNyMDE3MCI6eyJjci1uYW1lIjoiUExUIE1hbmRhdG9yeSJ9LCJwcm9kdWN0c19zZXJ2aWNlcy1wcm9kdWN0cy1wcm9kdWN0X2xpc3QiOnsiZl81LWRlc2NyaXB0aW9uIjoiIiwiYl9pLWRlc2NyaXB0aW9uIjoiRVhQUkVTUyBCUkVBS0JVTEsgLSAoQkJYKSIsInlfeS1kZXNjcmlwdGlvbiI6IkVYUFJFU1MgMTI6MDAgLSAoVERZKSIsIjFfMS1kZXNjcmlwdGlvbiI6IkVYUFJFU1MgRE9NRVNUSUMgMTI6MDAgLSAoRE9UKSIsImdfZy1kZXNjcmlwdGlvbiI6IkVDT05PTVkgU0VMRUNUIERPTUVTVElDIC0gKERFUykiLCJnX2otZGVzY3JpcHRpb24iOiJFQ09OT01ZIFNFTEVDVCBET01FU1RJQyIsInBfMy1kZXNjcmlwdGlvbiI6IiIsImxfai1kZXNjcmlwdGlvbiI6IkVYUFJFU1MgMTA6MzAgLSAoVERMKSIsImZfMi1kZXNjcmlwdGlvbiI6IkZSRUlHSFQgV09STERXSURFIC0gKEZSVCkiLCJnX2UtZGVzY3JpcHRpb24iOiJFQ09OT01ZIFNFTEVDVCBET01FU1RJQyAtIChERVMpIiwidV8yLWRlc2NyaXB0aW9uIjoiIiwicF80LWRlc2NyaXB0aW9uIjoiIiwiNV93LWRlc2NyaXB0aW9uIjoiU0FNRURBWSBTUFJJTlRMSU5FIC0gKFNQTCkiLCI3X2ktZGVzY3JpcHRpb24iOiJFWFBSRVNTIEVBU1kgLSAoWEVEKSIsIjFfNC1kZXNjcmlwdGlvbiI6IkVYUFJFU1MgRE9NRVNUSUMgMTI6MDAgLSAoRE9UKSIsImJfYi1kZXNjcmlwdGlvbiI6IkVYUFJFU1MgQlJFQUtCVUxLIiwidF90LWRlc2NyaXB0aW9uIjoiRVhQUkVTUyAxMjowMCAtIChURFQpIiwib192LWRlc2NyaXB0aW9uIjoiIiwiNV92LWRlc2NyaXB0aW9uIjoiIiwiYl9lLWRlc2NyaXB0aW9uIjoiIiwidl9lLWRlc2NyaXB0aW9uIjoiIiwibF9sLWRlc2NyaXB0aW9uIjoiRVhQUkVTUyAxMDozMCAtIChUREwpIiwiN19lLWRlc2NyaXB0aW9uIjoiIiwibF92LWRlc2NyaXB0aW9uIjoiIiwidl9vLWRlc2NyaXB0aW9uIjoiIiwiOV85LWRlc2NyaXB0aW9uIjoiUGFyY2VsIFByb2R1Y3QiLCJnX3YtZGVzY3JpcHRpb24iOiJFQ09OT01ZIFNFTEVDVCBET01FU1RJQyAtIChERVMpIiwiZ191LWRlc2NyaXB0aW9uIjoiRUNPTk9NWSBTRUxFQ1QgRE9NRVNUSUMgLSAoREVTKSIsImxfeC1kZXNjcmlwdGlvbiI6IkVYUFJFU1MgMTA6MzAiLCIyX3UtZGVzY3JpcHRpb24iOiIiLCJuX2ItZGVzY3JpcHRpb24iOiIiLCJlX2otZGVzY3JpcHRpb24iOiIiLCJuX2MtZGVzY3JpcHRpb24iOiJFWFBSRVNTIERPTUVTVElDIC0gKERPTSkiLCJwXzktZGVzY3JpcHRpb24iOiIiLCIxXzktZGVzY3JpcHRpb24iOiJFWFBSRVNTIERPTUVTVElDIDEyOjAwIC0gKERPVCkiLCI2XzYtZGVzY3JpcHRpb24iOiIiLCJ4X2ItZGVzY3JpcHRpb24iOiIiLCJlX2ktZGVzY3JpcHRpb24iOiIiLCJuX2UtZGVzY3JpcHRpb24iOiJFWFBSRVNTIERPTUVTVElDIC0gKERPTSkiLCJpX2gtZGVzY3JpcHRpb24iOiJFWFBSRVNTIERPTUVTVElDIDk6MDAgLSAoRE9LKSIsImVfZy1kZXNjcmlwdGlvbiI6IkVYUFJFU1MgOTowMCAtIChUREUpIiwiaV9rLWRlc2NyaXB0aW9uIjoiIiwiMV83LWRlc2NyaXB0aW9uIjoiRVhQUkVTUyBET01FU1RJQyAxMjowMCIsImlfaS1kZXNjcmlwdGlvbiI6IkVYUFJFU1MgRE9NRVNUSUMgOTowMCAtIChET0spIiwieV94LWRlc2NyaXB0aW9uIjoiIiwicV9xLWRlc2NyaXB0aW9uIjoiTUVESUNBTCBFWFBSRVNTIiwiaV9qLWRlc2NyaXB0aW9uIjoiIiwiMV84LWRlc2NyaXB0aW9uIjoiRVhQUkVTUyBET01FU1RJQyAxMjowMCAtIChET1QpIiwibV85LWRlc2NyaXB0aW9uIjoiIiwibV94LWRlc2NyaXB0aW9uIjoiRVhQUkVTUyAxMDozMCAtIChURE0pIiwibl9sLWRlc2NyaXB0aW9uIjoiRVhQUkVTUyBET01FU1RJQyAtIChET00pIiwibV95LWRlc2NyaXB0aW9uIjoiRVhQUkVTUyAxMDozMCIsInhfZS1kZXNjcmlwdGlvbiI6IkVYUFJFU1MgRU5WRUxPUEUiLCJuX2ktZGVzY3JpcHRpb24iOiIiLCI4XzgtZGVzY3JpcHRpb24iOiJFWFBSRVNTIEVBU1kiLCJ3XzktZGVzY3JpcHRpb24iOiIiLCI4XzItZGVzY3JpcHRpb24iOiIiLCI4XzEtZGVzY3JpcHRpb24iOiJFWFBSRVNTIEVBU1kgLSAoWEVQKSIsIjlfbC1kZXNjcmlwdGlvbiI6IiIsIjlfai1kZXNjcmlwdGlvbiI6IiIsIm5fMi1kZXNjcmlwdGlvbiI6IiIsIm5fai1kZXNjcmlwdGlvbiI6IkVYUFJFU1MgRE9NRVNUSUMgLSAoRE9NKSIsImNfOS1kZXNjcmlwdGlvbiI6IiIsIm9fZi1kZXNjcmlwdGlvbiI6IiIsIm1fMy1kZXNjcmlwdGlvbiI6IiIsImVfbC1kZXNjcmlwdGlvbiI6IkVYUFJFU1MgOTowMCIsIjdfNy1kZXNjcmlwdGlvbiI6IkVYUFJFU1MgRUFTWSAtIChYRUQpIiwidl92LWRlc2NyaXB0aW9uIjoiUGFyY2VsIFByb2R1Y3QgLSAoUFBQKSIsImlfYy1kZXNjcmlwdGlvbiI6IiIsIm5fbi1kZXNjcmlwdGlvbiI6IkVYUFJFU1MgRE9NRVNUSUMgLSAoRE9NKSIsIjdfNS1kZXNjcmlwdGlvbiI6IiIsIjBfMC1kZXNjcmlwdGlvbiI6IkxPR0lTVElDUyBTRVJWSUNFUyIsImhfZy1kZXNjcmlwdGlvbiI6IkVDT05PTVkgU0VMRUNUIiwiMF9qLWRlc2NyaXB0aW9uIjoiIiwib18zLWRlc2NyaXB0aW9uIjoiRVhQUkVTUyBET01FU1RJQyAxMDozMCIsInlfbS1kZXNjcmlwdGlvbiI6IkVYUFJFU1MgMTI6MDAiLCJvX2wtZGVzY3JpcHRpb24iOiIiLCJlX3gtZGVzY3JpcHRpb24iOiIiLCJuX3QtZGVzY3JpcHRpb24iOiJFWFBSRVNTIERPTUVTVElDIiwiOV8xLWRlc2NyaXB0aW9uIjoiIiwid194LWRlc2NyaXB0aW9uIjoiRUNPTk9NWSBTRUxFQ1QgLSAoRVNVKSIsIndfdy1kZXNjcmlwdGlvbiI6IkVDT05PTVkgU0VMRUNUIiwid192LWRlc2NyaXB0aW9uIjoiRUNPTk9NWSBTRUxFQ1QgLSAoRVNVKSIsIm9fby1kZXNjcmlwdGlvbiI6IkVYUFJFU1MgRE9NRVNUSUMgMTA6MzAgLSAoRE9MKSIsIjlfby1kZXNjcmlwdGlvbiI6IiIsInBfcy1kZXNjcmlwdGlvbiI6IkVYUFJFU1MgV09STERXSURFIiwia192LWRlc2NyaXB0aW9uIjoiRVhQUkVTUyA5OjAwIC0gKFRESykiLCIxX3UtZGVzY3JpcHRpb24iOiIiLCI1XzktZGVzY3JpcHRpb24iOiIiLCIxX20tZGVzY3JpcHRpb24iOiIiLCJ1X2otZGVzY3JpcHRpb24iOiIiLCJjX2ItZGVzY3JpcHRpb24iOiJNRURJQ0FMIEVYUFJFU1MgLSAoQ01YKSIsInBfbC1kZXNjcmlwdGlvbiI6IiIsIjFfbC1kZXNjcmlwdGlvbiI6IkVYUFJFU1MgRE9NRVNUSUMgMTI6MDAgLSAoRE9UKSIsIjVfNS1kZXNjcmlwdGlvbiI6IlNBTUVEQVkgU1BSSU5UTElORSIsImdfMS1kZXNjcmlwdGlvbiI6IiIsIm9fNS1kZXNjcmlwdGlvbiI6IkVYUFJFU1MgRE9NRVNUSUMgMTA6MzAgLSAoRE9MKSIsImdfMi1kZXNjcmlwdGlvbiI6IiIsImZfaC1kZXNjcmlwdGlvbiI6IiIsInpfei1kZXNjcmlwdGlvbiI6IkR1dGllcyAmIFRheGVzIiwiaF9oLWRlc2NyaXB0aW9uIjoiRUNPTk9NWSBTRUxFQ1QgLSAoRVNJKSIsImZfZy1kZXNjcmlwdGlvbiI6IiIsIjVfNC1kZXNjcmlwdGlvbiI6IlNBTUVEQVkgU1BSSU5UTElORSAtIChTUEwpIiwicF9wLWRlc2NyaXB0aW9uIjoiRVhQUkVTUyBXT1JMRFdJREUgLSAoV1BYKSIsImhfaS1kZXNjcmlwdGlvbiI6IkVDT05PTVkgU0VMRUNUIC0gKEVTSSkiLCJjX20tZGVzY3JpcHRpb24iOiIiLCJmX2YtZGVzY3JpcHRpb24iOiJGUkVJR0hUIFdPUkxEV0lERSIsInhfeC1kZXNjcmlwdGlvbiI6IkVYUFJFU1MgRU5WRUxPUEUgLSAoWFBEKSIsImxfOC1kZXNjcmlwdGlvbiI6IiIsImhfbC1kZXNjcmlwdGlvbiI6IiIsIjJfNi1kZXNjcmlwdGlvbiI6IiIsInZfMy1kZXNjcmlwdGlvbiI6IiIsImdfNi1kZXNjcmlwdGlvbiI6IkVDT05PTVkgU0VMRUNUIERPTUVTVElDIC0gKERFUykiLCJxXzMtZGVzY3JpcHRpb24iOiIiLCJjX28tZGVzY3JpcHRpb24iOiJNRURJQ0FMIEVYUFJFU1MgLSAoQ01YKSIsImNfcC1kZXNjcmlwdGlvbiI6Ik1FRElDQUwgRVhQUkVTUyAtIChDTVgpIiwid19pLWRlc2NyaXB0aW9uIjoiIiwiaF9uLWRlc2NyaXB0aW9uIjoiRUNPTk9NWSBTRUxFQ1QgLSAoRVNJKSIsImxfMi1kZXNjcmlwdGlvbiI6IiIsIjdfMS1kZXNjcmlwdGlvbiI6IkVYUFJFU1MgRUFTWSIsInVfdi1kZXNjcmlwdGlvbiI6IiIsInBfdy1kZXNjcmlwdGlvbiI6IkVYUFJFU1MgV09STERXSURFIC0gKFdQWCkiLCJhX2EtZGVzY3JpcHRpb24iOiJBY2NvdW50aW5nIiwiMV92LWRlc2NyaXB0aW9uIjoiIiwibV9tLWRlc2NyaXB0aW9uIjoiRVhQUkVTUyAxMDozMCAtIChURE0pIiwiMl8yLWRlc2NyaXB0aW9uIjoiQjJDIC0gKEJUQykiLCJ1X3UtZGVzY3JpcHRpb24iOiJFWFBSRVNTIFdPUkxEV0lERSIsIjFfdy1kZXNjcmlwdGlvbiI6IiIsImVfYy1kZXNjcmlwdGlvbiI6IkVYUFJFU1MgOTowMCAtIChUREUpIiwic19oLWRlc2NyaXB0aW9uIjoiIiwiaV9vLWRlc2NyaXB0aW9uIjoiRVhQUkVTUyBET01FU1RJQyA5OjAwIC0gKERPSykiLCJlX2UtZGVzY3JpcHRpb24iOiJFWFBSRVNTIDk6MDAgLSAoVERFKSIsImlfcC1kZXNjcmlwdGlvbiI6IkVYUFJFU1MgRE9NRVNUSUMgOTowMCAtIChET0spIiwiaV9sLWRlc2NyaXB0aW9uIjoiIiwiaF93LWRlc2NyaXB0aW9uIjoiIiwic19pLWRlc2NyaXB0aW9uIjoiU0FNRSBEQVkiLCJzX24tZGVzY3JpcHRpb24iOiJTQU1FIERBWSAtIChTRFgpIiwic19nLWRlc2NyaXB0aW9uIjoiIiwiaV80LWRlc2NyaXB0aW9uIjoiIiwibl9hLWRlc2NyaXB0aW9uIjoiIiwiaV8yLWRlc2NyaXB0aW9uIjoiRVhQUkVTUyBET01FU1RJQyA5OjAwIiwiZF9kLWRlc2NyaXB0aW9uIjoiRVhQUkVTUyBXT1JMRFdJREUiLCJpXzMtZGVzY3JpcHRpb24iOiJFWFBSRVNTIERPTUVTVElDIDk6MDAgLSAoRE9LKSIsImlfMS1kZXNjcmlwdGlvbiI6IkVYUFJFU1MgRE9NRVNUSUMgOTowMCAtIChET0spIiwiM18zLWRlc2NyaXB0aW9uIjoiIiwial9qLWRlc2NyaXB0aW9uIjoiRVhQUkVTUyBKVU1CTyAtIChXUFgpIiwicl9yLWRlc2NyaXB0aW9uIjoiR0xPQkFMTUFJTCIsIjVfaS1kZXNjcmlwdGlvbiI6IlNBTUVEQVkgU1BSSU5UTElORSAtIChTUEwpIiwia19mLWRlc2NyaXB0aW9uIjoiIiwic182LWRlc2NyaXB0aW9uIjoiIiwidF9oLWRlc2NyaXB0aW9uIjoiRVhQUkVTUyAxMjowMCIsIjRfdi1kZXNjcmlwdGlvbiI6IiIsImtfay1kZXNjcmlwdGlvbiI6IkVYUFJFU1MgOTowMCIsImlfNy1kZXNjcmlwdGlvbiI6IkVYUFJFU1MgRE9NRVNUSUMgOTowMCAtIChET0spIiwiNF80LWRlc2NyaXB0aW9uIjoiU0FNRURBWSBKRVRMSU5FIiwiY19jLWRlc2NyaXB0aW9uIjoiTUVESUNBTCBFWFBSRVNTIiwiY19nLWRlc2NyaXB0aW9uIjoiTUVESUNBTCBFWFBSRVNTIC0gKENNWCkiLCJpXzktZGVzY3JpcHRpb24iOiIiLCJzXzQtZGVzY3JpcHRpb24iOiIiLCJzX3MtZGVzY3JpcHRpb24iOiJTQU1FIERBWSAtIChTRFgpIn0sImNyMDE3MSI6eyJjci1uYW1lIjoiVXNlciBpcyBhbGxvd2VkIHRvIHNlZSBhbGwgY29tcGFueSB1c2VycyJ9LCJjcjAwNTAiOnsiY3ItbmFtZSI6IkRpc3BsYXkgU3VyY2hhcmdlcyJ9LCJjcjAxNzIiOnsiY3ItbmFtZSI6IlJlY2VpdmVyIFdpbGwgUGF5In0sInBheW1lbnRfb3B0aW9ucy1jYXNoX29uX2RlbGl2ZXJ5X2NvZF8tY2FzaF9vbl9kZWxpdmVyeV9saXN0X29mX3BheW1lbnRfdHlwZXMiOnsibC1wYXltZW50dHlwZSI6Ik5vbi10cmFuc2ZlcmFibGUgYmFuayBkcmFmdCBcdTIwMTPCoHBheWFibGUgdG8gc2VuZGVyInMgZW50aXR5Iiwiay1wYXltZW50dHlwZSI6IkNhc2hpZXIicyBvciBQb3N0YWwgY2hlY2sgXHUyMDEzwqBwYXlhYmxlIHRvIHNlbmRlciIsInItcGF5bWVudHR5cGUiOiJDYXNoIG9yIGNoZWNrIChDYXNoaWVyInMvUG9zdGFsL05vbi10cmFuc2ZlcmFibGUgYmFuayBkcmFmdCkgXHUyMDEzIHBheWFibGUgdG8gc2VuZGVyIGVudGl0eSIsImotcGF5bWVudHR5cGUiOiJDYXNoaWVyInMgb3IgUG9zdGFsIGNoZWNrIFx1MjAxM8KgcGF5YWJsZSB0byBzZW5kZXIicyBlbnRpdHkiLCJnLXBheW1lbnR0eXBlIjoiTm9uLXRyYW5zZmVyYWJsZSBiYW5rIGRyYWZ0IFx1MjAxM8KgcGF5YWJsZSB0byBzZW5kZXIiLCJjLXBheW1lbnR0eXBlIjoiQmFyIiwieS1wYXltZW50dHlwZSI6IkNhc2ggT24gRGVsaXZlcnkiLCJxLXBheW1lbnR0eXBlIjoiQ2FzaCBvciBjaGVjayAoQ2FzaGllciJzL1Bvc3RhbC9Ob24tdHJhbnNmZXJhYmxlIGJhbmsgZHJhZnQpIFx1MjAxMyBwYXlhYmxlIHRvIHNlbmRlciJ9LCJzaGlwbWVudC1wYXltZW50Ijp7InBheW1lbnQtc2VsZWN0aW9uX2FsZXJ0X2FjY291bnQtbm90LWF1dGhvcml6ZWQtbm90LWV4aXN0cyI6IlNpZSBzaW5kIG5pY2h0IGJlcmVjaHRpZ3QsIGRpZXNlbiBBY2NvdW50IHp1IG51dHplbi4gS29udGFrdGllcmVuIHNpZSBkZW4gSW5oYWJlciB1bSBlaW5lIEF1dGhvcmlzaWVydW5nIHp1IGVyaGFsdGVuLiIsInBheW1lbnQtc2VsZWN0aW9uX2FsZXJ0X2FjY291bnQtbm90LWF1dGhvcml6ZWQtcmVqZWN0ZWQiOiJTaWUgc2luZCBuaWNodCBiZXJlY2h0aWd0LCBkaWVzZW4gQWNjb3VudCB6dSBudXR6ZW4uIEtvbnRha3RpZXJlbiBzaWUgZGVuIEluaGFiZXIgdW0gZWluZSBBdXRob3Jpc2llcnVuZyB6dSBlcmhhbHRlbi4iLCJwYXltZW50LXNlbGVjdGlvbl9iYWNrZW5kLWVycm9yX2FjY291bnQtbm90LWFsbG93ZWQtZm9yLW11bHRpcGx5LXBpZWNlcyI6Ik1laHJ0ZWlsaWdlIFNlbmR1bmdlbiBrw7ZubmVuIG1pdCBkaWVzZW0gS29udG8gbmljaHQgYWJnZXJlY2huZXQgd2VyZGVuIiwicGF5bWVudC1zZWxlY3Rpb25fYmFja2VuZC1lcnJvcl9hY2NvdW50LWlzLWluY29ycmVjdCI6IlVuZ8O8bHRpZ2VyIEFjY291bnQiLCJwYXltZW50LXNlbGVjdGlvbl9iYWNrZW5kLWVycm9yX3Byb21vLWNvZGUtaW52YWxpZC1wYXltZW50LWNvZGUtZXJyb3IiOiJ1bmfDvGx0aWdlciBSYWJhdHQgQ29kZSIsInBheW1lbnQtc2VsZWN0aW9uX2JhY2tlbmQtZXJyb3JfYWNjb3VudC1pcy1pbnZhbGlkIjoiVW5nw7xsdGlnZXIgQWNjb3VudCIsInBheW1lbnQtc2VsZWN0aW9uX2JhY2tlbmQtZXJyb3JfcmV3YXJkLWNhcmQtbm90LWF2YWlsYWJsZS1mb3ItYWNjb3VudC1ob2xkZXJzIjoiUmFiYXR0Y29kZSBrb25udGUgbmljaHQgZWluZ2Vsw7ZzdCB3ZXJkZW4iLCJwYXltZW50LXNlbGVjdGlvbl9iYWNrZW5kLWVycm9yX2FjY291bnQtbm90LWFsbG93ZWQtZm9yLXBhbGxldHMiOiJQYWxldHRpZXJ0ZSBTZW5kdW5nZW4ga8O2bm5lbiBtaXQgZGllc2VtIEtvbnRvIG5pY2h0IGFiZ2VyZWNobmV0IHdlcmRlbiIsInBheW1lbnQtc2VsZWN0aW9uX21zZ19hY2NvdW50LWludmFsaWQtZm9yLXNoaXBtZW50IjoiVW5nw7xsdGlnZXIgQWNjb3VudCIsInBheW1lbnQtc2VsZWN0aW9uX2JhY2tlbmQtZXJyb3JfZHV0aWVzLXBheW1lbnQtbWV0aG9kLW51bGwiOiJXw6RobGVuIFNpZSBlaW4gS29udG8gYXVzLCBkYXNzIGbDvHIgZGllIEJlemFobHVuZyB2b24gWm9sbCB1bmQgU3RldWVybiB2ZXJ3ZW5kZXQgd2VyZGVuIGthbm4uIiwicGF5bWVudC1zZWxlY3Rpb25fYmFja2VuZC1lcnJvcl9hY2NvdW50LWlzLWNyZWRpdC1zdG9wIjoiQWNjb3VudCBnZXNwZXJydC4gS29udGFrdGllcmVuIFNpZSBJaHJlbiBBY2NvdW50YWRtaW5pc3RyYXRvciBvZGVyIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4iLCJwYXltZW50LXNlbGVjdGlvbl9hbGVydF9hY2NvdW50LW5vdC1hdXRob3JpemVkLWNhc2gtdHlwZSI6IllvdSBhcmUgbm90IGF1dGhvcml6ZWQgdG8gdXNlIHRoaXMgYWNjb3VudCIsInBheW1lbnQtc2VsZWN0aW9uX2JhY2tlbmQtZXJyb3JfZGRwLXRlcm0tb2YtdHJhZGUtaXMtbm90LWF2YWlsYWJsZSI6IkbDvHIgZGllc2UgRGVzdGluYXRpb24ga2FubiBkZXIgSW5jb3Rlcm0gXCJEZWxpdmVyZWQgRHV0eSBQYWlkIChERFApIG5pY2h0IHZlcndlbmRldCB3ZXJkZW4uIiwicGF5bWVudC1zZWxlY3Rpb25fYmFja2VuZC1lcnJvcl9vbmxpbmUtcGF5bWVudC1ub3QtYWxsb3dlZC1mb3ItZGVzdGluYXRpb24iOiJaaWVsIGVybGF1YnQga2VpbmUgT25saW5lYmV6YWhsdW5nIiwicGF5bWVudC1zZWxlY3Rpb25fYmFja2VuZC1lcnJvcl93cm9uZy10ZXJtLW9mLXRyYWRlIjoiVW5nw7xsdGlnZXIgSGFuZGVsc3ZlcnRyYWciLCJwYXltZW50LXNlbGVjdGlvbl9iYWNrZW5kLWVycm9yX2ludmFsaWQtcGF5bWVudC1vcHRpb24iOiJVbmfDvGx0aWdlIFphaGx1bmdzbWV0aG9kZSIsInBheW1lbnQtc2VsZWN0aW9uX2JhY2tlbmQtZXJyb3JfbmVjdGFyLXJld2FyZC1wcm9ncmFtLW5vdC1hdmFpbGFibGUiOiJSYWJhdHRjb2RlIGtvbm50ZSBuaWNodCBlaW5nZWzDtnN0IHdlcmRlbiIsInBheW1lbnQtc2VsZWN0aW9uX2JhY2tlbmQtZXJyb3JfYWNjb3VudC1kb2VzLW5vdC1zdXBwb3J0LW91dGJvdW5kLXNoaXBtZW50IjoiRXhwb3J0bGllZmVydW5nIChhYmdlaGVuZGUgU2VuZHVuZ2VuKSBrw7ZubmVuIG1pdCBkaWVzZW0gS29udG8gbmljaHQgYWJnZXJlY2huZXQgd2VyZGVuIiwicGF5bWVudC1zZWxlY3Rpb25fYmFja2VuZC1lcnJvcl9ub3QtYWxsb3dlZC1hY2NvdW50LXR5cGUiOiJVbmfDvGx0aWdlciBBY2NvdW50IiwicGF5bWVudC1zZWxlY3Rpb25fYWxlcnRfYWNjb3VudC1ub3QtYXV0aG9yaXplZC1wZW5kaW5nIjoiU2llIHNpbmQgbmljaHQgYmVyZWNodGlndCwgZGllc2VuIEFjY291bnQgenUgbnV0emVuLiBLb250YWt0aWVyZW4gc2llIGRlbiBJbmhhYmVyIHVtIGVpbmUgQXV0aG9yaXNpZXJ1bmcgenUgZXJoYWx0ZW4uIiwicGF5bWVudC1zZWxlY3Rpb25fYmFja2VuZC1lcnJvcl9pbnZhbGlkLXJld2FyZC1jYXJkLXByb21vLWNvZGUiOiJ1bmfDvGx0aWdlciBSYWJhdHQgQ29kZSIsInBheW1lbnQtc2VsZWN0aW9uX2JhY2tlbmQtZXJyb3JfaW52YWxpZC1yZXdhcmQtY2FyZC1udW1iZXIiOiJVbmfDvGx0aWciLCJwYXltZW50LXNlbGVjdGlvbl9iYWNrZW5kLWVycm9yX3Jld2FyZC1jYXJkLW5vdC1hdmFpbGFibGUtZm9yLWNvcnBvcmF0ZS11c2VycyI6IlByb21vdGlvbnMgYXJlIG5vdCBhdmFpbGFibGUgdG8gQ29ycG9yYXRlIHVzZXJzIiwicGF5bWVudC1zZWxlY3Rpb25fYmFja2VuZC1lcnJvcl93cm9uZy1pbXBvcnQtdGVybS1vZi10cmFkZSI6IlVuZ8O8bHRpZ2UgSGFuZGVsc2JlZGluZ3VuZ2VuIGbDvHIgUmV0b3VyZW5zZW5kdW5nIiwicGF5bWVudC1zZWxlY3Rpb25fYmFja2VuZC1lcnJvcl9vbmxpbmUtcGF5bWVudC1pcy1vbmx5LWF2YWlsYWJsZS1mb3ItcnBhLXNoaXBtZW50IjoiVW5nw7xsdGlnZSBaYWhsdW5nc21ldGhvZGUiLCJwYXltZW50LXNlbGVjdGlvbl9iYWNrZW5kLWVycm9yX3JwYS1zaGlwbWVudC1pcy1ub3QtYWxsb3dlZCI6IlVuZ8O8bHRpZ2UgWmFobHVuZ3NtZXRob2RlIiwicGF5bWVudC1zZWxlY3Rpb25fYmFja2VuZC1lcnJvcl9mb3JlaWduLWltcG9ydC1hY2NvdW50LWZvci1kb21lc3RpYy1zaGlwbWVudCI6IlVuZ8O8bHRpZ2VyIEFjY291bnQiLCJwYXltZW50LXNlbGVjdGlvbl9iYWNrZW5kLWVycm9yX2FjY291bnQtaXMtZXhjZWVkLW1heC13ZWlnaHQiOiJHZXdpY2h0IGjDtmhlciBhbHMgbWF4aW1hbCB6dWdlbGFzc2VuIiwicGF5bWVudC1zZWxlY3Rpb25fYmFja2VuZC1lcnJvcl9jYXNoLWFjY291bnQtdHlwZS1pcy1ub3QtYWxsb3dlZC1mb3ItY291bnRyeSI6IlVuZ8O8bHRpZ2VyIEFjY291bnQuIEtvbnRha3RpZXJlbiBTaWUgSWhyZW4gREhMIEt1bmRlbmJldHJldWVyLiIsInBheW1lbnQtc2VsZWN0aW9uX2JhY2tlbmQtZXJyb3JfZHR1LXNoaXBtZW50LWRhdGEiOiJEaWUgU2VuZHVuZyBiZW7DtnRpZ3QgZWluZW4gemFobHVuZ3Nmw6RoaWdlbiBFbXBmw6RuZ2VyIHVuZCBkaWUgSGFuZGVsc2JlZGluZ3VnZW4gdm9uIERBUCAoRGVsaXZlcmVkIGF0IFBsYWNlKSIsInBheW1lbnQtc2VsZWN0aW9uX2JhY2tlbmQtZXJyb3JfcHJvbW8tY29kZS11c2FnZS1jb3VudC12YWxpZGF0aW9uIjoiUmFiYXR0Y29kZSBrb25udGUgbmljaHQgZWluZ2Vsw7ZzdCB3ZXJkZW4iLCJwYXltZW50LXNlbGVjdGlvbl9iYWNrZW5kLWVycm9yX2ZyZWUtb2YtY2hhcmdlLWFjY291bnQtdHlwZS1pcy1ub3QtYWxsb3dlZC1mb3ItY291bnRyeSI6IlVuZ8O8bHRpZ2VyIEFjY291bnQuIEtvbnRha3RpZXJlbiBTaWUgSWhyZW4gREhMIEt1bmRlbmJldHJldWVyLiIsInBheW1lbnQtc2VsZWN0aW9uX2JhY2tlbmQtZXJyb3JfZHV0eS1hbmQtdGF4LW9wdGlvbnMtbm90LXZhbGlkIjoiVW5nw7xsdGlnIn0sImNyLXNoaXBtZW50LWRlZmF1bHRzIjp7InNoaXBtZW50LWRlZmF1bHRzX2Vycm9yX2NyMDE3Ni1yZXF1aXJlZCI6IkVyZm9yZGVybGljaCIsInNoaXBtZW50LWRlZmF1bHRzX2xhYmVsX2NyMDE3NiI6IkxhYmVsIEFyY2hpdiIsInNoaXBtZW50LWRlZmF1bHRzX3N1Yi1oZWFkZXIiOiJBbnphaGwgZGVyIEtvcGllbiIsImdyb3VwLW5hbWVfaGVhZGVyIjoiRHJ1Y2tlcnZvcmVpbnN0ZWxsdW5nZW4iLCJzaGlwbWVudC1kZWZhdWx0c19sYWJlbF9jcjAxNTAiOiJab2xscmVjaG51bmciLCJzaGlwbWVudC1kZWZhdWx0c19lcnJvcl9jcjAxNTAtcmVxdWlyZWQiOiJFcmZvcmRlcmxpY2giLCJzaGlwbWVudC1kZWZhdWx0c19lcnJvcl9jcjAxNzYtcmFuZ2UiOiJUQkQgS2V5OiBzaGlwbWVudC1kZWZhdWx0c19lcnJvcl9jcjAxNzYtcmFuZ2UiLCJzaGlwbWVudC1kZWZhdWx0c19lcnJvcl9jcjAxNDktcmFuZ2UiOiJUQkQgS2V5OiBzaGlwbWVudC1kZWZhdWx0c19lcnJvcl9jcjAxNDktcmFuZ2UiLCJzaGlwbWVudC1kZWZhdWx0c19lcnJvcl9jcjAxNDktcmVxdWlyZWQiOiJFcmZvcmRlcmxpY2giLCJzaGlwbWVudC1kZWZhdWx0c19lcnJvcl9jcjAxNTAtcmFuZ2UiOiJUQkQgS2V5OiBzaGlwbWVudC1kZWZhdWx0c19lcnJvcl9jcjAxNTAtcmFuZ2UiLCJzaGlwbWVudC1kZWZhdWx0c19sYWJlbF9jcjAxNDkiOiJTZW5kdW5nc2JlbGVnIn0sIkFETUlOX1RPT0xTIjp7IkFERFJFU1NfQk9PS19TRUxFQ1RfT1BUSU9OX0NPTlRBQ1RfTkFNRSI6IktvbnRha3RuYW1lIiwiQ09SUE9SQVRFX1JPTEVfU0VMRUNUX09QVElPTl9HUk9VUF9BRE1JTiI6IkphIiwiVVNFUl9NQU5BR0VNRU5UX01TR19TRU5EX0FDVElWQVRJT05fRU1BSUxfU1VDQ0VTUyI6Ik5ldWUgQWt0aXZpZXJ1bmdzIEUtTWFpbCBzZW5kZW4iLCJHRU5FUkFMX0RBVEFfUEVSTUlTU0lPTlNfTEFCRUxfVVNFUl9NQU5BR0VNRU5UIjoiQmVudXR6ZXIgaGluenVmw7xnZW4gdW5kIGJlYXJiZWl0ZW4gKGFuIEZpcm1hKSIsIkFDQ09VTlRfTUFOQUdFTUVOVF9CVVRUT05fVklFV19BQ1RJT04iOiLDnGJlcnNpY2h0IiwiQUREUkVTU19CT09LX1NFTEVDVF9PUFRJT05fR0FCIjoiR3J1cHBlIiwiVVNFUl9TVEFUVVNfVkFMVUVfTEFCRUxfREVMRVRFRCI6ImdlbMO2c2NodCIsIkxCX0RFTEVURV9DT05UQUNUX0NPTkZJUk1BVElPTl9QQVJBR1JBUEhfU0lOR0xFIjoiIiwiQUREUkVTU19CT09LX1NFTEVDVF9PUFRJT05fQ0FCIjoiRmlybWEiLCJDT1JQT1JBVEVfREVGQVVMVF9HUk9VUF9TRUxFQ1RfT1BUSU9OX1NFTEVDVF9PTkUiOiJTdGFuZGFyZGdydXBwZSBhdXN3w6RobGVuIiwiUkVGRVJFTkNFX09QVElPTlNfU1VCX0hFQURFUl9DT01QQU5ZX0xJU1QiOiJGaXJtYSBSZWZlcmVueiIsIlJFRkVSRU5DRV9PUFRJT05TX0NPTF9SRUZFUkVOQ0VfRk9STUFUIjoiRm9ybWF0IiwiUkVGRVJFTkNFX0ZPUk1BVF9PUFRJT05TX0hFQURFUl9BRERfUkVGRVJFTkNFIjoiV8OkaGxlbiBTaWUgZGllIFJlZmVyZW56ZW4sIGRpZSBkaWUgUGVyc29uZW4gaW4gZGVyIEdydXBwZSBudXR6ZW4gd29sbGVuLiBQZXIgS2xpY2sga8O2bm5lbiBTaWUgUmVmZXJlbnplbiBlbnRmZXJuZW4gb2RlciBoaW56dWbDvGdlbi4iLCJBRERSRVNTX0JPT0tfQ09MX05BTUVfQ0lUWSI6IlN0YWR0IiwiTElTVF9EQVRBX1NFQVJDSF9TRUxFQ1RfT1BUSU9OX0FMTF9GSUVMRFMiOiJBbGxlIiwiUkVGRVJFTkNFX0ZPUk1BVF9FUVVBTF9DSEFSUyI6ImVudHNwcmljaHQiLCJBRERSRVNTX0JPT0tfU0VMRUNUX09QVElPTl9DUkFCX0ZST00iOiJBYnNlbmRlciBBZHJlc3NlIiwiUkVGRVJFTkNFX0ZPUk1BVF9PUFRJT05TX1NVQl9IRUFERVJfR1JPVVBfTElTVCI6IkdydXBwZSBGb3JtYXRlIiwiVVNFUl9NQU5BR0VNRU5UX0xBQkVMX1JPTEVfQ09MVU1OIjoiUm9sbGUiLCJVU0VSX01BTkFHRU1FTlRfU0VMRUNUX09QVElPTl9TRVRfVFlQRSI6IkVpbnN0ZWxsdW5nIGRlcyBVbnRlcm5laG1lbnMtQWRtaW5pc3RyYXRvciDDpG5kZXJuIiwiQ09SUE9SQVRFX0dST1VQX0NPTF9OQU1FX0dST1VQX1JPTEUiOiJHcnVwcGVuYWRtaW4iLCJBRERSRVNTX0JPT0tfU0VMRUNUX09QVElPTl9DSVRZIjoiU3RhZHQiLCJBQ0NPVU5UX01BTkFHRU1FTlRfQlVUVE9OX0RJU0FCTEVfQUNUSU9OIjoiRGVha3RpdmllcmVuIiwiQ09SUE9SQVRFX0dST1VQX0NPUFlfSU5GTyI6IkR1cGxpemllcmVuIiwiRVhURVJOQUxfTU9EVUxFU19MQUJFTF9SRVZPS0VfRVhURVJOQUxfTU9EVUxFIjoiRGVha3RpdmllcmVuIiwiR0VORVJBTF9EQVRBX1BFUk1JU1NJT05TX0xBQkVMX0FERFJFU1NfQk9PSyI6IkFkcmVzc2LDvGNoZXIiLCJVU0VSX1NUQVRVU19WQUxVRV9MQUJFTF9ESVNBQkxFRCI6IkRlYWt0aXZpZXJ0IiwiR0VORVJBTF9EQVRBX1BFUk1JU1NJT05TX0xBQkVMX0FDQ09VTlRTX0FORF9QQVlNRU5UUyI6IkFjY291bnRudW1tZXIiLCJBRERSRVNTX0JPT0tfU0VMRUNUX09QVElPTl9HUkFCX0ZST00iOiJHcnVwcGUgLSBBYnNlbmRlciBBZHJlc3NlIiwiQ09SUE9SQVRFX0dST1VQX0NPTF9OQU1FX0dST1VQX05BTUUiOiJOYW1lIiwiQUNDT1VOVF9NQU5BR0VNRU5UX0JVVFRPTl9ERUxFVEVfQUNUSU9OIjoiTMO2c2NoZW4iLCJBQ0NPVU5UX01BTkFHRU1FTlRfQlVUVE9OX0FDVElWQVRFX0FDVElPTiI6IkFrdGl2aWVyZW4iLCJVU0VSX01BTkFHRU1FTlRfQUxFUlRfQ09ORkxJQ1RfSU5DTFVERVNfVEhFX0VOVElSRV9TRUNUSU9OIjoiS2VpbmUgw4RuZGVydW5nZW4gd3VyZGVuIHZvcmdlbm9tbWVuIGRhIGRpZSBTZW5kdW5nZW4gdW52b2xsc3TDpG5kaWcgc2luZCIsIkVYVEVSTkFMX01PRFVMRVNfQ09MX05BTUVfTklDS05BTUUiOiJBbGlhcyAoQmVzY2hyZWlidW5nKSIsIkNPUlBPUkFURV9HUk9VUF9OT1RJRklDQVRJT05fRlJFUVVFTkNZX0NPTUJJTkUiOiJXZW5uIHtjb3VudH0gQW5mcmFnZW4gZGEgc2luZCIsIkFERFJFU1NfQk9PS19TRUxFQ1RfT1BUSU9OX05JQ0tOQU1FIjoiQWxpYXMgKEJlc2NocmVpYnVuZykiLCJDT1JQT1JBVEVfUk9MRV9TRUxFQ1RfT1BUSU9OX0VORF9VU0VSX1JFR0lTVFJBVElPTiI6Ik5laW4iLCJHRU5FUkFMX0RBVEFfUEVSTUlTU0lPTlNfTEFCRUxfQUNDT1VOVF9BVVRIT1JJWkFUSU9OX1VTQUdFIjoiQWNjb3VudCBBdXRvcmlzaWVydW5nIiwiUkVGRVJFTkNFX09QVElPTlNfQ09MX1JFRkVSRU5DRSI6IlJlZmVyZW56IiwiQ09SUE9SQVRFX0dST1VQX0JVVFRPTl9ERUxFVEUiOiJMw7ZzY2hlbiIsIlJFRkVSRU5DRV9GT1JNQVRfTUFYX0NIQVJTIjoiTWF4aW1hbCB2b24iLCJDT1JQT1JBVEVfR1JPVVBfQlVUVE9OX1NFVF9HUk9VUF9ST0xFIjoiR3J1cHBlbnJvbGxlIHZlcsOkbmRlcm4iLCJVU0VSX1NUQVRVU19WQUxVRV9MQUJFTF9QRU5ESU5HX0FDVElWQVRJT04iOiJBdXNzdGVoZW5kZSBBa3RpdmllcnVuZyIsIkNPUlBPUkFURV9HUk9VUF9CVVRUT05fUkVNT1ZFIjoiVm9uIEdydXBwZSBlbnRmZXJuZW4iLCJVU0VSX01BTkFHRU1FTlRfQUxFUlRfVVNFUlNfRVhQT1JUX0ZBSUxFRCI6IkRvd25sb2FkIGZlaGxlcmhhZnQiLCJMQl9ERUxFVEVfQ09OVEFDVF9DT05GSVJNQVRJT05fSEVBREVSX01VTFRJUExFIjoiUGVyc29uZW4gbMO2c2NoZW4iLCJHRU5FUkFMX0RBVEFfUEVSTUlTU0lPTlNfTEFCRUxfQUREX01BTkFHRV9VU0VSUyI6IkJlbnV0emVyIGhpbnp1ZsO8Z2VuIHVuZCBiZWFyYmVpdGVuICh6dSBkaWVzZXIgR3J1cHBlKSIsIkdFTkVSQUxfREFUQV9QRVJNSVNTSU9OU19MQUJFTF9TRVRUSU5HU19QUklDSU5HIjoiUHJlaXNlIHVuZCBHZWLDvGhyZW4iLCJTRVRUSU5HU19NQU5BR0VNRU5UX0xBQkVMX1JFU1RPUkVfVElUTEUiOiJTdGFuZGFyZGVpbnN0ZWxsdW5nZW4genVyw7xja3NldHplbiIsIlVTRVJfTUFOQUdFTUVOVF9IRUFERVJfU0VUX1VTRVJfVFlQRSI6IldvbGxlbiBTaWUgZGllIFBlcnNvbiB6dSBlaW5lbSBVbnRlcm5laG1lbnMtQWRtaW5pc3RyYXRvciBtYWNoZW4/IiwiVVNFUl9TVEFUVVNfVkFMVUVfTEFCRUxfTE9DS0VEIjoiTG9naW4gbmljaHQgbcO2Z2xpY2giLCJTRVRUSU5HU19NQU5BR0VNRU5UX0xBQkVMX1JFU1RPUkVfTUVTU0FHRSI6Ilp1IFN0YW5kYXJkZWluc3RlbGx1bmdlbiB6dXLDvGNrc2V0emVuPyIsIlNFVFRJTkdTX01BTkFHRU1FTlRfU0VMRUNUX09QVElPTl9OT0RFX1RZUEVfVVNFUiI6IkVpbmVuIGJlc3RpbW10ZW4gQmVudXR6ZXIiLCJBQ0NPVU5UX01BTkFHRU1FTlRfQlVUVE9OX0VESVRfQUNUSU9OIjoiQmVhcmJlaXRlbiIsIlVTRVJfTUFOQUdFTUVOVF9MQUJFTF9VU0VSX1RZUEVfQ09MVU1OIjoiVW50ZXJuZWhtZW5zLUFkbWluaXN0cmF0b3IiLCJVU0VSX01BTkFHRU1FTlRfTEFCRUxfR1JPVVBfQVNTSUdOTUVOVFNfQ09MVU1OIjoiTWl0Z2xpZWQgdm9uIiwiVVNFUl9NQU5BR0VNRU5UX1NFTEVDVF9PUFRJT05fREVMRVRFIjoiTMO2c2NoZW4iLCJHRU5FUkFMX0RBVEFfUEVSTUlTU0lPTlNfTEFCRUxfTUFOQUdFX0dST1VQX0FETUlOUyI6IkdydXBwZW5hZG1pbnMgYmVhcmJlaXRlbiB1bmQgaGluenVmw7xnZW4iLCJVU0VSX01BTkFHRU1FTlRfTVNHX1NFTkRfQUNUSVZBVElPTl9FTUFJTCI6IlNpbmQgU2llIHNpY2hlciwgZGFzcyBTaWUgZGllIEFrdGl2aWVydW5ncy1FLU1haWwgYW4gZGllIFBlcnNvbiBzZW5kZW4gd29sbGVuPyIsIlVTRVJfTUFOQUdFTUVOVF9BTEVSVF9PUEVSQVRJT05fRkFJTEVEX0RVRV9UT19FUlJPUiI6IkVpbiBGZWhsZXIgaXN0IGF1ZmdldHJldGVuLiBCaXR0ZSBrb250YWt0aWVyZW4gU2llIGRlbiB0ZWNobmlzY2hlbiBTdXBwb3J0IHVudGVyICs0MyAyMjM2IDIwNyAxMTEyIG9yIDExMTQuIiwiRVhURVJOQUxfTU9EVUxFU19DT0xfTkFNRV9FWFRFUk5BTF9NT0RVTEUiOiJTZW5kdW5nc8O8YmVyd2FjaHVuZyAmIE9ubGluZSBSZWNobnVuZ3NvcHRpb25lbiIsIlJFRkVSRU5DRV9PUFRJT05TX0hFQURFUl9BRERfUkVGRVJFTkNFIjoiV8OkaGxlbiBTaWUgZGllIFJlZmVyZW56ZW4sIGRpZSBkaWUgUGVyc29uZW4gaW4gZGVyIEdydXBwZSBudXR6ZW4gd29sbGVuLiBQZXIgS2xpY2sga8O2bm5lbiBTaWUgUmVmZXJlbnplbiBlbnRmZXJuZW4gb2RlciBoaW56dWbDvGdlbi4iLCJMQl9WQUxJREFUSU9OX01TR19ESVNQTEFZX0FDQ09VTlRTX0FTX05JQ0tOQU1FX09OTFkiOiJFaW5pZ2UgQWNjb3VudHMgYmVzaXR6ZW4ga2VpbmVuIHp1Z2Vow7ZyaWdlbiBCZW51dHplcm5hbWVuLiBCaXR0ZSBmw7xnZW4gU2llIEJlbnV0emVybmFtZW4genUgYWxsZW4gQWNjb3VudHMgaGluenUgdW5kIHZlcnN1Y2hlbiBTaWUgZXMgZXJuZXV0LiIsIlJFRkVSRU5DRV9PUFRJT05TX1NVQl9IRUFERVJfR1JPVVBfTElTVCI6IkdydXBwZSBSZWZlcmVueiIsIlVTRVJfTUFOQUdFTUVOVF9BTEVSVF9PUEVSQVRJT05fRkFJTEVEX0RVRV9UT19ERUFDVElWQVRJT05fT0ZfU09MRV9HUk9VUF9BRE1JTiI6IkdydXBwZW4tQWRtaW5pc3RyYXRvciBlcmZvcmRlcmxpY2giLCJVU0VSX01BTkFHRU1FTlRfU0VMRUNUX09QVElPTl9FWFBPUlQiOiJEb3dubG9hZCIsIlNFVFRJTkdTX01BTkFHRU1FTlRfTVNHX0VGRkVDVElWRV9WQUxVRV9ESVNBQkxFRCI6Ikdlc3BlcnJ0IiwiUkVGRVJFTkNFX0ZPUk1BVF9FRElUX0hFQURFUiI6IlJlZmVyZW56Zm9ybWF0IGJlYXJiZWl0ZW4iLCJHRU5FUkFMX0RBVEFfUEVSTUlTU0lPTlNfTEFCRUxfU0VUVElOR1NfU0hJUE1FTlRfREVGQVVMVFMiOiJEcnVja2Vydm9yZWluc3RlbGx1bmdlbiIsIkNPUlBPUkFURV9HUk9VUF9OT1RJRklDQVRJT05fRlJFUVVFTkNZX0VWRVJZX1NISVBNRU5UIjoiV2VubiBadXN0aW1tdW5nIGVyZm9yZGVybGljaCBpc3QiLCJBQ0NPVU5UX01BTkFHRU1FTlRfSEVBREVSX0RFTEVURV9ESExfQUNDT1VOVCI6IkzDtnNjaGVuIEFjY291bnQiLCJVU0VSX01BTkFHRU1FTlRfQlVUVE9OX0RFTEVURV9VU0VSIjoiTMO2c2NoZW4iLCJVU0VSX01BTkFHRU1FTlRfQlVUVE9OX1NFVF9VU0VSU19UWVBFIjoiU3BlaWNoZXJuIiwiR0VORVJBTF9EQVRBX1BFUk1JU1NJT05TX0xBQkVMX1NFVFRJTkdTX0dFTkVSQUwiOiJTZW5kdW5nZW4gYmVhcmJlaXRlbiIsIkFERFJFU1NfQk9PS19TRUxFQ1RfT1BUSU9OX0dSQUJfVE8iOiJHcnVwcGUgLSBFbXBmw6RuZ2VyIEFkcmVzc2UiLCJVU0VSX01BTkFHRU1FTlRfTEFCRUxfVVNFUk5BTUVfQ09MVU1OIjoiRS1NYWlsIEFkcmVzc2UiLCJFWFRFUk5BTF9NT0RVTEVTX0xBQkVMX1BST1ZJRVdfRVhURVJOQUxfTU9EVUxFIjoiU2hpcG1lbnQgTW9uaXRvcmluZyBhbmQgTm90aWZpY2F0aW9ucyIsIlNFVFRJTkdTX01BTkFHRU1FTlRfQlVUVE9OX1JFRlJFU0hfUEFHRSI6Im9rIiwiREFURV9SQU5HRV9QSUNLRVJfRlJPTSI6IlZvbiIsIkNPUlBPUkFURV9HUk9VUF9DT0xfTkFNRV9HUk9VUF9BRE1JTklTVFJBVE9SUyI6IkdydXBwZW5hZG1pbiIsIlJFRkVSRU5DRV9GT1JNQVRfT1BUSU9OU19TVUJfSEVBREVSX1VTRVJfTElTVCI6IkRpZXNlIFBlcnNvbiBGb3JtYXRlIiwiQUREUkVTU19CT09LX0NPTF9OQU1FX0NPTlRBQ1RfTkFNRSI6IktvbnRha3RuYW1lIiwiU0VUVElOR1NfTUFOQUdFTUVOVF9MQUJFTF9DSE9PU0VfTEVWRUxfVE9fTUFOQUdFIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+PGI+RWluc3RlbGx1bmdlbiBiZWFyYmVpdGVuIGbDvHI8XC9iPjxcL2Rpdj4iLCJBQ0NPVU5UX01BTkFHRU1FTlRfSEVBREVSX0RJU0FCTEVfREhMX0FDQ09VTlQiOiJEZWFrdGl2aWVyZW4gQWNjb3VudCIsIkdFTkVSQUxfREFUQV9QRVJNSVNTSU9OU19MQUJFTF9DT1JQT1JBVEVfUFJJVklMRUdFX01BTkFHRU1FTlQiOiIiLCJMQl9WQUxJREFUSU9OX01TR19QQVlNRU5UX01FVEhPRF9TSE9VTERfQkVfRU5BQkxFRCI6Ik1pbmRlc3RlbnMgZWluZSBaYWhsdW5nc21ldGhvZGUgbXVzcyBnZXNwZWljaGVydCB3ZXJkZW4iLCJTRVRUSU5HU19NQU5BR0VNRU5UX01TR19FRkZFQ1RJVkVfVkFMVUVfTUFYSU1VTSI6Ik1heGltYWwge3ZhbHVlfSIsIlJFRkVSRU5DRV9GT1JNQVRfT1BUSU9OU19TVUJfSEVBREVSX0NPTVBBTllfTElTVCI6IkZpcm1hIEZvcm1hdGUiLCJBRERSRVNTX0JPT0tfU0VMRUNUX09QVElPTl9DT1VOVFJZIjoiTGFuZCIsIkNPUlBPUkFURV9HUk9VUF9FUlJPUl9SRU1PVklOR19BTExfR1JPVVBfQURNSU5TIjoiRWluIGFuZGVyZXIgR3J1cHBlbi1BZG1pbiBtdXNzIHp1ciBHcnVwcGUgaGluenVnZWbDvGd0IHdlcmRlbiBiZXZvciBkaWVzZXIgZW50ZmVybnQgd2lyZC4iLCJHRU5FUkFMX0RBVEFfUEVSTUlTU0lPTlNfTEFCRUxfR1JPVVBfQ1JFQVRFIjoiTmV1ZSBHcnVwcGUgZXJzY2hhZmZlbiIsIkNPUlBPUkFURV9ST0xFX1NFTEVDVF9PUFRJT05fQ09SUE9SQVRFX0FETUlOIjoiSmEiLCJVU0VSX01BTkFHRU1FTlRfQlVUVE9OX1JFU0VORF9JTlZJVEUiOiJFaW5sYWR1bmcgZXJuZXV0IHNlbmRlbiIsIkNPUlBPUkFURV9HUk9VUF9IRUFERVJfQUREX05FV19HUk9VUCI6Ik5ldWUgR3J1cHBlIGhpbnp1ZsO8Z2VuIiwiR0VORVJBTF9EQVRBX1BFUk1JU1NJT05TX0xBQkVMX0VESVRfR0VORVJBTF9TRVRUSU5HUyI6IlVudGVybmVobWVuc8O8YmVyc2ljaHQiLCJHRU5FUkFMX0RBVEFfUEVSTUlTU0lPTlNfTEFCRUxfU0VUVElOR1NfT1BUSU9OQUxfU0VSVklDRSI6Ik9wdGlvbmFsZSBTZXJ2aWNlcyIsIlVTRVJfTUFOQUdFTUVOVF9CVVRUT05fRElTQUJMRSI6IkRlYWt0aXZpZXJlbiIsIkNPUlBPUkFURV9HUk9VUF9OT1RJRklDQVRJT05fRlJFUVVFTkNZX0VWRVJZX0hPVVIiOiJKZWRlIFN0dW5kZSIsIkxCX0RFTEVURV9DT05UQUNUX0NPTkZJUk1BVElPTl9QQVJBR1JBUEhfTVVMVElQTEUiOiIiLCJFWFRFUk5BTF9NT0RVTEVTX0xBQkVMX09OTElORV9CSUxMSU5HX0VYVEVSTkFMX01PRFVMRSI6Ik9ubGluZSBSZWNobnVuZyIsIlNFVFRJTkdTX01BTkFHRU1FTlRfRVJST1JfVVBEQVRFRF9CWV9BTk9USEVSX1VTRVIiOiJEaWUgRWluc3RlbGx1bmcgd3VyZGUgdm9uIGVpbmVtIGFuZGVyZW4gQWRtaW5pc3RyYXRvciBnZcOkbmRlcnQuIEF1ZiBPSyBrbGlja2VuLCB1bSBha3R1YWxpc2llcnRlIEVpbnN0ZWxsdW5nIHp1IHNlaGVuLiIsIkdFTkVSQUxfREFUQV9QRVJNSVNTSU9OU19MQUJFTF9TSElQTUVOVF9SRUZFUkVOQ0VTIjoiU2VuZHVuZ3NyZWZlcmVueiIsIlNFVFRJTkdTX01BTkFHRU1FTlRfTEFCRUxfQ09NUEFOWV9MRVZFTCI6ImF1ZiBVbnRlcm5laG1lbnNlYmVuZSIsIlVTRVJfU1RBVFVTX1ZBTFVFX0xBQkVMX1BFTkRJTkdfUkVHSVNUUkFUSU9OIjoiQXVzc3RlaGVuZGUgUmVnaXN0cmllcnVuZyIsIlVTRVJfTUFOQUdFTUVOVF9MQUJFTF9HUk9VUF9OQU1FX0NPTFVNTiI6IlVudGVybmVobWVucy1BZG1pbmlzdHJhdG9yIiwiQ09SUE9SQVRFX0dST1VQX0JVVFRPTl9TRVRfR1JPVVBfUk9MRV9TVUJNSVQiOiJTcGVpY2hlcm4iLCJHRU5FUkFMX0RBVEFfUEVSTUlTU0lPTlNfTEFCRUxfQVBQUk9WQUxfTk9USUZJQ0FUSU9OUyI6IkJlbmFjaHJpY2h0aWd1bmcgenUgYXVzc3RlaGVuZGVuIEJlc3TDpHRpZ3VuZ2VuIiwiVVNFUl9NQU5BR0VNRU5UX1NFTEVDVF9PUFRJT05fRElTQUJMRSI6IkRlYWt0aXZpZXJlbiIsIlJFRkVSRU5DRV9GT1JNQVRfTUlOX0NIQVJTIjoiTWluaW11bSB2b24iLCJDT1JQT1JBVEVfUk9MRV9TRUxFQ1RfT1BUSU9OX0NPUlBPUkFURV9BRE1JTl9SRUdJU1RSQVRJT04iOiJKYSIsIlNFVFRJTkdTX01BTkFHRU1FTlRfTVNHX0VGRkVDVElWRV9WQUxVRV9NSU5JTVVNIjoiTWluaW11bSB7dmFsdWV9IiwiQUNDT1VOVF9NQU5BR0VNRU5UX0JVVFRPTl9ESVNBQkxFX0NPTkZJUk1BVElPTiI6IkphIiwiQ09SUE9SQVRFX0dST1VQX0NPTF9OQU1FX1VTRVJfTkFNRSI6IkUtTWFpbCBBZHJlc3NlIiwiVVNFUl9NQU5BR0VNRU5UX0JVVFRPTl9TRU5EX0FDVElWQVRJT05fRU1BSUwiOiJBa3RpdmllcnVuZyBlcm5ldXQgc2VuZGVuIiwiUkVGRVJFTkNFX09QVElPTlNfREVMRVRFX01VTFRJUExFX0lURU1TIjoiU29sbGVuIGRpZXNlIFdhcmVuIHdpcmtsaWNoIGdlbMO2c2NodCB3ZXJkZW4/IiwiR0VORVJBTF9EQVRBX1BFUk1JU1NJT05TX0xBQkVMX0dST1VQX01BTkFHRU1FTlQiOiJHcnVwcGVuIGVyc3RlbGxlbiB1bmQgdmVyd2FsdGVuIiwiQ09SUE9SQVRFX1JPTEVfU0VMRUNUX09QVElPTl9FTkRfVVNFUiI6Ik5laW4iLCJMQl9ORVdfQ09OVEFDVF9IRUFERVJfQUREX05FV19DT05UQUNUIjoiTmV1ZW4gS29udGFrdCBoaW56dWbDvGdlbiIsIkdFTkVSQUxfREFUQV9QRVJNSVNTSU9OU19MQUJFTF9ESUdJVEFMX0NVU1RPTVNfSU5WT0lDRSI6IkRpZ2l0YWxlIFpvbGxyZWNobnVuZyBha3RpdmllcmVuIiwiR0VORVJBTF9EQVRBX1BFUk1JU1NJT05TX0xBQkVMX05PVElGSUNBVElPTl9BTkRfU0hBUkUiOiJCZW5hY2hyaWNodGlndW5nZW4iLCJVU0VSX1NUQVRVU19WQUxVRV9MQUJFTF9BQ1RJVkUiOiJBS1RJViIsIlJFRkVSRU5DRV9PUFRJT05TX1NVQl9IRUFERVJfVVNFUl9MSVNUIjoiRGllc2UgUGVyc29uIFJlZmVyZW56IiwiQUREUkVTU19CT09LX1NFTEVDVF9PUFRJT05fQ1JBQl9UTyI6IkVtcGbDpG5nZXIgQWRyZXNzZSIsIkdFTkVSQUxfREFUQV9QRVJNSVNTSU9OU19MQUJFTF9TRVRUSU5HU19NQU5BR0VNRU5UIjoiU2VuZHVuZ3MtL1N0YW5kYXJkZWluc3RlbGx1bmdlbiIsIlNFVFRJTkdTX01BTkFHRU1FTlRfTEFCRUxfREVGQVVMVF9MRVZFTCI6IlN0YW5kYXJkIiwiU0VUVElOR1NfTUFOQUdFTUVOVF9CVVRUT05fUkVTVE9SRSI6IlLDvGNrc2V0enVuZyIsIlVTRVJfTUFOQUdFTUVOVF9CVVRUT05fQUNUSVZBVEUiOiJBa3RpdmllcmVuIiwiQ09SUE9SQVRFX0dST1VQX0NPTF9OQU1FX01FTUJFUlNfQ09VTlQiOiJHcnVwcHBlbm1pdGdsaWVkZXIiLCJHRU5FUkFMX0RBVEFfUEVSTUlTU0lPTlNfTEFCRUxfU0VUVElOR1NfU0hJUFBJTkdfTElNSVRTIjoiVmVyc2FuZGdyZW56ZW4iLCJBRERSRVNTX0JPT0tfQ09MX05BTUVfQ09VTlRSWSI6IkxhbmQiLCJHRU5FUkFMX0RBVEFfUEVSTUlTU0lPTlNfTEFCRUxfU0VUVElOR1NfU0hJUFBJTkdfUkVTVFJJQ1RJT05TIjoiU2VuZHVuZ3NiZXNjaHLDpG5rdW5nZW4iLCJBRERSRVNTX0JPT0tfQ09MX05BTUVfTklDS05BTUUiOiJBbGlhcyAoQmVzY2hyZWlidW5nKSIsIlVTRVJfTUFOQUdFTUVOVF9MQUJFTF9VU0VSX1NUQVRVU19DT0xVTU4iOiJTdGF0dXMiLCJDT1JQT1JBVEVfR1JPVVBfTk9USUZJQ0FUSU9OX0ZSRVFVRU5DWV9FVkVSWV9EQVlfQVQiOiJUw6RnbGljaCB6dXIgZm9sZ2VuZGVuIFplaXQ6IiwiUkVGRVJFTkNFX09QVElPTlNfQ09MX0RFU0NSSVBUSU9OIjoiSW5oYWx0c2Jlc2NocmVpYnVuZyIsIlNFVFRJTkdTX01BTkFHRU1FTlRfTEFCRUxfQURUX0xFVkVMIjoidm9uIERITCIsIlJFRkVSRU5DRV9GT1JNQVRfQUREX0hFQURFUiI6IkZvcm1hdCBoaW56dWbDvGdlbiIsIkdFTkVSQUxfREFUQV9QRVJNSVNTSU9OU19MQUJFTF9BRFZBTkNFRF9TSElQTUVOVF9NT05JVE9SSU5HIjoiU2VuZHVuZ3PDvGJlcndhY2h1bmcgJiBPbmxpbmUgUmVjaG51bmdzb3B0aW9uZW4iLCJFWFRFUk5BTF9NT0RVTEVTX0xBQkVMX0lUQUxJQU5fUE9SVEFMX0VYVEVSTkFMX01PRFVMRSI6IlVuZGVsIiwiU0VUVElOR1NfTUFOQUdFTUVOVF9TRUxFQ1RfT1BUSU9OX05PREVfVFlQRV9HUk9VUCI6IkVpbmUgYmVzdGltbXRlIEdydXBwZSIsIkRBVEVfUkFOR0VfUElDS0VSX1RPIjoiQW4iLCJMQl9ERUxFVEVfQ09OVEFDVF9DT05GSVJNQVRJT05fSEVBREVSX1NJTkdMRSI6IlBlcnNvbiBsw7ZzY2hlbiIsIlVTRVJfTUFOQUdFTUVOVF9TRUxFQ1RfT1BUSU9OX0FDVElWQVRFIjoiQWt0aXZpZXJlbiIsIkNPUlBPUkFURV9HUk9VUF9IRUFERVJfU0VUX0dST1VQX1JPTEUiOiJHcnVwcGVubmFtZSIsIlNFVFRJTkdTX01BTkFHRU1FTlRfTEFCRUxfR1JPVVBfTEVWRUwiOiJhdWYgR3J1cHBlbmViZW5lIiwiQ09SUE9SQVRFX0dST1VQX0NPTF9OQU1FX1VTRVJfU1RBVFVTIjoiU3RhdHVzIiwiU0VUVElOR1NfTUFOQUdFTUVOVF9MQUJFTF9QT1NUX01FU1NBR0VfRk9SIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+PGI+RXJzdGVsbGVuIFNpZSBlaW5lIE5hY2hyaWNodCBmw7xyPFwvYj48XC9kaXY+IiwiQUREUkVTU19CT09LX1NFTEVDVF9PUFRJT05fQUREUkVTUyI6IkFkcmVzc2UiLCJTRVRUSU5HU19NQU5BR0VNRU5UX01TR19FRkZFQ1RJVkVfVkFMVUVfUkVRVUlSRUQiOiJFcmZvcmRlcmxpY2giLCJVU0VSX01BTkFHRU1FTlRfQlVUVE9OX0RVUExJQ0FURSI6IkR1cGxpemllcmVuIiwiR0VORVJBTF9EQVRBX1BFUk1JU1NJT05TX0xBQkVMX01FU1NBR0VfTVlfVVNFUlMiOiJOYWNocmljaHRlbiBDZW50ZXIiLCJBRERSRVNTX0JPT0tfQ09MX05BTUVfQUREUkVTUyI6IkFkcmVzc2UiLCJTRVRUSU5HU19NQU5BR0VNRU5UX1NFTEVDVF9PUFRJT05fTk9ERV9UWVBFX0NPTVBBTlkiOiJBbGxlIiwiTEJfQ09ORklSTUFUSU9OX01FU1NBR0VfVU5TQVZFRF9EQVRBIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+PGRpdiBjbGFzcz0ibWVzc2FnZS13cmFwcGVyIj48cD48Yj5IYWJlbiBTaWUgdW5nZXNwZWljaGVydGUgw4RuZGVydW5nZW48XC9iPjxcL3A+XG48cD7CoDxcL3A+XG48cD5Nw7ZjaHRlbiBTaWUgb2huZSBzcGVpY2hlcm4gZm9ydGZhaHJlbj88XC9wPlxuPFwvZGl2PjxcL2Rpdj4ifSwiZ2VuZXJhbF9zZXR0aW5ncy11b20tb3RoZXJfdW9tcyI6eyJzcXVhcmVfZmVldC1kZXNjcmlwdGlvbiI6IlF1YWRyYXQgRmVldCIsImRvemVuLWRlc2NyaXB0aW9uIjoiRHV0emVuZCIsImdyYW1zLWRlc2NyaXB0aW9uIjoiR3JhbW0iLCJwaWVjZXMtZGVzY3JpcHRpb24iOiJQYWNrc3TDvGNrIiwiY2VudGltZXRlcnMtZGVzY3JpcHRpb24iOiJaZW50aW1ldGVyIiwiZ2FsbG9ucy1kZXNjcmlwdGlvbiI6IkdhbGxvbmVuIiwic3F1YXJlX3lhcmRzLWRlc2NyaXB0aW9uIjoiUXVhZHJhdCBZYXJkcyIsInBvdW5kcy1kZXNjcmlwdGlvbiI6IlBmdW5kIiwibnVtYmVyLWRlc2NyaXB0aW9uIjoiTnVtbWVyIiwib3VuY2VzLWRlc2NyaXB0aW9uIjoiVW56ZW4iLCJjdWJpY19tZXRlcnMtZGVzY3JpcHRpb24iOiJDdWJpYyBNZXRlciIsImN1YmljX2NlbnRpbWV0ZXJzLWRlc2NyaXB0aW9uIjoiQ3ViaWMgWmVudGltZXRlciIsImN1YmljX2ZlZXQtZGVzY3JpcHRpb24iOiJDdWJpYyBGZWV0IiwieWFyZHMtZGVzY3JpcHRpb24iOiJZYXJkcyIsInNxdWFyZV9pbmNoZXMtZGVzY3JpcHRpb24iOiJRdWFkcmF0IEluY2hlcyIsInNxdWFyZV9tZXRlcnMtZGVzY3JpcHRpb24iOiJRdWFkcmF0IE1ldGVyIiwic3F1YXJlX2NlbnRpbWV0ZXJzLWRlc2NyaXB0aW9uIjoiUXVhZHJhdCBaZW50aW1ldGVyIiwiY2VudGlncmFtLWRlc2NyaXB0aW9uIjoiWmVudGlncmFtIiwibWV0ZXJzLWRlc2NyaXB0aW9uIjoiTWV0ZXIiLCJub191bml0X3JlcXVpcmVkLWRlc2NyaXB0aW9uIjoiS2VpbmUgRWluaGVpdGVuIGVyZm9yZGVybGljaCIsIm1pbGxpZ3JhbXMtZGVzY3JpcHRpb24iOiJNaWxsaWdyYW1tIiwiZWFjaC1kZXNjcmlwdGlvbiI6ImplZGUvci9zIiwibGl0ZXJzLWRlc2NyaXB0aW9uIjoiTGl0ZXIiLCJncm9zcy1kZXNjcmlwdGlvbiI6IkJydXR0byIsIm1pbGlsaXRlcnMtZGVzY3JpcHRpb24iOiJNaWxsaWxpdGVyIiwia2lsb2dyYW1zLWRlc2NyaXB0aW9uIjoiS2lsb2dyYW1tIiwiZG96ZW5fcGllY2VzLWRlc2NyaXB0aW9uIjoiRHV0emVuZCBQYWNrc3TDvGNrZSIsInBhaXItZGVzY3JpcHRpb24iOiJQYWFyIn0sInNoaXBtZW50LXF1b3RlIjp7InF1b3RlX2JhY2tlbmQtZXJyb3JfYWNjb3VudC1pcy1pbmFjdGl2ZSI6IlVuZ8O8bHRpZ2VyIEFjY291bnQuIEtvbnRha3RpZXJlbiBTaWUgSWhyZW4gREhMIEt1bmRlbmJldHJldWVyLiIsInF1b3RlX2JhY2tlbmQtZXJyb3JfYWNjb3VudC1pcy1jcmVkaXQtc3RvcCI6IlVuZ8O8bHRpZ2VyIEFjY291bnQuIEtvbnRha3RpZXJlbiBTaWUgSWhyZW4gREhMIEt1bmRlbmJldHJldWVyLiIsInF1b3RlX2JhY2tlbmQtZXJyb3JfYWNjb3VudC1pcy1sb2NhbCI6IkbDvHIgZWluZSBHZWLDvGhyZW5hdXNrdW5mdCBiZW7DtnRpZ2VuIFNpZSBlaW5lIEltcG9ydCBBY2NvdW50IE51bW1lciIsInF1b3RlX2JhY2tlbmQtZXJyb3JfaW52YWxpZC1zaGlwcGluZy1kYXRlIjoiVW5nw7xsdGlnZXMgU2VuZHVuZ3NkYXR1bSIsInF1b3RlX2JhY2tlbmQtZXJyb3JfYWNjLW51bWJlci1hbmQtemlwLWNvZGUtbm90LWFzc29jaWF0ZWQiOiJBY2NvdW50bnVtbWVyIHVuZCBQTFogaGFiZW4ga2VpbmVuIEJlenVnIHp1ZWluYW5kZXIiLCJxdW90ZV9iYWNrZW5kLWVycm9yX3JlcXVpcmVkLWNvbHVtbi1oZWFkZXItbm90LWZvdW5kIjoiVXBsb2FkIGdlc2NoZWl0ZXJ0LiBVbmfDvGx0aWdlcyBGb3JtYXQuIn0sIlNISVBNRU5UX1BBWU1FTlQiOnsiUEFZTUVOVF9TRUxFQ1RJT05fU0VMRUNUX09QVElPTl9JTkNPVEVSTV9FWFciOiJFeCBXb3JrcyIsIlBBWU1FTlRfU0VMRUNUSU9OX1NFTEVDVF9PUFRJT05fSU5DT1RFUk1fQ1BUIjoiQ2FycmlhZ2UgUGFpZCBUbyIsIlBBWU1FTlRfU0VMRUNUSU9OX1NFTEVDVF9PUFRJT05fSU5DT1RFUk1fREVRIjoiRGVsaXZlcnkgZXggUXVheSIsIlBBWU1FTlRfU0VMRUNUSU9OX1NFTEVDVF9PUFRJT05fSU5DT1RFUk1fREVTIjoiRGVsaXZlcmVkIGV4IFNoaXAiLCJQQVlNRU5UX1NFTEVDVElPTl9TRUxFQ1RfT1BUSU9OX0lOQ09URVJNX0RBUCI6IkRlbGl2ZXJlZCBhdCBQbGFjZSIsIlBBWU1FTlRfU0VMRUNUSU9OX1NFTEVDVF9PUFRJT05fSU5DT1RFUk1fRkFTIjoiRnJlZSBBbG9uZ3NpZGUgU2hpcCIsIlBBWU1FTlRfU0VMRUNUSU9OX1NFTEVDVF9PUFRJT05fSU5DT1RFUk1fREFUIjoiRGVsaXZlcmVkIGF0IFRlcm1pbmFsIiwiUEFZTUVOVF9TRUxFQ1RJT05fU0VMRUNUX09QVElPTl9JTkNPVEVSTV9GUkMiOiJGcmVlIENhcnJpZXIiLCJQQVlNRU5UX1NFTEVDVElPTl9MQUJFTF9IT1dfRFVUSUVTX1BBSUQiOiJXaWUgd2VyZGVuIGRpZSBab2xsYWJnYWJlbiBiZXphaGx0PyIsIlBBWU1FTlRfU0VMRUNUSU9OX01TR19JTlZBTElEX0RVVElFU19BTkRfVEFYRVNfQUNDT1VOVCI6Ikthbm4gbmljaHQgZGF6dSBiZW51dHp0IHdlcmRlbiB1bSBaw7ZsbGUgdW5kIFN0ZXVlcm4genUgYmV6YWhsZW4iLCJQQVlNRU5UX1NFTEVDVElPTl9NU0dfQUNDT1VOVF9JTlZBTElEX0ZPUl9PRkFDX1NISVBNRU5UIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+PGRpdiBjbGFzcz0ibWVzc2FnZS13cmFwcGVyIj48cD5EaWVzZXIgQWNjb3VudCBpc3QgYXVmZ3J1bmQgZGVyIFUuUy4gSGFuZGVsc3Jlc3RyaWt0aW9uZW4gbmljaHQgYmVyZWNodGlndCBpbiBkaWVzZXMgTGFuZCB6dSB2ZXJzY2hpY2tlbi4gRsO8ciBkaWVzZW4gQWNjb3VudCBpc3QgZWluZSBWb3JhYi1CZXJlY2h0aWd1bmcgZsO8ciBkaWUgU2VuZHVuZ2VuIGVyZm9yZGVybGljaC4gQml0dGUgbnV0emVuIFNpZSBlaW5lbiBiZXJlY2h0aWd0ZW4gQWNjb3VudCB1bSBmb3J0enVmYWhyZW4uPFwvcD5cbjxwPjxicj5cbkZhbGxzIFNpZSBkYXJhbiBpbnRlcmVzc2llcnQgc2luZCwgZGFzcyBkaWVzZXIgQWNjb3VudCBlaW5lIEJlcmVjaHRpZ3VuZyBlcmjDpGx0LCBrb250YWt0aWVyZW4gU2llIGRhcyBESEwgSW50ZXJuYXRpb25hbCBUcmFkZSBBZmZhaXJzIGFuZCBDb21wbGlhbmNlIFRlYW0gdW50ZXI6IDA4MjAtNTUwNTA1LjxcL3A+XG48XC9kaXY+PFwvZGl2PiIsIlBBWU1FTlRfU0VMRUNUSU9OX01TR19BQ0NPVU5UX0lOVkFMSURfQ09NQklOQVRJT04iOiJEZXIgQWNjb3VudCwgZGVuIFNpZSBhdXNnZXfDpGhsdCBoYWJlbiwga2FubiBuaWNodCB6dXIgWmFobHVuZyB2b24gWsO2bGxlbiB1bmQgU3RldWVybiB2ZXJ3ZW5kZXQgd2VyZGVuLiBadW0gWmFobGVuIHZvbiBaw7ZsbGVuLCBTdGV1ZXJuIHVuZCBUcmFuc3BvcnRrb3N0ZW4gbXVzcyBkZXIgZ2xlaWNoZSBBY2NvdW50IGdlbnV0enQgd2VyZGVuLiIsIlBBWU1FTlRfU0VMRUNUSU9OX1NFTEVDVF9PUFRJT05fSU5DT1RFUk1fREFGIjoiRGVsaXZlcmVkIGF0IEZyb250aWVyIiwiUEFZTUVOVF9TRUxFQ1RJT05fTVNHX0FTU0lHTkVEX1NISVBNRU5UX0NSRURJVF9TVE9QX0FDQ09VTlQiOiJXw6RobGVuIFNpZSBlaW4gS29udG8gYXVzLCBkYXNzIGbDvHIgZGllIEJlemFobHVuZyB2b24gWm9sbCB1bmQgU3RldWVybiB2ZXJ3ZW5kZXQgd2VyZGVuIGthbm4uIiwiUEFZTUVOVF9TRUxFQ1RJT05fU0VMRUNUX09QVElPTl9JTkNPVEVSTV9ERFAiOiJEZWxpdmVyZWQgRHV0eSBQYWlkIiwiUEFZTUVOVF9TRUxFQ1RJT05fU0VMRUNUX09QVElPTl9JTkNPVEVSTV9DRlIiOiJDb3N0IGFuZCBGcmVpZ2h0IiwiUEFZTUVOVF9TRUxFQ1RJT05fQUxFUlRfT05MSU5FX1BBWU1FTlRfTk9UX1NVUFBPUlRFRCI6IlppZWwgZXJsYXVidCBrZWluZSBPbmxpbmViZXphaGx1bmciLCJQQVlNRU5UX1NFTEVDVElPTl9TRUxFQ1RfT1BUSU9OX0lOQ09URVJNX0REVSI6IkRlbGl2ZXJlZCBEdXR5IFVucGFpZCIsIlBBWU1FTlRfU0VMRUNUSU9OX1NFTEVDVF9PUFRJT05fQ0FTSCI6IkJhciIsIlBBWU1FTlRfU0VMRUNUSU9OX01TR19ORUNUQVJfUFJPTU9fQ09ERV9JU19OT1RfQVZBSUxBQkxFX0ZPUl9DT1JQT1JBVEUiOiJQcm9tb3Rpb25zIGFyZSBub3QgYXZhaWxhYmxlIHRvIENvcnBvcmF0ZSB1c2VycyIsIlBBWU1FTlRfU0VMRUNUSU9OX1NFTEVDVF9PUFRJT05fQUREX0RITF9BQ0NPVU5UIjoiQWNjb3VudCBoaW56dWbDvGdlbiIsIlBBWU1FTlRfU0VMRUNUSU9OX1NFTEVDVF9PUFRJT05fSU5DT1RFUk1fRFRQIjoiIiwiUEFZTUVOVF9TRUxFQ1RJT05fTVNHX0FDQ09VTlRfSU5WQUxJRF9GT1JfU0hJUE1FTlQiOiJVbmfDvGx0aWdlciBBY2NvdW50IiwiUEFZTUVOVF9TRUxFQ1RJT05fTVNHX0FDQ09VTlRfUkVTVFJJQ1RFRF9UT19TSU5HTEVfUElFQ0UiOiJNZWhydGVpbGlnZSBTZW5kdW5nZW4ga8O2bm5lbiBtaXQgZGllc2VtIEtvbnRvIG5pY2h0IGFiZ2VyZWNobmV0IHdlcmRlbiIsIlBBWU1FTlRfU0VMRUNUSU9OX0FMRVJUX0lOVk9JQ0VfSU5DT1RFUk1fV0lMTF9CRV9DSEFOR0VEIjoiVW0gZGllIGdld8OkaGx0ZSBPcHRpb24gd2lkZXJ6dXNwaWVnZWxuLCB3aXJkIElocmUgUmVjaG51bmcgZ2XDpG5kZXJ0LiBTaWUga8O2bm5lbiBhYmVyIGF1Y2ggw4RuZGVydW5nZW4gdm9ybmVobWVuIGRpcmVrdCDDvGJlciB7ZW5oYW5jZWRJbnZvaWNlTGlua30uIiwiUEFZTUVOVF9TRUxFQ1RJT05fTElOS19DT01NRVJDSUFMX1BST0ZPUk1BX0lOVk9JQ0UiOiJab2xscmVjaG51bmciLCJQQVlNRU5UX1NFTEVDVElPTl9NU0dfQUNDT1VOVF9ET0VTX05PVF9TVVBQT1JUX09VVEJPVU5EX1BST0NFU1NJTkciOiJFeHBvcnRsaWVmZXJ1bmcgKGFiZ2VoZW5kZSBTZW5kdW5nZW4pIGvDtm5uZW4gbWl0IGRpZXNlbSBLb250byBuaWNodCBhYmdlcmVjaG5ldCB3ZXJkZW4iLCJQQVlNRU5UX1NFTEVDVElPTl9TRUxFQ1RfT1BUSU9OX0lOQ09URVJNX0RQVSI6IkRlbGl2ZXJlZCBhdCBQbGFjZSBVbmxvYWRlZCIsIlBBWU1FTlRfU0VMRUNUSU9OX01TR19DUkVESVRfU1RPUF9BQ0NPVU5UIjoiRGllc2VyIEFjY291bnQgaXN0IGdlc3BlcnJ0IHVuZCBrYW5uIGFrdHVlbGwgbmljaHQgZsO8ciBaYWhsdW5nZW4gdmVyd2VuZGV0IHdlcmRlbi4gSW0gRmFsbGUgZWluZXIgZHJpZ25lbmRlbiBTZW5kdW5nIGtvbnRha3RpZXJlbiBTaWUgdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiIsIlBBWU1FTlRfU0VMRUNUSU9OX1NFTEVDVF9PUFRJT05fSU5DT1RFUk1fSU5TIjoiIiwiUEFZTUVOVF9TRUxFQ1RJT05fU0VMRUNUX09QVElPTl9TSElQX1RPX0FERFJFU1MiOiJWZXJzZW5kZW4gQU4gQWRyZXNzZSIsIlBBWU1FTlRfU0VMRUNUSU9OX1NFTEVDVF9PUFRJT05fSU5DT1RFUk1fRENQIjoiRGVsaXZlcmVkIENvc3QgUGFpZCIsIlBBWU1FTlRfU0VMRUNUSU9OX1NFTEVDVF9PUFRJT05fT05MSU5FX09QVElPTl9PTkxJTkVfUEFZTUVOVCI6Ik9ubGluZSBQYXltZW50IiwiUEFZTUVOVF9TRUxFQ1RJT05fU0VMRUNUX09QVElPTl9TSElQX0ZST01fQUREUkVTUyI6IlZlcnNlbmRlbiBWT04gQWRyZXNzZSIsIlBBWU1FTlRfU0VMRUNUSU9OX01TR19BQ0NPVU5UX0lOVkFMSURfRk9SX0RPTUVTVElDX1NISVBNRU5UIjoiTmF0aW9uYWxlIFNlbmR1bmdlbiBrw7ZubmVuIG1pdCBkaWVzZW0gS29udG8gbmljaHQgYWJnZXJlY2huZXQgd2VyZGVuIiwiUEFZTUVOVF9TRUxFQ1RJT05fU0VMRUNUX09QVElPTl9JTkNPVEVSTV9DTkYiOiJDb3N0IGFuZCBGcmVpZ2h0IiwiUEFZTUVOVF9TRUxFQ1RJT05fU0VMRUNUX09QVElPTl9BTFRFUk5BVEVfREhMX0FDQ09VTlQiOiJBbHRlcm5hdGUgREhMIEFjY291bnQgTnVtYmVyIiwiUEFZTUVOVF9TRUxFQ1RJT05fU0VMRUNUX09QVElPTl9JTkNPVEVSTV9DTkkiOiJDYXJyaWFnZSBhbmQgSW5zdXJhbmNlIiwiUEFZTUVOVF9TRUxFQ1RJT05fU0VMRUNUX09QVElPTl9JTkNPVEVSTV9DSUYiOiJDb3N0LCBJbnN1cmFuY2UsIEZyZWlnaHQiLCJQQVlNRU5UX1NFTEVDVElPTl9TRUxFQ1RfT1BUSU9OX1JFQ0VJVkVSX1dJTExfUEFZIjoiRW1wZsOkbmdlciB6YWhsdCIsIlBBWU1FTlRfU0VMRUNUSU9OX1NFTEVDVF9PUFRJT05fSU5DT1RFUk1fRkNBIjoiRnJlZSBDYXJyaWVyIiwiUEFZTUVOVF9TRUxFQ1RJT05fTEFCRUxfSE9XX0RVVElFU19BTkRfVEFYRVNfUEFJRCI6IldpZSB3ZXJkZW4gZGllIFpvbGxhYmdhYmVuIHVuZCBTdGV1ZXJuIGJlemFobHQ/IiwiUEFZTUVOVF9TRUxFQ1RJT05fU0VMRUNUX09QVElPTl9JTkNPVEVSTV9DSVAiOiJDYXJyaWFnZSBhbmQgSW5zdXJhbmNlIFBhaWQgVG8iLCJQQVlNRU5UX1NFTEVDVElPTl9TRUxFQ1RfT1BUSU9OX0lOQ09URVJNX0ZPUiI6IkZyZWUgb24gcmFpbCIsIlBBWU1FTlRfU0VMRUNUSU9OX1NFTEVDVF9PUFRJT05fSU5DT1RFUk1fRk9UIjoiRnJlZSBvbiB0cnVjayIsIlBBWU1FTlRfU0VMRUNUSU9OX01TR19BQ0NPVU5UX05PVF9TVVBQT1JUU19QQUxMRVQiOiJQYWxldHRpZXJ0ZSBTZW5kdW5nZW4ga8O2bm5lbiBtaXQgZGllc2VtIEtvbnRvIG5pY2h0IGFiZ2VyZWNobmV0IHdlcmRlbiIsIlBBWU1FTlRfU0VMRUNUSU9OX1NFTEVDVF9PUFRJT05fSU5DT1RFUk1fRk9BIjoiRnJlZSBvbiBib2FyZCBBaXJwb3J0IiwiUEFZTUVOVF9TRUxFQ1RJT05fU0VMRUNUX09QVElPTl9JTkNPVEVSTV9GT0IiOiJGcmVlIG9uIEJvYXJkIiwiUEFZTUVOVF9TRUxFQ1RJT05fTVNHX0FDQ09VTlRfSU5WQUxJRF9XRUlHSFRfT1JfRElNRU5TSU9OIjoiR2V3aWNodCBvZGVyIE1hw59lIGjDtmhlciBhbHMgbWF4aW1hbCB6dWdlbGFzc2VuIn0sImNyLXJlcG9ydHMiOnsicmVwb3J0c19sYWJlbF9jcjAwNDIiOiJLYW5uIGF1ZiBSZXBvcnRpbmdzIHp1Z3JlaWZlbiIsImdyb3VwLW5hbWVfaGVhZGVyIjoiUmVwb3J0cyIsInJlcG9ydHNfc3ViLWhlYWRlciI6IiJ9LCJUUkFDS0lORyI6eyJBTEVSVF9EVVBMSUNBVEVfSURFTlRJRklFUiI6IlNlbmR1bmdzbnVtbWVyKG4pIGR1cGxpemllcmVuIHt0cmFja2luZ051bWJlcnN9IiwiVFJBQ0tJTkdfSU5WQUxJRF9JREVOVElGSUVSIjoiVW5nw7xsdGlnZSBTZW5kdW5nc251bW1lciB7dHJhY2tpbmdOdW1iZXJzfSIsIkJBRF9SRVFVRVNUX0VNUFRZX0lEIjoiR8O8bHRpZ2UgU2VuZHVuZ3NudW1tZXIgYmVuw7Z0aWd0IiwiRVJST1JTX0FMRVJUX1dBUk5JTkciOiJLZWluZSBFcmdlYm5pc3NlIGdlZnVuZGVuLiIsIlRPT19NQU5ZX0lERU5USUZJRVJTIjoiTWF4aW1hbCAxMCB6dWdlbGFzc2VuIn0sImVzYi1lcnJvcnMiOnsiZGN0XzUwMjEiOiJCaXR0ZSBnZWJlbiBTaWUgZGVuIGRla2xhcmllcnRlbiBXYXJlbndlcnQgYW4uICBGYWxscyBTaWUgZGVubm9jaCBQcm9ibGVtZSBoYWJlbiB1bmQgSWhyZW4gU2VuZHVuZ3NhdWZ0cmFnIG5pY2h0IHZlcnZvbGxzdMOkbmRpZ2VuIGvDtm5uZW4sIGtvbnRha3RpZXJlbiBTaWUgdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAgKERDVC01MDIxKSIsImRjdF81MDIyIjoiQml0dGUgd8OkaGxlbiBTaWUgYXVzLCBvYiBTaWUgZWluIERva3VtZW50IG9kZXIgZWluIFBha2V0IHZlcnNlbmRlbiB3b2xsZW4uICBGYWxscyBTaWUgZGVubm9jaCBQcm9ibGVtZSBoYWJlbiB1bmQgSWhyZW4gU2VuZHVuZ3NhdWZ0cmFnIG5pY2h0IHZlcnZvbGxzdMOkbmRpZ2VuIGvDtm5uZW4sIGtvbnRha3RpZXJlbiBTaWUgdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAgKERDVC01MDIyLCBLZWluZSBQYWNrc3TDvGNrIFZhcmlhbnRlKSIsImRjdF81MDIzIjoiQml0dGUgd8OkaGxlbiBzaWUgZWluIGFrdHVlbGxlcyBhYmhvbGRhdHVtIGF1cyAoRENULTUwMjMpIiwiZGN0XzUwMjQiOiJCaXR0ZSBnZWJlbiBTaWUgZGllIE1hw59laW5oZWl0IGbDvHIgZGFzIFBhY2tzdMO8Y2stLyBTZW5kdW5nc2dld2ljaHQgYW4uICBGYWxscyBTaWUgZGVubm9jaCBQcm9ibGVtZSBoYWJlbiB1bmQgSWhyZW4gU2VuZHVuZ3NhdWZ0cmFnIG5pY2h0IHZlcnZvbGxzdMOkbmRpZ2VuIGvDtm5uZW4sIGtvbnRha3RpZXJlbiBTaWUgdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAgKERDVC01MDI0KSIsImRjdF81MDIwIjoiQml0dGUgZ2ViZW4gU2llIGRpZS8gZGVuIG1heGltYWxlL24gQnJlaXRlLyBEdXJjaG1lc3NlciBkZXMgUGFja3N0w7xja2VzIGFuLiAgRmFsbHMgU2llIGRlbm5vY2ggUHJvYmxlbWUgaGFiZW4gdW5kIElocmVuIFNlbmR1bmdzYXVmdHJhZyBuaWNodCB2ZXJ2b2xsc3TDpG5kaWdlbiBrw7ZubmVuLCBrb250YWt0aWVyZW4gU2llIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gIChEQ1QtNTAyMCkiLCJkY3RfNTAyOSI6IkVpbiBGZWhsZXIgaXN0IGF1ZmdldHJldGVuLiBGYWxscyBTaWUgZGVubm9jaCBQcm9ibGVtZSBoYWJlbiB1bmQgSWhyZW4gU2VuZHVuZ3NhdWZ0cmFnIG5pY2h0IHZlcnZvbGxzdMOkbmRpZ2VuIGvDtm5uZW4sIGtvbnRha3RpZXJlbiBTaWUgdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAoRENULTUwMjksIGtlaW5lIGFibWHDn2UtLyBnZXdpY2h0ZSkiLCJ1c2VyLW1hbmFnZW1lbnRfMjAwMDAxIjoiRWluIEZlaGxlciBpc3QgYXVmZ2V0cmV0ZW4uIEZhbGxzIHdlaXRlcmhpbiBQcm9ibGVtZSBiZXN0ZWhlbiwgd2VuZGVuIFNpZSBzaWNoIGFuIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gKHVzZXItbWFuYWdlbWVudDogMjAwMDAxLCBVbmJla2FubnRlciBGZWhsZXIpIiwiZGN0XzUwMjciOiLDnGJlcnNjaHJlaXRldCBkZW4genVsw6Rzc2lnZW4gTWF4aW1hbHdlcnQgKERDVC01MDI3KSIsImRjdF81MDI4IjoiRWluIEZlaGxlciBpc3QgYXVmZ2V0cmV0ZW4uICBGYWxscyBTaWUgZGVubm9jaCBQcm9ibGVtZSBoYWJlbiB1bmQgSWhyZW4gU2VuZHVuZ3NhdWZ0cmFnIG5pY2h0IHZlcnZvbGxzdMOkbmRpZ2VuIGvDtm5uZW4sIGtvbnRha3RpZXJlbiBTaWUgdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAgKERDVC01MDI4LCBVbmJla2FubnRlIEdld2ljaHRzbWVzc3VuZykiLCJwaWNrdXAtYm9va2luZ18yMDEyMDEiOiJBYmhvbHVuZyBrYW5uIG5pY2h0IGdlYnVjaHQgd2VyZGVuLiAgQml0dGUga29udGFrdGllcmVuIFNpZSBkZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gIChwaWNrdXAtYm9va2luZyBjb2RlOiAyMDEyMDEpIiwicGlja3VwLWJvb2tpbmdfMjAxMjAwIjoiQWJob2x1bmcga2FubiBuaWNodCBnZWJ1Y2h0IHdlcmRlbi4gIEJpdHRlIGtvbnRha3RpZXJlbiBTaWUgZGVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuICAocGlja3VwLWJvb2tpbmcgY29kZTogMjAxMjAwLCBLZWluZSBBYmhvbHJvdXRlKSIsInBpY2t1cC1ib29raW5nXzIwMTIwNCI6IkJpdHRlIGdlYmVuIFNpZSBkaWUgRW5kemVpdCBkZXMgQWJob2xmZW5zdGVycyBhbi4gIEZhbGxzIHdlaXRlcmhpbiBQcm9ibGVtZSBiZXN0ZWhlbiwgd2VuZGVuIFNpZSBzaWNoIGFuIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gIChwaWNrdXAtYm9vayBjb2RlOiAyMDEyMDQsIEtlaW5lIFZlcnNhbmRzY2hsdXNzemVpdCkiLCJwaWNrdXAtYm9va2luZ18yMDEyMDYiOiJCaXR0ZSBnZWJlbiBTaWUgZGllIEt1bmRlbm51bW1lciBkZXMgUmVjaG51bmdzZW1wZsOkbmdlcnMgYW4uICBGYWxscyB3ZWl0ZXJoaW4gUHJvYmxlbWUgYmVzdGVoZW4sIHdlbmRlbiBTaWUgc2ljaCBhbiB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuICAocGlja3VwLWJvb2tpbmcgY29kZTogMjAxMjA2LCBLZWluZSBLdW5kZW5udW1tZXIgZGVzIFJlY2hudW5nc2VtcGbDpG5nZXJzKSIsImRjdF81MDMyIjoiRWluIEZlaGxlciBpc3QgYXVmZ2V0cmV0ZW4uICBGYWxscyBTaWUgZGVubm9jaCBQcm9ibGVtZSBoYWJlbiB1bmQgSWhyZW4gU2VuZHVuZ3NhdWZ0cmFnIG5pY2h0IHZlcnZvbGxzdMOkbmRpZ2VuIGvDtm5uZW4sIGtvbnRha3RpZXJlbiBTaWUgdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAgKERDVC01MDMyLCBVbmJla2FubnRlcyBXw6RocnVuZ3NzeW1ib2wpIiwiZGN0XzYwMDAiOiJFaW4gRmVobGVyIGlzdCBhdWZnZXRyZXRlbi4gIEZhbGxzIHdlaXRlcmhpbiBQcm9ibGVtZSBiZXN0ZWhlbiwgd2VuZGVuIFNpZSBzaWNoIGFuIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gIChEQ1QtNjAwMCwgVW5iZWthbm50ZXIgRmVobGVyKSIsImRjdF81MDMzIjoiQml0dGUgZ2ViZW4gU2llIEluZm9ybWF0aW9uZW4genUgUG9zdGxlaXR6YWhsLCBTdGFkdCB1bmQvb2RlciBWb3JvcnQgYW4uIEZhbGxzIFNpZSBkZW5ub2NoIFByb2JsZW1lIGhhYmVuIHVuZCBJaHJlbiBTZW5kdW5nc2F1ZnRyYWcgbmljaHQgdmVydm9sbHN0w6RuZGlnZW4ga8O2bm5lbiwga29udGFrdGllcmVuIFNpZSB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuIChEQ1QtNTAzMykiLCJkY3RfNTAzNCI6IkJpdHRlIGdlYmVuIFNpZSBJbmZvcm1hdGlvbmVuIHp1IFBvc3RsZWl0emFobCwgU3RhZHQgdW5kL29kZXIgVm9yb3J0IGFuLiBGYWxscyBTaWUgZGVubm9jaCBQcm9ibGVtZSBoYWJlbiB1bmQgSWhyZW4gU2VuZHVuZ3NhdWZ0cmFnIG5pY2h0IHZlcnZvbGxzdMOkbmRpZ2VuIGvDtm5uZW4sIGtvbnRha3RpZXJlbiBTaWUgdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAoRENULTUwMzQpIiwiZGN0XzUwMzUiOiJCaXR0ZSBnZWJlbiBTaWUgSW5mb3JtYXRpb25lbiB6dSBQb3N0bGVpdHphaGwsIFN0YWR0IHVuZC9vZGVyIFZvcm9ydCBhbi4gRmFsbHMgU2llIGRlbm5vY2ggUHJvYmxlbWUgaGFiZW4gdW5kIElocmVuIFNlbmR1bmdzYXVmdHJhZyBuaWNodCB2ZXJ2b2xsc3TDpG5kaWdlbiBrw7ZubmVuLCBrb250YWt0aWVyZW4gU2llIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gKERDVC01MDM1KSIsImRjdF81MDMwIjoiQml0dGUgZ2ViZW4gU2llIGVpbmUgV8OkaHJ1bmcgYW4uICBGYWxscyBTaWUgZGVubm9jaCBQcm9ibGVtZSBoYWJlbiB1bmQgSWhyZW4gU2VuZHVuZ3NhdWZ0cmFnIG5pY2h0IHZlcnZvbGxzdMOkbmRpZ2VuIGvDtm5uZW4sIGtvbnRha3RpZXJlbiBTaWUgdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAgKERDVC01MDMwKSIsImRjdF81MDMxIjoiR2V3aWNodCBvZGVyIE1hw59lIGjDtmhlciBhbHMgbWF4aW1hbCB6dWdlbGFzc2VuIiwiZGN0XzUwMzYiOiJFaW4gRmVobGVyIGlzdCBhdWZnZXRyZXRlbi4gIEZhbGxzIFNpZSBkZW5ub2NoIFByb2JsZW1lIGhhYmVuIHVuZCBJaHJlbiBTZW5kdW5nc2F1ZnRyYWcgbmljaHQgdmVydm9sbHN0w6RuZGlnZW4ga8O2bm5lbiwga29udGFrdGllcmVuIFNpZSB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuICAoRENULTUwMzYsIEtlaW4oZSkgUHJvZHVrdGNvZGUocykpIiwiZGN0XzUwMzciOiJFaW4gRmVobGVyIGlzdCBhdWZnZXRyZXRlbi4gIEZhbGxzIFNpZSBkZW5ub2NoIFByb2JsZW1lIGhhYmVuIHVuZCBJaHJlbiBTZW5kdW5nc2F1ZnRyYWcgbmljaHQgdmVydm9sbHN0w6RuZGlnZW4ga8O2bm5lbiwga29udGFrdGllcmVuIFNpZSB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuICAoRENULTUwMzcsIEtlaW4oZSkgU2VydmljZSBDb2RlKHMpKSIsImRjdF81MDM4IjoiQml0dGUgZ2ViZW4gU2llIGVpbiBnw7xsdGlnZXMgR2V3aWNodCB1bmQgTWHDnyBhbi4gIEZhbGxzIFNpZSBkZW5ub2NoIFByb2JsZW1lIGhhYmVuIHVuZCBJaHJlbiBTZW5kdW5nc2F1ZnRyYWcgbmljaHQgdmVydm9sbHN0w6RuZGlnZW4ga8O2bm5lbiwga29udGFrdGllcmVuIFNpZSB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuICAoRENULTUwMzgpIiwiZ2xzX2RlZmF1bHQtZXJyb3IiOiJFaW4gRmVobGVyIGlzdCBhdWZnZXRyZXRlbi4gIEZhbGxzIHdlaXRlcmhpbiBQcm9ibGVtZSBiZXN0ZWhlbiwgd2VuZGVuIFNpZSBzaWNoIGFuIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gIChHTFMtZGVmLCBVbmJla2FubnRlciBGZWhsZXIpIiwicGlja3VwLWJvb2tpbmdfMjAyNDAxIjoiQWJob2x1bmcga2FubiBuaWNodCBnZWJ1Y2h0IHdlcmRlbi4gQml0dGUga29udGFrdGllcmVuIFNpZSBkZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gKHBpY2t1cC1ib29raW5nIGNvZGU6IDIwMjQwMSwga2VpbmUgcmVjaG51bmdzYWRyZXNzZSkiLCJwaWNrdXAtYm9va2luZ18yMDI0MDUiOiJCaXR0ZSBnZWJlbiBTaWUgZWluZSBBYmhvbGFkcmVzc2UgYW4uICBGYWxscyB3ZWl0ZXJoaW4gUHJvYmxlbWUgYmVzdGVoZW4sIHdlbmRlbiBTaWUgc2ljaCBhbiB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuICAocGlja3VwLWJvb2tpbmcgY29kZTogMjAyNDA1LCBLZWluZSBBYmhvbGFkcmVzc2UpIiwicGlja3VwLWJvb2tpbmdfZGVmYXVsdC1lcnJvciI6IkFiaG9sdW5nIGthbm4gbmljaHQgZ2VidWNodCB3ZXJkZW4uIEJpdHRlIGtvbnRha3RpZXJlbiBTaWUgZGVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuIChwaWNrdXAtYm9va2luZyBjb2RlOiBkZWYpIiwiZGN0XzUwMDEiOiJCaXR0ZSBnZWJlbiBTaWUgZGFzIExhbmQgZGVyIFZlcnNhbmRhZHJlc3NlIGFuLiBGYWxscyBTaWUgZGVubm9jaCBQcm9ibGVtZSBoYWJlbiB1bmQgSWhyZW4gU2VuZHVuZ3NhdWZ0cmFnIG5pY2h0IHZlcnZvbGxzdMOkbmRpZ2VuIGvDtm5uZW4sIGtvbnRha3RpZXJlbiBTaWUgdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAoRENULTUwMDEsIEtlaW4gQ29kZSBmw7xyIFVyc3BydW5nc2xhbmQpIiwiZGN0XzUwMDIiOiJCaXR0ZSBnZWJlbiBTaWUgZWluZSBQb3N0bGVpdHphaGwgZsO8ciBkaWUgVmVyc2FuZGFkcmVzc2UgYW4uIEZhbGxzIFNpZSBkZW5ub2NoIFByb2JsZW1lIGhhYmVuIHVuZCBJaHJlbiBTZW5kdW5nc2F1ZnRyYWcgbmljaHQgdmVydm9sbHN0w6RuZGlnZW4ga8O2bm5lbiwga29udGFrdGllcmVuIFNpZSB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuIChEQ1QtNTAwMikiLCJkY3RfNTAwNyI6IkJpdHRlIGdlYmVuIFNpZSBlaW5lIFN0YWR0IGbDvHIgZGllIEVtcGbDpG5nZXJhZHJlc3NlIGFuLiBGYWxscyBTaWUgZGVubm9jaCBQcm9ibGVtZSBoYWJlbiB1bmQgSWhyZW4gU2VuZHVuZ3NhdWZ0cmFnIG5pY2h0IHZlcnZvbGxzdMOkbmRpZ2VuIGvDtm5uZW4sIGtvbnRha3RpZXJlbiBTaWUgdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAoRENULTUwMDcpIiwiZGN0XzUwMDgiOiJFaW4gRmVobGVyIGlzdCBhdWZnZXRyZXRlbi4gIEZhbGxzIFNpZSBkZW5ub2NoIFByb2JsZW1lIGhhYmVuIHVuZCBJaHJlbiBTZW5kdW5nc2F1ZnRyYWcgbmljaHQgdmVydm9sbHN0w6RuZGlnZW4ga8O2bm5lbiwga29udGFrdGllcmVuIFNpZSB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuICAoRENULTUwMDgsIEtlaW4gU2VydmljZSBBcmVhIENvZGUgZGVyIERlc3RpbmF0aW9uKSIsImRjdF81MDA5IjoiQml0dGUgd8OkaGxlbiBTaWUgZGFzIEFiaG9sZGF0dW0gYXVzLiAgRmFsbHMgd2VpdGVyaGluIFByb2JsZW1lIGJlc3RlaGVuLCB3ZW5kZW4gU2llIHNpY2ggYW4gdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAgKERDVC01MDA5LCBLZWluIEFiaG9sZGF0dW0pIiwiZGN0XzUwMDMiOiJCaXR0ZSBnZWJlbiBTaWUgZWluZSBTdGFkdCBmw7xyIGRpZSBWZXJzYW5kYWRyZXNzZSBhbi4gRmFsbHMgU2llIGRlbm5vY2ggUHJvYmxlbWUgaGFiZW4gdW5kIElocmVuIFNlbmR1bmdzYXVmdHJhZyBuaWNodCB2ZXJ2b2xsc3TDpG5kaWdlbiBrw7ZubmVuLCBrb250YWt0aWVyZW4gU2llIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gKERDVC01MDAzKSIsImRjdF81MDA0IjoiRWluIEZlaGxlciBpc3QgYXVmZ2V0cmV0ZW4uICBGYWxscyBTaWUgZGVubm9jaCBQcm9ibGVtZSBoYWJlbiB1bmQgSWhyZW4gU2VuZHVuZ3NhdWZ0cmFnIG5pY2h0IHZlcnZvbGxzdMOkbmRpZ2VuIGvDtm5uZW4sIGtvbnRha3RpZXJlbiBTaWUgdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAgKERDVC01MDA0LCBLZWluIFNlcnZpY2UgQXJlYSBDb2RlIHZvbiBWZXJzZW5kZXIgYW5nZWdlYmVuKSIsImRjdF9kZWZhdWx0LWVycm9yIjoiRWluIEZlaGxlciBpc3QgYXVmZ2V0cmV0ZW4uICBGYWxscyB3ZWl0ZXJoaW4gUHJvYmxlbWUgYmVzdGVoZW4sIHdlbmRlbiBTaWUgc2ljaCBhbiB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuICAoRENULWRlZiwgVW5iZWthbm50ZXIgRmVobGVyKSIsImRjdF81MDA1IjoiQml0dGUgZ2ViZW4gU2llIGRhcyBMYW5kIGRlciBFbXBmw6RuZ2VyYWRyZXNzZSBhbi4gRmFsbHMgU2llIGRlbm5vY2ggUHJvYmxlbWUgaGFiZW4gdW5kIElocmVuIFNlbmR1bmdzYXVmdHJhZyBuaWNodCB2ZXJ2b2xsc3TDpG5kaWdlbiBrw7ZubmVuLCBrb250YWt0aWVyZW4gU2llIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gKERDVC01MDA1LCBLZWluIENvZGUgZsO8ciBFbXBmYW5nc2xhbmQpIiwiZGN0XzUwMDYiOiJCaXR0ZSBnZWJlbiBTaWUgZWluZSBQb3N0bGVpdHphaGwgZsO8ciBkaWUgRW1wZsOkbmdlcmFkcmVzc2UgYW4uIEZhbGxzIFNpZSBkZW5ub2NoIFByb2JsZW1lIGhhYmVuIHVuZCBJaHJlbiBTZW5kdW5nc2F1ZnRyYWcgbmljaHQgdmVydm9sbHN0w6RuZGlnZW4ga8O2bm5lbiwga29udGFrdGllcmVuIFNpZSB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuIChEQ1QtNTAwNikiLCJwaWNrdXAtYm9va2luZ18yMDEyMjgiOiJCaXR0ZSDDpG5kZXJuIFNpZSBkYXMgQWJob2xkYXR1bS4gIEFiaG9sZGF0dW0ga2FubiBuaWNodCBmcsO8aGVyIGFscyBoZXV0aWdlcyBEYXR1bSBzZWluLiAgRmFsbHMgd2VpdGVyaGluIFByb2JsZW1lIGJlc3RlaGVuLCB3ZW5kZW4gU2llIHNpY2ggYW4gdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAgKHBpY2t1cC1ib29raW5nIGNvZGU6IDIwMTIyOCkiLCJkY3RfNTAxMCI6IkJpdHRlIGdlYmVuIFNpZSBkaWUgWmVpdCBhbiwgYWIgZGVyIHdpciBkaWUgU2VuZHVuZyBhYmhvbGVuIGvDtm5uZW4uICBGYWxscyB3ZWl0ZXJoaW4gUHJvYmxlbWUgYmVzdGVoZW4sIHdlbmRlbiBTaWUgc2ljaCBhbiB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuICAoRENULTUwMTAsIEtlaW4gZnLDvGhlc3Rtw7ZnbGljaGVyIEFiaG9semVpdHB1bmt0IGFuZ2VnZWJlbikiLCJkY3RfNjEwMCI6IkVpbiBGZWhsZXIgaXN0IGF1ZmdldHJldGVuLiAgRmFsbHMgd2VpdGVyaGluIFByb2JsZW1lIGJlc3RlaGVuLCB3ZW5kZW4gU2llIHNpY2ggYW4gdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAgKERDVC02MTAwLCBVbmJla2FubnRlciBGZWhsZXIpIiwiZGN0XzUwMTEiOiJCaXR0ZSBnZWJlbiBTaWUgZGllIE1hw59laW5oZWl0IGFuLiAgRmFsbHMgU2llIGRlbm5vY2ggUHJvYmxlbWUgaGFiZW4gdW5kIElocmVuIFNlbmR1bmdzYXVmdHJhZyBuaWNodCB2ZXJ2b2xsc3TDpG5kaWdlbiBrw7ZubmVuLCBrb250YWt0aWVyZW4gU2llIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gIChEQ1QtNTAxMSkiLCJkY3RfNTAxMiI6IkJpdHRlIGdlYmVuIFNpZSBkYXMgUGFja3N0w7xja2dld2ljaHQgYW4uICBGYWxscyBTaWUgZGVubm9jaCBQcm9ibGVtZSBoYWJlbiB1bmQgSWhyZW4gU2VuZHVuZ3NhdWZ0cmFnIG5pY2h0IHZlcnZvbGxzdMOkbmRpZ2VuIGvDtm5uZW4sIGtvbnRha3RpZXJlbiBTaWUgdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAgKERDVC01MDEyKSIsImRjdF81MDEzIjoiQml0dGUgc3RlbGxlbiBTaWUgZGVyIEFuemFobCBkZXIgUGFja3N0w7xja2UgenVyIFZlcmbDvGd1bmcuICBGYWxscyBTaWUgZGVubm9jaCBQcm9ibGVtZSBoYWJlbiB1bmQgSWhyZW4gU2VuZHVuZ3NhdWZ0cmFnIG5pY2h0IHZlcnZvbGxzdMOkbmRpZ2VuIGvDtm5uZW4sIGtvbnRha3RpZXJlbiBTaWUgdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAgKERDVC01MDEzKSIsImRjdF80NDAwMDAiOiJFaW4gRmVobGVyIGlzdCBhdWZnZXRyZXRlbi4gIEZhbGxzIHdlaXRlcmhpbiBQcm9ibGVtZSBiZXN0ZWhlbiwgd2VuZGVuIFNpZSBzaWNoIGFuIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gIChEQ1QtNDQwMDAsIFVuYmVrYW5udGVyIEZlaGxlcikiLCJkY3RfNTAxOCI6IkJpdHRlIGdlYmVuIFNpZSBkaWUgTWF4aW1hbGjDtmhlIGRlcyBQYWNrc3TDvGNrZXMgYW4uICBGYWxscyBTaWUgZGVubm9jaCBQcm9ibGVtZSBoYWJlbiB1bmQgSWhyZW4gU2VuZHVuZ3NhdWZ0cmFnIG5pY2h0IHZlcnZvbGxzdMOkbmRpZ2VuIGvDtm5uZW4sIGtvbnRha3RpZXJlbiBTaWUgdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAgKERDVC01MDE4KSIsImRjdF81MDE5IjoiQml0dGUgZ2ViZW4gU2llIGRpZSBNYXhpbWFsbMOkbmdlIGRlcyBQYWNrc3TDvGtlcyBhbi4gIEZhbGxzIFNpZSBkZW5ub2NoIFByb2JsZW1lIGhhYmVuIHVuZCBJaHJlbiBTZW5kdW5nc2F1ZnRyYWcgbmljaHQgdmVydm9sbHN0w6RuZGlnZW4ga8O2bm5lbiwga29udGFrdGllcmVuIFNpZSB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuICAoRENULTUwMTkpIiwiZGN0XzUwMTQiOiJCaXR0ZSBnZWJlbiBTaWUgZGFzIEdlc2FtdGdld2ljaHQgZGVyIFNlbmR1bmcgYW4uICBGYWxscyBTaWUgZGVubm9jaCBQcm9ibGVtZSBoYWJlbiB1bmQgSWhyZW4gU2VuZHVuZ3NhdWZ0cmFnIG5pY2h0IHZlcnZvbGxzdMOkbmRpZ2VuIGvDtm5uZW4sIGtvbnRha3RpZXJlbiBTaWUgdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAgKERDVC01MDE0KSIsImRjdF81MDE3IjoiQml0dGUgZ2ViZW4gU2llIGRhcyBtYXhpbWFsZSBQYWNrc3TDvGNrZ2V3aWNodCBhbi4gIEZhbGxzIFNpZSBkZW5ub2NoIFByb2JsZW1lIGhhYmVuIHVuZCBJaHJlbiBTZW5kdW5nc2F1ZnRyYWcgbmljaHQgdmVydm9sbHN0w6RuZGlnZW4ga8O2bm5lbiwga29udGFrdGllcmVuIFNpZSB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuICAoRENULTUwMTcpIiwicGlja3VwLWJvb2tpbmdfMjAxMjEwIjoiQml0dGUgZ2ViZW4gU2llIGVpbmUgQWJob2xhZHJlc3NlIGFuLiAgRmFsbHMgd2VpdGVyaGluIFByb2JsZW1lIGJlc3RlaGVuLCB3ZW5kZW4gU2llIHNpY2ggYW4gdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAgKHBpY2t1cC1ib29raW5nIGNvZGU6IDIwMTIxMCwgS2VpbmUgQWJob2xhZHJlc3NlKSIsInBpY2t1cC1ib29raW5nXzIwMDAwMSI6IkFiaG9sdW5nIGthbm4gbmljaHQgZ2VidWNodCB3ZXJkZW4uICBCaXR0ZSBrb250YWt0aWVyZW4gU2llIGRlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAgKHBpY2t1cC1ib29raW5nIGNvZGU6IDIwMDAwMSkiLCJwaWNrdXAtYm9va2luZ18yMDEyMTIiOiJCaXR0ZSBnZWJlbiBTaWUgZWluZW4gRmlybWVubmFtZW4gYW4uIEZhbGxzIHdlaXRlcmhpbiBQcm9ibGVtZSBiZXN0ZWhlbiwgd2VuZGVuIFNpZSBzaWNoIGFuIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gKHBpY2t1cC1ib29raW5nIGNvZGU6IDIwMTIxMiwga2VpbmUgZmlybWEgZGVzIGFudHJhZ3N0ZWxsZXJzKSIsInBpY2t1cC1ib29raW5nXzIwMTIxMSI6IkJpdHRlIGdlYmVuIFNpZSBJaHJlIFN0YWR0IGFuLiBGYWxscyB3ZWl0ZXJoaW4gUHJvYmxlbWUgYmVzdGVoZW4sIHdlbmRlbiBTaWUgc2ljaCBhbiB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuIChwaWNrdXAtYm9va2luZyBjb2RlOiAyMDEyMTEsIGtlaW5lIHN0YWR0IGRlcyBhbnRyYWdzdGVsbGVycykiLCJwaWNrdXAtYm9va2luZ18yMDAwMDIiOiJBYmhvbHVuZyBrYW5uIG5pY2h0IGdlYnVjaHQgd2VyZGVuLiBCaXR0ZSBrb250YWt0aWVyZW4gU2llIGRlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAocGlja3VwLWJvb2tpbmcgY29kZTogMjAwMDAyKSIsInBpY2t1cC1ib29raW5nXzIwMDAwMyI6IktlaW5lbiBBYmhvbGF1ZnRyYWcgZ2VmdW5kZW4uICBGYWxscyB3ZWl0ZXJoaW4gUHJvYmxlbWUgYmVzdGVoZW4sIHdlbmRlbiBTaWUgc2ljaCBhbiB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuICAocGlja3VwLWJvb2tpbmcgY29kZTogMjAwMDAzKSIsInBpY2t1cC1ib29raW5nXzIwMTIxNCI6IkFiaG9sdW5nIGthbm4gbmljaHQgZ2VidWNodCB3ZXJkZW4uIEJpdHRlIGtvbnRha3RpZXJlbiBTaWUgZGVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuIChwaWNrdXAtYm9va2luZyBjb2RlOiAyMDEyMTQsIGtlaW4gbMOkbmRlcmNvZGUgZGVzIGFudHJhZ3N0ZWxsZXJzKSIsInBpY2t1cC1ib29raW5nXzIwMTIxMyI6IkJpdHRlIHN0ZWxsZW4gc2llIGlocmVuIGtvbnRha3RuYW1lbiB6dXIgVmVyZsO8Z3VuZ2FudHJhZ3N0ZWxsZXJzKS4gRmFsbHMgd2VpdGVyaGluIFByb2JsZW1lIGJlc3RlaGVuLCB3ZW5kZW4gU2llIHNpY2ggYW4gdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAocGlja3VwLWJvb2tpbmcgY29kZTogMjAxMjEzLCBrZWluIGtvbnRha3RuYW1lIGRlcyBhbnRyYWdzdGVsbGVycykiLCJwaWNrdXAtYm9va2luZ18yMDAwMDQiOiJBYmhvbHVuZyBrYW5uIG5pY2h0IGdlYnVjaHQgd2VyZGVuLiAgQml0dGUga29udGFrdGllcmVuIFNpZSBkZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gIChwaWNrdXAtYm9va2luZyBjb2RlOiAyMDAwMDQpIiwicGlja3VwLWJvb2tpbmdfMjAxMjE2IjoiQml0dGUgZ2ViZW4gU2llIElocmUgVGVsZWZvbm51bW1lciBhbi4gIEZhbGxzIHdlaXRlcmhpbiBQcm9ibGVtZSBiZXN0ZWhlbiwgd2VuZGVuIFNpZSBzaWNoIGFuIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gIChwaWNrdXAtYm9va2luZyBjb2RlOiAyMDEyMTYsIG5vIHJlcXVlc3RvciBwaG9uZSBudW1iZXIpIiwicGlja3VwLWJvb2tpbmdfMjAxMjE4IjoiQWJob2x1bmcga2FubiBuaWNodCBnZWJ1Y2h0IHdlcmRlbi4gIEJpdHRlIGtvbnRha3RpZXJlbiBTaWUgZGVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuICAocGlja3VwLWJvb2tpbmcgY29kZTogMjAxMjE4LCBLZWluIHphaGx1bmdzYmVmw6RoaWd0ZXMgTGFuZCkiLCJwaWNrdXAtYm9va2luZ18yMDEyMTciOiJBYmhvbHVuZyBrYW5uIG5pY2h0IGdlYnVjaHQgd2VyZGVuLiAgQml0dGUga29udGFrdGllcmVuIFNpZSBkZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gIChwaWNrdXAtYm9va2luZyBjb2RlOiAyMDEyMTcpIiwiY3VzdG9tZXItYWNjb3VudC1zZXJ2aWNlXzEwMDAwMSI6IkVpbiBGZWhsZXIgaXN0IGF1ZmdldHJldGVuLiBGYWxscyB3ZWl0ZXJoaW4gUHJvYmxlbWUgYmVzdGVoZW4sIHdlbmRlbiBTaWUgc2ljaCBhbiB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuIChjdXN0b21lci1hY2NvdW50LXNlcnZpY2U6IDEwMDAwMSwgVW5iZWthbm50ZXIgRmVobGVyKSIsImN1c3RvbWVyLWFjY291bnQtc2VydmljZV8xMDAwMDIiOiJFaW4gRmVobGVyIGlzdCBhdWZnZXRyZXRlbi4gIEZhbGxzIHdlaXRlcmhpbiBQcm9ibGVtZSBiZXN0ZWhlbiwgd2VuZGVuIFNpZSBzaWNoIGFuIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gIChjdXN0b21lci1hY2NvdW50LXNlcnZpY2U6IDEwMDAwMiwgVW5iZWthbm50ZXIgRmVobGVyKSIsInBpY2t1cC1ib29raW5nXzIwMTAwMSI6IkFiaG9sdW5nIGthbm4gbmljaHQgZ2VidWNodCB3ZXJkZW4uICBCaXR0ZSBrb250YWt0aWVyZW4gU2llIGRlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAgKHBpY2t1cC1ib29raW5nIGNvZGU6IDIwMTAwMSwgbm8gYWNjb3VudCB0eXBlKSIsInNoaXBtZW50LXBpZWNlLXJlYWRfZGVmYXVsdC1lcnJvciI6IkVpbiBGZWhsZXIgaXN0IGF1ZmdldHJldGVuLiAgRmFsbHMgU2llIGRlbm5vY2ggUHJvYmxlbWUgaGFiZW4gdW5kIElocmVuIFNlbmR1bmdzYXVmdHJhZyBuaWNodCB2ZXJ2b2xsc3TDpG5kaWdlbiBrw7ZubmVuLCBrb250YWt0aWVyZW4gU2llIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gIChzaGlwbWVudC1waWVjZSBjb2RlOiBkZWYsIFVuYmVrYW5udGVyIEZlaGxlcikiLCJwaWNrdXAtYm9va2luZ18yMDEwMDMiOiJCaXR0ZSBzdGVsbGVuIHNpZSBlaW5lIGt1bmRlbm51bW1lciB6dXIgdmVyZsO8Z3VuZy4gRmFsbHMgd2VpdGVyaGluIFByb2JsZW1lIGJlc3RlaGVuLCB3ZW5kZW4gU2llIHNpY2ggYW4gdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAocGlja3VwLWJvb2tpbmcgY29kZTogMjAxMDAzLCBrZWluZSBrdW5kZW5udW1tZXIpIiwicGlja3VwLWJvb2tpbmdfMjAxMDAyIjoiQWJob2x1bmcga2FubiBuaWNodCBnZWJ1Y2h0IHdlcmRlbi4gIEJpdHRlIGtvbnRha3RpZXJlbiBTaWUgZGVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuICAocGlja3VwLWJvb2tpbmcgY29kZTogMjAxMDAyLCBLZWluIFJlY2hudW5nc2xhbmQpIiwicGlja3VwLWJvb2tpbmdfMjAxMDA0IjoiQml0dGUgZ2ViZW4gU2llIGVpbiBMYW5kIGbDvHIgZGllIEFiaG9sYWRyZXNzZSBhbi4gIEZhbGxzIHdlaXRlcmhpbiBQcm9ibGVtZSBiZXN0ZWhlbiwgd2VuZGVuIFNpZSBzaWNoIGFuIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gIChwaWNrdXAtYm9va2luZyBjb2RlOiAyMDEwMDQsIEtlaW4gQWJob2xsYW5kKSIsInBpY2t1cC1ib29raW5nXzIwNzkwMSI6IkFiaG9sdW5nIGthbm4gbmljaHQgZ2VidWNodCB3ZXJkZW4uICBCaXR0ZSBrb250YWt0aWVyZW4gU2llIGRlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAgKHBpY2t1cC1ib29raW5nIGNvZGU6IDIwNzkwMSkiLCJwaWNrdXAtYm9va2luZ18yMDEwMDkiOiJBYmhvbHVuZyBrYW5uIG5pY2h0IGdlYnVjaHQgd2VyZGVuLiAgQml0dGUga29udGFrdGllcmVuIFNpZSBkZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gIChwaWNrdXAtYm9va2luZyBjb2RlOiAyMDEwMDksIEtlaW5lIEFiaG9scm91dGUpIiwicGlja3VwLWJvb2tpbmdfMjAxOTIxIjoiQWJob2x1bmcga2FubiBuaWNodCBnZWJ1Y2h0IHdlcmRlbi4gIEJpdHRlIGtvbnRha3RpZXJlbiBTaWUgZGVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuICAocGlja3VwLWJvb2tpbmcgY29kZTogMjAxOTIxLCBEb3BwZWx0ZSBCdWNodW5nIGdlZnVuZGVuKSIsImxhbmRlZC1jb3N0c18yMDAwMDIiOiJFbnRzY2h1bGRpZ2VuIFNpZSAtIHdpciBrw7ZubmVuIElobmVuIGxlaWRlciBrZWluZSBnZXNjaMOkdHp0ZW4gWsO2bGxlIHVuZCBTdGV1ZXJuIHp1ciBWZXJmw7xndW5nIHN0ZWxsZW4uIENvZGU6IHtiaWR9IiwicGlja3VwLWJvb2tpbmdfMjAxOTA4IjoiS2VpbmVuIEFiaG9sYXVmdHJhZyBnZWZ1bmRlbi4gIEZhbGxzIHdlaXRlcmhpbiBQcm9ibGVtZSBiZXN0ZWhlbiwgd2VuZGVuIFNpZSBzaWNoIGFuIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gIChwaWNrdXAtYm9va2luZyBjb2RlOiAyMDE5MDgpIiwiZXNiX3NoaXBtZW50LW1hbmlmZXN0LWVycm9yIjoiRWluIEZlaGxlciBpc3QgYXVmZ2V0cmV0ZW4uIEJpdHRlIGtvbnRha3RpZXJlbiBTaWUgZGVuIHRlY2huaXNjaGVuIFN1cHBvcnQgdW50ZXIgKzQzIDIyMzYgMjA3IDExMTIgb3IgMTExNC4gKEVTQiBNYW5pZmVzdCBTZXJ2aWNlIC0gbWFuaWZlc3RpbmcgZXJyb3IpIiwiZGN0XzIwMDIiOiJFaW4gRmVobGVyIGlzdCBhdWZnZXRyZXRlbi4gIEZhbGxzIHdlaXRlcmhpbiBQcm9ibGVtZSBiZXN0ZWhlbiwgd2VuZGVuIFNpZSBzaWNoIGFuIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gIChEQ1QtMjAwMiwgVW5iZWthbm50ZXIgRmVobGVyKSIsImRjdF8yMDAxIjoiRWluIEZlaGxlciBpc3QgYXVmZ2V0cmV0ZW4uICBGYWxscyB3ZWl0ZXJoaW4gUHJvYmxlbWUgYmVzdGVoZW4sIHdlbmRlbiBTaWUgc2ljaCBhbiB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuICAoRENULTIwMDEsIFVuYmVrYW5udGVyIEZlaGxlcikiLCJwaWNrdXAtYm9va2luZ18yMDExMTEiOiJCaXR0ZSBzdGVsbGVuIGRpZSB0ZWxlZm9ubnVtbWVyIGRlcyBlbXBmw6RuZ2VycyB6dXIgdmVyZsO8Z3VuZy4gRmFsbHMgd2VpdGVyaGluIFByb2JsZW1lIGJlc3RlaGVuLCB3ZW5kZW4gU2llIHNpY2ggYW4gdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAocGlja3VwLWJvb2tpbmcgY29kZTogMjAxMTExLCBrZWluZSB0ZWxlZm9ubnVtbWVyIGRlcyB6dXN0ZWxsZXJzKSIsInBpY2t1cC1ib29raW5nXzIwMTExMCI6IkJpdHRlIHN0ZWxsZW4gc2llIGVpbmUgenVzdGVsbGFkcmVzc2UgenVyIHZlcmbDvGd1bmcuIEZhbGxzIFNpZSBkZW5ub2NoIFByb2JsZW1lIGhhYmVuIHVuZCBJaHJlbiBTZW5kdW5nc2F1ZnRyYWcgbmljaHQgdmVydm9sbHN0w6RuZGlnZW4ga8O2bm5lbiwga29udGFrdGllcmVuIFNpZSB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuIChwaWNrdXAtYm9va2luZyBjb2RlOiAyMDExMTAsIGtlaW5lIHp1c3RlbGxhZHJlc3NlKSIsInBpY2t1cC1ib29raW5nXzIwMTExMyI6IkFiaG9sdW5nIGthbm4gbmljaHQgZ2VidWNodCB3ZXJkZW4uICBCaXR0ZSBrb250YWt0aWVyZW4gU2llIGRlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAgKHBpY2t1cC1ib29raW5nIGNvZGU6IDIwMTExMykiLCJwaWNrdXAtYm9va2luZ18yMDExMTIiOiJBYmhvbHVuZyBrYW5uIG5pY2h0IGdlYnVjaHQgd2VyZGVuLiAgQml0dGUga29udGFrdGllcmVuIFNpZSBkZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gIChwaWNrdXAtYm9va2luZyBjb2RlOiAyMDExMTIsIGRlbGl2ZXJ5IGNvbXBhbnkgbmFtZSBtaXNzaW5nKSIsInBpY2t1cC1ib29raW5nXzIwMTExNSI6IkFiaG9sdW5nIGthbm4gbmljaHQgZ2VidWNodCB3ZXJkZW4uICBCaXR0ZSBrb250YWt0aWVyZW4gU2llIGRlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAgKHBpY2t1cC1ib29raW5nIGNvZGU6IDIwMTExNSwgS2VpbmUgU2VydmljZSBBcmVhIGRlciBEZXN0aW5hdGlvbikiLCJwaWNrdXAtYm9va2luZ18yMDExMTQiOiJCaXR0ZSBnZWJlbiBTaWUgZGFzIExhbmQgZGVyIEVtcGbDpG5nZXJhZHJlc3NlIGFuLiAgRmFsbHMgU2llIGRlbm5vY2ggUHJvYmxlbWUgaGFiZW4gdW5kIElocmVuIFNlbmR1bmdzYXVmdHJhZyBuaWNodCB2ZXJ2b2xsc3TDpG5kaWdlbiBrw7ZubmVuLCBrb250YWt0aWVyZW4gU2llIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gIChwaWNrdXAtYm9va2luZyBjb2RlOiAyMDExMTQsIEtlaW4gQ29kZSBmw7xyIEVtcGZhbmdzbGFuZCkiLCJsYW5kZWQtY29zdHNfMTAwMTAyIjoiRW50c2NodWxkaWdlbiBTaWUgLSB3aXIga8O2bm5lbiBJaG5lbiBsZWlkZXIga2VpbmUgZ2VzY2jDpHR6dGVuIFrDtmxsZSB1bmQgU3RldWVybiB6dXIgVmVyZsO8Z3VuZyBzdGVsbGVuLiBDb2RlOiB7YmlkfSIsImxhbmRlZC1jb3N0c18xMDAxMDEiOiJFbnRzY2h1bGRpZ2VuIFNpZSAtIHdpciBrw7ZubmVuIElobmVuIGxlaWRlciBrZWluZSBnZXNjaMOkdHp0ZW4gWsO2bGxlIHVuZCBTdGV1ZXJuIHp1ciBWZXJmw7xndW5nIHN0ZWxsZW4uIENvZGU6IHtiaWR9IiwicGlja3VwLWJvb2tpbmdfMjAxOTExIjoiS2VpbmVuIEFiaG9sYXVmdHJhZyBnZWZ1bmRlbi4gIEZhbGxzIHdlaXRlcmhpbiBQcm9ibGVtZSBiZXN0ZWhlbiwgd2VuZGVuIFNpZSBzaWNoIGFuIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gIChwaWNrdXAtYm9va2luZyBjb2RlOiAyMDE5MTEpIiwiZ2xzXzAyMDEiOiJFaW4gRmVobGVyIGlzdCBhdWZnZXRyZXRlbi4gIEZhbGxzIHdlaXRlcmhpbiBQcm9ibGVtZSBiZXN0ZWhlbiwgd2VuZGVuIFNpZSBzaWNoIGFuIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gIChHTFMtMDIwMSwgVW5iZWthbm50ZXIgRmVobGVyKSIsInBpY2t1cC1ib29raW5nXzIwMTExOCI6IkFiaG9sdW5nIGthbm4gbmljaHQgZ2VidWNodCB3ZXJkZW4uICBCaXR0ZSBrb250YWt0aWVyZW4gU2llIGRlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAgKHBpY2t1cC1ib29raW5nIGNvZGU6IDIwMTExOCwgbm8gZGVmYXVsdCBwYXkgdHlwZSkiLCJwaWNrdXAtYm9va2luZ18yMDE5MTIiOiJBYmhvbHVuZyBpc3QgYmVyZWl0cyBhYmdlc2NobG9zc2VuIG9kZXIgZ2Vsw7ZzY2h0LiAocGlja3VwLWJvb2tpbmcgY29kZTogMjAxOTEyKSIsImN1c3RvbWVyLWFjY291bnQtc2VydmljZV8xMDAxMDEiOiJFaW4gRmVobGVyIGlzdCBhdWZnZXRyZXRlbi4gRmFsbHMgd2VpdGVyaGluIFByb2JsZW1lIGJlc3RlaGVuLCB3ZW5kZW4gU2llIHNpY2ggYW4gdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAoY3VzdG9tZXItYWNjb3VudC1zZXJ2aWNlOiAxMDAxMDEsIFVuYmVrYW5udGVyIEZlaGxlcikiLCJlc2JfZGVmYXVsdC1lcnJvciI6IkVpbiBGZWhsZXIgaXN0IGF1ZmdldHJldGVuLiAgRmFsbHMgd2VpdGVyaGluIFByb2JsZW1lIGJlc3RlaGVuLCB3ZW5kZW4gU2llIHNpY2ggYW4gdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAgKEVTQi1kZWYsIFVuYmVrYW5udGVyIEZlaGxlcikiLCJkY3RfMTAwMSI6IkbDvHIgSWhyZSBBdXN3YWhsIHNpbmQga2VpbmUgTGllZmVyb3B0aW9uZW4gbcO2Z2xpY2guLiAgRmFsbHMgU2llIGRlbm5vY2ggUHJvYmxlbWUgaGFiZW4gdW5kIElocmVuIFNlbmR1bmdzYXVmdHJhZyBuaWNodCB2ZXJ2b2xsc3TDpG5kaWdlbiBrw7ZubmVuLCBrb250YWt0aWVyZW4gU2llIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gIChEQ1QtMTAwMSwgS2VpbihlKSBQcm9kdWt0Y29kZShzKSB2ZXJmw7xnYmFyKSIsImRjdF8xMDAyIjoiRsO8ciBJaHJlIEF1c3dhaGwgc2luZCBrZWluZSBMaWVmZXJvcHRpb25lbiBtw7ZnbGljaC4uICBGYWxscyBTaWUgZGVubm9jaCBQcm9ibGVtZSBoYWJlbiB1bmQgSWhyZW4gU2VuZHVuZ3NhdWZ0cmFnIG5pY2h0IHZlcnZvbGxzdMOkbmRpZ2VuIGvDtm5uZW4sIGtvbnRha3RpZXJlbiBTaWUgdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAgKERDVC0xMDAyLCBLZWluKGUpIFByb2R1a3Rjb2RlKHMpIHZlcmbDvGdiYXIpIiwiZGN0XzEwMDAiOiJGw7xyIElocmUgQXVzd2FobCBzaW5kIGtlaW5lIExpZWZlcm9wdGlvbmVuIG3DtmdsaWNoLi4gIEZhbGxzIFNpZSBkZW5ub2NoIFByb2JsZW1lIGhhYmVuIHVuZCBJaHJlbiBTZW5kdW5nc2F1ZnRyYWcgbmljaHQgdmVydm9sbHN0w6RuZGlnZW4ga8O2bm5lbiwga29udGFrdGllcmVuIFNpZSB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuICAoRENULTEwMDAsIEtlaW4oZSkgUHJvZHVrdGNvZGUocykgdmVyZsO8Z2JhcikiLCJwaWNrdXAtYm9va2luZ18yMDcwMDEiOiJBYmhvbHVuZyBrYW5uIG5pY2h0IGdlYnVjaHQgd2VyZGVuLiAgQml0dGUga29udGFrdGllcmVuIFNpZSBkZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gIChwaWNrdXAtYm9va2luZyBjb2RlOiAyMDcwMDEpIiwiZGN0XzEwMDUiOiJGw7xyIElocmUgQXVzd2FobCBzaW5kIGtlaW5lIExpZWZlcm9wdGlvbmVuIG3DtmdsaWNoLi4gIEZhbGxzIFNpZSBkZW5ub2NoIFByb2JsZW1lIGhhYmVuIHVuZCBJaHJlbiBTZW5kdW5nc2F1ZnRyYWcgbmljaHQgdmVydm9sbHN0w6RuZGlnZW4ga8O2bm5lbiwga29udGFrdGllcmVuIFNpZSB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuICAoRENULTEwMDUsIEtlaW4oZSkgUHJvZHVrdGNvZGUocykgdmVyZsO8Z2JhcikiLCJkY3RfMTAwMyI6IkJpdHRlIMOkbmRlcm4gU2llIGRhcyBBYmhvbGRhdHVtLiBBYmhvbHVuZyBrYW5uIGbDvHIgZGllc2VuIFRhZyBuaWNodCBnZWJ1Y2h0IHdlcmRlbi4gRmFsbHMgd2VpdGVyaGluIFByb2JsZW1lIGJlc3RlaGVuLCB3ZW5kZW4gU2llIHNpY2ggYW4gdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAoRENULTEwMDMpIiwiZGN0XzEwMDQiOiJLZWluZSB6dXN0ZWxsb3B0aW9uZW4gbcO2Z2xpY2ggendpc2NoZW4gZGllc2VyIGFic2VuZGVyLSB1bmQgZW1wZsOkbmdlcmFkcmVzc2UuIChEQ1QtMTAwNCkiLCJwaWNrdXAtYm9va2luZ18yMDcwMDUiOiJBYmhvbHVuZyBrYW5uIG5pY2h0IGdlYnVjaHQgd2VyZGVuLiAgQml0dGUga29udGFrdGllcmVuIFNpZSBkZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gIChwaWNrdXAtYm9va2luZyBjb2RlOiAyMDcwMDUpIiwicGlja3VwLWJvb2tpbmdfMjA3MDA0IjoiQWJob2x1bmcga2FubiBuaWNodCBnZWJ1Y2h0IHdlcmRlbi4gIEJpdHRlIGtvbnRha3RpZXJlbiBTaWUgZGVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuICAocGlja3VwLWJvb2tpbmcgY29kZTogMjA3MDA0KSIsInBpY2t1cC1ib29raW5nXzIwNzAwMyI6IkFiaG9sdW5nIGthbm4gbmljaHQgZ2VidWNodCB3ZXJkZW4uICBCaXR0ZSBrb250YWt0aWVyZW4gU2llIGRlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAgKHBpY2t1cC1ib29raW5nIGNvZGU6IDIwNzAwMykiLCJwaWNrdXAtYm9va2luZ18yMDIxMTAiOiJBYmhvbHVuZyBrYW5uIG5pY2h0IGdlYnVjaHQgd2VyZGVuLiBTcMOkdGVzdGUgQWJob2x6ZWl0IG11c3MgbmFjaCBkZXIgWmVpdCBsaWVnZW4sIHp1IGRlciBkaWUgU2VuZHVuZyB2ZXJzYW5kYmVyZWl0IGlzdC4gRmFsbHMgd2VpdGVyaGluIFByb2JsZW1lIGJlc3RlaGVuLCB3ZW5kZW4gU2llIHNpY2ggYW4gdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAocGlja3VwLWJvb2tpbmcgY29kZTogMjAyMTEwKSIsInBpY2t1cC1ib29raW5nXzIwMjExMSI6IkFiaG9sdW5nIGthbm4gbmljaHQgZ2VidWNodCB3ZXJkZW4uICBCaXR0ZSBrb250YWt0aWVyZW4gU2llIGRlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAgKHBpY2t1cC1ib29raW5nIGNvZGU6IDIwMjExMSkiLCJwaWNrdXAtYm9va2luZ18yMDcwMDciOiJBYmhvbHVuZyBrYW5uIG5pY2h0IGdlYnVjaHQgd2VyZGVuLiBCaXR0ZSBrb250YWt0aWVyZW4gU2llIGRlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAocGlja3VwLWJvb2tpbmcgY29kZTogMjA3MDA3LCBkYXMgd2VpdGVybGVpdGVuZGUgTGFuZCBmZWhsdCkiLCJwaWNrdXAtYm9va2luZ18yMDIxMTQiOiJCaXR0ZSDDpG5kZXJuIFNpZSBkYXMgQWJob2xkYXR1bS4gQWJob2x1bmcga2FubiBmw7xyIGRlbiBGZWllcnRhZyBuaWNodCBnZWJ1Y2h0IHdlcmRlbi4gRmFsbHMgd2VpdGVyaGluIFByb2JsZW1lIGJlc3RlaGVuLCB3ZW5kZW4gU2llIHNpY2ggYW4gdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAocGlja3VwLWJvb2tpbmcgY29kZTogMjAyMTE0KSIsInBpY2t1cC1ib29raW5nXzIwNzAwNiI6IkFiaG9sdW5nIGthbm4gbmljaHQgZ2VidWNodCB3ZXJkZW4uICBCaXR0ZSBrb250YWt0aWVyZW4gU2llIGRlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAgKHBpY2t1cC1ib29raW5nIGNvZGU6IDIwNzAwNikiLCJwaWNrdXAtYm9va2luZ18yMDIxMTMiOiJ1bmfDvGx0aWdlIFRlbGVmb25udW1tZXIiLCJwaWNrdXAtYm9va2luZ18yMDEwMjciOiJBYmhvbHVuZyBrYW5uIG5pY2h0IGdlYnVjaHQgd2VyZGVuLiAgQml0dGUga29udGFrdGllcmVuIFNpZSBkZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gIChwaWNrdXAtYm9va2luZyBjb2RlOiAyMDEwMjcpIiwicGlja3VwLWJvb2tpbmdfMjAyMTE1IjoiQml0dGUgw6RuZGVybiBTaWUgZGllIEVuZHplaXQuICBTcMOkdGVzdGUgQWJob2x6ZWl0IG11c3MgbmFjaCBkZXIgWmVpdCBsaWVnZW4sIHp1IGRlciBkaWUgU2VuZHVuZyB2ZXJzYW5kYmVyZWl0IGlzdC4gIEZhbGxzIHdlaXRlcmhpbiBQcm9ibGVtZSBiZXN0ZWhlbiwgd2VuZGVuIFNpZSBzaWNoIGFuIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gIChwaWNrdXAtYm9va2luZyBjb2RlOiAyMDIxMTUpIiwicGlja3VwLWJvb2tpbmdfMjAyMTE4IjoiQml0dGUgd8OkaGxlbiBTaWUgYXVzLCBvYiBTaWUgZWluIERva3VtZW50IG9kZXIgZWluIFBha2V0IHZlcnNlbmRlbiB3b2xsZW4uICBGYWxscyBTaWUgZGVubm9jaCBQcm9ibGVtZSBoYWJlbiB1bmQgSWhyZW4gU2VuZHVuZ3NhdWZ0cmFnIG5pY2h0IHZlcnZvbGxzdMOkbmRpZ2VuIGvDtm5uZW4sIGtvbnRha3RpZXJlbiBTaWUgdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAgKHBpY2t1cC1ib29raW5nIGNvZGU6IDIwMjExOCwgS2VpbmUgUGFja3N0w7xjayBWYXJpYW50ZSkiLCJwaWNrdXAtYm9va2luZ18yMDIxMTkiOiJCaXR0ZSBzdGVsbGVuIHNpZSBkYXMgbGFuZCBmw7xyIGRpZSBhYmhvbGFkcmVzc2UgenVyIHZlcmbDvGd1bmcuIEZhbGxzIHdlaXRlcmhpbiBQcm9ibGVtZSBiZXN0ZWhlbiwgd2VuZGVuIFNpZSBzaWNoIGFuIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gKHBpY2t1cC1ib29raW5nIGNvZGU6IDIwMjExOSwga2VpbiBsYW5kIGRlcyBhbnRyYWdzdGVsbGVycykiLCJkY3RfMzIwMDAyIjoiQml0dGUgZ2ViZW4gU2llIGRpZSBaZWl0IGFuLCBhYiBkZXIgd2lyIGRpZSBTZW5kdW5nIGFiaG9sZW4ga8O2bm5lbi4gIEZhbGxzIHdlaXRlcmhpbiBQcm9ibGVtZSBiZXN0ZWhlbiwgd2VuZGVuIFNpZSBzaWNoIGFuIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gIChEQ1QtMzIwMDAyLCBLZWluIGZyw7xoZXN0bcO2Z2xpY2hlciBBYmhvbHplaXRwdW5rdCBhbmdlZ2ViZW4pIiwiZGN0XzMyMDAwMSI6IkVpbiBGZWhsZXIgaXN0IGF1ZmdldHJldGVuLiAgRmFsbHMgd2VpdGVyaGluIFByb2JsZW1lIGJlc3RlaGVuLCB3ZW5kZW4gU2llIHNpY2ggYW4gdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAgKERDVC0zMjAwMDEsIFVuYmVrYW5udGVyIEZlaGxlcikiLCJsYW5kZWQtY29zdHNfMTAwMDAyIjoiRW50c2NodWxkaWdlbiBTaWUgLSB3aXIga8O2bm5lbiBJaG5lbiBsZWlkZXIga2VpbmUgZ2VzY2jDpHR6dGVuIFrDtmxsZSB1bmQgU3RldWVybiB6dXIgVmVyZsO8Z3VuZyBzdGVsbGVuLiBDb2RlOiB7YmlkfSIsImxhbmRlZC1jb3N0c18xMDAwMDEiOiJFbnRzY2h1bGRpZ2VuIFNpZSAtIHdpciBrw7ZubmVuIElobmVuIGxlaWRlciBrZWluZSBnZXNjaMOkdHp0ZW4gWsO2bGxlIHVuZCBTdGV1ZXJuIHp1ciBWZXJmw7xndW5nIHN0ZWxsZW4uIENvZGU6IHtiaWR9IiwicGlja3VwLWJvb2tpbmdfMjAxMDE5IjoiQWJob2x1bmcga2FubiBuaWNodCBnZWJ1Y2h0IHdlcmRlbi4gIEJpdHRlIGtvbnRha3RpZXJlbiBTaWUgZGVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuICAocGlja3VwLWJvb2tpbmcgY29kZTogMjAxMDE5LCBLZWluZSBHTVQtWmVpdGFid2VpY2h1bmcpIiwiZGN0XzMwMDAiOiJCaXR0ZSBnZWJlbiBTaWUgZGFzIExhbmQgZGVyIFZlcnNhbmRhZHJlc3NlIGFuLiAgRmFsbHMgU2llIGRlbm5vY2ggUHJvYmxlbWUgaGFiZW4gdW5kIElocmVuIFNlbmR1bmdzYXVmdHJhZyBuaWNodCB2ZXJ2b2xsc3TDpG5kaWdlbiBrw7ZubmVuLCBrb250YWt0aWVyZW4gU2llIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gIChEQ1QtMzAwMCwgS2VpbiBDb2RlIGbDvHIgVXJzcHJ1bmdzbGFuZCkiLCJsYW5kZWQtY29zdHNfZGVmYXVsdC1lcnJvciI6IkVpbiBGZWhsZXIgaXN0IGF1ZmdldHJldGVuLiBGYWxscyB3ZWl0ZXJoaW4gUHJvYmxlbWUgYmVzdGVoZW4sIHdlbmRlbiBTaWUgc2ljaCBhbiB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuIChsYW5kZWQtY29zdC1kZWYsIFVuYmVrYW5udGVyIEZlaGxlcikiLCJkY3RfMzAwNCI6IkVpbiBGZWhsZXIgaXN0IGF1ZmdldHJldGVuLiAgRmFsbHMgU2llIGRlbm5vY2ggUHJvYmxlbWUgaGFiZW4gdW5kIElocmVuIFNlbmR1bmdzYXVmdHJhZyBuaWNodCB2ZXJ2b2xsc3TDpG5kaWdlbiBrw7ZubmVuLCBrb250YWt0aWVyZW4gU2llIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gIChEQ1QtMzAwNCwgS2VpbiBTZXJ2aWNlIEFyZWEgQ29kZSB2b24gVmVyc2VuZGVyIGFuZ2VnZWJlbikiLCJkY3RfMzQwMDA2IjoiQml0dGUgZ2ViZW4gU2llIGRpZSBaZWl0IGFuLCBhYiBkZXIgd2lyIGRpZSBTZW5kdW5nIGFiaG9sZW4ga8O2bm5lbi4gIEZhbGxzIHdlaXRlcmhpbiBQcm9ibGVtZSBiZXN0ZWhlbiwgd2VuZGVuIFNpZSBzaWNoIGFuIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gIChEQ1QtMzQwMDA2LCBLZWluIGZyw7xoZXN0bcO2Z2xpY2hlciBBYmhvbHplaXRwdW5rdCBhbmdlZ2ViZW4pIiwiZGN0XzMwMDMiOiJCaXR0ZSBnZWJlbiBTaWUgZWluZSBTdGFkdCBmw7xyIGRpZSBWZXJzYW5kYWRyZXNzZSBhbi4gRmFsbHMgU2llIGRlbm5vY2ggUHJvYmxlbWUgaGFiZW4gdW5kIElocmVuIFNlbmR1bmdzYXVmdHJhZyBuaWNodCB2ZXJ2b2xsc3TDpG5kaWdlbiBrw7ZubmVuLCBrb250YWt0aWVyZW4gU2llIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gKERDVC0zMDAzKSIsImRjdF8zNDAwMDUiOiJCaXR0ZSB3w6RobGVuIFNpZSBkYXMgQWJob2xkYXR1bSBhdXMuICBGYWxscyB3ZWl0ZXJoaW4gUHJvYmxlbWUgYmVzdGVoZW4sIHdlbmRlbiBTaWUgc2ljaCBhbiB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuICAoRENULTM0MDAwNSwgKSIsImRjdF8zNDAwMDgiOiJCaXR0ZSBnZWJlbiBTaWUgZGFzIFBhY2tzdMO8Y2tnZXdpY2h0IGFuLiAgRmFsbHMgU2llIGRlbm5vY2ggUHJvYmxlbWUgaGFiZW4gdW5kIElocmVuIFNlbmR1bmdzYXVmdHJhZyBuaWNodCB2ZXJ2b2xsc3TDpG5kaWdlbiBrw7ZubmVuLCBrb250YWt0aWVyZW4gU2llIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gIChEQ1QtMzQwMDgpIiwiZGN0XzMwMDIiOiJCaXR0ZSBnZWJlbiBTaWUgZWluZSBQb3N0bGVpdHphaGwgZsO8ciBkaWUgVmVyc2FuZGFkcmVzc2UgYW4uICBGYWxscyBTaWUgZGVubm9jaCBQcm9ibGVtZSBoYWJlbiB1bmQgSWhyZW4gU2VuZHVuZ3NhdWZ0cmFnIG5pY2h0IHZlcnZvbGxzdMOkbmRpZ2VuIGvDtm5uZW4sIGtvbnRha3RpZXJlbiBTaWUgdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAgKERDVC0zMDAxKSIsImRjdF8zNDAwMDciOiJXYXJlbmNvZGUgbmljaHQgZ2VmdW5kZW4uICAoRENULTM0MDAwNykiLCJkY3RfMzAwMSI6IkVpbiBGZWhsZXIgaXN0IGF1ZmdldHJldGVuLiBGYWxscyB3ZWl0ZXJoaW4gUHJvYmxlbWUgYmVzdGVoZW4sIHdlbmRlbiBTaWUgc2ljaCBhbiB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuIChEQ1QtMzAwMSwga2VpbiBzdGFuZG9ydCBjb3VudHJ5IGNvZGUpIiwiZGN0XzMwMDgiOiJFaW4gRmVobGVyIGlzdCBhdWZnZXRyZXRlbi4gRmFsbHMgU2llIGRlbm5vY2ggUHJvYmxlbWUgaGFiZW4gdW5kIElocmVuIFNlbmR1bmdzYXVmdHJhZyBuaWNodCB2ZXJ2b2xsc3TDpG5kaWdlbiBrw7ZubmVuLCBrb250YWt0aWVyZW4gU2llIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gKERDVC0zMDA4LCBLZWluIFNlcnZpY2UgQXJlYSBDb2RlIGRlciBEZXN0aW5hdGlvbikiLCJkY3RfMzAwNyI6IkJpdHRlIGdlYmVuIFNpZSBlaW5lIFN0YWR0IGbDvHIgZGllIEVtcGbDpG5nZXJhZHJlc3NlIGFuLiBGYWxscyBTaWUgZGVubm9jaCBQcm9ibGVtZSBoYWJlbiB1bmQgSWhyZW4gU2VuZHVuZ3NhdWZ0cmFnIG5pY2h0IHZlcnZvbGxzdMOkbmRpZ2VuIGvDtm5uZW4sIGtvbnRha3RpZXJlbiBTaWUgdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAoRENULTMwMDcpIiwiZGN0XzM0MDAwOSI6IkJpdHRlIHN0ZWxsZW4gU2llIGRlciBBbnphaGwgZGVyIFBhY2tzdMO8Y2tlIHp1ciBWZXJmw7xndW5nLiAgRmFsbHMgU2llIGRlbm5vY2ggUHJvYmxlbWUgaGFiZW4gdW5kIElocmVuIFNlbmR1bmdzYXVmdHJhZyBuaWNodCB2ZXJ2b2xsc3TDpG5kaWdlbiBrw7ZubmVuLCBrb250YWt0aWVyZW4gU2llIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gIChEQ1QtMzQwMDA5KSIsImRjdF8zMDA2IjoiQml0dGUgZ2ViZW4gU2llIGVpbmUgUG9zdGxlaXR6YWhsIGbDvHIgZGllIEVtcGbDpG5nZXJhZHJlc3NlIGFuLiBGYWxscyBTaWUgZGVubm9jaCBQcm9ibGVtZSBoYWJlbiB1bmQgSWhyZW4gU2VuZHVuZ3NhdWZ0cmFnIG5pY2h0IHZlcnZvbGxzdMOkbmRpZ2VuIGvDtm5uZW4sIGtvbnRha3RpZXJlbiBTaWUgdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAoRENULTMwMDYpIiwiZGN0XzMwMDUiOiJCaXR0ZSBnZWJlbiBTaWUgZGFzIExhbmQgZGVyIEVtcGbDpG5nZXJhZHJlc3NlIGFuLiBGYWxscyBTaWUgZGVubm9jaCBQcm9ibGVtZSBoYWJlbiB1bmQgSWhyZW4gU2VuZHVuZ3NhdWZ0cmFnIG5pY2h0IHZlcnZvbGxzdMOkbmRpZ2VuIGvDtm5uZW4sIGtvbnRha3RpZXJlbiBTaWUgdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAoRENULTMwMDUsIEtlaW4gQ29kZSBmw7xyIEVtcGZhbmdzbGFuZCkiLCJwaWNrdXAtYm9va2luZ18yMDIxMzAiOiJBYmhvbHVuZyBrYW5uIG5pY2h0IGdlYnVjaHQgd2VyZGVuLiBCaXR0ZSBrb250YWt0aWVyZW4gU2llIGRlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAocGlja3VwLWJvb2tpbmcgY29kZTogMjAyMTMwLCBrZWluIGNvZGUgdm9uIGhlcmt1bmZ0c2xhbmQpIiwicGlja3VwLWJvb2tpbmdfMjAyMTMyIjoiQml0dGUgw6RuZGVybiBTaWUgZGllIFphaGx1bmdzbWV0aG9kZS4gIFNpZSBrw7ZubmVuIGRpZXNlbiBESEwgQWNjb3VudCBmw7xyIGRpZSBCZXphaGx1bmcgZGVyIEFiaG9sdW5nIG5pY2h0IHZlcndlbmRlbi4gIEZhbGxzIHdlaXRlcmhpbiBQcm9ibGVtZSBiZXN0ZWhlbiwgd2VuZGVuIFNpZSBzaWNoIGFuIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gIChwaWNrdXAtYm9va2luZyBjb2RlOiAyMDIxMzIsIEJlemFobHVuZyBtaXQgQWNjb3VudCBuaWNodCBtw7ZnbGljaCkiLCJwaWNrdXAtYm9va2luZ18yMDIxMzEiOiJCaXR0ZSDDpG5kZXJuIFNpZSBkaWUgWmFobHVuZ3NtZXRob2RlLiAgU2llIGvDtm5uZW4gZGllc2VuIERITCBBY2NvdW50IGbDvHIgZGllIEJlemFobHVuZyBkZXIgQWJob2x1bmcgbmljaHQgdmVyd2VuZGVuLiAgRmFsbHMgd2VpdGVyaGluIFByb2JsZW1lIGJlc3RlaGVuLCB3ZW5kZW4gU2llIHNpY2ggYW4gdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAgKHBpY2t1cC1ib29raW5nIGNvZGU6IDIwMjEzMSwgQmV6YWhsdW5nIG1pdCBBY2NvdW50IG5pY2h0IG3DtmdsaWNoKSIsInBpY2t1cC1ib29raW5nXzEwMDEwMSI6IkFiaG9sdW5nIGthbm4gbmljaHQgZ2VidWNodCB3ZXJkZW4uICBCaXR0ZSBrb250YWt0aWVyZW4gU2llIGRlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAgKHBpY2t1cC1ib29raW5nIGNvZGU6IDEwMDEwMSkiLCJkY3RfMzAwOSI6IkFiaG9sdW5nIGthbm4gbmljaHQgZ2VidWNodCB3ZXJkZW4uIEJpdHRlIGtvbnRha3RpZXJlbiBTaWUgZGVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuIChEQ1QtMzAwOSwgdW5nw7xsdGlnZXMgZGF0dW0gZsO8ciBhYmhvbHVuZykiLCJwaWNrdXAtYm9va2luZ18yMDIxMzQiOiJBYmhvbHVuZyBrYW5uIG5pY2h0IGdlYnVjaHQgd2VyZGVuLiBCaXR0ZSBrb250YWt0aWVyZW4gU2llIGRlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAocGlja3VwLWJvb2tpbmcgY29kZTogMjAyMTM0LCB2ZXJzYW5kIG1laHJlcmVyIFJlbW90ZS1TZW5kdW5nZW4gbmljaHQgZXJsYXVidCkiLCJkY3RfMzQwMDAyIjoiQml0dGUgZ2ViZW4gU2llIGRhcyBMYW5kIGRlciBFbXBmw6RuZ2VyYWRyZXNzZSBhbi4gIEZhbGxzIFNpZSBkZW5ub2NoIFByb2JsZW1lIGhhYmVuIHVuZCBJaHJlbiBTZW5kdW5nc2F1ZnRyYWcgbmljaHQgdmVydm9sbHN0w6RuZGlnZW4ga8O2bm5lbiwga29udGFrdGllcmVuIFNpZSB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuICAoRENULTM0MDAwMiwgS2VpbiBDb2RlIGbDvHIgRW1wZmFuZ3NsYW5kKSIsInBpY2t1cC1ib29raW5nXzIwMTA0NSI6IkJpdHRlIHfDpGhsZW4gU2llIGRhcyBBYmhvbGRhdHVtIGF1cy4gIEZhbGxzIHdlaXRlcmhpbiBQcm9ibGVtZSBiZXN0ZWhlbiwgd2VuZGVuIFNpZSBzaWNoIGFuIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gIChwaWNrdXAtYm9va2luZyBjb2RlOiAyMDEwNDUsIEtlaW4gQWJob2xkYXR1bSkiLCJkY3RfMzQwMDAxIjoiQml0dGUgZ2ViZW4gU2llIGRhcyBMYW5kIGRlciBWZXJzYW5kYWRyZXNzZSBhbi4gIEZhbGxzIFNpZSBkZW5ub2NoIFByb2JsZW1lIGhhYmVuIHVuZCBJaHJlbiBTZW5kdW5nc2F1ZnRyYWcgbmljaHQgdmVydm9sbHN0w6RuZGlnZW4ga8O2bm5lbiwga29udGFrdGllcmVuIFNpZSB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuICAoRENULTM0MDAwMSwgS2VpbiBDb2RlIGbDvHIgVXJzcHJ1bmdzbGFuZCkiLCJwaWNrdXAtYm9va2luZ18yMDIwMTIiOiJBYmhvbHVuZyBrYW5uIG5pY2h0IGdlYnVjaHQgd2VyZGVuLiBCaXR0ZSBrb250YWt0aWVyZW4gU2llIGRlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAocGlja3VwLWJvb2tpbmcgY29kZTogMjAyMDEyLCBrZWluIHZlcmbDvGdiYXJlciBzZXJ2aWNlYmVyZWljaCkiLCJwaWNrdXAtYm9va2luZ18yMDIxMzMiOiJCaXR0ZSDDpG5kZXJuIGRhcyBsYW5kIGRlciBhYmhvbHVuZy4gRmFsbHMgd2VpdGVyaGluIFByb2JsZW1lIGJlc3RlaGVuLCB3ZW5kZW4gU2llIHNpY2ggYW4gdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAocGlja3VwLWJvb2tpbmcgY29kZTogMjAyMTMzLCBkYXMgYWJob2xsYW5kIGbDvHIgZGllIHJlbW90ZS1idWNodW5nIGthbm4gbmljaHQgaWRlbnRpc2NoIHNlaW4gbWl0IGRlbSBsYW5kIGRlcyBhbnRyYWdzdGVsbGVycykiLCJwaWNrdXAtYm9va2luZ18yMDIxMzYiOiJBYmhvbHVuZyBrYW5uIG5pY2h0IGdlYnVjaHQgd2VyZGVuLiBCaXR0ZSBrb250YWt0aWVyZW4gU2llIGRlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAocGlja3VwLWJvb2tpbmcgY29kZTogMjAyMTM2LCB2ZXJzYW5kIG1laHJlcmVyIFJlbW90ZS1TZW5kdW5nZW4gbmljaHQgZXJsYXVidCkiLCJkY3RfMzQwMDA0IjoiQml0dGUgZ2ViZW4gU2llIEluZm9ybWF0aW9uZW4genUgUG9zdGxlaXR6YWhsLCBTdGFkdCB1bmQvb2RlciBWb3JvcnQgYW4uICBGYWxscyBTaWUgZGVubm9jaCBQcm9ibGVtZSBoYWJlbiB1bmQgSWhyZW4gU2VuZHVuZ3NhdWZ0cmFnIG5pY2h0IHZlcnZvbGxzdMOkbmRpZ2VuIGvDtm5uZW4sIGtvbnRha3RpZXJlbiBTaWUgdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAgKERDVC0zNDAwMDQpIiwicGlja3VwLWJvb2tpbmdfMjAxMDQ2IjoiQWJob2x1bmcga2FubiBuaWNodCBnZWJ1Y2h0IHdlcmRlbi4gIEJpdHRlIGtvbnRha3RpZXJlbiBTaWUgZGVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuICAocGlja3VwLWJvb2tpbmcgY29kZTogMjAxMDQ2LCBubyBnbG9iYWwgcmVmZXJlbmNlIG51bWJlcikiLCJwaWNrdXAtYm9va2luZ18yMDIxMzUiOiJBYmhvbHVuZyBrYW5uIG5pY2h0IGdlYnVjaHQgd2VyZGVuLiBCaXR0ZSBrb250YWt0aWVyZW4gU2llIGRlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAocGlja3VwLWJvb2tpbmcgY29kZTogMjAyMTM1LCBrZWluZSBidWNodW5nc3JlZmVyZW56IHZvcmhhbmRlbiwgZGllIGFiaG9sdW5nIHd1cmRlIG1pdCBlaW5lciBhbmRlcmVuIGJ1Y2h1bmdzcmVmZXJlbnogZ2VidWNodCkiLCJkY3RfMzQwMDAzIjoiRWluIEZlaGxlciBpc3QgYXVmZ2V0cmV0ZW4uICBGYWxscyBTaWUgZGVubm9jaCBQcm9ibGVtZSBoYWJlbiB1bmQgSWhyZW4gU2VuZHVuZ3NhdWZ0cmFnIG5pY2h0IHZlcnZvbGxzdMOkbmRpZ2VuIGvDtm5uZW4sIGtvbnRha3RpZXJlbiBTaWUgdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAoRENULTM0MDAwMywgS2VpbiBMw6RuZGVyY29kZSBmw7xyIFJlY2hudW5nc2VtcGbDpG5nZXIpIiwicGlja3VwLWJvb2tpbmdfMjAzMTAyIjoiQWJob2x1bmcga2FubiBuaWNodCBnZWJ1Y2h0IHdlcmRlbi4gIEJpdHRlIGtvbnRha3RpZXJlbiBTaWUgZGVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuICAocGlja3VwLWJvb2tpbmcgY29kZTogMjAxOTIxLCBEb3BwZWx0ZSBCdWNodW5nIGdlZnVuZGVuKSIsInBpY2t1cC1ib29raW5nXzIwMTA0OSI6IkJpdHRlIGdlYmVuIFNpZSBlaW5lbiBGaXJtZW5uYW1lbiBhbi4gRmFsbHMgd2VpdGVyaGluIFByb2JsZW1lIGJlc3RlaGVuLCB3ZW5kZW4gU2llIHNpY2ggYW4gdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAocGlja3VwLWJvb2tpbmcgY29kZTogMjAxMDQ5LCBrZWluZSBmaXJtYSkiLCJwaWNrdXAtYm9va2luZ18yMDIxMzgiOiJCaXR0ZSDDpG5kZXJuIFNpZSBkZW4gWmVpdHB1bmt0LCB6dSBkZW0gZGllIFNlbmR1bmcgdmVyc2FuZGJlcmVpdCBpc3QuIERpZXNlciBaZWl0cHVua3Qga2FubiBuaWNodCB2b3IgZGVyIGFrdHVlbGxlbiBVaHJ6ZWl0IGFuIGRlciBBYmhvbHN0ZWxsZSBsaWVnZW4uIEZhbGxzIHdlaXRlcmhpbiBQcm9ibGVtZSBiZXN0ZWhlbiwgd2VuZGVuIFNpZSBzaWNoIGFuIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gKHBpY2t1cC1ib29raW5nIGNvZGU6IDIwMjEzOCkiLCJwaWNrdXAtYm9va2luZ18yMDIxMzciOiLDnGJlcnNjaHJlaXRldCBkZW4genVsw6Rzc2lnZW4gTWF4aW1hbHdlcnQiLCJwaWNrdXAtYm9va2luZ18yMDIwMTkiOiJBYmhvbHVuZyBrYW5uIG5pY2h0IGdlYnVjaHQgd2VyZGVuLiAgQml0dGUga29udGFrdGllcmVuIFNpZSBkZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gIChwaWNrdXAtYm9va2luZyBjb2RlOiAyMDIwMTksIEtlaW5lIEdNVC1aZWl0YWJ3ZWljaHVuZykiLCJkY3RfNDIwMDAwIjoiRWluIEZlaGxlciBpc3QgYXVmZ2V0cmV0ZW4uICBGYWxscyB3ZWl0ZXJoaW4gUHJvYmxlbWUgYmVzdGVoZW4sIHdlbmRlbiBTaWUgc2ljaCBhbiB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuICAoRENULTQyMDAwLCBVbmJla2FubnRlciBGZWhsZXIpIiwicGlja3VwLWJvb2tpbmdfMjAyMTM5IjoiS2VpbmUgU2VuZHVuZyhlbikgZ2VmdW5kZW4uICBGYWxscyB3ZWl0ZXJoaW4gUHJvYmxlbWUgYmVzdGVoZW4sIHdlbmRlbiBTaWUgc2ljaCBhbiB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuICAocGlja3VwLWJvb2tpbmcgY29kZTogMjAyMTM5KSIsImRjdF8zMDExIjoiQml0dGUgw6RuZGVybiBTaWUgZGllIE1hw59lIGRlciBTZW5kdW5nLyBkZXMgUGFja3N0w7xja3MuICBGYWxscyBTaWUgZGVubm9jaCBQcm9ibGVtZSBoYWJlbiB1bmQgSWhyZW4gU2VuZHVuZ3NhdWZ0cmFnIG5pY2h0IHZlcnZvbGxzdMOkbmRpZ2VuIGvDtm5uZW4sIGtvbnRha3RpZXJlbiBTaWUgdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAgKERDVC0zMDExKSIsImRjdF8zMDEwIjoiQWJob2x1bmcga2FubiBuaWNodCBnZWJ1Y2h0IHdlcmRlbi4gIEJpdHRlIGtvbnRha3RpZXJlbiBTaWUgZGVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuICAocGlja3VwLWJvb2tpbmcgY29kZTogMjAxMDUzLCBLZWluZSBVaHJ6ZWl0IGFuZ2VnZWJlbikiLCJ1c2VyLW1hbmFnZW1lbnRfMTAwMTAxIjoiRWluIEZlaGxlciBpc3QgYXVmZ2V0cmV0ZW4uIEZhbGxzIHdlaXRlcmhpbiBQcm9ibGVtZSBiZXN0ZWhlbiwgd2VuZGVuIFNpZSBzaWNoIGFuIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gKHVzZXItbWFuYWdlbWVudDogMTAwMTAxLCBVbmJla2FubnRlciBGZWhsZXIpIiwiZGN0XzMwMTUiOiJFaW4gRmVobGVyIGlzdCBhdWZnZXRyZXRlbi4gIEZhbGxzIFNpZSBkZW5ub2NoIFByb2JsZW1lIGhhYmVuIHVuZCBJaHJlbiBTZW5kdW5nc2F1ZnRyYWcgbmljaHQgdmVydm9sbHN0w6RuZGlnZW4ga8O2bm5lbiwga29udGFrdGllcmVuIFNpZSB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuICAoRENULTMwMTUsIGludmFsaWQgc2hpcG1lbnQgbGVuZ3RoKSIsImRjdF8zNDAwMTciOiJCaXR0ZSBnZWJlbiBTaWUgZGllIE1hw59laW5oZWl0IGbDvHIgZGFzIFBhY2tzdMO8Y2stLyBTZW5kdW5nc2dld2ljaHQgYW4uICBGYWxscyBTaWUgZGVubm9jaCBQcm9ibGVtZSBoYWJlbiB1bmQgSWhyZW4gU2VuZHVuZ3NhdWZ0cmFnIG5pY2h0IHZlcnZvbGxzdMOkbmRpZ2VuIGvDtm5uZW4sIGtvbnRha3RpZXJlbiBTaWUgdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAgKERDVC0zNDAwMTcpIiwiZGN0XzMwMTQiOiJFaW4gRmVobGVyIGlzdCBhdWZnZXRyZXRlbi4gIEZhbGxzIFNpZSBkZW5ub2NoIFByb2JsZW1lIGhhYmVuIHVuZCBJaHJlbiBTZW5kdW5nc2F1ZnRyYWcgbmljaHQgdmVydm9sbHN0w6RuZGlnZW4ga8O2bm5lbiwga29udGFrdGllcmVuIFNpZSB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuICAoRENULTMwMTQsIGludmFsaWQgc2hpcG1lbnQgaGVpZ2h0KSIsImRjdF8zNDAwMTYiOiJCaXR0ZSB3w6RobGVuIFNpZSBhdXMsIG9iIFNpZSBlaW4gRG9rdW1lbnQgb2RlciBlaW4gUGFrZXQgdmVyc2VuZGVuIHdvbGxlbi4gIEZhbGxzIFNpZSBkZW5ub2NoIFByb2JsZW1lIGhhYmVuIHVuZCBJaHJlbiBTZW5kdW5nc2F1ZnRyYWcgbmljaHQgdmVydm9sbHN0w6RuZGlnZW4ga8O2bm5lbiwga29udGFrdGllcmVuIFNpZSB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuICAoRENULTM0MDAxNiwgS2VpbmUgUGFja3N0w7xjayBWYXJpYW50ZSkiLCJkY3RfMzQwMDE5IjoiRWluIEZlaGxlciBpc3QgYXVmZ2V0cmV0ZW4uICBGYWxscyBTaWUgZGVubm9jaCBQcm9ibGVtZSBoYWJlbiB1bmQgSWhyZW4gU2VuZHVuZ3NhdWZ0cmFnIG5pY2h0IHZlcnZvbGxzdMOkbmRpZ2VuIGvDtm5uZW4sIGtvbnRha3RpZXJlbiBTaWUgdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAgKERDVC0zNDAwMTksIFVuYmVrYW5udGUgR2V3aWNodHNtZXNzdW5nKSIsImRjdF8zMDEzIjoiRWluIEZlaGxlciBpc3QgYXVmZ2V0cmV0ZW4uICBGYWxscyBTaWUgZGVubm9jaCBQcm9ibGVtZSBoYWJlbiB1bmQgSWhyZW4gU2VuZHVuZ3NhdWZ0cmFnIG5pY2h0IHZlcnZvbGxzdMOkbmRpZ2VuIGvDtm5uZW4sIGtvbnRha3RpZXJlbiBTaWUgdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAgKERDVC0zMDEzLCBpbnZhbGlkIHNoaXBtZW50IHdlaWdodCkiLCJkY3RfMzQwMDE4Ijoiw5xiZXJzY2hyZWl0ZXQgZGVuIHp1bMOkc3NpZ2VuIE1heGltYWx3ZXJ0IChEQ1QtMzQwMDE4KSIsImRjdF8zMDEyIjoiQml0dGUgw6RuZGVybiBTaWUgZGFzIEdld2ljaHQgZGVyIFNlbmR1bmcvIGRlcyBQYWNrc3TDvGNrcy4gIEZhbGxzIFNpZSBkZW5ub2NoIFByb2JsZW1lIGhhYmVuIHVuZCBJaHJlbiBTZW5kdW5nc2F1ZnRyYWcgbmljaHQgdmVydm9sbHN0w6RuZGlnZW4ga8O2bm5lbiwga29udGFrdGllcmVuIFNpZSB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgIDA4MjAtNTUwNTA1LiAgKERDVC0zMDEyKSIsImRjdF8zMDE5IjoiV2FyZW5jb2RlIG5pY2h0IGdlZnVuZGVuLiAgKERDVC0zMDE5KSIsImRjdF8zMDE4IjoiRWluIEZlaGxlciBpc3QgYXVmZ2V0cmV0ZW4uICBGYWxscyBTaWUgZGVubm9jaCBQcm9ibGVtZSBoYWJlbiB1bmQgSWhyZW4gU2VuZHVuZ3NhdWZ0cmFnIG5pY2h0IHZlcnZvbGxzdMOkbmRpZ2VuIGvDtm5uZW4sIGtvbnRha3RpZXJlbiBTaWUgdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAoRENULTMwMTgsIEtlaW4gTMOkbmRlcmNvZGUgZsO8ciBSZWNobnVuZ3NlbXBmw6RuZ2VyKSIsImRjdF8zMDE3IjoiRWluIEZlaGxlciBpc3QgYXVmZ2V0cmV0ZW4uICBGYWxscyBTaWUgZGVubm9jaCBQcm9ibGVtZSBoYWJlbiB1bmQgSWhyZW4gU2VuZHVuZ3NhdWZ0cmFnIG5pY2h0IHZlcnZvbGxzdMOkbmRpZ2VuIGvDtm5uZW4sIGtvbnRha3RpZXJlbiBTaWUgdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAgKERDVC0zMDE3LCBpbnZhbGlkIHNoaXBtZW50IHZhbHVlKSIsImRjdF8zMDE2IjoiRWluIEZlaGxlciBpc3QgYXVmZ2V0cmV0ZW4uICBGYWxscyBTaWUgZGVubm9jaCBQcm9ibGVtZSBoYWJlbiB1bmQgSWhyZW4gU2VuZHVuZ3NhdWZ0cmFnIG5pY2h0IHZlcnZvbGxzdMOkbmRpZ2VuIGvDtm5uZW4sIGtvbnRha3RpZXJlbiBTaWUgdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAgKERDVC0zMDE2LCBpbnZhbGlkIHNoaXBtZW50IHdpZHRoL2RpYW1ldGVyKSIsInBpY2t1cC1ib29raW5nXzIwMjEyMSI6IkJpdHRlIGdlYmVuIFNpZSBlaW4gZ8O8bHRpZ2VzIEdld2ljaHQgdW5kIE1hw58gYW4uICBGYWxscyBTaWUgZGVubm9jaCBQcm9ibGVtZSBoYWJlbiB1bmQgSWhyZW4gU2VuZHVuZ3NhdWZ0cmFnIG5pY2h0IHZlcnZvbGxzdMOkbmRpZ2VuIGvDtm5uZW4sIGtvbnRha3RpZXJlbiBTaWUgdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAgKERDVC0yMDIxMjEpIiwiZGN0XzM0MDAxMSI6IkJpdHRlIGdlYmVuIFNpZSBkYXMgbWF4aW1hbGUgUGFja3N0w7xja2dld2ljaHQgYW4uICBGYWxscyBTaWUgZGVubm9jaCBQcm9ibGVtZSBoYWJlbiB1bmQgSWhyZW4gU2VuZHVuZ3NhdWZ0cmFnIG5pY2h0IHZlcnZvbGxzdMOkbmRpZ2VuIGvDtm5uZW4sIGtvbnRha3RpZXJlbiBTaWUgdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAgKERDVC0zNDAwMTEpIiwiZGN0XzM0MDAxMCI6IkJpdHRlIGdlYmVuIFNpZSBkYXMgR2VzYW10Z2V3aWNodCBkZXIgU2VuZHVuZyBhbi4gIEZhbGxzIFNpZSBkZW5ub2NoIFByb2JsZW1lIGhhYmVuIHVuZCBJaHJlbiBTZW5kdW5nc2F1ZnRyYWcgbmljaHQgdmVydm9sbHN0w6RuZGlnZW4ga8O2bm5lbiwga29udGFrdGllcmVuIFNpZSB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuICAoRENULTM0MDAxMCkiLCJkY3RfMzQwMDEzIjoiQml0dGUgZ2ViZW4gU2llIGRpZSBNYXhpbWFsbMOkbmdlIGRlcyBQYWNrc3TDvGtlcyBhbi4gIEZhbGxzIFNpZSBkZW5ub2NoIFByb2JsZW1lIGhhYmVuIHVuZCBJaHJlbiBTZW5kdW5nc2F1ZnRyYWcgbmljaHQgdmVydm9sbHN0w6RuZGlnZW4ga8O2bm5lbiwga29udGFrdGllcmVuIFNpZSB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuICAoRENULTM0MDAxMykiLCJwaWNrdXAtYm9va2luZ18yMDIwMDIiOiJBYmhvbHVuZyBrYW5uIG5pY2h0IGdlYnVjaHQgd2VyZGVuLiAgQml0dGUga29udGFrdGllcmVuIFNpZSBkZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gIChwaWNrdXAtYm9va2luZyBjb2RlOiAyMDIwNzMsIEtlaW4gUmVjaG51bmdzbGFuZCkiLCJwaWNrdXAtYm9va2luZ18yMDIxMjMiOiJCaXR0ZSDDpG5kZXJuIFNpZSBkaWUgWmFobHVuZ3NtZXRob2RlLiAgU2llIGvDtm5uZW4gZGllc2VuIERITCBBY2NvdW50IGbDvHIgZGllIEJlemFobHVuZyBkZXIgQWJob2x1bmcgbmljaHQgdmVyd2VuZGVuLiAgRmFsbHMgd2VpdGVyaGluIFByb2JsZW1lIGJlc3RlaGVuLCB3ZW5kZW4gU2llIHNpY2ggYW4gdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAgKHBpY2t1cC1ib29raW5nIGNvZGU6IDIwMjEyMywgQmV6YWhsdW5nIG1pdCBBY2NvdW50IG5pY2h0IG3DtmdsaWNoKSIsImRjdF8zNDAwMTIiOiJCaXR0ZSBnZWJlbiBTaWUgZGllIE1heGltYWxow7ZoZSBkZXMgUGFja3N0w7xja2VzIGFuLiAgRmFsbHMgU2llIGRlbm5vY2ggUHJvYmxlbWUgaGFiZW4gdW5kIElocmVuIFNlbmR1bmdzYXVmdHJhZyBuaWNodCB2ZXJ2b2xsc3TDpG5kaWdlbiBrw7ZubmVuLCBrb250YWt0aWVyZW4gU2llIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gIChEQ1QtNTAxOCkiLCJwaWNrdXAtYm9va2luZ18yMDIwMDEiOiJCaXR0ZSBrb3JyaWdpZXJlbiBvZGVyIMOkbmRlcm4gU2llIGRpZSBLdW5kZW5udW1lci4gIEZhbGxzIHdlaXRlcmhpbiBQcm9ibGVtZSBiZXN0ZWhlbiwgd2VuZGVuIFNpZSBzaWNoIGFuIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gIChwaWNrdXAtYm9va2luZyBjb2RlOiAyMDIwMDEsIFVuZ8O8bHRpZ2VyIEFjY291bnQpIiwicGlja3VwLWJvb2tpbmdfMjAyMTIyIjoiRW50c2NodWxkaWdlbiBTaWUgLSB3aXIgaGFiZW4gbGVpZGVyIG5pY2h0IGdlbsO8Z2VuZCBaZWl0IHVtIElocmUgU2VuZHVuZyBhYnp1aG9sZW4uIEJpdHRlIHZlcmxlZ2VuIFNpZSBkZW4gWmVpdHB1bmt0L2RhcyBEYXR1bSBkZXIgQWJob2x1bmcgbmFjaCBoaW50ZW4gb2RlciBrb250YWt0aWVyZW4gU2llIGRlbiBLdW5kZW5zZXJ2aWNlOiAwODIwLTU1MDUwNS4gKHBpY2t1cC1ib29raW5nIGNvZGU6IDIwMjEyMikiLCJkY3RfMzQwMDE1IjoiQml0dGUgZ2ViZW4gU2llIGRlbiBkZWtsYXJpZXJ0ZW4gV2FyZW53ZXJ0IGFuLiAgRmFsbHMgU2llIGRlbm5vY2ggUHJvYmxlbWUgaGFiZW4gdW5kIElocmVuIFNlbmR1bmdzYXVmdHJhZyBuaWNodCB2ZXJ2b2xsc3TDpG5kaWdlbiBrw7ZubmVuLCBrb250YWt0aWVyZW4gU2llIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gIChEQ1QtMzQwMDE1KSIsInBpY2t1cC1ib29raW5nXzIwMjAwNCI6IkJpdHRlIGdlYmVuIFNpZSBlaW4gTGFuZCBmw7xyIGRpZSBBYmhvbGFkcmVzc2UgYW4uICBGYWxscyB3ZWl0ZXJoaW4gUHJvYmxlbWUgYmVzdGVoZW4sIHdlbmRlbiBTaWUgc2ljaCBhbiB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuICAocGlja3VwLWJvb2tpbmcgY29kZTogMjAyMDA0LCBLZWluIEFiaG9sbGFuZCkiLCJwaWNrdXAtYm9va2luZ18yMDIxMjUiOiJBYmhvbHVuZyBrYW5uIG5pY2h0IGdlYnVjaHQgd2VyZGVuLiAgQml0dGUga29udGFrdGllcmVuIFNpZSBkZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gIChwaWNrdXAtYm9va2luZyBjb2RlOiAyMDIxMjUpIiwicGlja3VwLWJvb2tpbmdfMjAyMDAzIjoiQml0dGUga29ycmlnaWVyZW4gb2RlciDDpG5kZXJuIFNpZSBkaWUgS3VuZGVubnVtZXIuICBGYWxscyB3ZWl0ZXJoaW4gUHJvYmxlbWUgYmVzdGVoZW4sIHdlbmRlbiBTaWUgc2ljaCBhbiB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuICAocGlja3VwLWJvb2tpbmcgY29kZTogMjAyMDAzLCBVbmfDvGx0aWdlciBBY2NvdW50KSIsInBpY2t1cC1ib29raW5nXzIwMjEyNCI6IkltcG9ydCBBY2NvdW50IG51bW1lciBiZW7DtnRpZ3QiLCJkY3RfMzQwMDE0IjoiQml0dGUgZ2ViZW4gU2llIGRpZS8gZGVuIG1heGltYWxlL24gQnJlaXRlLyBEdXJjaG1lc3NlciBkZXMgUGFja3N0w7xja2VzIGFuLiAgRmFsbHMgU2llIGRlbm5vY2ggUHJvYmxlbWUgaGFiZW4gdW5kIElocmVuIFNlbmR1bmdzYXVmdHJhZyBuaWNodCB2ZXJ2b2xsc3TDpG5kaWdlbiBrw7ZubmVuLCBrb250YWt0aWVyZW4gU2llIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gIChEQ1QtMzQwMDE0KSIsInBpY2t1cC1ib29raW5nXzIwMjEyNyI6IkFiaG9sdW5nIGthbm4gbmljaHQgZ2VidWNodCB3ZXJkZW4uICBCaXR0ZSBrb250YWt0aWVyZW4gU2llIGRlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAgKHBpY2t1cC1ib29raW5nIGNvZGU6IDIwMjEyNykiLCJwaWNrdXAtYm9va2luZ18yMDIxMjYiOiJCaXR0ZSBnZWJlbiBTaWUgZGllIEVuZHplaXQgZGVzIEFiaG9sZmVuc3RlcnMgYW4uICBGYWxscyB3ZWl0ZXJoaW4gUHJvYmxlbWUgYmVzdGVoZW4sIHdlbmRlbiBTaWUgc2ljaCBhbiB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuICAocGlja3VwLWJvb2sgY29kZTogMjAyMTI2LCBLZWluZSBWZXJzYW5kc2NobHVzc3plaXQpIiwicGlja3VwLWJvb2tpbmdfMjAyMTI5IjoiQml0dGUgZ2ViZW4gU2llIGRhcyBMYW5kIGRlciBFbXBmw6RuZ2VyYWRyZXNzZSBhbi4gIEZhbGxzIFNpZSBkZW5ub2NoIFByb2JsZW1lIGhhYmVuIHVuZCBJaHJlbiBTZW5kdW5nc2F1ZnRyYWcgbmljaHQgdmVydm9sbHN0w6RuZGlnZW4ga8O2bm5lbiwga29udGFrdGllcmVuIFNpZSB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuICAocGlja3VwLWJvb2tpbmcgY29kZTogMjAyMTI5LCBLZWluIENvZGUgZsO8ciBFbXBmYW5nc2xhbmQpIiwiZ2xzXzAwMDEiOiJFaW4gRmVobGVyIGlzdCBhdWZnZXRyZXRlbi4gIEZhbGxzIHdlaXRlcmhpbiBQcm9ibGVtZSBiZXN0ZWhlbiwgd2VuZGVuIFNpZSBzaWNoIGFuIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gIChHTFMtMDAwMSwgVW5iZWthbm50ZXIgRmVobGVyKSIsInBpY2t1cC1ib29raW5nXzIwMjEyOCI6IkJpdHRlIMOkbmRlcm4gU2llIGRhcyBBYmhvbGRhdHVtLiAgQWJob2xkYXR1bSBrYW5uIG5pY2h0IGZyw7xoZXIgYWxzIGhldXRpZ2VzIERhdHVtIHNlaW4uICBGYWxscyB3ZWl0ZXJoaW4gUHJvYmxlbWUgYmVzdGVoZW4sIHdlbmRlbiBTaWUgc2ljaCBhbiB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuIChwaWNrdXAtYm9va2luZyBjb2RlOiAyMDIxMjgpIiwiZ2xzXzAwMDIiOiJFaW4gRmVobGVyIGlzdCBhdWZnZXRyZXRlbi4gIEZhbGxzIHdlaXRlcmhpbiBQcm9ibGVtZSBiZXN0ZWhlbiwgd2VuZGVuIFNpZSBzaWNoIGFuIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gIChHTFMtMDAwMiwgVW5iZWthbm50ZXIgRmVobGVyKSIsInBpY2t1cC1ib29raW5nXzIwMjAwNyI6IkJpdHRlIGtvcnJpZ2llcmVuIG9kZXIgw6RuZGVybiBTaWUgZGllIEt1bmRlbm51bWVyLiAgRmFsbHMgd2VpdGVyaGluIFByb2JsZW1lIGJlc3RlaGVuLCB3ZW5kZW4gU2llIHNpY2ggYW4gdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAgKHBpY2t1cC1ib29raW5nIGNvZGU6IDIwMjAwNywgVW5nw7xsdGlnZXIgQWNjb3VudCkiLCJwaWNrdXAtYm9va2luZ18yMDIwMDkiOiJBYmhvbHVuZyBrYW5uIG5pY2h0IGdlYnVjaHQgd2VyZGVuLiAgQml0dGUga29udGFrdGllcmVuIFNpZSBkZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gIChwaWNrdXAtYm9va2luZyBjb2RlOiAyMDIwMDksIEtlaW5lIEFiaG9scm91dGUpIiwiZGN0XzM0MDAyOCI6IkJpdHRlIGdlYmVuIFNpZSBkaWUgTWHDn2VpbmhlaXQgYW4uICBGYWxscyBTaWUgZGVubm9jaCBQcm9ibGVtZSBoYWJlbiB1bmQgSWhyZW4gU2VuZHVuZ3NhdWZ0cmFnIG5pY2h0IHZlcnZvbGxzdMOkbmRpZ2VuIGvDtm5uZW4sIGtvbnRha3RpZXJlbiBTaWUgdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAgKERDVC0zNDAwMzgpIiwiZGN0XzM0MDAyNyI6IkbDvHIgSWhyZSBBdXN3YWhsIHNpbmQga2VpbmUgTGllZmVyb3B0aW9uZW4gbcO2Z2xpY2guLiAgRmFsbHMgU2llIGRlbm5vY2ggUHJvYmxlbWUgaGFiZW4gdW5kIElocmVuIFNlbmR1bmdzYXVmdHJhZyBuaWNodCB2ZXJ2b2xsc3TDpG5kaWdlbiBrw7ZubmVuLCBrb250YWt0aWVyZW4gU2llIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gIChEQ1QtMzQwMDI3LCBVbmJla2FubnRlciBGZWhsZXIpIiwiZGN0XzM0MDAyOSI6IkJpdHRlIMOkbmRlcm4gU2llIGRpZSBNYcOfZSBkZXIgU2VuZHVuZy8gZGVzIFBhY2tzdMO8Y2tzLiBGYWxscyBTaWUgZGVubm9jaCBQcm9ibGVtZSBoYWJlbiB1bmQgSWhyZW4gU2VuZHVuZ3NhdWZ0cmFnIG5pY2h0IHZlcnZvbGxzdMOkbmRpZ2VuIGvDtm5uZW4sIGtvbnRha3RpZXJlbiBTaWUgdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAoRENULTM0MDAyOSwgbWHDn2VpbmhlaXRlbiBtw7xzc2VuIGlkZW50aXNjaCBzZWluKSIsImRjdF8zNDAwMjAiOiJCaXR0ZSBnZWJlbiBTaWUgZGllIE1hw59laW5oZWl0IGbDvHIgZGllIFBhY2tzdMO8Y2ttYcOfZSBhbi4gIEZhbGxzIFNpZSBkZW5ub2NoIFByb2JsZW1lIGhhYmVuIHVuZCBJaHJlbiBTZW5kdW5nc2F1ZnRyYWcgbmljaHQgdmVydm9sbHN0w6RuZGlnZW4ga8O2bm5lbiwga29udGFrdGllcmVuIFNpZSB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuICAoRENULTM0MDAyMCkiLCJkY3RfMzQwMDIyIjoiR2V3aWNodCBvZGVyIE1hw59lIGjDtmhlciBhbHMgbWF4aW1hbCB6dWdlbGFzc2VuIiwicGlja3VwLWJvb2tpbmdfMjAxMDY0IjoiQWJob2x1bmcga2FubiBuaWNodCBnZWJ1Y2h0IHdlcmRlbi4gIEJpdHRlIGtvbnRha3RpZXJlbiBTaWUgZGVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuICAocGlja3VwLWJvb2tpbmcgY29kZTogMjAxMDY0LCBwaWNrdXAgdHlwZSBjb2RlIG1pc3NpbmcpIiwiZGN0XzM0MDAyMSI6IkJpdHRlIGdlYmVuIFNpZSBlaW5lIFfDpGhydW5nIGFuLiAgRmFsbHMgU2llIGRlbm5vY2ggUHJvYmxlbWUgaGFiZW4gdW5kIElocmVuIFNlbmR1bmdzYXVmdHJhZyBuaWNodCB2ZXJ2b2xsc3TDpG5kaWdlbiBrw7ZubmVuLCBrb250YWt0aWVyZW4gU2llIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gIChEQ1QtMzQwMDIxKSIsImRjdF8zNDAwMjQiOiJFaW4gRmVobGVyIGlzdCBhdWZnZXRyZXRlbi4gIEZhbGxzIFNpZSBkZW5ub2NoIFByb2JsZW1lIGhhYmVuIHVuZCBJaHJlbiBTZW5kdW5nc2F1ZnRyYWcgbmljaHQgdmVydm9sbHN0w6RuZGlnZW4ga8O2bm5lbiwga29udGFrdGllcmVuIFNpZSB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuICAoRENULTM0MDAyNCwgS2VpbihlKSBQcm9kdWt0Y29kZShzKSkiLCJwaWNrdXAtYm9va2luZ18yMDEwNjciOiJCaXR0ZSBnZWJlbiBTaWUgZWluZSBBYmhvbGFkcmVzc2UgYW4uICBGYWxscyB3ZWl0ZXJoaW4gUHJvYmxlbWUgYmVzdGVoZW4sIHdlbmRlbiBTaWUgc2ljaCBhbiB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuICAocGlja3VwLWJvb2tpbmcgY29kZTogMjAxMDY3LCBLZWluZSBBYmhvbGFkcmVzc2UpIiwiZGN0XzM0MDAyMyI6IkVpbiBGZWhsZXIgaXN0IGF1ZmdldHJldGVuLiAgRmFsbHMgU2llIGRlbm5vY2ggUHJvYmxlbWUgaGFiZW4gdW5kIElocmVuIFNlbmR1bmdzYXVmdHJhZyBuaWNodCB2ZXJ2b2xsc3TDpG5kaWdlbiBrw7ZubmVuLCBrb250YWt0aWVyZW4gU2llIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gIChEQ1QtMzQwMDIzLCBVbmJla2FubnRlcyBXw6RocnVuZ3NzeW1ib2wpIiwiZGN0XzM0MDAyNiI6IkJpdHRlIGdlYmVuIFNpZSBlaW4gZ8O8bHRpZ2VzIEdld2ljaHQgdW5kIE1hw58gYW4uICBGYWxscyBTaWUgZGVubm9jaCBQcm9ibGVtZSBoYWJlbiB1bmQgSWhyZW4gU2VuZHVuZ3NhdWZ0cmFnIG5pY2h0IHZlcnZvbGxzdMOkbmRpZ2VuIGvDtm5uZW4sIGtvbnRha3RpZXJlbiBTaWUgdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAgKERDVC0zNDAwMjYpIiwiZGN0XzM0MDAyNSI6IkVpbiBGZWhsZXIgaXN0IGF1ZmdldHJldGVuLiAgRmFsbHMgU2llIGRlbm5vY2ggUHJvYmxlbWUgaGFiZW4gdW5kIElocmVuIFNlbmR1bmdzYXVmdHJhZyBuaWNodCB2ZXJ2b2xsc3TDpG5kaWdlbiBrw7ZubmVuLCBrb250YWt0aWVyZW4gU2llIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gIChEQ1QtMzQwMDI1LCBLZWluKGUpIFNlcnZpY2UgQ29kZShzKSkiLCJwcm9tb2NvZGVfMjAwMDExIjoidW5nw7xsdGlnZXIgUmFiYXR0IENvZGUiLCJwcm9tb2NvZGVfMjAwMDEwIjoidW5nw7xsdGlnZXIgUmFiYXR0IENvZGUiLCJwcm9tb2NvZGVfMjAwMDEzIjoidW5nw7xsdGlnZXIgUmFiYXR0IENvZGUiLCJwcm9tb2NvZGVfMjAwMDEyIjoidW5nw7xsdGlnZXIgUmFiYXR0IENvZGUiLCJwcm9tb2NvZGVfZGVmYXVsdC1lcnJvciI6IkVpbiBGZWhsZXIgaXN0IGF1ZmdldHJldGVuLiAgRmFsbHMgU2llIGRlbm5vY2ggUHJvYmxlbWUgaGFiZW4gdW5kIElocmVuIFNlbmR1bmdzYXVmdHJhZyBuaWNodCB2ZXJ2b2xsc3TDpG5kaWdlbiBrw7ZubmVuLCBrb250YWt0aWVyZW4gU2llIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gIChwcm9tbyBjb2RlOiBkZWYsIFVuYmVrYW5udGVyIEZlaGxlcikiLCJwcm9tb2NvZGVfMjAwMDE1IjoidW5nw7xsdGlnZXIgUmFiYXR0IENvZGUiLCJwcm9tb2NvZGVfMjAwMDE0Ijoid2VuaWdlciBhbHMgbWltaW11bSBlcmxhdWJ0IiwiY3VzdG9tZXItYWNjb3VudC1zZXJ2aWNlXzIwMDAwMiI6IkVpbiBGZWhsZXIgaXN0IGF1ZmdldHJldGVuLiBGYWxscyB3ZWl0ZXJoaW4gUHJvYmxlbWUgYmVzdGVoZW4sIHdlbmRlbiBTaWUgc2ljaCBhbiB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuIChjdXN0b21lci1hY2NvdW50LXNlcnZpY2U6IDIwMDAwMiwgVW5iZWthbm50ZXIgRmVobGVyKSIsInBpY2t1cC1ib29raW5nXzIwMTA1MCI6IkJpdHRlIGdlYmVuIFNpZSBJaHJlIFRlbGVmb25udW1tZXIgYW4uIEZhbGxzIHdlaXRlcmhpbiBQcm9ibGVtZSBiZXN0ZWhlbiwgd2VuZGVuIFNpZSBzaWNoIGFuIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gKHBpY2t1cC1ib29raW5nIGNvZGU6IDIwMTA1MCwga2VpbmUgdGVsZWZvbm51bW1lcikiLCJkY3RfMzQwMDMxIjoiQml0dGUgw6RuZGVybiBTaWUgZGllIE1hw59lIGRlciBTZW5kdW5nLyBkZXMgUGFja3N0w7xja3MuICBGYWxscyBTaWUgZGVubm9jaCBQcm9ibGVtZSBoYWJlbiB1bmQgSWhyZW4gU2VuZHVuZ3NhdWZ0cmFnIG5pY2h0IHZlcnZvbGxzdMOkbmRpZ2VuIGvDtm5uZW4sIGtvbnRha3RpZXJlbiBTaWUgdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAgKERDVC0zNDAwMzEpIiwicGlja3VwLWJvb2tpbmdfMjAxMDUyIjoiQWJob2x1bmcga2FubiBuaWNodCBnZWJ1Y2h0IHdlcmRlbi4gQml0dGUga29udGFrdGllcmVuIFNpZSBkZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gKHBpY2t1cC1ib29raW5nIGNvZGU6IDIwMTA1MiwgS2VpbiBUYWcgYW5nZWdlYmVuKSIsInBpY2t1cC1ib29raW5nXzIwMjE0MSI6IkJpdHRlIGdlYmVuIFNpZSBkaWUgS3VuZGVubnVtbWVyIGRlcyBSZWNobnVuZ3NlbXBmw6RuZ2VycyBhbi4gIEZhbGxzIHdlaXRlcmhpbiBQcm9ibGVtZSBiZXN0ZWhlbiwgd2VuZGVuIFNpZSBzaWNoIGFuIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gIChwaWNrdXAtYm9va2luZyBjb2RlOiAyMDIxNDEsIEtlaW5lIEt1bmRlbm51bW1lciBkZXMgUmVjaG51bmdzZW1wZsOkbmdlcnMpIiwicGlja3VwLWJvb2tpbmdfMjAyMTQwIjoiQWJob2x1bmcga2FubiBuaWNodCBnZWJ1Y2h0IHdlcmRlbi4gIEJpdHRlIGtvbnRha3RpZXJlbiBTaWUgZGVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuICAocGlja3VwLWJvb2tpbmcgY29kZTogMjAyMTQwKSIsImRjdF8zNDAwMzAiOiJFaW4gRmVobGVyIGlzdCBhdWZnZXRyZXRlbi4gIEZhbGxzIHdlaXRlcmhpbiBQcm9ibGVtZSBiZXN0ZWhlbiwgd2VuZGVuIFNpZSBzaWNoIGFuIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gIChEQ1QtMzQwMDMwLCBVbmJla2FubnRlciBGZWhsZXIpIiwicGlja3VwLWJvb2tpbmdfMjAyMTQzIjoiQWJob2x1bmcga2FubiBuaWNodCBnZWJ1Y2h0IHdlcmRlbi4gQml0dGUga29udGFrdGllcmVuIFNpZSBkZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gKHBpY2t1cC1ib29raW5nIGNvZGU6IDIwMjE0MywgdW5nw7xsdGlnZSBCdWNodW5nKSIsImRjdF8zNDAwMzMiOiJCaXR0ZSBnZWJlbiBTaWUgZGllIFplaXQgYW4sIGFiIGRlciB3aXIgZGllIFNlbmR1bmcgYWJob2xlbiBrw7ZubmVuLiAgRmFsbHMgd2VpdGVyaGluIFByb2JsZW1lIGJlc3RlaGVuLCB3ZW5kZW4gU2llIHNpY2ggYW4gdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAgKERDVC0zNDAwMzMsIEtlaW4gZnLDvGhlc3Rtw7ZnbGljaGVyIEFiaG9semVpdHB1bmt0IGFuZ2VnZWJlbikiLCJwaWNrdXAtYm9va2luZ18yMDIxNDIiOiJBYmhvbHVuZyBrYW5uIG5pY2h0IGdlYnVjaHQgd2VyZGVuLiBCaXR0ZSBrb250YWt0aWVyZW4gU2llIGRlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAocGlja3VwLWJvb2tpbmcgY29kZTogMjAyMTQyLCBrZWluZSBidWNodW5nc3JlZmVyZW56IHZvcmhhbmRlbikiLCJkY3RfMzQwMDMyIjoiQml0dGUgw6RuZGVybiBTaWUgZGFzIEdld2ljaHQgZGVyIFNlbmR1bmcvIGRlcyBQYWNrc3TDvGNrcy4gIEZhbGxzIFNpZSBkZW5ub2NoIFByb2JsZW1lIGhhYmVuIHVuZCBJaHJlbiBTZW5kdW5nc2F1ZnRyYWcgbmljaHQgdmVydm9sbHN0w6RuZGlnZW4ga8O2bm5lbiwga29udGFrdGllcmVuIFNpZSB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgIDA4MjAtNTUwNTA1LiAgKERDVC0zNDAwMzIpIiwicGlja3VwLWJvb2tpbmdfMjAxMDUzIjoiQWJob2x1bmcga2FubiBuaWNodCBnZWJ1Y2h0IHdlcmRlbi4gIEJpdHRlIGtvbnRha3RpZXJlbiBTaWUgZGVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuICAocGlja3VwLWJvb2tpbmcgY29kZTogMjAxMDUzLCBLZWluZSBVaHJ6ZWl0IGFuZ2VnZWJlbikiLCJwaWNrdXAtYm9va2luZ18yMDIwMjQiOiJBYmhvbHVuZyBrYW5uIG5pY2h0IGdlYnVjaHQgd2VyZGVuLiAgQml0dGUga29udGFrdGllcmVuIFNpZSBkZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gIChwaWNrdXAtYm9va2luZyBjb2RlOiAyMDIwMjQsIEtlaW5lIFNlcnZpY2UgQXJlYSBkZXIgRGVzdGluYXRpb24pIiwiZGN0XzM0MDAzNSI6IkJpdHRlIGdlYmVuIFNpZSBkaWUgTWHDn2VpbmhlaXQgZsO8ciBkaWUgUGFja3N0w7xja21hw59lIGFuLiAgRmFsbHMgU2llIGRlbm5vY2ggUHJvYmxlbWUgaGFiZW4gdW5kIElocmVuIFNlbmR1bmdzYXVmdHJhZyBuaWNodCB2ZXJ2b2xsc3TDpG5kaWdlbiBrw7ZubmVuLCBrb250YWt0aWVyZW4gU2llIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gIChEQ1QtMzQwMDM1KSIsInBpY2t1cC1ib29raW5nXzIwMTA1NiI6IkFiaG9sdW5nIGthbm4gbmljaHQgZ2VidWNodCB3ZXJkZW4uICBCaXR0ZSBrb250YWt0aWVyZW4gU2llIGRlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAgKHBpY2t1cC1ib29raW5nIGNvZGU6IDIwMTA1Niwgbm8gcGlja3VwIHNlcnZpY2UgYXJlYSkiLCJwaWNrdXAtYm9va2luZ18yMDEwNTUiOiJBYmhvbHVuZyBrYW5uIG5pY2h0IGdlYnVjaHQgd2VyZGVuLiAgQml0dGUga29udGFrdGllcmVuIFNpZSBkZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gIChwaWNrdXAtYm9va2luZyBjb2RlOiAyMDEwNTUpIiwicGlja3VwLWJvb2tpbmdfMjAyMDIzIjoiQWJob2x1bmcga2FubiBuaWNodCBnZWJ1Y2h0IHdlcmRlbi4gIFfDpGhsZW4gU2llIGVpbmUgYW5kZXJlIExpZWZlcm9wdGlvbiB1bmQgc3RhcnRlbiBTaWUgZXJuZXV0Li4gQml0dGUga29udGFrdGllcmVuIFNpZSBkZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gIChwaWNrdXAtYm9va2luZyBjb2RlOiAyMDIwMjMsIEtlaW4oZSkgUHJvZHVrdGNvZGUocykpIiwicGlja3VwLWJvb2tpbmdfMjAyMDI1IjoiQWJob2x1bmcga2FubiBuaWNodCBnZWJ1Y2h0IHdlcmRlbi4gQml0dGUga29udGFrdGllcmVuIFNpZSBkZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gKHBpY2t1cC1ib29raW5nIGNvZGU6IDIwMjAyNSwga2VpbmUgZW1wZmFuZ3NnZWLDpHVkZSBhbmdlZ2ViZW4pIiwiY3VzdG9tZXItYWNjb3VudC1zZXJ2aWNlX2RlZmF1bHQtZXJyb3IiOiJFaW4gRmVobGVyIGlzdCBhdWZnZXRyZXRlbi4gRmFsbHMgd2VpdGVyaGluIFByb2JsZW1lIGJlc3RlaGVuLCB3ZW5kZW4gU2llIHNpY2ggYW4gdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAoY3VzdG9tZXItYWNjb3VudC1zZXJ2aWNlLWRlZiwgVW5iZWthbm50ZXIgRmVobGVyKSIsImdsc18wMTAxIjoiRWluIEZlaGxlciBpc3QgYXVmZ2V0cmV0ZW4uICBGYWxscyB3ZWl0ZXJoaW4gUHJvYmxlbWUgYmVzdGVoZW4sIHdlbmRlbiBTaWUgc2ljaCBhbiB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuICAoR0xTLTAxMDEsIFVuYmVrYW5udGVyIEZlaGxlcikiLCJnbHNfMDEwMiI6IkVpbiBGZWhsZXIgaXN0IGF1ZmdldHJldGVuLiAgRmFsbHMgd2VpdGVyaGluIFByb2JsZW1lIGJlc3RlaGVuLCB3ZW5kZW4gU2llIHNpY2ggYW4gdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAgKEdMUy0wMTAyLCBVbmJla2FubnRlciBGZWhsZXIpIiwiZGN0XzUxMDAiOiJGw7xyIElocmUgQXVzd2FobCBzaW5kIGtlaW5lIExpZWZlcm9wdGlvbmVuIG3DtmdsaWNoLi4gIEZhbGxzIFNpZSBkZW5ub2NoIFByb2JsZW1lIGhhYmVuIHVuZCBJaHJlbiBTZW5kdW5nc2F1ZnRyYWcgbmljaHQgdmVydm9sbHN0w6RuZGlnZW4ga8O2bm5lbiwga29udGFrdGllcmVuIFNpZSB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuICAoRENULTUxMDAsIFVuYmVrYW5udGVyIEZlaGxlcikiLCJ1c2VyLW1hbmFnZW1lbnRfZGVmYXVsdC1lcnJvciI6IkVpbiBGZWhsZXIgaXN0IGF1ZmdldHJldGVuLiBGYWxscyB3ZWl0ZXJoaW4gUHJvYmxlbWUgYmVzdGVoZW4sIHdlbmRlbiBTaWUgc2ljaCBhbiB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuICh1c2VyLW1hbmFnZW1lbnQtZGVmLCBVbmJla2FubnRlciBGZWhsZXIpIiwicHJvbW9jb2RlXzEwMDEwMSI6IkVpbiBGZWhsZXIgaXN0IGF1ZmdldHJldGVuLiAgRmFsbHMgd2VpdGVyaGluIFByb2JsZW1lIGJlc3RlaGVuLCB3ZW5kZW4gU2llIHNpY2ggYW4gdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAgKHByb21vIGNvZGU6IDEwMDEwMSwgVW5iZWthbm50ZXIgRmVobGVyKSIsImRjdF81MTEwIjoiT3B0aW9uYWxlciBTZXJ2aWNlIGlzdCBuaWNodCB2ZXJmw7xnYmFyIChEQ1QtNTExMCkiLCJwaWNrdXAtYm9va2luZ18yMDEwNzEiOiJCaXR0ZSBnZWJlbiBTaWUgZGllIFplaXQgYW4sIGFiIGRlciB3aXIgZGllIFNlbmR1bmcgYWJob2xlbiBrw7ZubmVuLiAgRmFsbHMgd2VpdGVyaGluIFByb2JsZW1lIGJlc3RlaGVuLCB3ZW5kZW4gU2llIHNpY2ggYW4gdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAgKHBpY2t1cC1ib29raW5nIGNvZGU6IDIwMTA3MSwgS2VpbiBmcsO8aGVzdG3DtmdsaWNoZXIgQWJob2x6ZWl0cHVua3QgYW5nZWdlYmVuKSIsInByb21vY29kZV8yMDAwMDgiOiJFaW4gRmVobGVyIGlzdCBhdWZnZXRyZXRlbi4gIEZhbGxzIHdlaXRlcmhpbiBQcm9ibGVtZSBiZXN0ZWhlbiwgd2VuZGVuIFNpZSBzaWNoIGFuIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gIChwcm9tbyBjb2RlOiAyMDAwMDgsIFVuYmVrYW5udGVyIEZlaGxlcikiLCJwcm9tb2NvZGVfMjAwMDA3IjoidW5nw7xsdGlnZXIgUmFiYXR0IENvZGUiLCJwaWNrdXAtYm9va2luZ18yMDIwNDQiOiJCaXR0ZSBzdGVsbGVuIFNpZSBkZXIgQW56YWhsIGRlciBQYWNrc3TDvGNrZSB6dXIgVmVyZsO8Z3VuZy4gIEZhbGxzIFNpZSBkZW5ub2NoIFByb2JsZW1lIGhhYmVuIHVuZCBJaHJlbiBTZW5kdW5nc2F1ZnRyYWcgbmljaHQgdmVydm9sbHN0w6RuZGlnZW4ga8O2bm5lbiwga29udGFrdGllcmVuIFNpZSB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuICAoRENULTIwMjA0NCkiLCJwcm9tb2NvZGVfMjAwMDA5IjoidW5nw7xsdGlnZXIgUmFiYXR0IENvZGUiLCJwaWNrdXAtYm9va2luZ18yMDIwNDMiOiJCaXR0ZSB3w6RobGVuIFNpZSBhdXMsIG9iIFNpZSBlaW4gRG9rdW1lbnQgb2RlciBlaW4gUGFrZXQgdmVyc2VuZGVuIHdvbGxlbi4gIEZhbGxzIFNpZSBkZW5ub2NoIFByb2JsZW1lIGhhYmVuIHVuZCBJaHJlbiBTZW5kdW5nc2F1ZnRyYWcgbmljaHQgdmVydm9sbHN0w6RuZGlnZW4ga8O2bm5lbiwga29udGFrdGllcmVuIFNpZSB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuICAocGlja3VwLWJvb2tpbmcgY29kZTogMjAyMDQzLCBubyBwaWVjZSBkZXRhaWwpIiwicGlja3VwLWJvb2tpbmdfMjAyMDQ4IjoiQWJob2x1bmcga2FubiBuaWNodCBnZWJ1Y2h0IHdlcmRlbi4gQml0dGUga29udGFrdGllcmVuIFNpZSBkZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gKHBpY2t1cC1ib29raW5nIGNvZGU6IDIwMjA0OCwga2VpbmUgbmllZGVybGFzc3VuZykiLCJwcm9tb2NvZGVfMjAwMDAyIjoiUHJvbW8gQ29kZSBhYmdlbGF1ZmVuIiwicHJvbW9jb2RlXzIwMDAwMSI6InVuZ8O8bHRpZ2VyIFJhYmF0dCBDb2RlIiwicHJvbW9jb2RlXzIwMDAwNCI6IkRlciByYWJhdHRjb2RlIGthbm4gaW4gdmVyYmluZHVuZyBtaXQgZGllc2VyIGVtcGbDpG5nZXJsYW5kIG5pY2h0IHZlcndlbmRldCB3ZXJkZW4iLCJwcm9tb2NvZGVfMjAwMDAzIjoiRGVyIHJhYmF0dGNvZGUgaGF0IGRpZSBtYXhpbWFsZSBhbnphaGwgYW4gdmVyd2VuZHVuZ2VuIMO8YmVyc2Nocml0dGVuIiwicHJvbW9jb2RlXzIwMDAwNiI6IkRlciByYWJhdHRjb2RlIGthbm4gbWl0IGRlciBhdXNnZXfDpGhsdGVuIGt1bmRlbm51bW1lciBuaWNodCB2ZXJ3ZW5kZXQgd2VyZGVuIiwicHJvbW9jb2RlXzIwMDAwNSI6IkRlciByYWJhdHRjb2RlIGthbm4gaW4gdmVyYmluZHVuZyBtaXQgZGllc2VtIGFic2VuZGVybGFuZCBuaWNodCB2ZXJ3ZW5kZXQgd2VyZGVuIiwiZGN0XzQyMDUwNSI6IkVpbiBGZWhsZXIgaXN0IGF1ZmdldHJldGVuLiAgRmFsbHMgU2llIGRlbm5vY2ggUHJvYmxlbWUgaGFiZW4gdW5kIElocmVuIFNlbmR1bmdzYXVmdHJhZyBuaWNodCB2ZXJ2b2xsc3TDpG5kaWdlbiBrw7ZubmVuLCBrb250YWt0aWVyZW4gU2llIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gIChEQ1QtMzAyMCwgVW5nw7xsdGlnZXIgWmllbG9ydCkiLCJkY3RfNDIwNTA2IjoiQml0dGUgw6RuZGVybiBTaWUgZGllIFBvc3RsZWl0emFobC4gIEZhbGxzIFNpZSBkZW5ub2NoIFByb2JsZW1lIGhhYmVuIHVuZCBJaHJlbiBTZW5kdW5nc2F1ZnRyYWcgbmljaHQgdmVydm9sbHN0w6RuZGlnZW4ga8O2bm5lbiwga29udGFrdGllcmVuIFNpZSB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuICAoRENULTQyMDUwNiwgUG9zdGxlaXR6YWhsIG5pY2h0IGdlZnVuZGVuKSIsImRjdF80MjA1MDMiOiJFaW4gRmVobGVyIGlzdCBhdWZnZXRyZXRlbi4gIEZhbGxzIFNpZSBkZW5ub2NoIFByb2JsZW1lIGhhYmVuIHVuZCBJaHJlbiBTZW5kdW5nc2F1ZnRyYWcgbmljaHQgdmVydm9sbHN0w6RuZGlnZW4ga8O2bm5lbiwga29udGFrdGllcmVuIFNpZSB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuIChEQ1QtNDIwNTAzLCBLZWluIEzDpG5kZXJjb2RlIGbDvHIgUmVjaG51bmdzZW1wZsOkbmdlcikiLCJkY3RfNDIwNTA0IjoiRWluIEZlaGxlciBpc3QgYXVmZ2V0cmV0ZW4uICBGYWxscyBTaWUgZGVubm9jaCBQcm9ibGVtZSBoYWJlbiB1bmQgSWhyZW4gU2VuZHVuZ3NhdWZ0cmFnIG5pY2h0IHZlcnZvbGxzdMOkbmRpZ2VuIGvDtm5uZW4sIGtvbnRha3RpZXJlbiBTaWUgdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAgKERDVC00MjA1MDQsIFVuZ8O8bHRpZ2VyIFVyc3BydW5nc29ydCkiLCJkY3RfMzAyMiI6IkFiaG9sdW5nIGthbm4gZsO8ciBkYXMgdXJzcHJ1bmdzbGFuZC9hYnNlbmRlcmxhbmQgbmljaHQgZ2VidWNodCB3ZXJkZW4uIChEQ1QtMzAyMikiLCJkY3RfMzAyMSI6IkVpbiBGZWhsZXIgaXN0IGF1ZmdldHJldGVuLiAgRmFsbHMgU2llIGRlbm5vY2ggUHJvYmxlbWUgaGFiZW4gdW5kIElocmVuIFNlbmR1bmdzYXVmdHJhZyBuaWNodCB2ZXJ2b2xsc3TDpG5kaWdlbiBrw7ZubmVuLCBrb250YWt0aWVyZW4gU2llIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gIChEQ1QtMzAyMSwgVW5nw7xsdGlnZXIgWmllbG9ydCkiLCJkY3RfMzAyMCI6IkVpbiBGZWhsZXIgaXN0IGF1ZmdldHJldGVuLiAgRmFsbHMgU2llIGRlbm5vY2ggUHJvYmxlbWUgaGFiZW4gdW5kIElocmVuIFNlbmR1bmdzYXVmdHJhZyBuaWNodCB2ZXJ2b2xsc3TDpG5kaWdlbiBrw7ZubmVuLCBrb250YWt0aWVyZW4gU2llIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gIChEQ1QtMzAyMCwgVW5nw7xsdGlnZXIgVXJzcHJ1bmdzb3J0KSIsImRjdF8zMDI2IjoiQml0dGUgc3RlbGxlbiBzaWUgZGllIFBMWiwgU3RhZHQgdW5kL29kZXIgdm9yb3J0IGbDvHIgZGllIGVtZsOkbmdlcmFkcmVzc2UgenVyIHZlcmbDvGd1bmcuIEZhbGxzIFNpZSBkZW5ub2NoIFByb2JsZW1lIGhhYmVuIHVuZCBJaHJlbiBTZW5kdW5nc2F1ZnRyYWcgbmljaHQgdmVydm9sbHN0w6RuZGlnZW4ga8O2bm5lbiwga29udGFrdGllcmVuIFNpZSB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuIChEQ1QtMzAyNikiLCJkY3RfMzAyNSI6IkJpdHRlIHN0ZWxsZW4gc2llIGRpZSBQTFosIFN0YWR0IHVuZC9vZGVyIHZvcm9ydCBmw7xyIGRpZSBhYnNlbmRlcmFkcmVzc2UgenVyIHZlcmbDvGd1bmcuIEZhbGxzIFNpZSBkZW5ub2NoIFByb2JsZW1lIGhhYmVuIHVuZCBJaHJlbiBTZW5kdW5nc2F1ZnRyYWcgbmljaHQgdmVydm9sbHN0w6RuZGlnZW4ga8O2bm5lbiwga29udGFrdGllcmVuIFNpZSB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuIChEQ1QtMzAyNSkiLCJkY3RfMzAyNCI6IkJpdHRlIMOkbmRlcm4gU2llIGRpZSBQb3N0bGVpdHphaGwuICBGYWxscyBTaWUgZGVubm9jaCBQcm9ibGVtZSBoYWJlbiB1bmQgSWhyZW4gU2VuZHVuZ3NhdWZ0cmFnIG5pY2h0IHZlcnZvbGxzdMOkbmRpZ2VuIGvDtm5uZW4sIGtvbnRha3RpZXJlbiBTaWUgdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAgKERDVC0zMDI0LCBQb3N0bGVpdHphaGwgbmljaHQgZ2VmdW5kZW4pIiwiZGN0XzMwMjMiOiJLZWluZSB6dXN0ZWxsb3B0aW9uZW4gZsO8ciBpaHJlIGF1c2dld8OkaGx0ZSBlbXBmw6RuZ2VyYWRyZXNzZSB2ZXJmw7xnYmFyLiAoRENULTMwMjMpIiwicGlja3VwLWJvb2tpbmdfMjAyMDcxIjoiQml0dGUgZ2ViZW4gU2llIGRpZSBaZWl0IGFuLCBhYiBkZXIgd2lyIGRpZSBTZW5kdW5nIGFiaG9sZW4ga8O2bm5lbi4gIEZhbGxzIHdlaXRlcmhpbiBQcm9ibGVtZSBiZXN0ZWhlbiwgd2VuZGVuIFNpZSBzaWNoIGFuIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gIChwaWNrdXAtYm9va2luZyBjb2RlOiAyMDIwNzEsIEtlaW4gZnLDvGhlc3Rtw7ZnbGljaGVyIEFiaG9semVpdHB1bmt0IGFuZ2VnZWJlbikiLCJwaWNrdXAtYm9va2luZ18yMDIwNzAiOiJCaXR0ZSBnZWJlbiBTaWUgZGllIEVuZHplaXQgZGVzIEFiaG9sZmVuc3RlcnMgYW4uICBGYWxscyB3ZWl0ZXJoaW4gUHJvYmxlbWUgYmVzdGVoZW4sIHdlbmRlbiBTaWUgc2ljaCBhbiB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuICAocGlja3VwLWJvb2sgY29kZTogMjAyMDcwLCBLZWluZSBWZXJzYW5kc2NobHVzc3plaXQpIiwicGlja3VwLWJvb2tpbmdfMjAyMDczIjoiQWJob2x1bmcga2FubiBuaWNodCBnZWJ1Y2h0IHdlcmRlbi4gIEJpdHRlIGtvbnRha3RpZXJlbiBTaWUgZGVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuICAocGlja3VwLWJvb2tpbmcgY29kZTogMjAyMDczLCBLZWluIHphaGx1bmdzYmVmw6RoaWd0ZXMgTGFuZCkiLCJwaWNrdXAtYm9va2luZ18yMDIwNzIiOiJBYmhvbHVuZyBrYW5uIG5pY2h0IGdlYnVjaHQgd2VyZGVuLiBCaXR0ZSBrb250YWt0aWVyZW4gU2llIGRlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAocGlja3VwLWJvb2tpbmcgY29kZTogMjAyMDcyLCBrZWluZSB2b3JlaW5nZXN0ZWxsdGUgemFobHVuZ3NhcnQpIiwicGlja3VwLWJvb2tpbmdfMTAwMDAyIjoiQWJob2x1bmcga2FubiBuaWNodCBnZWJ1Y2h0IHdlcmRlbi4gIEJpdHRlIGtvbnRha3RpZXJlbiBTaWUgZGVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuICAocGlja3VwLWJvb2tpbmcgY29kZTogMTAwMDAyKSIsInNoaXBtZW50LXBpZWNlLXJlYWRfMTAyIjoiRWluIEZlaGxlciBpc3QgYXVmZ2V0cmV0ZW4uICBGYWxscyB3ZWl0ZXJoaW4gUHJvYmxlbWUgYmVzdGVoZW4sIHdlbmRlbiBTaWUgc2ljaCBhbiB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuICAoc2hpcG1lbnQtcGllY2UgY29kZTogMTAyLCBVbmJla2FubnRlciBGZWhsZXIpIiwic2hpcG1lbnQtcGllY2UtcmVhZF8xMDMiOiJFaW4gRmVobGVyIGlzdCBhdWZnZXRyZXRlbi4gIEZhbGxzIHdlaXRlcmhpbiBQcm9ibGVtZSBiZXN0ZWhlbiwgd2VuZGVuIFNpZSBzaWNoIGFuIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gIChzaGlwbWVudC1waWVjZSBjb2RlOiAxMDMsIFVuYmVrYW5udGVyIEZlaGxlcikiLCJzaGlwbWVudC1waWVjZS1yZWFkXzEwNCI6IkVpbiBGZWhsZXIgaXN0IGF1ZmdldHJldGVuLiAgRmFsbHMgd2VpdGVyaGluIFByb2JsZW1lIGJlc3RlaGVuLCB3ZW5kZW4gU2llIHNpY2ggYW4gdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAgKHNoaXBtZW50LXBpZWNlIGNvZGU6IDEwNCwgVW5iZWthbm50ZXIgRmVobGVyKSIsInNoaXBtZW50LXBpZWNlLXJlYWRfMTA1IjoiS2VpbmUgU2VuZHVuZyhlbikgZ2VmdW5kZW4uICBGYWxscyB3ZWl0ZXJoaW4gUHJvYmxlbWUgYmVzdGVoZW4sIHdlbmRlbiBTaWUgc2ljaCBhbiB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuICAoc2hpcG1lbnQtcGllY2UgY29kZTogMTA1KSIsImRjdF80MjA1MDEiOiJCaXR0ZSBnZWJlbiBTaWUgZGFzIExhbmQgZGVyIFZlcnNhbmRhZHJlc3NlIGFuLiAgRmFsbHMgU2llIGRlbm5vY2ggUHJvYmxlbWUgaGFiZW4gdW5kIElocmVuIFNlbmR1bmdzYXVmdHJhZyBuaWNodCB2ZXJ2b2xsc3TDpG5kaWdlbiBrw7ZubmVuLCBrb250YWt0aWVyZW4gU2llIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gIChEQ1QtNDIwNTAxLCBLZWluIENvZGUgZsO8ciBVcnNwcnVuZ3NsYW5kKSIsInBpY2t1cC1ib29raW5nXzEwMDAwMSI6IkFiaG9sdW5nIGthbm4gbmljaHQgZ2VidWNodCB3ZXJkZW4uIEJpdHRlIGtvbnRha3RpZXJlbiBTaWUgZGVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuICAocGlja3VwLWJvb2tpbmcgY29kZTogMTAwMDAxKSIsImRjdF80MjA1MDIiOiJCaXR0ZSBnZWJlbiBTaWUgZGFzIExhbmQgZGVyIEVtcGbDpG5nZXJhZHJlc3NlIGFuLiAgRmFsbHMgU2llIGRlbm5vY2ggUHJvYmxlbWUgaGFiZW4gdW5kIElocmVuIFNlbmR1bmdzYXVmdHJhZyBuaWNodCB2ZXJ2b2xsc3TDpG5kaWdlbiBrw7ZubmVuLCBrb250YWt0aWVyZW4gU2llIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gIChEQ1QtNDIwNTAyLCBLZWluIENvZGUgZsO8ciBFbXBmYW5nc2xhbmQpIiwic2hpcG1lbnQtcGllY2UtcmVhZF8xMDAiOiJFaW4gRmVobGVyIGlzdCBhdWZnZXRyZXRlbi4gRmFsbHMgd2VpdGVyaGluIFByb2JsZW1lIGJlc3RlaGVuLCB3ZW5kZW4gU2llIHNpY2ggYW4gdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAoc2hpcG1lbnQtcGllY2UgY29kZTogMTAwLCBVbmJla2FubnRlciBGZWhsZXIpIiwic2hpcG1lbnQtcGllY2UtcmVhZF8xMDEiOiJGcmFjaHRicmllZm51bW1lciBvZGVyIFBpZWNlIElEIHd1cmRlIG5pY2h0IGdlZnVuZGVuLiBGYWxscyB3ZWl0ZXJoaW4gUHJvYmxlbWUgYmVzdGVoZW4sIHdlbmRlbiBTaWUgc2ljaCBhbiB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuIChzaGlwbWVudC1waWVjZSBjb2RlOiAxMDIsIGtlaW5lIGZyYWNodGJyaWVmbnVtbWVyIG9kZXIgcGllY2UgSUQpIiwicHJvbW9jb2RlXzEwMDAwMiI6IkVpbiBGZWhsZXIgaXN0IGF1ZmdldHJldGVuLiAgRmFsbHMgd2VpdGVyaGluIFByb2JsZW1lIGJlc3RlaGVuLCB3ZW5kZW4gU2llIHNpY2ggYW4gdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAgKHByb21vIGNvZGU6IDEwMDAwMiwgVW5iZWthbm50ZXIgRmVobGVyKSIsInNoaXBtZW50LXBpZWNlLXJlYWRfMTA2IjoiS2VpbmUgU2VuZHVuZyhlbikgZ2VmdW5kZW4uICBGYWxscyB3ZWl0ZXJoaW4gUHJvYmxlbWUgYmVzdGVoZW4sIHdlbmRlbiBTaWUgc2ljaCBhbiB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuICAoc2hpcG1lbnQtcGllY2UgY29kZTogMTA2LCBVbmJla2FubnRlciBGZWhsZXIpIiwic2hpcG1lbnQtcGllY2UtcmVhZF8xMDciOiJLZWluZSBTZW5kdW5nKGVuKSBnZWZ1bmRlbi4gIEZhbGxzIHdlaXRlcmhpbiBQcm9ibGVtZSBiZXN0ZWhlbiwgd2VuZGVuIFNpZSBzaWNoIGFuIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gIChzaGlwbWVudC1waWVjZSBjb2RlOiAxMDcsICkiLCJ1c2VyLW1hbmFnZW1lbnRfMTAwMDAxIjoiRWluIEZlaGxlciBpc3QgYXVmZ2V0cmV0ZW4uIEZhbGxzIHdlaXRlcmhpbiBQcm9ibGVtZSBiZXN0ZWhlbiwgd2VuZGVuIFNpZSBzaWNoIGFuIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gKHVzZXItbWFuYWdlbWVudDogMTAwMDAxLCBVbmJla2FubnRlciBGZWhsZXIpIiwic2hpcG1lbnQtcGllY2UtcmVhZF8xMDgiOiJFaW4gRmVobGVyIGlzdCBhdWZnZXRyZXRlbi4gIEZhbGxzIHdlaXRlcmhpbiBQcm9ibGVtZSBiZXN0ZWhlbiwgd2VuZGVuIFNpZSBzaWNoIGFuIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gIChzaGlwbWVudC1waWVjZSBjb2RlOiAxMDgsIFVuYmVrYW5udGVyIEZlaGxlcikiLCJwcm9tb2NvZGVfMTAwMDAxIjoiRWluIEZlaGxlciBpc3QgYXVmZ2V0cmV0ZW4uICBGYWxscyB3ZWl0ZXJoaW4gUHJvYmxlbWUgYmVzdGVoZW4sIHdlbmRlbiBTaWUgc2ljaCBhbiB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuICAocHJvbW8gY29kZTogMTAwMDAxLCBVbmJla2FubnRlciBGZWhsZXIpIiwidXNlci1tYW5hZ2VtZW50XzEwMDAwMiI6IkVpbiBGZWhsZXIgaXN0IGF1ZmdldHJldGVuLiBGYWxscyB3ZWl0ZXJoaW4gUHJvYmxlbWUgYmVzdGVoZW4sIHdlbmRlbiBTaWUgc2ljaCBhbiB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuICh1c2VyLW1hbmFnZW1lbnQ6IDEwMDAwMiwgVW5iZWthbm50ZXIgRmVobGVyKSIsInNoaXBtZW50LXBpZWNlLXJlYWRfMTA5IjoiRWluIEZlaGxlciBpc3QgYXVmZ2V0cmV0ZW4uICBGYWxscyB3ZWl0ZXJoaW4gUHJvYmxlbWUgYmVzdGVoZW4sIHdlbmRlbiBTaWUgc2ljaCBhbiB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuICAoc2hpcG1lbnQtcGllY2UgY29kZTogMTA5LCBVbmJla2FubnRlciBGZWhsZXIpIiwicGlja3VwLWJvb2tpbmdfMjAyMDYyIjoiQWJob2x1bmcga2FubiBuaWNodCBnZWJ1Y2h0IHdlcmRlbi4gIEJpdHRlIGtvbnRha3RpZXJlbiBTaWUgZGVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuICAocGlja3VwLWJvb2tpbmcgY29kZTogMjAyMDYyKSIsInBpY2t1cC1ib29raW5nXzIwMjA2NCI6IkFiaG9sdW5nIGthbm4gbmljaHQgZ2VidWNodCB3ZXJkZW4uIEJpdHRlIGtvbnRha3RpZXJlbiBTaWUgZGVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuIChwaWNrdXAtYm9va2luZyBjb2RlOiAyMDIwNjQsIGtlaW4gYWJob2x0eXApIiwicGlja3VwLWJvb2tpbmdfMjAyMDY3IjoiQml0dGUgZ2ViZW4gU2llIElocmUgU3RhZHQgYW4uIEZhbGxzIHdlaXRlcmhpbiBQcm9ibGVtZSBiZXN0ZWhlbiwgd2VuZGVuIFNpZSBzaWNoIGFuIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gKHBpY2t1cC1ib29raW5nIGNvZGU6IDIwMjA2Nywga2VpbmUgc3RhZHQpIiwic2hpcG1lbnQtcGllY2UtcmVhZF8xMTMiOiJTZW5kdW5nIGthbm4gbmljaHQgYmVhcmJlaXRldCB3ZXJkZW4uICBGYWxscyB3ZWl0ZXJoaW4gUHJvYmxlbWUgYmVzdGVoZW4sIHdlbmRlbiBTaWUgc2ljaCBhbiB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuICAoc2hpcG1lbnQtcGllY2UgY29kZTogMTEzLCBVbmJla2FubnRlciBGZWhsZXIpIiwic2hpcG1lbnQtcGllY2UtcmVhZF8xMTQiOiJTZW5kdW5nIGthbm4gbmljaHQgYmVhcmJlaXRldCB3ZXJkZW4uICBGYWxscyB3ZWl0ZXJoaW4gUHJvYmxlbWUgYmVzdGVoZW4sIHdlbmRlbiBTaWUgc2ljaCBhbiB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuICAoc2hpcG1lbnQtcGllY2UgY29kZTogMTE0LCBVbmJla2FubnRlciBGZWhsZXIpIiwic2hpcG1lbnQtcGllY2UtcmVhZF8xMTUiOiJTZW5kdW5nIGthbm4gbmljaHQgYmVhcmJlaXRldCB3ZXJkZW4uICBGYWxscyB3ZWl0ZXJoaW4gUHJvYmxlbWUgYmVzdGVoZW4sIHdlbmRlbiBTaWUgc2ljaCBhbiB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuICAoc2hpcG1lbnQtcGllY2UgY29kZTogMTE1LCBVbmJla2FubnRlciBGZWhsZXIpIiwic2hpcG1lbnQtcGllY2UtcmVhZF8xMTYiOiJFaW4gRmVobGVyIGlzdCBhdWZnZXRyZXRlbi4gIEZhbGxzIFNpZSBkZW5ub2NoIFByb2JsZW1lIGhhYmVuIHVuZCBJaHJlbiBTZW5kdW5nc2F1ZnRyYWcgbmljaHQgdmVydm9sbHN0w6RuZGlnZW4ga8O2bm5lbiwga29udGFrdGllcmVuIFNpZSB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuICAoc2hpcG1lbnQtcGllY2UgY29kZTogMTE2LCBwaWVjZSBkZXRhaWwgYWxyZWFkeSBleGlzdHMpIiwic2hpcG1lbnQtcGllY2UtcmVhZF8xMTAiOiJFaW4gRmVobGVyIGlzdCBhdWZnZXRyZXRlbi4gIEZhbGxzIHdlaXRlcmhpbiBQcm9ibGVtZSBiZXN0ZWhlbiwgd2VuZGVuIFNpZSBzaWNoIGFuIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gIChzaGlwbWVudC1waWVjZSBjb2RlOiAxMTAsIFVuYmVrYW5udGVyIEZlaGxlcikiLCJzaGlwbWVudC1waWVjZS1yZWFkXzExMSI6IlNlbmR1bmcga2FubiBuaWNodCBiZWFyYmVpdGV0IHdlcmRlbi4gIEZhbGxzIHdlaXRlcmhpbiBQcm9ibGVtZSBiZXN0ZWhlbiwgd2VuZGVuIFNpZSBzaWNoIGFuIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gIChzaGlwbWVudC1waWVjZSBjb2RlOiAxMTEsIFVuYmVrYW5udGVyIEZlaGxlcikiLCJzaGlwbWVudC1waWVjZS1yZWFkXzExMiI6IkVpbiBGZWhsZXIgaXN0IGF1ZmdldHJldGVuLiAgRmFsbHMgd2VpdGVyaGluIFByb2JsZW1lIGJlc3RlaGVuLCB3ZW5kZW4gU2llIHNpY2ggYW4gdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiAgKHNoaXBtZW50LXBpZWNlIGNvZGU6IDExMiwgVW5iZWthbm50ZXIgRmVobGVyKSJ9LCJjcjAwNTciOnsiY3ItbmFtZSI6Ik9wdGlvbmFsIFNlcnZpY2VzIExpc3QiLCJjci1lcnJvcnMtbWF4c2l6ZSI6Ik1heCBzaXplIGVycm9yIiwiY3ItZXJyb3JzLW1pbnNpemUiOiJNaW4gc2l6ZSBlcnJvciJ9LCJjcjAxNzgiOnsiY3ItbmFtZSI6Ikdyb3VwIE1heGltdW0gTnVtYmVyIG9mIFNoaXBtZW50czogRW5hYmxlZCJ9LCJzaGlwbWVudC1kZXRhaWxzIjp7Imdvb2RzLWFuZC1zZXJ2aWNlcy1kYXRhX2Vycm9yX2dzdC1pbnZvaWNlLW51bWJlci1mb3JtYXQiOiJFcmxhdWJ0OiBhbHBoYW51bWVyaXNjaGUgWmVpY2hlbiB1bmQgU29uZGVyemVpY2hlbiAoYXXDn2VyIMKgQCBeIH4pIiwiUlItZG9jdW1lbnRfbGlua19oZWxwLWRlY2lkZS1pZi1pdHMtZG9jdW1lbnQiOiJJY2ggYmVuw7Z0aWdlIEhpbGZlIGJlaSBkZXIgRmVzdGxlZ3VuZywgb2IgbWVpbmUgU2VuZHVuZyBlaW4gRG9rdW1lbnQgaXN0IiwiY3VzdG9tcy1pbnZvaWNlLXByZXZpZXdfc3ViLWhlYWRlcl9zdW1tYXJpemUtY29udGVudCI6IkluaGFsdHNiZXNjaHJlaWJ1bmciLCJMQi1kb2Mtb3ItcGFja2FnZV92YWx1ZS1sYWJlbF9yZXN0cmljdGVkIjoiRWluZ2VzY2hyw6Rua3QiLCJlbGVjdHJvbmljLWV4cG9ydC1maWxsaW5nX2xhYmVsX3NlbmRlci1yZWNlaXZlci1yZWxhdGVkIjoiQWJzZW5kZXIgdW5kIEVtcGbDpG5nZXIgc2luZCB2ZXJ3YW5kdCIsImVsZWN0cm9uaWMtZXhwb3J0LWZpbGxpbmdfbGFiZWxfeWVzIjoiSmEiLCJzaGlwbWVudC10eXBlX2ZpZWxkLXBsYWNlaG9sZGVyX2FkZGl0aW9uYWwtcmVmZXJlbmNlIjoid2VpdGVyZSBSZWZlcmVuemVuIChlcnNjaGVpbmVuIG5pY2h0IGF1ZiBWZXJzYW5kbGFiZWwvRnJhY2h0YnJpZWYpIiwiTEItZG9jLW9yLXBhY2thZ2VfY29sLW5hbWVfc2hpcG1lbnQtdHlwZSI6IlNlbmR1bmdzYXJ0IiwiZ29vZHMtYW5kLXNlcnZpY2VzLWRhdGFfbGFiZWxfZ3N0LWludm9pY2UtZGF0ZSI6IkdTVCBSZWNobnVuZ3NkYXR1bSIsImVsZWN0cm9uaWMtZXhwb3J0LWZpbGxpbmdfbGFiZWxfZWVpLXRocm91Z2gtYWVzLWFja25vd2xlZGdlIjoiVmVyYmluZGxpY2ggYmVzdGVsbGVuIiwiTEItZG9jLW9yLXBhY2thZ2VfYnV0dG9uX2RldGVybWluZS1zaGlwbWVudC10eXBlIjoiTGVnZW4gU2llIGVpbmUgYWxsZ2VtZWluZSBUcmFuc3BvcnRhcnQgZmVzdCIsImN1c3RvbXMtaW52b2ljZS1wcmV2aWV3X3N1Yi1oZWFkZXJfd2hhdC1zaGlwbWVudC12YWx1ZSI6IldpZSBob2NoIGlzdCBkZXIgV2VydCBJaHJlciBTZW5kdW5nPyIsIlJSLXByb2hpYml0ZWQtaXRlbXNfc3ViLWhlYWRlcl9wcm9oaWJpdGVkLWl0ZW0iOiJWZXJib3RlbmUgR8O8dGVyIiwiZWxlY3Ryb25pYy1leHBvcnQtZmlsbGluZ19lcnJvcl90b3RhbC12YWx1ZSI6IsOcYmVyc2NocmVpdGV0IGRlbiBtYXhpbWFsZW4gV2VydCBkZXIgWm9sbHJlY2hudW5nIiwiZWxlY3Ryb25pYy1leHBvcnQtZmlsbGluZ19zZWxlY3Qtb3B0aW9uX3NlbGVjdC1laW4iOiJFSU4gLSBJY2ggaGFiZSBlaW5lIEVtcGxveWVyIElkZW50aWZpY2F0aW9uIE51bWJlciIsInRvb2xiYXJfYnV0dG9uX2RlY2xpbmUiOiJBYmxlaG5lbiIsImVsZWN0cm9uaWMtZXhwb3J0LWZpbGxpbmdfc2VsZWN0LW9wdGlvbl9kb21lc3RpYyI6IklubGFuZCIsIm1hc3Rlci1yZWZlcmVuY2UtbnVtYmVyX3BhcmFncmFwaF9hZGQtbXJuLW5vLWRlY2xhcmVkLXZhbHVlLWNvbmZpZ3VyZWQtb3B0aW9uYWwiOiI8ZGl2IGNsYXNzPVwiZXdmX2RpY3Rpb25hcnlfdmFsdWVcIj5Gw7xyIHpvbGxwZmxpY2h0aWdlIFNlbmR1bmdlbiwgZsO8Z2VuIFNpZSBlaW5lIG9kZXIgbWVocmVyZSBNYXN0ZXIgUmVmZXJlbmNlIE51bWJlcnMgKE1STikgZsO8ciBkaWUgU2VuZHVuZyBoaW56dS4gV2VubiBTaWUgbmljaHQgYmVyZWl0cyBlaW5lIE1STiBoYWJlbiwgbcO8c3NlbiBTaWUgZGllc2UgYmVpIElocmVtIMO2cnRsaWNoZW4gWm9sbGFtdCBiZWFudHJhZ2VuLiBESEwgRXhwcmVzcyBrYW5uIFNpZSBkYWJlaSA8YSBocmVmPVwiaHR0cHM6Ly9kaGwuZGUvZGUvZ2VzY2hhZWZ0c2t1bmRlbi9leHByZXNzL2luZm9zLWtub3dob3cvaGlsZmUtem9sbGFid2lja2x1bmcvZXhwb3J0Lmh0bWwjYWVzXCJcIiB0YXJnZXQ9XCJfYmxhbmtcIj51bnRlcnN0w7x0emVuLjxcL2E+PFwvZGl2PiIsInRvb2xiYXJfbXNnX2Nhbm5vdC1hc3NpZ24td2l0aC1yZXR1cm4tbGFiZWwiOiJTZW5kdW5nZW4gbWl0IGVpbmVtIFJldG91cmUgTGFiZWwga8O2bm5lbiBuaWNodCDDvGJlcnRyYWdlbiB3ZXJkZW4iLCJzaGlwbWVudC10eXBlX2hlYWRlcl9zaGlwbWVudC10eXBlIjoiU2VuZHVuZ3NkZXRhaWxzICIsIm1hc3Rlci1yZWZlcmVuY2UtbnVtYmVyX2hlYWRlcl9zZWN0aW9uLWhlYWRlciI6Ik1hc3RlciBSZWZlcmVuY2UgTnVtYmVyIiwiZWxlY3Ryb25pYy1leHBvcnQtZmlsbGluZ19wYXJhZ3JhcGhfZWVpLWFmdGVyLXN1Ym1pdCI6IiIsImVsZWN0cm9uaWMtZXhwb3J0LWZpbGxpbmdfbGFiZWxfaXMtZGVwYXJ0bWVudC1vZi1zdGF0ZS5pSGVscCI6IkludGVybmF0aW9uYWwgVHJhZmZpYyBpbiBBcm1zIFJlZ3VsYXRpb25zIChJVEFSKSBhcmUgcmVndWxhdGlvbnMgc2V0IGJ5IHRoZSBVbml0ZWQgU3RhdGVzIEdvdmVybm1lbnQgdGhhdCBjb250cm9sIHRoZSBleHBvcnQgYW5kIGltcG9ydCBvZiBkZWZlbnNlLXJlbGF0ZWQgZ29vZHMsIHRlY2hub2xvZ2llcyBhbmQgc2VydmljZXMgb24gdGhlIFVuaXRlZCBTdGF0ZXMgTXVuaXRpb25zIExpc3QgKFVTTUwpLiAgSXRzIHB1cnBvc2UgaXMgdG8gc2FmZWd1YXJkIG5hdGlvbmFsIHNlY3VyaXR5IGFuZCB0byBhZHZhbmNlIFUuUy4gZm9yZWlnbiBwb2xpY3kgb2JqZWN0aXZlcy4iLCJlbGVjdHJvbmljLWV4cG9ydC1maWxsaW5nX2Vycm9yX3NjaGVkdWxlLWItbm90LWZvdW5kIjoiVW5nw7xsdGlnIiwic2hpcG1lbnQtdHlwZV9sYWJlbF9pY21zLXN0LXRvdGFsIjoiSUNNUyBTVCBUb3RhbCIsInNoaXBtZW50LXR5cGVfbGFiZWxfc2VyaWUucHJvbXB0IjoiIiwiTEItZG9jLW9yLXBhY2thZ2VfcGFyYWdyYXBoX3NvbWUtaXRlbXMtbWF5LWJlIjoiTWFuY2hlIEfDvHRlciBrw7ZubmVuIHNvd29obCBEb2t1bWVudCBhbHMgYXVjaCBXYXJlbnNlbmR1bmcgc2Vpbi4gU2llIG3DvHNzZW4gc2ljaCBhdWYgZGllIEVybMOkdXRlcnVuZ2VuIGJlemllaGVuLCB1bSBkaWUgcmljaHRpZ2UgU2VuZHVuZ3NhcnQgZsO8ciBJaHIgUGFja3N0w7xjayBhdXN6dXfDpGhsZW4sIGRhIGRpZXMgSWhyZSBnZXNhbXRlIFRyYW5zcG9ydGFydCDDpG5kZXJuIGthbm4uIiwiZ29vZHMtYW5kLXNlcnZpY2VzLWRhdGFfZXJyb3JfdHJ1Y2stbmFtZS1mb3JtYXQiOiIiLCJzaGlwbWVudC10eXBlX3BhcmFncmFwaF9kZWNsYXJlZC12YWx1ZSI6IlpvbGwvRGVrbGFyaWVydGVyIFdlcnQiLCJzaGlwbWVudC10eXBlX2hlYWRlcl9wcm92aWRlLXRoZS1uZWNlc3Nhcnktbm90YS1maXNjYWwtaW5mb3JtYXRpb24iOiJOb3RhIEZpc2NhbCBJbmZvcm1hdGlvbiIsImVsZWN0cm9uaWMtZXhwb3J0LWZpbGxpbmdfbGlua19mdHItZXhlbXB0aW9ucyI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPjxhIGV3Zi1saWdodGJveD1cImV3Zi1saWdodGJveFwiIGhyZWY9XCIvY29udGVudC9kaGwvYXQvZGUvc2hpcG1lbnQvZm9yZWlnbi10cmFkZS1yZWd1bGF0aW9uLmh0bWxcIiB0YXJnZXQ9XCJsaWdodGJveFwiPkxvb2t1cCBGVFIgQ29kZXM8XC9hPjxcL2Rpdj4iLCJMQi1wcm9oaWJpdGVkLWl0ZW1zX3BhcmFncmFwaF9wcm9oaWJpdGVkLWl0ZW1zLWltcG9ydC1kZXNjcmlwdGlvbiI6IkRpZSBmb2xnZW5kZW4gR8O8dGVyIHNpbmQgZsO8ciBkZW4gSW1wb3J0IG5hY2jCoHtjb3VudHJ5TmFtZX0gYXVzZ2VzY2hsb3NzZW7CoCIsInNoaXBtZW50LXR5cGVfc3ViLWhlYWRlcl9hZGRpdGlvbmFsX2RvY3VtZW50cyI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPkRydWNrZW4gU2llIHdlaXRlcmUgWm9sbGRva3VtZW50ZTxicj5cbjxicj5cbjxhIGV3Zi1saWdodGJveD1cImV3Zi1saWdodGJveFwiIGhyZWY9XCIvY29udGVudC9kaGwvYXQvZGUvc2hpcG1lbnQtc2V0dGluZ3Mvb3JpZ2luX3N0YXRlbWVudC5odG1sXCIgdGFyZ2V0PVwibGlnaHRib3hcIj5WaWV3IERlY2xhcmF0aW9uIGRlZmluaXRpb25zPFwvYT48XC9kaXY+IiwiZ29vZHMtYW5kLXNlcnZpY2VzLWRhdGFfbGFiZWxfaW52b2ljZS1udW1iZXIiOiJSZWNobnVuZ3NudW1tZXIiLCJzaGlwbWVudC10eXBlX3ZhbHVlLWxhYmVsX25vLWV4dGVuZGVkLWxpYWJpbGl0eSI6ImtlaW5lIFRyYW5zcG9ydHZlcnNpY2hlcnVuZyIsImdvb2RzLWFuZC1zZXJ2aWNlcy1kYXRhX3ZhbHVlLWxhYmVsX2RvY3VtZW50LXR5cGUiOiJTZW5kdW5nIEFydCIsImVsZWN0cm9uaWMtZXhwb3J0LWZpbGxpbmdfbGFiZWxfbm8iOiJOZWluIiwic2hpcG1lbnQtdHlwZV9idXR0b25fYWRkLWFub3RoZXItcmVmZXJlbmNlIjoiRWluZSB3ZWl0ZXJlIFJlZmVyZW56IGhpbnp1ZsO8Z2VuIiwiYnItc2VydmljZS10eXBlLWRlZmluaXRpb25zLWhlYWRlcl9jbXMiOiJTZXJ2aWNlIFR5cGUgRGVzY3JpcHRpb25zIChmb3Igc2hpcG1lbnRzIGZyb20gYW5kIHRvIEJyYXppbCkiLCJzaGlwbWVudC10eXBlX2xhYmVsX3Bpbi1zdXJmcmFtYSI6IlBJTiBTdXJmcmFtYSIsInNoaXBtZW50LXR5cGVfZXJyb3JfdG90YWwtZGVjbGFyZWQtbWF4LXZhbHVlIjoiTWF4aW1hbCBEZWtsYXJpZXJ0ZXIgV2VydCB7bWF4RGVjbGFyZWRWYWx1ZX0iLCJlbGVjdHJvbmljLWV4cG9ydC1maWxsaW5nX3NlbGVjdC1vcHRpb25fc2VsZWN0LW9uZSI6IkF1c3fDpGhsZW4gIiwiZ29vZHMtYW5kLXNlcnZpY2VzLWRhdGFfbGFiZWxfaW52b2ljZS1kYXRlIjoiUmVjaG51bmdzZGF0dW0iLCJMQi1kb2Mtb3ItcGFja2FnZV9lcnJvcl9yZXN0cmljdGlvbi13YXJuaW5nIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+PGRpdiBjbGFzcz0ibWVzc2FnZS13cmFwcGVyIj48cD5BdWZncnVuZCB2b24gSGFuZGVsc2VpbnNjaHLDpG5rdW5nZW4sIFNlcnZpY2ViZXJlaXRzY2hhZnQgb2RlciBWZXJzYW5kYmVzdGltbXVuZ2VuLCBrYW5uIGVpbmUgb2RlciBtZWhyZXJlIGRlciBhdXNnZXfDpGhsdGVuIEfDvHRlciBuaWNodCB2ZXJzZW5kZXQgd2VyZGVuLjxcL3A+XG48cD7CoDxcL3A+XG48cD5Gw7xyIEVybMOkdXRlcnVuZ2VuIGJlesO8Z2xpY2ggbmljaHQgYWxsZ2VtZWluIHp1Z2VsYXNzZW5lciBHZWdlbnN0w6RuZGUga29udGFrdGllcmVuIFNpZSBiaXR0ZSBkZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS48XC9wPlxuPFwvZGl2PjxcL2Rpdj4iLCJMQi1wcm9oaWJpdGVkLWl0ZW1zX2hlYWRlcl9wcm9oaWJpdGVkLWl0ZW1zIjoiVmVyYm90ZW5lIEfDvHRlciIsInNoaXBtZW50LXR5cGVfbGFiZWxfbm90YS1maXNjYWwtbnVtYmVyLnByb21wdCI6IiIsImVsZWN0cm9uaWMtZXhwb3J0LWZpbGxpbmdfcGFyYWdyYXBoX2VlaS10by1zdWJtaXQiOiJCZXNjaHJlaWJlbiBTaWUgamVkZSBXYXJlIElocmVyIFNlbmR1bmcgc2VwYXJhdCIsInNoaXBtZW50LXR5cGVfbGFiZWxfc3VtbWFyaXplLXNoaXBtZW50IjoiSW5oYWx0c2Jlc2NocmVpYnVuZyIsInNhdmUtZm9yLWxhdGVyX3BhcmFncmFwaF9leHBsYW5hdGlvbi10ZXh0IjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+PGRpdiBjbGFzcz0ibWVzc2FnZS13cmFwcGVyIj48cD5XaXIgd29sbGVuIFNpZSBkYXJhbiBlcmlubmVybiwgZGFzcyBTaWUgSWhyZW0gVmVyc2FuZGF1ZnRyYWcgZWluZW4gTmFtZW4gZ2ViZW4uPFwvcD5cbjxwPsKgPFwvcD5cbjxwPldlbm4gU2llIElocmVtIEF1ZnRyYWcga2VpbmVuIE5hbWVuIGdlYmVuLCB2ZXJnZWJlbiB3aXIgZGllc2VtIGVpbmUgdm9yw7xiZXJnZWhlbmRlIElELjxcL3A+XG48cD7CoDxcL3A+XG48cD5JaHIgVmVyc2FuZGF1ZnRyYWcgd2lyZCBnZXNwZWljaGVydCB1bnRlciBcIlZlcndhbHRlblwiPFwvcD5cbjxcL2Rpdj48XC9kaXY+IiwiZ29vZHMtYW5kLXNlcnZpY2VzLWRhdGFfbGFiZWxfc3VwcGx5LWZvci1leHBvcnQiOiJJR1NUIFphaGx1bmciLCJnb29kcy1hbmQtc2VydmljZXMtZGF0YV9sYWJlbF9pbnZvaWNlLW51bWJlci5wcm9tcHQiOiJJaHJlIFJlY2hudW5nc251bW1lciIsImVsZWN0cm9uaWMtZXhwb3J0LWZpbGxpbmdfbGFiZWxfZWVpLWV4cG9ydC1jb2RlIjoiQ29kZSBleHBvcnRpZXJlbiIsIlJSLWRvY3VtZW50X3N1Yi1oZWFkZXJfZG9jdW1lbnQtb3ItcGFja2FnZSI6IlNpZSBzaW5kIHNpY2ggbmljaHQgc2ljaGVyLCBvYiBlcyBzaWNoIHVtIGVpbiBEb2t1bWVudGVuLSBvZGVyIFdhcmVuc2VuZHVuZyBoYW5kZWx0PyIsInNoaXBtZW50LXR5cGVfbGFiZWxfbm90YS1maXNjYWwtbnVtYmVyIjoiTm90YSBGaXNjYWwgTnVtYmVyIiwiTEItaW5zdXJhbmNlLWtleS1mYWN0c19wYXJhZ3JhcGhfc2hpcG1lbnQtdGVybXMtY29uZGl0aW9ucy10ZXh0IjoiIiwiY3VzdG9tcy1pbnZvaWNlLXByZXZpZXdfYnV0dG9uX3VuZG8tY2hhbmdlcyI6IsOEbmRlcnVuZ2VuIHLDvGNrZ8OkbmdpZyIsInNoaXBtZW50LXR5cGVfbGFiZWxfc2VyaWUiOiJTZXJpZSIsInNoaXBtZW50LXR5cGVfZXJyb3JfZG9jdW1lbnQtZGVzY3JpcHRpb24taXMtbm90LWZyb20tdGhlLWxpc3QiOiJEb2t1bWVudGVuYmVzY2hyZWlidW5nIGF1c3fDpGhsZW4iLCJzaGlwbWVudC10eXBlX3N1Yi1oZWFkZXJfdmF0LXRheC1lb3JpLXRpdGxlIjoiIiwic2hpcG1lbnQtdHlwZV9lcnJvcl9kZWNsYXJlZC16ZXJvLXZhbHVlIjoiTXVzcyBncsO2w59lciBzZWluIGFscyAwIiwiTEItZG9jLW9yLXBhY2thZ2Vfc3ViLWhlYWRlcl9iZS1zdXJlLXRvLWNoZWNrLWl0ZW1zIjoiQml0dGUgc3RlbGxlbiBTaWUgc2ljaGVyLCBkYXNzIGFsbGUgSW5oYWx0ZSBJaHJlciBTZW5kdW5nIMO8YmVycHLDvGZ0IHd1cmRlbi4iLCJzaGlwbWVudC10eXBlX2J1dHRvbl91c2Utb3duLWN1c3RvbXMtaW52b2ljZS1kb2N1bWVudCI6IkljaCBicmF1Y2hlIGtlaW5lIFJlY2hudW5nIiwiZ29vZHMtYW5kLXNlcnZpY2VzLWRhdGFfdmFsdWUtbGFiZWxfdHJhbnNwb3J0ZXItaWQiOiJESEwgTGllZmVydW5ncyBJRCIsInNoaXBtZW50LXR5cGVfaW5mby10ZXh0X3VzZS1vd24tY3VzdG9tcy1pbnZvaWNlLXBhY2thZ2UiOiJJY2ggaGFiZSBlaW5lIGF1c2dlZHJ1Y2t0ZSBSZWNobnVuZyIsImVsZWN0cm9uaWMtZXhwb3J0LWZpbGxpbmdfbGFiZWxfYmlzIjoiQklTIChDb250cm9sbGVkIEV4cG9ydCkiLCJMQi1kb2Mtb3ItcGFja2FnZV9jb2wtbmFtZV9pdGVtIjoiV2FyZSIsImVsZWN0cm9uaWMtZXhwb3J0LWZpbGxpbmdfcGFyYWdyYXBoX2VlaS10aHJvdWdoLWFlcyI6IllvdSBoYXZlIGluZGljYXRlZCB0aGF0IHlvdSBhcHByb3ZlZCBhbmQgd2lsbCBmaWxlIHlvdXIgRUVJIHRocm91Z2ggQUVTIHBvc3QtZGVwYXJ0dXJlIChhZnRlciBoYW5kaW5nIG92ZXIgdG8gREhMKS4gIFRoZXJlZm9yZSBESEwgaXMgbm90IHJlc3BvbnNpYmxlIGZvciBwb3N0LWRlcGFydHVyZSBmaWxpbmcuIiwic2hpcG1lbnQtdHlwZV9idXR0b25fcmVtb3ZlIjoiRW50ZmVybmVuIiwidG9vbGJhcl9idXR0b25fYXNzaWduLXRoaXMtc2hpcG1lbnQiOiJTZW5kdW5nc2JlYXJiZWl0dW5nIMO8YmVyZ2ViZW4iLCJzYXZlLWZvci1sYXRlcl9oZWFkZXJfd291bGQteW91LWxpa2UtdG8tc2F2ZS1zaGlwbWVudCI6Ik3DtmNodGVuIFNpZSBkaWVzZW4gVmVyc2FuZGF1ZnRyYWcgc3BlaWNoZXJuPyIsInNoaXBtZW50LXR5cGVfc3ViLWhlYWRlcl9ub3RhLWZpc2NhbC1pbmZvcm1hdGlvbi1kZXNjcmlwdGlvbiI6IlRoZSBCcmF6aWxpYW4gZ292ZXJubWVudCByZXF1aXJlcyBOb3RhIEZpc2NhbCBkZXRhaWxzIGZvciBhbGwgcGFja2FnZSBzaGlwbWVudHMgb3V0IG9mIEJyYXppbC4iLCJzaGlwbWVudC10eXBlX2Vycm9yX3JlZmVyZW5jZS1kb2VzLW5vdC1tYXRjaC1mb3JtYXQiOiJVbmfDvGx0aWdlcyBGb3JtYXQiLCJlbGVjdHJvbmljLWV4cG9ydC1maWxsaW5nX2xhYmVsX2V4cG9ydC1saWNlbnNlLW51bWJlci5pSGVscCI6IjxwPkFuIEV4cG9ydCBMaWNlbnNlIFx1MjAxMyBpc3N1ZWQgYnkgdGhlIFUuUy4gR292ZXJubWVudCwgaXMgcmVxdWlyZWQgZm9yIHRyYW5zZmVyIG9mIGNlcnRhaW4gdGVjaG5vbG9neSwgc29mdHdhcmUsIGFuZCBlcXVpcG1lbnQgdG8gbm9uLVUuUy4gcGVyc29ucyBvciBlbnRpdGllcywgd2hldGhlciB0aGlzIHRyYW5zZmVyIHRha2VzIHBsYWNlIGluc2lkZSBvciBvdXRzaWRlIHRoZSBVbml0ZWQgU3RhdGVzLjxcL3A+XG48cD4mbmJzcDs8XC9wPlxuPHA+QW4gRXhlbXB0aW9uIENsYXVzZSBOdW1iZXIgXHUyMDEzIGFueSBwZXJzb24gd2hvIGludGVuZHMgdG8gZXhwb3J0IGEgZGVmZW5zZSBhcnRpY2xlIG11c3Qgb2J0YWluIHRoZSBhcHByb3ZhbCBvZiB0aGUgRGVmZW5zZSBUcmFkZSBDb250cm9scyBwcmlvciB0byB0aGUgZXhwb3J0IG9yIHRlbXBvcmFyeSBpbXBvcnQsIHVubGVzcyB0aGUgZXhwb3J0IG9yIHRlbXBvcmFyeSBpbXBvcnQgcXVhbGlmaWVzIGZvciBhbiBleGVtcHRpb24uPFwvcD5cbiIsInNoaXBtZW50LXR5cGVfbGFiZWxfdmFsdWUtdG8tZW5zdXJlIjoiV2VsY2hlbiBXZXJ0IHdvbGxlbiBTaWUgdmVyc2ljaGVybj8iLCJMQi1kb2Mtb3ItcGFja2FnZV9wYXJhZ3JhcGhfcmVtYXJrcyI6IiIsImVsZWN0cm9uaWMtZXhwb3J0LWZpbGxpbmdfbGFiZWxfZWVpLWVjY24iOiJFQ0NOIiwic2hpcG1lbnQtZGV0YWlsc19idXR0b25fY3JlYXRlLXJldHVybi1sYWJlbCI6IlJldG91ci1MYWJlbCBlcnN0ZWxsZW4iLCJzaGlwbWVudC10eXBlX2xhYmVsX2ljbXMtc3QtdGF4LWJhc2UiOiJJQ01TIFNUIFRheCBCYXNlIiwiZWxlY3Ryb25pYy1leHBvcnQtZmlsbGluZ19sYWJlbF9lZWktc2NoZWR1bGUtYiI6IlNjaGVkdWxlIEIiLCJlbGVjdHJvbmljLWV4cG9ydC1maWxsaW5nX2xhYmVsX2VlaS1jb21tb2RpdHktb3JpZ2luIjoiV2FyZW5oZXJrdW5mdCIsInNoaXBtZW50LXR5cGVfbGFiZWxfYWRkaXRpb25hbC1yZWZlcmVuY2UiOiI8ZGl2IGNsYXNzPVwiZXdmX2RpY3Rpb25hcnlfdmFsdWVcIj48ZGl2IGNsYXNzPSJtZXNzYWdlLXdyYXBwZXIiPndlaXRlcmUgUmVmZXJlbnplbiAoZXJzY2hlaW5lbiBuaWNodCBhdWYgVmVyc2FuZGxhYmVsL0ZyYWNodGJyaWVmKSA8ZGl2IGNsYXNzPVwiaW5mb1wiPjxkaXY+PHA+U2llIGvDtm5uZW4genVzw6R0emxpY2hlIFJlZmVyZW56ZW4gbnVyIGRhbm4gZWluc2VoZW4sIHdlbm4gU2llIGRpZSBEZXRhaWxzIGVpbmVyIFNlbmR1bmcgaW4gTXlESEwrIGVpbnNlaGVuLiA8XC9wPjxwPkRpZXNlIFJlZmVyZW56ZW4gc2luZCBpbiBrZWluZW0gZGVyIFNlbmR1bmdzZG9rdW1lbnRlIGFiZ2ViaWxkZXQuPFwvcD48XC9kaXY+PFwvZGl2PjxcL2Rpdj48XC9kaXY+IiwiZWxlY3Ryb25pYy1leHBvcnQtZmlsbGluZ19sYWJlbF9lZWktbGljZW5zZS1udW1iZXIiOiJMaWNlbnNlIE51bWJlciIsImVsZWN0cm9uaWMtZXhwb3J0LWZpbGxpbmdfbGFiZWxfZWVpLWRlc2NyaXB0aW9uLnByb21wdCI6IkJlc2NocmVpYmVuIFNpZSBkaWUgV2FyZSIsIlJSLWRvY3VtZW50X3BhcmFncmFwaF9kZWNpZGUtZGltZW5zaW9ucy1kZWNsYXJlZC1hcy1wYWNrYWdlIjoiV3Vzc3RlbiBTaWUsIGRhc3MgamVkZSBLaXN0ZSwgZGVzc2VuIE1hw59lIGdyw7bDn2VyICBhbHMgMHgweDAgY20gaXN0IHVuZCBEb2t1bWVudGUgZW50aMOkbHQsIGFscyBXYXJlbnNlbmR1bmcgZGVrbGFyaWVydCB3ZXJkZW4gbXVzcy4iLCJ0b29sYmFyX2J1dHRvbl9zYXZlLWZvci1sYXRlciI6IlNwZWljaGVybiB1bmQgc3DDpHRlciBiZWFyYmVpdGVuIiwiZWxlY3Ryb25pYy1leHBvcnQtZmlsbGluZ19zZWxlY3Qtb3B0aW9uX3NlbGVjdC1lZWkiOiJFRUkgLSBJY2ggbcO2Y2h0ZSwgZGFzcyBESEwgbWVpbiBFRUkgZmlsaW5nIGFnZW50IGlzdCIsInNoaXBtZW50LXR5cGVfdmFsdWUtbGFiZWxfZWFjaCI6ImplZGUvci9zIiwiZWxlY3Ryb25pYy1leHBvcnQtZmlsbGluZ19hbGVydF91bml0cy1taXNtYXRjaC1yZWNvdW50IjoiREhMIEV4cHJlc3MgdmVyd2VuZGV0IGRpZSBNYcOfZWluaGVpdCBkZXMgVmVyc2VuZGVybGFuZHMgLSBkaWUgTWHDn2VpbmhlaXQgd3VyZGUgYXV0b21hdGlzY2ggZ2XDpG5kZXJ0LiIsInNoaXBtZW50LXR5cGVfbGFiZWxfZXVyIjoiRVVSMSAoRGVjbGFyYXRpb24gU3RhdGVtZW50KSIsInNhdmUtZm9yLWxhdGVyX3BhcmFncmFwaF9jb25maXJtYXRpb24iOiIiLCJnb29kcy1hbmQtc2VydmljZXMtZGF0YV9sYWJlbF9hcHByb3hpbWFsLWRpc3RhbmNlLnByb21wdCI6InVuZ2Vmw6RociBpbiBrbSIsImJyLXNlcnZpY2UtdHlwZS1kZWZpbml0aW9ucy1mb3JtYWxfY21zIjoiVGhlIEZvcm1hbCBJbXBvcnQvRXhwb3J0IHR5cGUgaXMgZm9yIHNhbGVzIGFuZCByZXNhbGUgYW5kIHJlcXVpcmVzIGEgYnJva2VyIGZvciBjdXN0b21zIGNsZWFyYW5jZS4iLCJzaGlwbWVudC10eXBlX2xhYmVsX25hZnRhIjoiTkFGVEEgKERlY2xhcmF0aW9uIFN0YXRlbWVudCkiLCJzaGlwbWVudC10eXBlX3N1Yi1oZWFkZXJfZGVzY3JpYmUtZG9jdW1lbnRzLWVuYWJsZWQiOiI8ZGl2IGNsYXNzPVwiZXdmX2RpY3Rpb25hcnlfdmFsdWVcIj5JaHIgQXJ0aWtlbCBpc3QgbmljaHQgYXVmIGRlciBMaXN0ZT8gWmllaGVuIFNpZSBlaW5lbiBWZXJzYW5kIGFscyBXYXJlbnNlbmR1bmcgaW4gQmV0cmFjaHQuIDxkaXYgY2xhc3M9XCJpbmZvXCI+PGRpdj5EaWUgQmVzY2hyZWlidW5nIElocmVyIERva3VtZW50ZSBtdXNzIGRlbiBMaXN0ZW5vcHRpb25lbiBlbnRzcHJlY2hlbi4gV2VubiBJaHJlIERva3VtZW50ZSBuaWNodCBkZW4gdm9yZ2VnZWJlbmVuIE9wdGlvbmVuIGVudHNwcmVjaGVuLCBtw7xzc2VuIFNpZSBkaWVzZSBtw7ZnbGljaGVyd2Vpc2UgYWxzIFdhcmVuc2VuZHVuZyB2ZXJzZW5kZW4uPFwvZGl2PjxcL2Rpdj48XC9kaXY+IiwidG9vbGJhcl9idXR0b25fcmVhc3NpZ24tc2hpcG1lbnQiOiJTZW5kdW5nIGVybmV1dCDDvGJlcmdlYmVuIiwiTEItZG9jLW9yLXBhY2thZ2VfcGFyYWdyYXBoX3lvdS1hcmUtdW5zdXJlIjoiU29mZXJuIFNpZSBzaWNoIG5pY2h0IHNpY2hlciBzaW5kLCBvYiBlcyBzaWNoIGJlaSBJaHJlciBTZW5kdW5nIHVtIGVpbiBEb2t1bWVudCBvZGVyIGVpbmUgV2FyZSBoYW5kZWx0LCBoZWxmZW4gd2lyIElobmVuIGdlcm5lLiIsImVsZWN0cm9uaWMtZXhwb3J0LWZpbGxpbmdfbGFiZWxfZWVpLWxpY2Vuc2UtdHlwZSI6IkxpemVuenR5cCIsInNoaXBtZW50LXR5cGVfbGFiZWxfY2VydGlmaWNhdGUtb2Ytb3JpZ2luIjoiVXJzcHJ1bmdzc3plcnRpZmlrYXQiLCJzaGlwbWVudC10eXBlX3N1Yi1oZWFkZXJfcGFja2FnZXMiOiJXYXJlbnNlbmR1bmdlbiIsInNoaXBtZW50LXR5cGVfaW5mby10ZXh0X2NyZWF0ZS1jdXN0b21zLWludm9pY2UiOiJNZWluZSBTZW5kdW5nc2luZm9ybWF0aW9uZW4gdmVyd2VuZGVuIiwic2hpcG1lbnQtdHlwZV9oZWFkZXJfcGFja2FnZXMtb25seSI6IldhcmVuc2VuZHVuZyAoem9sbHBmbGljaHRpZykiLCJMQi1wcm9oaWJpdGVkLWl0ZW1zX3BhcmFncmFwaF9wcm9oaWJpdGVkLWl0ZW1zLWV4cG9ydC1kZXNjcmlwdGlvbiI6IkRpZSBmb2xnZW5kZW4gR2VnZW5zdMOkbmRlIGTDvHJmZW4gbmljaHQgZXhwb3J0aWVydCB3ZXJkZW4gbmFjaCB7Y291bnRyeU5hbWV9IiwiYnItc2VydmljZS10eXBlLWRlZmluaXRpb25zLWluZm9ybWFsLWRvY3VtZW50c19jbXMiOiI8ZGl2IGNsYXNzPVwiZXdmX2RpY3Rpb25hcnlfdmFsdWVcIj48ZGl2IGNsYXNzPSJtZXNzYWdlLXdyYXBwZXIiPjx1bD5cbjxsaT5XYXliaWxsIChtdXN0IGluY2x1ZGUgdGhlIGltcG9ydGVyXHUyMDE5cyBDTlBKL1RBWCBJRCkgXHUyMDEzwqAgV3JpdHRlbiA8Yj5DT01NRVJDSUFMIFBVUlBPU0U8XC9iPiBpbiBDb250ZW50IERlc2NyaXB0aW9uLCBpZiBhcHBsaWNhYmxlPFwvbGk+XG48bGk+Rm9yIENvbW1lcmNpYWwgaW52b2ljZSwgaW4gY2FzZSBvZiBjb21tZXJjaWFsIHByb3Bvc2FsIG11c3QgaW5mb3JtIDxiPlNISVBQSU5HIENPU1Q8XC9iPiBhbmTCoDxiPkhBUk1PTklaRUQgU1lTVEVNIENPREU8XC9iPjxcL2xpPlxuPFwvdWw+XG48XC9kaXY+PFwvZGl2PiIsIlJSLWRvY3VtZW50X3BhcmFncmFwaF9pdGVtLW5vdC1kb2N1bWVudCI6IlZpZWxlIEfDvHRlciwgZGllIFNpZSBhbHMgRG9rdW1lbnRlbnNlbmR1bmcgYW5zZWhlbiwgesOkaGxlbiBuaWNodCBhbHMgRG9rdW1lbnQgLSDDnGJlcnByw7xmZW4gU2llIGRpZXMsIGJldm9yIFNpZSBkZW4gVmVyc2FuZGF1ZnRyYWcgYWJzY2hsaWXDn2VuLiAiLCJ0b29sYmFyX2J1dHRvbl9jYW5jZWwiOiJhYmJyZWNoZW4iLCJMQi1pbnN1cmFuY2Uta2V5LWZhY3RzX3BhcmFncmFwaF9oaXBtZW50LXJlYWQtYW5kLWFjY2VwdCI6IkJpdHRlIGxlc2VuIFNpZSBzaWNoIGRpZXNlIEZha3RlbiBkdXJjaCB1bmQgQWt6ZXB0aWVyZW4gU2llIHVtIGZvcnR6dWZhaHJlbi4iLCJnb29kcy1hbmQtc2VydmljZXMtZGF0YV9lcnJvcl9oc24tY29kZS1mb3JtYXQiOiJXYXJlbnRhcmlmbnVtbWVyIHNvbGx0ZSBudXIgWmFobGVuIGVudGhhbHRlbiwgMiBiaXMgNCBzdGVsbGlnZSBOdW1tZXIiLCJtYXN0ZXItcmVmZXJlbmNlLW51bWJlcl9tc2dfbXJuLWlzLW9wdGlvbmFsIjoiVmVybWVpZGVuIFNpZSBWZXJ6w7ZnZXJ1bmdlbiBiZWkgZGVyIFpvbGxhYmZlcnRpZ3VuZywgaW5kZW0gU2llIGpldHp0IGRpZSBNYXN0ZXIgUmVmZXJlbmNlIE51bWJlciAoTVJOKSBoaW56dWbDvGdlbi4gQmVpIFNlbmR1bmdlbiBvaG5lIGVpbmUgTVJOIGthbm4gZXMgenUgVmVyesO2Z2VydW5nZW4ga29tbWVuLsKgIiwiUlItZG9jdW1lbnRfc3ViLWhlYWRlcl9pcy1pdC1kb2N1bWVudCI6IkhhbmRlbHQgZXMgc2ljaCB1bSBlaW4gRG9rdW1lbnQ/IiwiZWxlY3Ryb25pYy1leHBvcnQtZmlsbGluZ19idXR0b25fYWRkLWFub3RoZXItaXRlbSI6IldlaXRlcmUgaGluenVmw7xnZW4iLCJlbGVjdHJvbmljLWV4cG9ydC1maWxsaW5nX2xhYmVsX2l0biI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPkludGVybmFsIFRyYW5zYWN0aW9uIE51bWJlciAoSVROKSA8YSBld2YtbGlnaHRib3g9XCJld2YtbGlnaHRib3hcIiBocmVmPVwiL2NvbnRlbnQvZGhsL2F0L2RlL3NoaXBtZW50L2l0bi5odG1sXCIgdGFyZ2V0PVwibGlnaHRib3hcIj5XYXMgaXN0IGVpbmUgSVROPyBXYXMgaXN0IGVpbiBFeHBvcnRoYWZlbj88XC9hPjxcL2Rpdj4iLCJzaGlwbWVudC10eXBlX3BhcmFncmFwaF9leHRlbmRlZC1saWFiaWxpdHkiOiI8ZGl2IGNsYXNzPVwiZXdmX2RpY3Rpb25hcnlfdmFsdWVcIj5WZXJnZXNzZW4gU2llIG5pY2h0IElocmUgU2VuZHVuZyB6dSB2ZXJzaWNoZXJuIC0gSWhyZSBTZW5kdW5nIGlzdCBmw7xyIHVucyBnZW5hdXNvIHdpY2h0aWcgd2llIGbDvHIgU2llISA8YSBld2YtbGlnaHRib3g9XCJld2YtbGlnaHRib3hcIiBocmVmPVwiL2NvbnRlbnQvZGhsL2F0L2RlL3NoaXBtZW50L3NoaXBtZW50LXByb3RlY3Rpb24tb3B0aW9ucy5odG1sXCIgdGFyZ2V0PVwibGlnaHRib3hcIj5FcmZhaHJlbiBTaWUgbWVociDDvGJlciB1bnNlcmUgTcO2Z2xpY2hrZWl0ZW4gSWhyZSBTZW5kdW5nIHp1IHZlcnNpY2hlcm48XC9hPi48XC9kaXY+Iiwic2hpcG1lbnQtdHlwZV92YWx1ZS1sYWJlbF9uby1pbnN1cmFuY2UiOiJrZWluZSBUcmFuc3BvcnR2ZXJzaWNoZXJ1bmciLCJnb29kcy1hbmQtc2VydmljZXMtZGF0YV92YWx1ZS1sYWJlbF9nc3Rpbi1vZi1yZWNlaXBpZW50IjoiRW1wZsOkbmdlciBHU1QvUEFOL0FhZGhhYXIgTnVtbWVyIiwic2hpcG1lbnQtdHlwZV9sYWJlbF9uZi10b3RhbC12YWx1ZSI6Ik5GIFRvdGFsIFZhbHVlIiwiTEItaW5jb21wbGV0ZS1lbmhhbmNlZC1pbnZvaWNlX2J1dHRvbl9vayI6Im9rIiwic2hpcG1lbnQtdHlwZV9wYXJhZ3JhcGhfdmF0LXRheC1lb3JpLXRleHQiOiJUaGVzZSBudW1iZXJzIGFyZSByZXF1aXJlZCB3aXRoIHRoaXMgc2hpcG1lbnQuIiwic2F2ZS1mb3ItbGF0ZXJfcGFyYWdyYXBoX2NvbmZpcm1hdGlvbi1tZXNzYWdlIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+PGRpdiBjbGFzcz0ibWVzc2FnZS13cmFwcGVyIj48cD48Yj5XSUNIVElHITxcL2I+IFNpZSBzcGVpY2hlcm4gZGllc2UgU2VuZHVuZyBzbyB3aWUgc2llIGlzdDo8XC9wPjx1bD48bGk+U2llIGvDtm5uZW4gZGllIEF1ZnRyYWdzenV3ZWlzdW5nIHNww6R0ZXIgd2VpdGVyYmVhcmJlaXRlbjxcL2xpPjxsaT5EaWUgRW1wZmFuZ3NhZHJlc3NlIG9kZXIgZGVyIEF1ZnRyYWdzdmVydm9sbHN0w6RuZGlnZXIga8O2bm5lbiBuaWNodCBtZWhyIGdlw6RuZGVydCB3ZXJkZW4uPFwvbGk+PFwvdWw+PFwvZGl2PjxcL2Rpdj4iLCJzaGlwbWVudC10eXBlX2FsZXJ0X2hvbGQtc2hpcG1lbnQiOiJFbnRzY2h1bGRpZ2VuIFNpZSAtIGVzIGlzdCBlaW4gRmVobGVyIGF1ZmdldHJldGVuIHVuZCB1bnNlciBTeXN0ZW0ga2FubiBrZWluZSBCZW5hY2hyaWNodGlndW5nZW4gZsO8ciBkaWVzZSBTZW5kdW5nIHZlcnNjaGlja2VuIHdlZGVyIGFuIFNpZSBub2NoIGFuIElocmUgS29udGFrdGUuIiwic2F2ZS1mb3ItbGF0ZXJfYWxlcnRfZHVwbGljYXRlZC1uYW1lIjoiTmFtZSBiZXJlaXRzIHZlcmdlYmVuIiwiZWxlY3Ryb25pYy1leHBvcnQtZmlsbGluZ19wYXJhZ3JhcGhfZWVpLWNvbnRpbnVpbmciOiJXZW5uIFNpZSBmb3J0ZmFocmVuLCB3w6RobGVuIFNpZSBESEwgYWxzIElocmVuIEVFSSBmaWxpbmcgYWdlbnQgbWl0IEFFU0RpcmVjdCBmw7xyIGplZGUgV2FyZSBpbiBJaHJlciBTZW5kdW5nIG1pdCBlaW5lbSBXZXJ0IHZvbiDDvGJlciAyLjUwMCBVUy1Eb2xsYXIgYXVzLiBTb2JhbGQgU2llIElociBWZXJzYW5kbGFiZWwgYXVzZ2Vmw7xsbHQgaGFiZW4sIMO8YmVybmVobWVuIHdpciBmw7xyIFNpZSBkaWUgd2VpdGVyZSBCZWFyYmVpdHVuZyBkZXMgRUVJLVByb3plc3MuIFNpZSBtw7xzc2VuIG5pY2h0IGF1ZiBlaW5lIElUTiB3YXJ0ZW4gb2RlciBkaWVzZSBJaHJlbSBWZXJzYW5kbGFiZWwgaGluenVmw7xnZW4uIiwic2hpcG1lbnQtdHlwZV9sYWJlbF9pY21zLXRvdGFsIjoiSUNNUyBUb3RhbCIsImVsZWN0cm9uaWMtZXhwb3J0LWZpbGxpbmdfbGFiZWxfZWVpLXNjaGVkdWxlLWIucHJvbXB0IjoiMDAwIiwic2hpcG1lbnQtdHlwZV9sYWJlbF9zdW1tYXJpemUtc2hpcG1lbnQucHJvbXB0IjoiRGF6dSBnZWjDtnJlbiBCw7xyb21hdGVyaWFsLCBBdXRvdGVpbGUsIEtsZWlkdW5nLCBldGMuIiwic2hpcG1lbnQtdHlwZV9sYWJlbF9jZm9wIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+Q0ZPUCA8ZGl2IGNsYXNzPVwiaW5mb1wiPjxkaXY+Q29kZSB1c2VkIGJ5IEJyYXppbGlhbiBhdXRob3JpdGllcyB0byBkZXNjcmliZSB0aGUgdHlwZSBvZiBidXNpbmVzcyB0cmFuc2FjdGlvbi4gQSBDRk9QIGNvZGUgY29udGFpbnMgaW5mb3JtYXRpb24gb24gdGhlIGdvb2QicyBvcmlnaW4gYW5kIG9wZXJhdGlvbiB0eXBlIChpLmUuIHNhbGVzLCByZXR1cm5zLCBzdG9jayB0cmFuc2ZlcnMgb3Igc2VydmljZXMpLjxcL2Rpdj48XC9kaXY+PFwvZGl2PiIsImVsZWN0cm9uaWMtZXhwb3J0LWZpbGxpbmdfZXJyb3JfdG90YWwtd2VpZ2h0Ijoiw5xiZXJzY2hyZWl0ZXQgZGFzIG1heGltYWxlIFZvbHVtZW5nZXdpY2h0IGRlciBab2xsc2VuZHVuZyIsInNhdmUtZm9yLWxhdGVyX2J1dHRvbl9yZWplY3Qtc2F2ZSI6ImFiYnJlY2hlbiIsInNoaXBtZW50LXR5cGVfbGFiZWxfYWRkaXRpb25hbC1yZWZlcmVuY2UuaUhlbHAiOiI8cD5TaWUga8O2bm5lbiB6dXPDpHR6bGljaGUgUmVmZXJlbnplbiBudXIgZGFubiBlaW5zZWhlbiwgd2VubiBTaWUgZGllIERldGFpbHMgZWluZXIgU2VuZHVuZyBpbiAke2JyYW5kfSBlaW5zZWhlbi4gPFwvcD48cD5EaWVzZSBSZWZlcmVuemVuIHNpbmQgaW4ga2VpbmVtIGRlciBTZW5kdW5nc2Rva3VtZW50ZSBhYmdlYmlsZGV0LjxcL3A+IiwiZWxlY3Ryb25pYy1leHBvcnQtZmlsbGluZ19zZWxlY3Qtb3B0aW9uX2Z0ci1zZWxlY3Qtb25lIjoiQXVzd8OkaGxlbiAiLCJici1zZXJ2aWNlLXR5cGUtZGVmaW5pdGlvbnMtaW5mb3JtYWxfY21zIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+SW5mb3JtYWwgKGNvdXJpZXIpIHNlcnZpY2UgaXMgZm9yIHNoaXBtZW50cyB3aXRoIGEgQ0lQL0NJRjxhPiA8XC9hPjxiPnZhbHVlIHVwIHRvIDNLIFVTRMKgPFwvYj5hbmQgZ29vZHMgdGhhdCBhcmUgZm9yIHJlc2FsZSBhcHBsaWVzIGEgbGltaXQgb2bCoDxiPjEwMEsgVVNEPFwvYj7CoHBlciB5ZWFyLjxcL2Rpdj4iLCJnb29kcy1hbmQtc2VydmljZXMtZGF0YV9sYWJlbF9oc24tY29kZSI6IldhcmVudGFyaWZudW1tZXIgKEhTTiksIE51ciBlaW5lIE51bW1lciB3aXJkIGJlbsO2dGlndCIsImdvb2RzLWFuZC1zZXJ2aWNlcy1kYXRhX2xhYmVsX2dzdC1pbnZvaWNlLW51bWJlci5wcm9tcHQiOiJOdW1tZXIgdm9uIGRlciBHU1QgV2Vic2VpdGUiLCJzaGlwbWVudC10eXBlX3N1Yi1oZWFkZXJfZGVzY3JpYmUtZG9jdW1lbnRzLWRpc2FibGVkIjoiIiwiZ29vZHMtYW5kLXNlcnZpY2VzLWRhdGFfZXJyb3JfaW52b2ljZS1udW1iZXItYXQtbGVhc3Qtb25lIjoiUmVjaG51bmdzbnVtbWVyIEVyZm9yZGVybGljaCIsImVsZWN0cm9uaWMtZXhwb3J0LWZpbGxpbmdfZXJyb3JfaW52YWxpZC1lY2NuIjoiIiwic2hpcG1lbnQtdHlwZV9sYWJlbF9wcmVmZXJlbnRpYWwtb3JpZ2luLWRlY2xhcmF0aW9uIjoiRHJ1Y2tlbiBCZXZvcnp1Z3RlIEhlcmt1bmZ0IEVya2zDpHJ1bmciLCJzaGlwbWVudC10eXBlX2xhYmVsX2FkZGl0aW9uYWxfaW5mby5wcm9tcHQiOiJ3ZWl0ZXJlIEluZm8gaGluenVmw7xnZW4iLCJzaGlwbWVudC10eXBlX2xhYmVsX2Rlc2NyaWJlLWRvY3VtZW50cy5wcm9tcHQiOiJXaWUgei5CLiByZWNodGxpY2hlLCBmaW5hbnppZWxsZSBvZGVyIGdlc2Now6RmdGxpY2hlIERva3VtZW50ZSIsImVsZWN0cm9uaWMtZXhwb3J0LWZpbGxpbmdfdmFsdWUtbGFiZWxfdG90YWwtbmV0LXdlaWdodCI6Ikdlc2FtdGdld2ljaHQgbmV0dG8iLCJzaGlwbWVudC10eXBlX3N1Yi1oZWFkZXJfYWRkLXJlZmVyZW5jZSI6IlNlbmR1bmdzcmVmZXJlbnogaGluenVmw7xnZW4iLCJtYXN0ZXItcmVmZXJlbmNlLW51bWJlcl9wYXJhZ3JhcGhfYWRkLW1ybi1tYW5kYXRvcnkiOiI8ZGl2IGNsYXNzPVwiZXdmX2RpY3Rpb25hcnlfdmFsdWVcIj5CZWkgem9sbHBmbGljaHRpZ2VuIFNlbmR1bmdlbiDDvGJlciB7bXJuUHJpY2VWYWx1ZX17bXJuUHJpY2VDdXJyZW5jeX0sIGbDvGdlbiBTaWUgZWluZSBvZGVyIG1laHJlcmUgTWFzdGVyIFJlZmVyZW5jZSBOdW1iZXJzIChNUk4pIGbDvHIgZGllIFNlbmR1bmcgaGluenUuIFdlbm4gU2llIG5pY2h0IGJlcmVpdHMgZWluZSBNUk4gaGFiZW4sIG3DvHNzZW4gU2llIGRpZXNlIGJlaSBJaHJlbSDDtnJ0bGljaGVuIFpvbGxhbXQgYmVhbnRyYWdlbi4gREhMIEV4cHJlc3Mga2FubiBTaWUgZGFiZWkgPGEgaHJlZj1cImh0dHBzOi8vZGhsLmRlL2RlL2dlc2NoYWVmdHNrdW5kZW4vZXhwcmVzcy9pbmZvcy1rbm93aG93L2hpbGZlLXpvbGxhYndpY2tsdW5nL2V4cG9ydC5odG1sI2Flc1wiXCIgdGFyZ2V0PVwiX2JsYW5rXCI+dW50ZXJzdMO8dHplbi48XC9hPjxcL2Rpdj4iLCJSUi1wcm9oaWJpdGVkLWl0ZW1zX2xpbmtfdmlldy1hbGwiOiJMaXN0ZSB2ZXJib3RlbmVyIEfDvHRlciIsIkxCLWRvYy1vci1wYWNrYWdlX3N1Yi1oZWFkZXJfc2VsZWN0LWFuZC1hcHBseSI6IlfDpGhsZW4gU2llIGRpZSBHw7x0ZXIgYXVzLCBkaWUgaW4gSWhyZXIgU2VuZHVuZyBlbnRoYWx0ZW4gc2luZCIsInNlcnZpY2UtdHlwZV9idXR0b25fZm9ybWFsIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+Rm9ybWFsPGJyPlxuPFwvZGl2PiIsInNoaXBtZW50LXR5cGVfc2VsZWN0LW9wdGlvbl9zZWxlY3Qtb25lIjoiQXVzd8OkaGxlbiAiLCJzaGlwbWVudC10eXBlX2luZm8tdGV4dF9kb2N1bWVudHMiOiJEb2t1bWVudGVuc2VuZHVuZ2VuIHVtZmFzc2VuIHJlY2h0bGljaGUsIGZpbmFuemllbGxlIHVuZCBnZXNjaMOkZnRsaWNoZSBEb2t1bWVudGUuIEFydGlrZWwgbWl0IEdlbGR3ZXJ0IGdlbHRlbiBOSUNIVCBhbHMgRG9rdW1lbnRlbnNlbmR1bmdlbi4iLCJzaGlwbWVudC10eXBlX2xhYmVsX2Rlc2NyaWJlLWRvY3VtZW50cyI6IkluaGFsdHNiZXNjaHJlaWJ1bmciLCJzaGlwbWVudC10eXBlX3BhcmFncmFwaF9leHRlbmRlZC1saWFiaWxpdHktZGV0YWlscyI6IkltIHNlbHRlbmVuIEZhbGwgZGVzIFZlcmx1c3RlcyBJaHJlciBEb2t1bWVudGVuLVNlbmR1bmcgd2lyZCBESEwgU2llIGbDvHIgZGllc2VuIFZlcmx1c3QgbWl0IGRlciBmaXhlbiBTdW1tZSB2b24gNDAwIEVVUiBlbnRzY2jDpGRpZ2VuLiIsInNoaXBtZW50LXR5cGVfbGFiZWxfc2hpcG1lbnQtdmFsdWUiOiJHZXNhbXR3YXJlbndlcnQiLCJzZXJ2aWNlLXR5cGVfaGVhZGVyX3NlcnZpY2UiOiI8ZGl2IGNsYXNzPVwiZXdmX2RpY3Rpb25hcnlfdmFsdWVcIj5TZWxlY3QgdGhlIGN1c3RvbXMgY2xlYXJhbmNlIHNlcnZpY2UgZm9yIHRoaXMgc2hpcG1lbnTCoDxhIGhyZWY9XCIvY29udGVudC9kaGwvYXQvZGUvc2hpcG1lbnQvc2VydmljZS10eXBlLmh0bWxcIiB0YXJnZXQ9XCJsaWdodGJveFwiIGV3Zi1saWdodGJveD1cImV3Zi1saWdodGJveFwiPlZpZXcgRGVmaW5pdGlvbnM8XC9hPjxcL2Rpdj4iLCJnb29kcy1hbmQtc2VydmljZXMtZGF0YV9oZWFkZXJfZ3N0LWRhdGEiOiJJbmRpYSBHb29kcyBhbmQgU2VydmljZXMgVGF4IChHU1QpIERldGFpbHMiLCJlbGVjdHJvbmljLWV4cG9ydC1maWxsaW5nX2xhYmVsX2Z0ci1leGVtcHRpb25zLmlIZWxwIjoiPHA+VGhlIEZvcmVpZ24gVHJhZGUgUmVndWxhdGlvbnMgKEZUUikgbWFuZGF0ZXMgdGhhdCBhbGwgcGVyc29ucyB3aG8gYXJlIHJlcXVpcmVkIHRvIGZpbGUgZXhwb3J0IGluZm9ybWF0aW9uIGRvIHNvIHRocm91Z2ggdGhlIEF1dG9tYXRlZCBFeHBvcnQgU3lzdGVtIChBRVMpIGF0IGEgc3BlY2lmaWVkIHRpbWVmcmFtZSBwcmlvciB0byBleHBvcnQgd2l0aCB0aGUgcmVxdWlzaXRlIHNoaXBtZW50IGRhdGEuPFwvcD5cbjxwPlRoaXMgaW5mb3JtYXRpb24gd2FzIGZvcm1lcmx5IGNhbGxlZCB0aGUgU2hpcHBlciJzIEV4cG9ydCBEZWNsYXJhdGlvbiAoU0VEKSwgYW5kIGl0IGlzIG5vdyByZWZlcnJlZCB0byBhcyBFbGVjdHJvbmljIEV4cG9ydCBJbmZvcm1hdGlvbiAoRUVJKS4gVGhlIEZUUiBmdXJ0aGVyIGltcG9zZXMgY2l2aWwgYW5kIGNyaW1pbmFsIHBlbmFsdGllcyBmb3IgdmlvbGF0aW9ucyBvZiB0aGVzZSByZWd1bGF0aW9ucy48XC9wPlxuPHA+VGhlIHB1cnBvc2Ugb2YgdGhlIEZUUiBpcyB0byBjb2xsZWN0IFUuUy4gZXhwb3J0IHN0YXRpc3RpY2FsIGRhdGEsIGFzIHdlbGwgYXMgdG8gZW5mb3JjZSBVLlMuIGV4cG9ydCBjb250cm9sIGxhd3MuPFwvcD5cbiIsInNoaXBtZW50LXR5cGVfaW5mby10ZXh0X3VzZS1vd24tY3VzdG9tcy1pbnZvaWNlLWRvY3VtZW50IjoiIiwiZ29vZHMtYW5kLXNlcnZpY2VzLWRhdGFfZXJyb3JfYXBwcm94aW1hbC1kaXN0YW5jZS1leGNlZWRlZCI6Ik1heGltYWw6IDMwMDAiLCJzaGlwbWVudC10eXBlX2xhYmVsX2VvcmktbnVtYmVyIjoiRU9SSSBOdW1tZXIiLCJzaGlwbWVudC10eXBlX2Vycm9yX3JlZmVyZW5jZS1kb2VzLW5vdC1tYXRjaCI6IktlaW5lIEVyZ2Vibmlzc2UgZ2VmdW5kZW4uIiwic2hpcG1lbnQtdHlwZV9sYWJlbF9pc3N1ZS1kYXRlIjoiSXNzdWUgRGF0ZSIsInNoaXBtZW50LXR5cGVfYnV0dG9uX3BhY2thZ2VzLWJvbmRlZC10cmFuc2l0IjoiKEJvbmRlZCBUcmFuc2l0KSIsInNoaXBtZW50LXR5cGVfaW5mby10ZXh0X2NoYW5nZS1teS1hcHBseSI6Ilp1c8OkdHpsaWNoZSBLb3N0ZW4ga8O2bm5lbiBhbmZhbGxlbi4iLCJMQi1kb2Mtb3ItcGFja2FnZV92YWx1ZS1sYWJlbF9kZXN0aW5hdGlvbiI6IkVtcGZhbmdzbGFuZCIsImdvb2RzLWFuZC1zZXJ2aWNlcy1kYXRhX2xhYmVsX2dzdC1pbnZvaWNlLW51bWJlciI6IkdTVCBSZWNobnVuZ3NudW1tZXIiLCJzaGlwbWVudC10eXBlX3N1Yi1oZWFkZXJfZGVzY3JpYmUtZG9jdW1lbnRzLWVuYWJsZWQtY3VzdG9tIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+V8OkaGxlbiBTaWUgZWluZSBCZXNjaHJlaWJ1bmcgYXVzIG9kZXIgZ2ViZW4gU2llIGVpbmUgZWlnZW5lIGRldGFpbGllcnRlIEJlc2NocmVpYnVuZyBlaW4uIDxkaXYgY2xhc3M9XCJpbmZvXCI+PGRpdj5XZW5uIFNpZSBJaHJlIERva3VtZW50ZW5iZXNjaHJlaWJ1bmcgbmljaHQgaW4gZGVyIExpc3RlIGZpbmRlbiwga8O2bm5lbiBTaWUgSWhyZSBlaWdlbmUgQmVzY2hyZWlidW5nIGVpbmdlYmVuLjxcL2Rpdj48XC9kaXY+PFwvZGl2PiIsImVsZWN0cm9uaWMtZXhwb3J0LWZpbGxpbmdfbGFiZWxfaXRhciI6IklUQVIgKENvbnRyb2xsZWQgRXhwb3J0KSIsImVsZWN0cm9uaWMtZXhwb3J0LWZpbGxpbmdfcGFyYWdyYXBoX25vdC1jb250cm9sbGVkLWV4cG9ydC10eXBlLW5vLWZpbGUtYXMtZnRyLWV4ZW1wdGlvbiI6IklmIHlvdXIgc2hpcG1lbnQgZG9lcyBub3QgcmVxdWlyZXMgYW4gRUVJLCB0aGVuIGNob29zZSBhIEZvcmVpZ24gVHJhZGUgUmVndWxhdGlvbiAoRlRSKSBleGVtcHRpb24gY29kZSBmb3IgdGhlIGR1dGlhYmxlIHNoaXBtZW50LiIsInNhdmUtZm9yLWxhdGVyX2J1dHRvbl9jb25maXJtLXNhdmUiOiJTcGVpY2hlcm4iLCJzaGlwbWVudC10eXBlX3N1Yi1oZWFkZXJfZG9jdW1lbnRzIjoiRG9rdW1lbnRlbnNlbmR1bmdlbiIsInNoaXBtZW50LXR5cGVfbGFiZWxfY2ZvcC5pSGVscCI6IkNvZGUgdXNlZCBieSBCcmF6aWxpYW4gYXV0aG9yaXRpZXMgdG8gZGVzY3JpYmUgdGhlIHR5cGUgb2YgYnVzaW5lc3MgdHJhbnNhY3Rpb24uIEEgQ0ZPUCBjb2RlIGNvbnRhaW5zIGluZm9ybWF0aW9uIG9uIHRoZSBnb29kInMgb3JpZ2luIGFuZCBvcGVyYXRpb24gdHlwZSAoaS5lLiBzYWxlcywgcmV0dXJucywgc3RvY2sgdHJhbnNmZXJzIG9yIHNlcnZpY2VzKS4iLCJzaGlwbWVudC10eXBlX2hlYWRlcl9kb2N1bWVudHMtb25seSI6IkRva3VtZW50ZSAoTmljaHQgem9sbHBmbGljaHRpZykiLCJzaGlwbWVudC10eXBlX2xhYmVsX25vdGEtZmlzY2FsLWRyb3BfZG93biI6Ik5vdGEgRmlzY2FsIEVsZWN0cm9uaWNhIiwiTEItaW5jb21wbGV0ZS1lbmhhbmNlZC1pbnZvaWNlX2hlYWRlcl9pbmNvbXBsZXRlLWludm9pY2UiOiJJaHJlIFpvbGxyZWNobnVuZyBpc3QgdW52b2xsc3TDpG5kaWciLCJ0b29sYmFyX2J1dHRvbl9nby1iYWNrIjoienVyw7xjayIsImdvb2RzLWFuZC1zZXJ2aWNlcy1kYXRhX3ZhbHVlLWxhYmVsX3NoaXBtZW50LXR5cGUiOiJTZW5kdW5nc2FydCIsIm1hc3Rlci1yZWZlcmVuY2UtbnVtYmVyX2J1dHRvbl9hZGQtYW5vdGhlci1tcm4iOiJjdC5hZGQtYW5vdGhlciIsIkxCLWRvYy1vci1wYWNrYWdlX3ZhbHVlLWxhYmVsX3BhY2thZ2UiOiJTZW5kdW5nIiwic2hpcG1lbnQtdHlwZV9zdWItaGVhZGVyX3BhY2thZ2VzLWN1c3RvbXMtaW52b2ljZS1kZXNjcmlwdGlvbi1vcHRpb25hbCI6IkJyYXVjaGVuIFNpZSBlaW5lIFpvbGxyZWNobnVuZyBmw7xyIGRpZXNlIFNlbmR1bmc/IERITCBrYW5uIGRpZXMgZsO8ciBTaWUgw7xiZXJuZWhtZW4hIiwic2hpcG1lbnQtdHlwZV9sYWJlbF9leHRlbmRlZC1saWFiaWxpdHkiOiJJY2ggbcO2Y2h0ZSBlaW5lIFRyYW5zcG9ydHZlcnNpY2hlcnVuZyBmw7xyIG1laW5lIFNlbmR1bmcgYWJzY2hsaWXDn2VuLiAoRG9rdW1lbnQgRXh0ZW5kZWQgTGlhYmlsaXR5IFNlcnZpY2UpIiwic2hpcG1lbnQtdHlwZV9idXR0b25fY3JlYXRlLWN1c3RvbXMtaW52b2ljZSI6IlpvbGxyZWNobnVuZyBlcnN0ZWxsZW4iLCJlbGVjdHJvbmljLWV4cG9ydC1maWxsaW5nX2Vycm9yX2ludmFsaWQtbGljZW5zZS1udW1iZXIiOiJJbnZhbGlkIExpY2Vuc2UgTnVtYmVyIiwiTEItZG9jLW9yLXBhY2thZ2VfdmFsdWUtbGFiZWxfb3ZlcmFsbC1zaGlwbWVudC10eXBlIjoiQWxsZ2VtZWluZSBWZXJzYW5kYXJ0IiwiZWxlY3Ryb25pYy1leHBvcnQtZmlsbGluZ19hbGVydF9jcml0aWNhbC1kZWNsYXJlZC12YWx1ZS1leGNlZWRlZCI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPjxkaXYgY2xhc3M9Im1lc3NhZ2Utd3JhcHBlciI+PHA+QmVpIHpvbGxwZmxpY2h0aWdlbiBTZW5kdW5nZW4gbWl0IGVpbmVtIFdhcmVud2VydCDDvGJlciAyLjUwMCBVUy1Eb2xsYXIgYW4ge3JlY2VpdmVyQ291bnRyeU5hbWV9IGthbm4gZXMgZXJmb3JkZXJsaWNoIHNlaW4sIGRhc3MgU2llIElocmUgRWxlY3Ryb25pYyBFeHBvcnQgSW5mb3JtYXRpb24gKEVFSSkgZWlucmVpY2hlbiBtw7xzc2VuLiBXZW5uIElocmUgU2VuZHVuZyBkaWVzIGVyZm9yZGVydCwga8O2bm5lbiBTaWUgZWluZSBFRUkgZGlyZWt0IMO8YmVyIDxhIGhyZWY9XCJodHRwczovL2FjZS5jYnAuZGhzLmdvdlwiIHRhcmdldD1cIl9ibGFua1wiPmh0dHBzOi8vYWNlLmNicC5kaHMuZ292PFwvYT4gZWlucmVpY2hlbiwgdW0gZWluZSBJbnRlcm5hbCBUcmFuc2FjdGlvbiBOdW1iZXIgKElUTikgdm9uIGRlciBVUy1SZWdpZXJ1bmcgenUgZXJoYWx0ZW4uIEFsdGVybmF0aXYga2FubiBESEwgZWluZSBFRUkgaW4gSWhyZW0gTmFtZW4gZ2VnZW4gZWluZSB6dXPDpHR6bGljaGUgR2Viw7xociBlaW5yZWljaGVuLjxcL3A+PHA+wqA8XC9wPjxwPldlbm4gSWhyZSBTZW5kdW5nIGtlaW5lIEVFSSBlcmZvcmRlcnQsIHfDpGhsZW4gU2llIGVpbmUgRm9yZWlnbiBUcmFkZSBSZWd1bGF0aW9ucyBBdXNuYWhtZSAoRlRSKSBmw7xyIGRpZSB6b2xscGZsaWNodGlnZSBTZW5kdW5nIGF1cy48XC9wPjxcL2Rpdj48XC9kaXY+IiwiZWxlY3Ryb25pYy1leHBvcnQtZmlsbGluZ19zZWxlY3Qtb3B0aW9uX2ZvcmVpZ24iOiJGb3JlaWduIiwiZ29vZHMtYW5kLXNlcnZpY2VzLWRhdGFfZXJyb3JfaWdzdC1ib25kLXV0LWJvdGgteWVzIjoiUGxlYXNlIHNlbGVjdCBZZXMgZm9yIGVpdGhlciBBZ2FpbnN0IEJvbmQgb3IgVW5kZXJ0YWtpbmcgb3IgU3VwcGx5IGZvciBFeHBvcnQgaXMgb24gUGF5bWVudCBvZiBJR1NULiIsIkxCLWRvYy1vci1wYWNrYWdlX3BhcmFncmFwaF9iZS1zdXJlLXRvLWNoZWNrLWl0ZW1zIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+PGRpdiBjbGFzcz0ibWVzc2FnZS13cmFwcGVyIj48cD5Xw6RocmVuZCBlaW5pZ2UgSW5oYWx0ZSBkZW4gRG9rdW1lbnRlbiB6dWdlb3JkbmV0IHdlcmRlbiwgbcO8c3NlbiBhbmRlcmUgZXZlbnR1ZWxsIG1pdCBkZW0gWm9sbCBhYmdld2lja2VsdCB3ZXJkZW4gdW5kIHNvbWl0IGFscyBXYXJlbnNlbmR1bmcgdmVyc2NoaWNrdCB3ZXJkZW4uPFwvcD5cbjx1bD5cbjxsaT5Tb2JhbGQgZWluIFRlaWwgSWhyZXIgU2VuZHVuZyBkZXIgQXJ0IGVpbmVyIFdhcmVuc2VuZHVuZyBhbmdlaMO2cnQsIHdpcmQgZGllIGdlc2FtdGUgU2VuZHVuZyBhbHMgV2FyZW5zZW5kdW5nIGdlaGFuZGVsdC48XC9saT5cbjxsaT5GYWxscyBTaWUgSGlsZmUgYmVpIGRlciBJZGVudGlmaXppZXJ1bmcgSWhyZXIgU2VuZHVuZ3NhcnQgKFdhcmUvRG9rdW1lbnQpIG9kZXIgYmVpIGRlciBJbmhhbHRzYmVzY2hyZWlidW5nIGJlbsO2dGlnZW4sIGtvbnRha3RpZXJlbiBTaWUgYml0dGUgdW5zZXJlbiBLdW5kZW5zZXJ2aWNlLjxcL2xpPlxuPFwvdWw+XG48XC9kaXY+PFwvZGl2PiIsImVsZWN0cm9uaWMtZXhwb3J0LWZpbGxpbmdfcGFyYWdyYXBoX25vdC1jb250cm9sbGVkLWV4cG9ydC10eXBlLWl0YXIiOiJNb3N0IHNoaXBtZW50cyB1bmRlciB7Y3VycmVuY3l9IHtudW1iZXJ9IGFyZSBmaWxlZCB1bmRlciBGZWRlcmFsIFRyYWRlIFJlZ3VsYXRpb25zIChGVFIpIDMwLjM3KGEpIGV4ZW1wdGlvbi4gV291bGQgeW91IGxpa2UgdG8gZmlsZSB5b3VyIGV4cG9ydCB0aGlzIHdheT8gRHV0aWFibGUgc2hpcG1lbnRzIHdpdGggYSBzaW5nbGUgY29tbW9kaXR5IHZhbHVlIG92ZXIge2N1cnJlbmN5fSB7bnVtYmVyfSBtYXkgcmVxdWlyZSB5b3UgdG8gZmlsZSB5b3VyIEVsZWN0cm9uaWMgRXhwb3J0IEluZm9ybWF0aW9uIChFRUkpLiIsInNlcnZpY2UtdHlwZV92YWx1ZS1sYWJlbF9zZXJ2aWNlLXR5cGUiOiJDdXN0b21zIENsZWFyYW5jZSBTZXJ2aWNlIiwiZm9ybWFsLWVudHJ5LWNsZWFyYW5jZV9jbXMiOiI8ZGl2IGNsYXNzPVwiZXdmX2RpY3Rpb25hcnlfdmFsdWVcIj48Yj5Gb3JtYWwgUmVsZWFzZTo8XC9iPiBTaGlwbWVudHMgdG8gQnJhemlsIG5lZWQgQ3VzdG9tcyBDbGVhcmFuY2U8XC9kaXY+Iiwic2F2ZS1mb3ItbGF0ZXJfbGFiZWxfc2F2ZS1hcyI6IlNwZWljaGVybiB1bnRlciIsImJyLXNlcnZpY2UtdHlwZS1kZWZpbml0aW9ucy1pbnRyb19jbXMiOiI8ZGl2IGNsYXNzPVwiZXdmX2RpY3Rpb25hcnlfdmFsdWVcIj48ZGl2IGNsYXNzPSJtZXNzYWdlLXdyYXBwZXIiPjxwPkFsbCBzaGlwbWVudHMgYXJyaXZpbmcgaW4gQnJhemlsIGFyZSB0aG9yb3VnaGx5IGluc3BlY3RlZCBieSB0aGUgRmVkZXJhbCBDdXN0b21zIFNlcnZpY2UgdGhlIHNoaXBtZW50IHR5cGUgeW91IHNlbGVjdCB3aWxsIGRpcmVjdGx5IGltcGFjdCBjdXN0b21zIGNsZWFyYW5jZSB0aW1lLjxcL3A+XG48cD5Zb3UgY2FuIHNlbmQgeW91ciBzaGlwbWVudHMgdXNpbmcgb25lIG9mIHRoZSBmb2xsb3dpbmc8XC9wPlxuPFwvZGl2PjxcL2Rpdj4iLCJlbGVjdHJvbmljLWV4cG9ydC1maWxsaW5nX2xhYmVsX2V4cG9ydC1saWNlbnNlLW51bWJlciI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPjxkaXYgY2xhc3M9Im1lc3NhZ2Utd3JhcHBlciI+RXhwb3J0IExpY2Vuc2UvRXhjZXB0aW9uL0V4ZW1wdGlvbiBjbGF1c2UgbnVtYmVyIDxkaXYgY2xhc3M9XCJpbmZvXCI+PGRpdj48cD5BbiBFeHBvcnQgTGljZW5zZSBcdTIwMTMgaXNzdWVkIGJ5IHRoZSBVLlMuIEdvdmVybm1lbnQsIGlzIHJlcXVpcmVkIGZvciB0cmFuc2ZlciBvZiBjZXJ0YWluIHRlY2hub2xvZ3ksIHNvZnR3YXJlLCBhbmQgZXF1aXBtZW50IHRvIG5vbi1VLlMuIHBlcnNvbnMgb3IgZW50aXRpZXMsIHdoZXRoZXIgdGhpcyB0cmFuc2ZlciB0YWtlcyBwbGFjZSBpbnNpZGUgb3Igb3V0c2lkZSB0aGUgVW5pdGVkIFN0YXRlcy48XC9wPlxuPHA+wqA8XC9wPlxuPHA+QW4gRXhlbXB0aW9uIENsYXVzZSBOdW1iZXIgXHUyMDEzIGFueSBwZXJzb24gd2hvIGludGVuZHMgdG8gZXhwb3J0IGEgZGVmZW5zZSBhcnRpY2xlIG11c3Qgb2J0YWluIHRoZSBhcHByb3ZhbCBvZiB0aGUgRGVmZW5zZSBUcmFkZSBDb250cm9scyBwcmlvciB0byB0aGUgZXhwb3J0IG9yIHRlbXBvcmFyeSBpbXBvcnQsIHVubGVzcyB0aGUgZXhwb3J0IG9yIHRlbXBvcmFyeSBpbXBvcnQgcXVhbGlmaWVzIGZvciBhbiBleGVtcHRpb24uPFwvcD5cbjxcL2Rpdj48XC9kaXY+PFwvZGl2PjxcL2Rpdj4iLCJlbGVjdHJvbmljLWV4cG9ydC1maWxsaW5nX3NlbGVjdC1vcHRpb25fc2VsZWN0LWZ0ciI6IkZUUiAtIEljaCB3ZXJkZSBlaW5lIEZvcmVpZ24gVHJhZGUgUmVndWxhdGlvbnMgQXVzbmFobWUgbnV0emVuIiwic2hpcG1lbnQtdHlwZV9zdWItaGVhZGVyX3NoaXBtZW50LXZhbHVlIjoiV2llIGhvY2ggaXN0IGRlciBXZXJ0IElocmVyIFNlbmR1bmc/IiwiZ29vZHMtYW5kLXNlcnZpY2VzLWRhdGFfc2VsZWN0LW9wdGlvbl90cmFuc2FjdGlvbi10eXBlLXNlbGVjdC1vbmUiOiJBdXN3w6RobGVuICIsIkxCLWRvYy1vci1wYWNrYWdlX3ZhbHVlLWxhYmVsX2RvY3VtZW50IjoiRG9rdW1lbnQiLCJlbGVjdHJvbmljLWV4cG9ydC1maWxsaW5nX3ZhbHVlLWxhYmVsX3NoaXBtZW50LXZhbHVlIjoiU2VuZHVuZ3N3ZXJ0IiwiZ29vZHMtYW5kLXNlcnZpY2VzLWRhdGFfc2VsZWN0LW9wdGlvbl9zZWxlY3Qtb25lIjoiQXVzd8OkaGxlbiAiLCJMQi1pbnN1cmFuY2Uta2V5LWZhY3RzX2J1dHRvbl9zaGlwbWVudC1hY2NlcHQiOiJJY2ggYWt6ZXB0aWVyZSIsImdvb2RzLWFuZC1zZXJ2aWNlcy1kYXRhX3NlbGVjdC1vcHRpb25fbm8iOiJOZWluIiwiZWxlY3Ryb25pYy1leHBvcnQtZmlsbGluZ19sYWJlbF9uby1maWxlLWFzLWZ0ci1leGVtcHRpb24iOiJOZWluIiwic2hpcG1lbnQtdHlwZV9zdWItaGVhZGVyX25vbi1hY2NvdW50LXVzZS1teS1vd24taW52b2ljZSI6IkJyYXVjaGVuIFNpZSBlaW5lIFpvbGxyZWNobnVuZyBmw7xyIGRpZXNlIFNlbmR1bmcgLSBNeURITCsgaGlsZnQgSWhuZW4gZGFiZWkhIiwiTEItaW5zdXJhbmNlLWtleS1mYWN0c19idXR0b25fc2hpcG1lbnQtZGVjbGluZSI6IkFibGVobmVuIiwiZWxlY3Ryb25pYy1leHBvcnQtZmlsbGluZ19maWVsZC1wbGFjZWhvbGRlcl9leHBvcnQtbGljZW5zZS1udW1iZXItZnRyLXZhbHVlIjoiMTIzLjIyIiwiTEItZG9jLW9yLXBhY2thZ2VfYnV0dG9uX2NvbnRpbnVlLXNoaXBwaW5nIjoiTWl0IGRpZXNlciBUcmFuc3BvcnRhcnQgZsO8ciBWZXJzYW5kIGZvcnRmYWhyZW4gIiwiZ29vZHMtYW5kLXNlcnZpY2VzLWRhdGFfbGFiZWxfdG90YWwtaWdzdC1wYWlkLWluLWluciI6Ikdlc2FtdCAoaW4gSU5SKSIsInNoaXBtZW50LXR5cGVfc3ViLWhlYWRlcl9wYWNrYWdlcy1jdXN0b21zLWludm9pY2UtZGVzY3JpcHRpb24iOiJFaW4ga29tcGxldHRlIHVuZCBwcsOkemlzZSBSZWNobnVuZyAoZXJmb3JkZXJsaWNoIGbDvHIgV2FyZW5zZW5kdW5nZW4pwqBpc3QgZsO8ciBkaWUgWm9sbGFid2lja2x1bmcgdW5hYmRpbmdiYXIuIiwic2hpcG1lbnQtdHlwZV9idXR0b25fY29weSI6IkR1cGxpemllcmVuIiwiYnItc2VydmljZS10eXBlLWRlZmluaXRpb25zLWZvcm1hbC1kb2N1bWVudHNfY21zIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+PGRpdiBjbGFzcz0ibWVzc2FnZS13cmFwcGVyIj48dWw+XG48bGk+V2F5YmlsbCBtdXN0IGluY2x1ZGUgdGhlIHJlY2lwaWVudFx1MjAxOXMgQ05QSi9UQVggSUQgYW5kPGI+wqBGT1JNQUwgSU1QT1JUPFwvYj48XC9saT5cbjxsaT5Db21tZXJjaWFsIGludm9pY2UgYW5kIHBhY2tpbmcgbGlzdCAtwqBvcmlnaW5hbCBjb3B5IHNpZ25lZCBpbiBibHVlIGluayBhbmQgbXVzdCB3cml0ZcKgPGI+U0hJUFBJTkcgQ09TVDxcL2I+wqBhbmTCoDxiPkhBUk1PTklaRUQgU1lTVEVNIENPREU8XC9iPjxcL2xpPlxuPGxpPlByaW9yIGltcG9ydCBsaWNlbnNlIC0gc2hvdWxkIGJlIGFwcHJvdmVkIGJlZm9yZSB0aGUgZGF0ZSBvZiBzaGlwbWVudCB0byB0aGUgZGVzdGluYXRpb24gYWlycG9ydCAoZm9yIHNwZWNpZmljIHByb2R1Y3RzKS4gVGhpcyBsaWNlbnNlIGlzIG9ubHkgbmVjZXNzYXJ5IGlmIHJlcXVpcmVkIGJ5IHRoZSBOQ008XC9saT5cbjxsaT5WYWxpZCBDUEYvQ05QSiBUQVggSUQgLSDCoHRoZSBkb2N1bWVudCBtdXN0IGJlIGR1bHkgcmVnaXN0ZXJlZCBieSBGZWRlcmFsIEN1c3RvbXMgU2VydmljZXM8XC9saT5cbjxcL3VsPlxuPFwvZGl2PjxcL2Rpdj4iLCJlbGVjdHJvbmljLWV4cG9ydC1maWxsaW5nX3BhcmFncmFwaF9ub3QtZGVwYXJ0bWVudC1vZi1zdGF0ZSI6IlNlbmR1bmdlbiB1bnRlciB7Y3VycmVuY3l9IHtudW1iZXJ9IHNpbmQgbm9ybWFsZXJ3ZWlzZSBkZWtsYXJpZXJ0IGFscyBGZWRlcmFsIFRyYWRlIFJlZ3VsYXRpb25zIChGVFIpIDMwLjM3KGEpIEF1c25haG1lbi4gV29sbGVuIFNpZSBJaHJlbiBFeHBvcnQgYXVmIGRpZXNlIFdlaXNlIGRla2xhcmllcmVuPyIsInNoaXBtZW50LXR5cGVfaGVhZGVyX3ZhdC10YXgtZW9yaSI6IlN0ZXVlci9JRCBEZXRhaWxzIiwic2hpcG1lbnQtdHlwZV9sYWJlbF92YXQtdGF4IjoiTXdTdCBHZXNhbXQiLCJzaGlwbWVudC10eXBlX2J1dHRvbl9hZGQtYW5vdGhlci1ub3RhLWZpc2NhbCI6IldlaXRlcmUgaGluenVmw7xnZW4iLCJlbGVjdHJvbmljLWV4cG9ydC1maWxsaW5nX2xpbmtfbG9naW4tdG8tYWVzIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+RXJoYWx0ZW4gU2llIGVpbmUgSVROLCA8YSBocmVmPVwiaHR0cHM6Ly9hY2UuY2JwLmRocy5nb3YvXCIgdGFyZ2V0PVwiX2JsYW5rXCI+bG9naW4gdG8gQUVTPFwvYT48XC9kaXY+IiwiUlItcHJvaGliaXRlZC1pdGVtc19wYXJhZ3JhcGhfcHJvaGliaXRlZC1pdGVtcy1kZXNjcmlwdGlvbiI6IkRlciBWZXJzYW5kIGJlc3RpbW10ZXIgR8O8dGVyIG5hY2gge2NvdW50cnlOYW1lfSBpc3QgdmVyYm90ZW4iLCJlbGVjdHJvbmljLWV4cG9ydC1maWxsaW5nX3ZhbHVlLWxhYmVsX3RvdGFsLXBpZWNlcyI6IkFuemFobCBQYWNrc3TDvGNrZSIsIm1hc3Rlci1yZWZlcmVuY2UtbnVtYmVyLXJvd19idXR0b25fcmVtb3ZlIjoiY3QucmVtb3ZlIiwiZWxlY3Ryb25pYy1leHBvcnQtZmlsbGluZ19zdWItaGVhZGVyX2VsZWN0cm9uaWMtZXhwb3J0LWZpbGxpbmciOiJEaWdpdGFsZSBFeHBvcnRhYmxhZ2UiLCJzaGlwbWVudC10eXBlX3N1Yi1oZWFkZXJfZGVzY3JpYmUtZG9jdW1lbnRzLWVuYWJsZWQtY3VzdG9tLmlIZWxwIjoiV2VubiBTaWUgSWhyZSBEb2t1bWVudGVuYmVzY2hyZWlidW5nIG5pY2h0IGluIGRlciBMaXN0ZSBmaW5kZW4sIGvDtm5uZW4gU2llIElocmUgZWlnZW5lIEJlc2NocmVpYnVuZyBlaW5nZWJlbi4iLCJzaGlwbWVudC10eXBlX2luZm8tdGV4dF9leHRlbmRlZC1saWFiaWxpdHktZGVmYXVsdC1tZXNzYWdlIjoiRGllIERva3VtZW50ZW52ZXJzaWNoZXJ1bmcgd2lyZCBwZXIgU3RhbmRhcmQgYWxsZW4gRG9rdW1lbnRlbnNlbmR1bmdlbiBoaW56dWdlZsO8Z3QuIiwic2hpcG1lbnQtdHlwZV9pbmZvLXRleHRfcGFja2FnZXMtYm9uZGVkLXRyYW5zaXQiOiIiLCJtYXN0ZXItcmVmZXJlbmNlLW51bWJlcl9wYXJhZ3JhcGhfYWRkLW1ybi1vcHRpb25hbCI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPkJlaSB6b2xscGZsaWNodGlnZW4gU2VuZHVuZ2VuIMO8YmVyIHttcm5QcmljZVZhbHVlfXttcm5QcmljZUN1cnJlbmN5fSwgZsO8Z2VuIFNpZSBlaW5lIG9kZXIgbWVocmVyZSBNYXN0ZXIgUmVmZXJlbmNlIE51bWJlcnMgKE1STikgZsO8ciBkaWUgU2VuZHVuZyBoaW56dS4gV2VubiBTaWUgbmljaHQgYmVyZWl0cyBlaW5lIE1STiBoYWJlbiwgbcO8c3NlbiBTaWUgZGllc2UgYmVpIElocmVtIMO2cnRsaWNoZW4gWm9sbGFtdCBiZWFudHJhZ2VuLiBESEwgRXhwcmVzcyBrYW5uIFNpZSBkYWJlacKgPGEgaHJlZj1cImh0dHBzOi8vZGhsLmRlL2RlL2dlc2NoYWVmdHNrdW5kZW4vZXhwcmVzcy9pbmZvcy1rbm93aG93L2hpbGZlLXpvbGxhYndpY2tsdW5nL2V4cG9ydC5odG1sI2Flc1wiXCI+dW50ZXJzdMO8dHplbi48XC9hPjxcL2Rpdj4iLCJnb29kcy1hbmQtc2VydmljZXMtZGF0YV9sYWJlbF9oc24tY29kZS5wcm9tcHQiOiJOdXIgMiBvZGVyIDQgc3RlbGxpZ2UgTnVtbWVyIiwic2hpcG1lbnQtdHlwZV9idXR0b25fdXNlLW93bi1jdXN0b21zLWludm9pY2UtcGFja2FnZSI6IkVpZ2VuZSBab2xscmVjaG51bmcgdmVyd2VuZGVuIiwiZ29vZHMtYW5kLXNlcnZpY2VzLWRhdGFfc2VsZWN0LW9wdGlvbl95ZXMiOiJKYSIsInNoaXBtZW50LXR5cGVfYnV0dG9uX2RvY3VtZW50cyI6IkRva3VtZW50ZW5zZW5kdW5nZW4iLCJzaGlwbWVudC10eXBlX2FsZXJ0X21heGltdW0tbmZlLWVudHJpZXMtcmVhY2hlZCI6Ik1heGltdW0gZXJyZWljaHQiLCJlbGVjdHJvbmljLWV4cG9ydC1maWxsaW5nX2xhYmVsX3llcy1maWxlLWFzLWZ0ci1leGVtcHRpb24iOiJZZXMgXHUyMDEzIGZpbGUgYXMgRlRSIDMwLjM3KGEpIGV4ZW1wdGlvbiIsInNoaXBtZW50LXR5cGVfZmllbGQtcGxhY2Vob2xkZXJfc2Vjb25kYXJ5LXJlZmVyZW5jZSI6IkFkZCBzZWNvbmRhcnkgcmVmZXJlbmNlIiwic2hpcG1lbnQtdHlwZV9wYXJhZ3JhcGhfdmF0LXRheC1lb3JpIjoiIiwiYnItc2VydmljZS10eXBlLWRlZmluaXRpb25zLWZvcm1hbC1kZXRhaWxzX2NtcyI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPjxkaXYgY2xhc3M9Im1lc3NhZ2Utd3JhcHBlciI+PHA+Rm9ybWFsIHNlcnZpY2UgcmVxdWlyZXMgdGhlIGltcG9ydGVyIHJlZ2lzdGVyIHdpdGggdGhlIEZlZGVyYWwgQ3VzdG9tcyBTZXJ2aWNlIChSQURBUikuwqAgRm9yIHNoaXBtZW50cyB0aGF0IGNvbnRhaW46PFwvcD5cbjx1bD5cbjxsaT5Bbnkgc2hpcG1lbnQgd2l0aCA8ZyBjbGFzcz1cImdyXyBncl8zOCBnci1hbGVydCBncl9ncmFtbSBncl9pbmxpbmVfY2FyZHMgZ3JfcnVuX2FuaW0gR3JhbW1hciBvbmx5LWlucyBkb3VibGVSZXBsYWNlIHJlcGxhY2VXaXRob3V0U2VwXCIgZGF0YS1nci1pZD1cIjM4XCI+ZGVjbGFyZWQ8XC9nPiB2YWx1ZSA8Yj5hYm92ZSAzSyBVU0Q8XC9iPjxcL2xpPlxuPGxpPkdvb2RzIHRoYXQgcmVxdWlyZSBhbiBJbXBvcnQgTGljZW5zZSAoTEkpPFwvbGk+XG48bGk+U2hpcG1lbnRzIHdpdGggZGltZW5zaW9ucyBncmVhdGVyIHRoYW4gOTh4OTh4MTIwY208XC9saT5cbjxcL3VsPlxuPHA+UmVmZXIgdG8gU2lzY29tZXggaW4gdGhlIE1lcmNvc3VyIENvbW1vbiBOb21lbmNsYXR1cmUgKE5DTSkgZm9yIHRoZSBjb21wbGV0ZSBsaXN0IG9mIGFjY2VwdGFibGUgc2hpcG1lbnQgZ29vZHMuPFwvcD5cbjxcL2Rpdj48XC9kaXY+IiwiTEItZG9jLW9yLXBhY2thZ2VfY29sLW5hbWVfcmVtYXJrcyI6IkhpbndlaXNlIiwic2hpcG1lbnQtdHlwZV9sYWJlbF9pbnN1cmVkLXZhbHVlIjoiVmVyc2ljaGVydGVyIFdlcnQiLCJzaGlwbWVudC10eXBlX2ZpZWxkLXBsYWNlaG9sZGVyX2FwcGVhcnMtb24td2F5YmlsbCI6ImVyc2NoZWludCBhdWYgVmVyc2FuZGxhYmVsIC8gRnJhY2h0YnJpZWYiLCJzZXJ2aWNlLXR5cGVfYWxlcnRfcmVxdWlyZWQtZm9yLWJyYXppbC1zaGlwbWVudCI6IkluZm9ybWFsIChDb3VyaWVyKSBjbGVhcmFuY2U6IFRheGVzIGFuZCBhZG1pbmlzdHJhdGl2ZSBzZXJ2aWNlcyBjb3N0cyBtYXkgYmUgY2hhcmdlZCBmb3Igc2hpcG1lbnRzwqAgdG8gQnJhemlsLiAvIEZvcm1hbDogU2hpcG1lbnRzIHRvIEJyYXppbCBuZWVkIEN1c3RvbXMgQ2xlYXJhbmNlIiwiTEItaW5jb21wbGV0ZS1lbmhhbmNlZC1pbnZvaWNlX3BhcmFncmFwaF9jb21wbGV0ZS1tYW5kYXRvcnktZmllbGRzIjoiVmVydm9sbHN0w6RuZGlnZW4gU2llIGRpZSBlcmZvcmRlcmxpY2hlbiBJbmZvcm1hdGlvbmVuIiwic2hpcG1lbnQtdHlwZV9sYWJlbF9zZWNvbmRhcnktcmVmZXJlbmNlIjoiV2VpdGVyZSBoaW56dWbDvGdlbiIsIkxCLWRvYy1vci1wYWNrYWdlX3ZhbHVlLWxhYmVsX3Byb2hpYml0ZWQiOiJWZXJib3RlbiIsImdvb2RzLWFuZC1zZXJ2aWNlcy1kYXRhX2xhYmVsX3RydWNrLW5hbWUiOiIiLCJzaGlwbWVudC10eXBlX2xhYmVsX2ljbXMtdGF4LWJhc2UuaUhlbHAiOiI8cD5JQ01TIGlzIEJyYXppbFx1MjAxOXMgVGF4IG9uIENpcmN1bGF0aW9uIG9mIEdvb2RzIGFuZCBTZXJ2aWNlcy4gVGhlIHRheCBiYXNlIGlzIGNhbGN1bGF0ZWQgYnkgdGhlIHN1bSBvZjo8XC9wPlxuPHVsPlxuPGxpPkN1c3RvbXMgdmFsdWF0aW9uPFwvbGk+XG48bGk+SW1wb3J0IHRheDxcL2xpPlxuPGxpPlRheCBvbiBpbmR1c3RyaWFsaXplZCBwcm9kdWN0cyBhbmQgZXhjaGFuZ2UgdHJhbnNhY3Rpb25zPFwvbGk+XG48bGk+QW55IG90aGVyIHRheGVzIG9yIGNvbnRyaWJ1dGlvbnMgb24gY3VzdG9tcyBvciBjdXN0b21zIGV4cGVuc2VzPFwvbGk+XG48XC91bD5cbiIsInNoaXBtZW50LXR5cGVfZXJyb3JfaW5zdXJhbmNlLW1heC12YWx1ZSI6IkRlciBlcmxhdWJ0ZSBNYXhpbWFsd2VydCBsaWVndCBiZWkge21heEluc3VyYW5jZVZhbHVlfSAiLCJnb29kcy1hbmQtc2VydmljZXMtZGF0YV9zZWxlY3Qtb3B0aW9uX3RyYW5zYWN0aW9uLXR5cGUtcmVndWxhciI6IkphIiwiZ29vZHMtYW5kLXNlcnZpY2VzLWRhdGFfc2VsZWN0LW9wdGlvbl90cmFuc2FjdGlvbi10eXBlLWJpbGwtc2hpcC1mcm9tIjoiTmVpbiIsImVsZWN0cm9uaWMtZXhwb3J0LWZpbGxpbmdfbGFiZWxfZWVpLWRlc2NyaXB0aW9uIjoiV2FyZW5iZXNjaHJlaWJ1bmciLCJzYXZlLWZvci1sYXRlcl9idXR0b25fc2F2ZS1uYW1lLW9yLWNvbnRpbnVlIjoiU3BlaWNoZXJuIiwic2hpcG1lbnQtdHlwZV9sYWJlbF9wcm9kdWN0LXRvdGFsLXZhbHVlIjoiR2VzYW10IFdlcnQiLCJzaGlwbWVudC10eXBlX2Vycm9yX3JlZmVyZW5jZS1lbXB0eS1mb3JtYXQtbGlzdCI6IlJlZmVyZW56Zm9ybWF0IHd1cmRlIG5pY2h0IGF1Zmdlc2V0enQuIEtvbnRha3RpZXJlbiBTaWUgSWhyZW4gQWRtaW5pc3RyYXRvci4iLCJzaGlwbWVudC10eXBlX2xhYmVsX2NpdGVzLWRlY2xhcmF0aW9uIjoiQ0lURVMgKERlY2xhcmF0aW9uIFN0YXRlbWVudCkiLCJzaGlwbWVudC10eXBlX2xhYmVsX3NlbGVjdGVkLWV4dGVuZGVkLWxpYWJpbGl0eSI6IlNlbmR1bmdzdmVyc2ljaGVydW5nIiwiZWxlY3Ryb25pYy1leHBvcnQtZmlsbGluZ19sYWJlbF9pcy1jb250cm9sbGVkLWV4cG9ydC10eXBlLWJpcyI6IlBsZWFzZSBzZWxlY3QgaWYgeW91ciBzaGlwbWVudCBpcyBCSVMgKENvbnRyb2xsZWQgRXhwb3J0KSBvciBOTyIsInNoaXBtZW50LXR5cGVfbGFiZWxfYXBwZWFycy1vbi13YXliaWxsIjoiZXJzY2hlaW50IGF1ZiBWZXJzYW5kbGFiZWwgLyBGcmFjaHRicmllZiIsInNoaXBtZW50LXR5cGVfbGFiZWxfdG90YWwtd2VpZ2h0IjoiR2VzYW10Z2V3aWNodCIsInNoaXBtZW50LXR5cGVfYnV0dG9uX3BhY2thZ2VzIjoiV2FyZW5zZW5kdW5nZW4iLCJtYXN0ZXItcmVmZXJlbmNlLW51bWJlci1yb3dfZXJyb3JfbXJuLXZhbHVlLWZvcm1hdCI6IkZvbGdlbmRlcyBGb3JtYXQgZXJmb3JkZXJsaWNoOjrCoFp3ZWkgWmlmZmVybiwgZ2Vmb2xndCB2b24gendlaSBCdWNoc3RhYmVuIHVuZCBnZWZvbGd0IHZvbiAxNCBCdWNoc3RhYmVuIG9kZXIgWmlmZmVybi4iLCJlbGVjdHJvbmljLWV4cG9ydC1maWxsaW5nX2xhYmVsX2lzLWRlcGFydG1lbnQtb2Ytc3RhdGUiOiI8ZGl2IGNsYXNzPVwiZXdmX2RpY3Rpb25hcnlfdmFsdWVcIj5JcyB0aGlzIGEgRE9TIChJVEFSKSBvciBET0MgKEJJUykgc2hpcG1lbnQ/IDxkaXYgY2xhc3M9XCJpbmZvXCI+PGRpdj5JbnRlcm5hdGlvbmFsIFRyYWZmaWMgaW4gQXJtcyBSZWd1bGF0aW9ucyAoSVRBUikgYXJlIHJlZ3VsYXRpb25zIHNldCBieSB0aGUgVW5pdGVkIFN0YXRlcyBHb3Zlcm5tZW50IHRoYXQgY29udHJvbCB0aGUgZXhwb3J0IGFuZCBpbXBvcnQgb2YgZGVmZW5zZS1yZWxhdGVkIGdvb2RzLCB0ZWNobm9sb2dpZXMgYW5kIHNlcnZpY2VzIG9uIHRoZSBVbml0ZWQgU3RhdGVzIE11bml0aW9ucyBMaXN0IChVU01MKS4gIEl0cyBwdXJwb3NlIGlzIHRvIHNhZmVndWFyZCBuYXRpb25hbCBzZWN1cml0eSBhbmQgdG8gYWR2YW5jZSBVLlMuIGZvcmVpZ24gcG9saWN5IG9iamVjdGl2ZXMuPFwvZGl2PjxcL2Rpdj48XC9kaXY+IiwiZWxlY3Ryb25pYy1leHBvcnQtZmlsbGluZ19sYWJlbF9pcy1jb250cm9sbGVkLWV4cG9ydC10eXBlLWl0YXIiOiJQbGVhc2Ugc2VsZWN0IGlmIHlvdXIgc2hpcG1lbnQgaXMgSVRBUiAoQ29udHJvbGxlZCBFeHBvcnQpIG9yIE5PIiwiZWxlY3Ryb25pYy1leHBvcnQtZmlsbGluZ19sYWJlbF9lZWktcXVhbnRpdHkiOiJBbnphaGwiLCJlbGVjdHJvbmljLWV4cG9ydC1maWxsaW5nX2xhYmVsX2VlaS10b3RhbF92YWx1ZSI6Ikdlc2FtdCIsImdvb2RzLWFuZC1zZXJ2aWNlcy1kYXRhX2xhYmVsX2FnYWluc3QtYm9uZC1vci11dCI6IkdlZ2VuIEFuYmluZHVuZyBvZGVyIFVudGVybmVobWVuIiwic2hpcG1lbnQtdHlwZV9sYWJlbF9pc3N1ZS1kYXRlLnByb21wdCI6IkpKSkotTU0tVFQiLCJzaGlwbWVudC10eXBlX3BhcmFncmFwaF9pbnN1cmUtc2hpcG1lbnQiOiI8ZGl2IGNsYXNzPVwiZXdmX2RpY3Rpb25hcnlfdmFsdWVcIj5WZXJnZXNzZW4gU2llIG5pY2h0IElocmUgU2VuZHVuZyB6dSB2ZXJzaWNoZXJuIC0gSWhyZSBTZW5kdW5nIGlzdCBmw7xyIHVucyBnZW5hdXNvIHdpY2h0aWcgd2llIGbDvHIgU2llISA8YSBld2YtbGlnaHRib3g9XCJld2YtbGlnaHRib3hcIiBocmVmPVwiL2NvbnRlbnQvZGhsL2F0L2RlL3NoaXBtZW50L3NoaXBtZW50LXByb3RlY3Rpb24tb3B0aW9ucy5odG1sXCIgdGFyZ2V0PVwibGlnaHRib3hcIj5FcmZhaHJlbiBTaWUgbWVociDDvGJlciB1bnNlcmUgTcO2Z2xpY2hrZWl0ZW4gSWhyZSBTZW5kdW5nIHp1IHZlcnNpY2hlcm48XC9hPi48XC9kaXY+Iiwic2hpcG1lbnQtdHlwZV9hbGVydF9vc3ItaW5mbyI6IkdlYmVuIFNpZSB1bmJlZGluZ3QgYW4sIGbDvHIgd2VsY2hlIEFydGlrZWwgYXVmIElocmVyIFpvbGxyZWNobnVuZyBTaWUgZGllIEdvb2RzICYgU2VydmljZXMgVGF4IChHU1QpIGJlemFobHQgaGFiZW4uIiwiTEItaW5zdXJhbmNlLWtleS1mYWN0c19oZWFkZXJfc2hpcG1lbnQtcG9wdXAta2V5LWZhY3RzIjoiVHJhbnNwb3J0dmVyc2ljaGVydW5nIEtleSBGYWN0cyIsImdvb2RzLWFuZC1zZXJ2aWNlcy1kYXRhX2xhYmVsX2FwcHJveGltYWwtZGlzdGFuY2UiOiJFbnRmZXJudW5nIHZvbiBkZXIgQWJob2xhZHJlc3NlIHp1ciBESEwgU3RhdGlvbiIsInNoaXBtZW50LXR5cGVfaW5mby10ZXh0X3BhY2thZ2VzIjoiV2FyZW5zZW5kdW5nZW4gdW1mYXNzZW4gV2FyZW4gZsO8ciBwZXJzw7ZubGljaGUgb2RlciBnZXdlcmJsaWNoZSBad2Vja2UuIiwic2hpcG1lbnQtdHlwZV9saW5rX3ZpZXcta2V5LWZhY3RzIjoiRmFrdGVuIGFuemVpZ2VuIiwiaW5mb3JtYWwtZW50cnktY2xlYXJhbmNlX2NtcyI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPjxiPkluZm9ybWFsIFJlbGVhc2UgKENvdXJpZXIpOjxcL2I+wqBUYXhlcyBhbmQgYWRtaW5pc3RyYXRpdmUgc2VydmljZXMgY29zdHMgbWF5IGJlIGNoYXJnZWQgZm9yIHNoaXBtZW50cyB0byBCcmF6aWwuPFwvZGl2PiIsIlJSLWVuaGFuY2UtaW52b2ljZV9wYXJhZ3JhcGhfZW5oYW5jZWQtY3VzdG9tcy1pbnZvaWNlIjoiU2llIHdvbGxlbiB3ZWl0ZXJlIEluZm9ybWF0aW9uZW4gaGluenVmw7xnZW4gb2RlciBlaW5lIFJlY2hudW5nIGVyc3RlbGxlbiB1bmQgYWxzIFZvcmxhZ2Ugc3BlaWNoZXJuPyIsInNoaXBtZW50LXR5cGVfaW5mby10ZXh0X25vbi1kdXRpYWJsZS1wYWNrYWdlcyI6IiIsImVsZWN0cm9uaWMtZXhwb3J0LWZpbGxpbmdfcGFyYWdyYXBoX25vdC1jb250cm9sbGVkLWV4cG9ydC10eXBlIjoiTW9zdCBzaGlwbWVudHMgdW5kZXIge2N1cnJlbmN5fSB7bnVtYmVyfSBhcmUgZmlsZWQgdW5kZXIgRmVkZXJhbCBUcmFkZSBSZWd1bGF0aW9ucyAoRlRSKSAzMC4zNyhhKSBleGVtcHRpb24uIFdvdWxkIHlvdSBsaWtlIHRvIGZpbGUgeW91ciBleHBvcnQgdGhpcyB3YXk/Iiwic2hpcG1lbnQtdHlwZV9sYWJlbF9pbnN1cmUtc2hpcG1lbnQiOiJUcmFuc3BvcnR2ZXJzaWNoZXJ1bmciLCJnb29kcy1hbmQtc2VydmljZXMtZGF0YV92YWx1ZS1sYWJlbF90cmFuc3BvcnQtbW9kZWwiOiJMaWVmZXJ1bmdzYXJ0IiwiZ29vZHMtYW5kLXNlcnZpY2VzLWRhdGFfc2VsZWN0LW9wdGlvbl9uYSI6Ik4vQSIsInNoaXBtZW50LXR5cGVfbGFiZWxfYWRkaXRpb25hbF9pbmZvIjoienVzw6R0emxpY2hlIEluZm9ybWF0aW9uZW4iLCJnb29kcy1hbmQtc2VydmljZXMtZGF0YV9lcnJvcl90b3RhbC1pZ3N0LXZhbHVlLWV4Y2VlZGVkIjoiR2VzYW10IChpbiBJTlIpIGRhcmYgbmljaHQgZGVuIG1heGltYWwgZGVrbGFyaWVydGVuIFdlcnQgw7xiZXJzY2hyZWl0ZW46IHttYXhsZ3N0VmFsdWV9IiwibWFzdGVyLXJlZmVyZW5jZS1udW1iZXItZm9ybV9sYWJlbF9pbnB1dC1oZWFkZXIiOiJNUk4iLCJtYXN0ZXItcmVmZXJlbmNlLW51bWJlcl9wYXJhZ3JhcGhfYWRkLW1ybi1uby1kZWNsYXJlZC12YWx1ZS1jb25maWd1cmVkLW1hbmRhdG9yeSI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPkbDvHIgem9sbHBmbGljaHRpZ2UgU2VuZHVuZ2VuLCBmw7xnZW4gU2llIGVpbmUgb2RlciBtZWhyZXJlIE1hc3RlciBSZWZlcmVuY2UgTnVtYmVycyAoTVJOKSBmw7xyIGRpZSBTZW5kdW5nIGhpbnp1LiBXZW5uIFNpZSBuaWNodCBiZXJlaXRzIGVpbmUgTVJOIGhhYmVuLCBtw7xzc2VuIFNpZSBkaWVzZSBiZWkgSWhyZW0gw7ZydGxpY2hlbiBab2xsYW10IGJlYW50cmFnZW4uIERITCBFeHByZXNzIGthbm4gU2llIGRhYmVpwqA8YSBocmVmPVwiaHR0cHM6Ly9kaGwuZGUvZGUvZ2VzY2hhZWZ0c2t1bmRlbi9leHByZXNzL2luZm9zLWtub3dob3cvaGlsZmUtem9sbGFid2lja2x1bmcvZXhwb3J0Lmh0bWwjYWVzXCJcIj51bnRlcnN0w7x0emVuLjxcL2E+PFwvZGl2PiIsImVsZWN0cm9uaWMtZXhwb3J0LWZpbGxpbmdfbGFiZWxfZnRyLWV4ZW1wdGlvbnMiOiI8ZGl2IGNsYXNzPVwiZXdmX2RpY3Rpb25hcnlfdmFsdWVcIj48ZGl2IGNsYXNzPSJtZXNzYWdlLXdyYXBwZXIiPkF1c25haG1lbiBkZXIgRm9yZWlnbiBUcmFkZSBSZWd1bGF0aW9ucyAoRlRSKSA8ZGl2IGNsYXNzPVwiaW5mb1wiPjxkaXY+PHA+VGhlIEZvcmVpZ24gVHJhZGUgUmVndWxhdGlvbnMgKEZUUikgbWFuZGF0ZXMgdGhhdCBhbGwgcGVyc29ucyB3aG8gYXJlIHJlcXVpcmVkIHRvIGZpbGUgZXhwb3J0IGluZm9ybWF0aW9uIGRvIHNvIHRocm91Z2ggdGhlIEF1dG9tYXRlZCBFeHBvcnQgU3lzdGVtIChBRVMpIGF0IGEgc3BlY2lmaWVkIHRpbWVmcmFtZSBwcmlvciB0byBleHBvcnQgd2l0aCB0aGUgcmVxdWlzaXRlIHNoaXBtZW50IGRhdGEuPFwvcD5cbjxwPlRoaXMgaW5mb3JtYXRpb24gd2FzIGZvcm1lcmx5IGNhbGxlZCB0aGUgU2hpcHBlciJzIEV4cG9ydCBEZWNsYXJhdGlvbiAoU0VEKSwgYW5kIGl0IGlzIG5vdyByZWZlcnJlZCB0byBhcyBFbGVjdHJvbmljIEV4cG9ydCBJbmZvcm1hdGlvbiAoRUVJKS4gVGhlIEZUUiBmdXJ0aGVyIGltcG9zZXMgY2l2aWwgYW5kIGNyaW1pbmFsIHBlbmFsdGllcyBmb3IgdmlvbGF0aW9ucyBvZiB0aGVzZSByZWd1bGF0aW9ucy48XC9wPlxuPHA+VGhlIHB1cnBvc2Ugb2YgdGhlIEZUUiBpcyB0byBjb2xsZWN0IFUuUy4gZXhwb3J0IHN0YXRpc3RpY2FsIGRhdGEsIGFzIHdlbGwgYXMgdG8gZW5mb3JjZSBVLlMuIGV4cG9ydCBjb250cm9sIGxhd3MuPFwvcD5cbjxcL2Rpdj48XC9kaXY+PFwvZGl2PjxcL2Rpdj4iLCJlbGVjdHJvbmljLWV4cG9ydC1maWxsaW5nX2xhYmVsX2lzLWNvbnRyb2xsZWQtZXhwb3J0LXR5cGUtaXRhci1iaXMiOiJQbGVhc2Ugc2VsZWN0IGlmIHlvdXIgc2hpcG1lbnQgaXMgSVRBUiAoQ29udHJvbGxlZCBFeHBvcnQpIG9yIEJJUyAoQ29udHJvbGxlZCBFeHBvcnQpIG9yIE5PIiwiTEItZG9jLW9yLXBhY2thZ2VfdmFsdWUtbGFiZWxfb3JpZ2luIjoiVXJzcHJ1bmciLCJlbGVjdHJvbmljLWV4cG9ydC1maWxsaW5nX2xhYmVsX3NlbGVjdC1leHBvcnQtb3B0aW9uIjoiV8OkaGxlbiBTaWUgZWluZSBFeHBvcnQgRmlsaW5nIE9wdGlvbiBhdXMiLCJtYXN0ZXItcmVmZXJlbmNlLW51bWJlci1mb3JtX2xhYmVsX2Ryb3AtZG93bi1oZWFkZXIiOiJab2xsdmVyZmFocmVuIiwic2hpcG1lbnQtdHlwZV9sYWJlbF92YWx1ZS10by1lbnN1cmUucHJvbXB0IjoiMDAuMDAiLCJMQi1kb2Mtb3ItcGFja2FnZV9oZWFkZXJfZG9jdW1lbnQtb3ItcGFja2FnZSI6IkRva3VtZW50ZW4tIG9kZXIgV2FyZW5zZW5kdW5nPyIsImVsZWN0cm9uaWMtZXhwb3J0LWZpbGxpbmdfbGFiZWxfeWVzLWZpbGUtYXMtZnRyLWV4ZW1wdGlvbi1pdGFyIjoiWWVzLCBjbGFpbSBhcyBGVFIgMzAuMzcodSkgZXhlbXB0aW9uIiwic2hpcG1lbnQtdHlwZV9lcnJvcl9pbnN1cmFuY2UtemVyby12YWx1ZSI6IkdlYmVuIFNpZSBlaW5lbiBXZXJ0IGVpbiIsImVsZWN0cm9uaWMtZXhwb3J0LWZpbGxpbmdfbGFiZWxfZWVpLXRvdGFsX3dlaWdodCI6Ikdlc2FtdGdld2ljaHQiLCJzaGlwbWVudC10eXBlX2xhYmVsX3ZhdC10YXgtY3IiOiJNZWhyd2VydHN0ZXVlci9DUiIsInNoaXBtZW50LXR5cGVfbGFiZWxfdmFsdWUtb2Ytc2hpcG1lbnQiOiJXYXJlbndlcnQiLCJzaGlwbWVudC10eXBlX3N1Yi1oZWFkZXJfYWRkaXRpb25hbF9pbmZvIjoienVzw6R0emxpY2hlIEluZm9ybWF0aW9uZW4iLCJlbGVjdHJvbmljLWV4cG9ydC1maWxsaW5nX2J1dHRvbl9yZW1vdmUiOiJFbnRmZXJuZW4iLCJzaGlwbWVudC10eXBlX2xhYmVsX2ljbXMtdGF4LWJhc2UiOiI8ZGl2IGNsYXNzPVwiZXdmX2RpY3Rpb25hcnlfdmFsdWVcIj48ZGl2IGNsYXNzPSJtZXNzYWdlLXdyYXBwZXIiPklDTVMgVGF4IEJhc2UgPGRpdiBjbGFzcz1cImluZm9cIj48ZGl2PjxwPklDTVMgaXMgQnJhemlsXHUyMDE5cyBUYXggb24gQ2lyY3VsYXRpb24gb2YgR29vZHMgYW5kIFNlcnZpY2VzLiBUaGUgdGF4IGJhc2UgaXMgY2FsY3VsYXRlZCBieSB0aGUgc3VtIG9mOjxcL3A+XG48dWw+XG48bGk+Q3VzdG9tcyB2YWx1YXRpb248XC9saT5cbjxsaT5JbXBvcnQgdGF4PFwvbGk+XG48bGk+VGF4IG9uIGluZHVzdHJpYWxpemVkIHByb2R1Y3RzIGFuZCBleGNoYW5nZSB0cmFuc2FjdGlvbnM8XC9saT5cbjxsaT5Bbnkgb3RoZXIgdGF4ZXMgb3IgY29udHJpYnV0aW9ucyBvbiBjdXN0b21zIG9yIGN1c3RvbXMgZXhwZW5zZXM8XC9saT5cbjxcL3VsPlxuPFwvZGl2PjxcL2Rpdj48XC9kaXY+PFwvZGl2PiIsImN1c3RvbXMtaW52b2ljZS1wcmV2aWV3X2J1dHRvbl9lZGl0IjoiQmVhcmJlaXRlbiIsImVsZWN0cm9uaWMtZXhwb3J0LWZpbGxpbmdfbGFiZWxfZW1wbG95ZXItaWRlbnRpZmljYXRpb24tbnVtYmVyLmlIZWxwIjoiPHA+RGFzIEZvcm1hdCBkZXIgQXJiZWl0Z2ViZXJpZGVudGlmaWthdGlvbnNudW1tZXIgYmVzdGVodCBhdXMgbmV1biAoOSkgWmFobGVuLCBnZWZvbGd0IHZvbiB6d2VpICgyKSBCdWNoc3RhYmVuIG9kZXIgZWxmICgxMSkgWmFobGVuLjxcL3A+PHA+QmVpc3BpZWxlOjxcL3A+PHA+MTIzNDU2Nzg5QUI8XC9wPjxwPjEyMzQ1Njc4OTAxPFwvcD4iLCJSUi1kb2N1bWVudF9wYXJhZ3JhcGhfaXMtaXQtZG9jdW1lbnQtZW1wdHktbWVzc2FnZSI6IiIsIlJSLWRvY3VtZW50X2xpbmtfaGVscC1kZWNpZGUiOiJXaXIga8O2bm5lbiBJaG5lbiBiZWkgZGVyIEVudHNjaGVpZHVuZyBiZWhpbGZsaWNoIHNlaW4iLCJzZXJ2aWNlLXR5cGVfYnV0dG9uX2luZm9ybWFsIjoiSW5mb3JtYWwiLCJlbGVjdHJvbmljLWV4cG9ydC1maWxsaW5nX3BhcmFncmFwaF9lZWktdXBkYXRlZCI6IkFrdHVhbGlzaWVydCBtaXQgWm9sbHJlY2hudW5nc2RldGFpbHMiLCJzaGlwbWVudC10eXBlX3N1Yi1oZWFkZXJfcGFja2FnZXMtY3VzdG9tcy1pbnZvaWNlIjoiU2llIGJlbsO2dGlnZW4gZWluZSBab2xscmVjaG51bmcgZsO8ciBkaWVzZSBTZW5kdW5nIC0gREhMIGthbm4gZGllc2UgZsO8ciBTaWUgZXJzdGVsbGVuISIsImdvb2RzLWFuZC1zZXJ2aWNlcy1kYXRhX3ZhbHVlLWxhYmVsX3JlYXNvbi1vZi10cmFuc3BvcnRhdGlvbiI6IkV4cG9ydCBvZGVyIEltcG9ydCIsInNoaXBtZW50LXR5cGVfYWxlcnRfY3VzdG9tcy1pbnZvaWNlLWRldGFpbHMtaW5jb21wbGV0ZSI6IkRpZSBab2xscmVjaG51bmcgaXN0IG5pY2h0IHZvbGxzdMOkbmRpZywgYml0dGUgc3RlbGxlbiBTaWUgYWxsZSBlcmZvcmRlcmxpY2hlbiBJbmZvcm1hdGlvbmVuIHp1ciBWZXJmw7xndW5nLiIsIlJSLWVuaGFuY2UtaW52b2ljZV9saW5rX2VuaGFuY2VkLWN1c3RvbXMtaW52b2ljZSI6Ik51dHplbiBTaWUgdW5zZXJlIGVyd2VpdGVydGUgWm9sbHJlY2hudW5nIiwiZ29vZHMtYW5kLXNlcnZpY2VzLWRhdGFfdmFsdWUtbGFiZWxfdHJhbnNhY3Rpb24tdHlwZSI6IlJlY2hudW5ncy0gdW5kIExpZWZlcmFuc2NocmlmdCBzaW5kIGlkZW50aXNjaCIsImVsZWN0cm9uaWMtZXhwb3J0LWZpbGxpbmdfc2VsZWN0LW9wdGlvbl9zZWxlY3QtaXRuIjoiSVROIC0gSWNoIGhhYmUgZWluZSBJbnRlcm5hdGlvbmFsIFRyYW5zYWN0aW9uIE51bWJlciIsInNoaXBtZW50LXR5cGVfc3ViLWhlYWRlcl9kZXNjcmliZS1kb2N1bWVudHMtZW5hYmxlZC5pSGVscCI6IkRpZSBCZXNjaHJlaWJ1bmcgSWhyZXIgRG9rdW1lbnRlIG11c3MgZGVuIExpc3Rlbm9wdGlvbmVuIGVudHNwcmVjaGVuLiBXZW5uIElocmUgRG9rdW1lbnRlIG5pY2h0IGRlbiB2b3JnZWdlYmVuZW4gT3B0aW9uZW4gZW50c3ByZWNoZW4sIG3DvHNzZW4gU2llIGRpZXNlIG3DtmdsaWNoZXJ3ZWlzZSBhbHMgV2FyZW5zZW5kdW5nIHZlcnNlbmRlbi4iLCJzaGlwbWVudC10eXBlX3N1Yi1oZWFkZXJfcHJvdGVjdC1zaGlwbWVudCI6IlZlcnNpY2hlcm4gU2llIElocmUgU2VuZHVuZyIsImVsZWN0cm9uaWMtZXhwb3J0LWZpbGxpbmdfbGFiZWxfZW1wbG95ZXItaWRlbnRpZmljYXRpb24tbnVtYmVyIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+PGRpdiBjbGFzcz0ibWVzc2FnZS13cmFwcGVyIj5FbXBsb3llciBJZGVudGlmaWNhdGlvbiBOdW1iZXIgKEVJTikgPGRpdiBjbGFzcz1cImluZm9cIj48ZGl2PjxwPkRhcyBGb3JtYXQgZGVyIEFyYmVpdGdlYmVyaWRlbnRpZmlrYXRpb25zbnVtbWVyIGJlc3RlaHQgYXVzIG5ldW4gKDkpIFphaGxlbiwgZ2Vmb2xndCB2b24gendlaSAoMikgQnVjaHN0YWJlbiBvZGVyIGVsZiAoMTEpIFphaGxlbi48XC9wPjxwPkJlaXNwaWVsZTo8XC9wPjxwPjEyMzQ1Njc4OUFCPFwvcD48cD4xMjM0NTY3ODkwMTxcL3A+PFwvZGl2PjxcL2Rpdj48XC9kaXY+PFwvZGl2PiIsImVsZWN0cm9uaWMtZXhwb3J0LWZpbGxpbmdfZXJyb3JfaXRlbS1kdXBsaWNhdGVkIjoiU2NoZWR1bGUgQiwgQ29tbW9kaXR5IE9yaWdpbiB1bmQgRUNDTiBzaW5kIGJlcmVpdHMgYW5nZWdlYmVuIn0sImNyMDA1OCI6eyJjci1uYW1lIjoiSW5zdXJhbmNlIFNlcnZpY2U6IEVuYWJsZWQifSwiY3IwMTc5Ijp7ImNyLWVycm9ycy1yZXF1aXJlZCI6IlRoaXMgZmllbGQgaXMgcmVxdWlyZWQiLCJjci1uYW1lIjoiR3JvdXAgTWF4aW11bSBOdW1iZXIgb2YgU2hpcG1lbnRzOiBWYWx1ZSIsImNyLWVycm9ycy1yYW5nZSI6IlZhbHVlIGlzIG91dCBvZiB0aGUgcmFuZ2UifSwiY3IwMDU5Ijp7ImNyLWVycm9ycy1yZXF1aXJlZCI6IlZhbHVlIHJlcXVpcmVkIGZvciB0aGlzIGZpZWxkIiwiY3ItbmFtZSI6Ik1heGltdW0gaW5zdXJhbmNlIHZhbHVlIn0sImNyMDA2MyI6eyJjci1uYW1lIjoiQ0FCOiBDcmVhdGUgY29udGFjdHMifSwiY3IwMTg0Ijp7ImNyLW5hbWUiOiJHcm91cCBNYXhpbXVtIENvc3Qgb2YgU2hpcG1lbnRzOiBFbmFibGVkIn0sImNyMDE4NSI6eyJjci1lcnJvcnMtcmVxdWlyZWQiOiJUaGlzIGZpZWxkIGlzIHJlcXVpcmVkIiwiY3ItbmFtZSI6Ikdyb3VwIE1heGltdW0gQ29zdCBvZiBTaGlwbWVudHM6IFZhbHVlIiwiY3ItZXJyb3JzLXJhbmdlIjoiVmFsdWUgaXMgb3V0IG9mIHRoZSByYW5nZSJ9LCJjcjAwNjQiOnsiY3ItbmFtZSI6IkNBQjogTW9kaWZ5IGNvbnRhY3RzIn0sImNyMDA2NSI6eyJjci1uYW1lIjoiQ0FCOiBEZWxldGUgY29udGFjdHMifSwiY3IwMTg2Ijp7ImNyLWVycm9ycy1yZXF1aXJlZCI6IlRoaXMgZmllbGQgaXMgcmVxdWlyZWQiLCJjci1uYW1lIjoiR3JvdXAgTWF4aW11bSBDb3N0IG9mIFNoaXBtZW50czogQ3VycmVuY3kifSwiY3IwMDY2Ijp7ImNyLW5hbWUiOiJDQUI6IEltcG9ydCBjb250YWN0cyJ9LCJjcjAxODciOnsiY3ItZXJyb3JzLXJlcXVpcmVkIjoiVGhpcyBmaWVsZCBpcyByZXF1aXJlZCIsImNyLW5hbWUiOiJHcm91cCBNYXhpbXVtIENvc3Qgb2YgU2hpcG1lbnRzOiBQZXJpb2QiLCJjci1lcnJvcnMtcmFuZ2UiOiJWYWx1ZSBpcyBvdXQgb2YgdGhlIHJhbmdlIn0sImNyMDE4MCI6eyJjci1lcnJvcnMtcmVxdWlyZWQiOiJUaGlzIGZpZWxkIGlzIHJlcXVpcmVkIiwiY3ItbmFtZSI6Ikdyb3VwIE1heGltdW0gTnVtYmVyIG9mIFNoaXBtZW50czogUGVyaW9kIiwiY3ItZXJyb3JzLXJhbmdlIjoiVmFsdWUgaXMgb3V0IG9mIHRoZSByYW5nZSJ9LCJjcjAwNjAiOnsiY3ItbmFtZSI6Ikluc3VyYW5jZSBTZXJ2aWNlOiBDdXJyZW5jeSJ9LCJjcjAxODEiOnsiY3ItZXJyb3JzLXJlcXVpcmVkIjoiVGhpcyBmaWVsZCBpcyByZXF1aXJlZCIsImNyLW5hbWUiOiJHcm91cCBNYXhpbXVtIE51bWJlciBvZiBTaGlwbWVudHM6IFVuaXQgb2YgUGVyaW9kIn0sImNyMDE4MiI6eyJjci1lcnJvcnMtcmVxdWlyZWQiOiJUaGlzIGZpZWxkIGlzIHJlcXVpcmVkIiwiY3ItbmFtZSI6Ikdyb3VwIE1heGltdW0gTnVtYmVyIG9mIFNoaXBtZW50czogRWZmZWN0aXZlIERhdGUgU3RhcnQifSwiY3IwMDYyIjp7ImNyLW5hbWUiOiJBbGxvdyBBY2Nlc3MgdG8gQ29tcGFueSBBZGRyZXNzIEJvb2sifSwiY3IwMTgzIjp7ImNyLW5hbWUiOiJHcm91cCBNYXhpbXVtIE51bWJlciBvZiBTaGlwbWVudHM6IEFwcHJvdmFsIFJlcXVpcmVkIn0sImFzc2lnbi1zaGlwbWVudCI6eyJhc3NpZ24tZGV0YWlsc19lcnJvcl9hc3NpZ24tc2hpcG1lbnQtYWx0ZXJuYXRlLWFjY291bnQtY2hhbmdlLW5vdC1hbGxvd2VkIjoiS2FubiB2b20gU2VuZHVuZ3NiZXZvbGxtw6RjaHRpZ3RlbiBuaWNodCBnZcOkbmRlcnQgd2VyZGVuIEt1bmRlbm51bW1lciIsImFzc2lnbi1kZXRhaWxzX2Vycm9yX2Fzc2lnbi1zaGlwbWVudC1hc3NpZ25lZC1zaGlwbWVudC1hbHJlYWR5LWRlY2xpbmVkIjoiU2VuZHVuZyBBYmdlbGVobnQiLCJhc3NpZ24tZGV0YWlsc19iYWNrZW5kLWVycm9yX2Fzc2lnbi1zaGlwbWVudC1jYW5jZWxsZWQiOiJTZW5kdW5nIEdlbMO2c2NodCIsImFzc2lnbi1kZXRhaWxzX2JhY2tlbmQtZXJyb3JfYXNzaWduLXNoaXBtZW50LWNvbXBsZXRlZCI6IlNlbmR1bmcgVm9sbHN0w6RuZGlnIiwiYXNzaWduLWRldGFpbHNfZXJyb3JfYXNzaWduLXNlbGVjdGVkLWJ5LXVzZXItZHV0aWFibGUtbm90LWFsbG93ZWQiOiJGb3JiaWRkZW4gdG8gYXNzaWduIEludHJhRVUgc2hpcG1lbnQgd2l0aCBQYWNrYWdlcyhEdXRpYWJsZSkgb3B0aW9uIiwiYXNzaWduLWRldGFpbHNfYmFja2VuZC1lcnJvcl9hc3NpZ24tc2hpcG1lbnQtcmVxdWlyZWQiOiJFcmZvcmRlcmxpY2giLCJhc3NpZ24tZGV0YWlsc19lcnJvcl9hc3NpZ24tc2hpcG1lbnQtbm90LWJyYXppbC1hc3NpZ25lZSI6Int1c2VyTmFtZX0gaXN0IGtlaW4gVmVyc2VuZGVyIGF1cyBCcmFzaWxpZW4uIEJpdHRlIMO8YmVyZ2ViZW4gU2llIGRpZXNlIFNlbmR1bmcgYW4gZWluZW4gVmVyc2VuZGVyIGF1cyBCcmFzaWxpZW4uIiwiYXNzaWduLWRldGFpbHNfZXJyb3JfYXNzaWduLXNoaXBtZW50LWZyb20tYWRkcmVzcy1jaGFuZ2Utbm90LWFsbG93ZWQiOiJLYW5uIHZvbSBTZW5kdW5nc2Jldm9sbG3DpGNodGlndGVuIG5pY2h0IGdlw6RuZGVydCB3ZXJkZW7CoEFic2VuZGVyIEFkcmVzc2UiLCJhc3NpZ24tZGV0YWlsc19iYWNrZW5kLWVycm9yX2Fzc2lnbi1zaGlwbWVudC1ub3QtZm91bmQtd2l0aC1naXZlbi1jcmVkZW50aWFscyI6IlNlbmR1bmcgbmljaHQgZ2VmdW5kZW4iLCJhc3NpZ24tZGV0YWlsc19iYWNrZW5kLWVycm9yX2Fzc2lnbi1zaGlwbWVudC1kZWNsaW5lZCI6IlNlbmR1bmcgQWJnZWxlaG50IiwiYXNzaWduLWRldGFpbHNfZXJyb3JfYXNzaWduLXNoaXBtZW50LW5vdC1hbGxvd2VkLWNvcnBvcmF0ZSI6Ilp1d2Vpc2VuIGVpbmVzIFNlbmR1bmdzYXVmdHJhZ2VzIGlzdCBuaWNodCBlcmxhdWJ0IiwiYXNzaWduLWRldGFpbHNfZXJyb3JfYXNzaWduLXNoaXBtZW50LW5vdC1hbGxvd2VkLWNvcnBvcmF0ZS1hdXRob3JpemF0aW9uLXRlcm0iOiJadXdlaXNlbiBlaW5lcyBTZW5kdW5nc2F1ZnRyYWdlcyBpc3QgbmljaHQgZXJsYXVidCIsImFzc2lnbi1kZXRhaWxzX2JhY2tlbmQtZXJyb3JfYXNzaWduLXNoaXBtZW50LWNhbi1ub3Qtc2F2ZS1hdHRhY2hlZC1maWxlcyI6IlVwbG9hZCBuaWNodCBlcmZvbGd0IiwiYXNzaWduLWRldGFpbHNfZXJyb3JfYXNzaWduLXNoaXBtZW50LXNlbGYtYXNzaWduLW5vdC1hbGxvd2VkIjoiU2llIGvDtm5uZW4gbmljaHQgYW4gc2ljaCBzZWxiZXIgw7xiZXJ0cmFnZW4iLCJhc3NpZ24tZGV0YWlsc19lcnJvcl9hc3NpZ24tc2hpcG1lbnQtbm90LWFsbG93ZWQtY29ycG9yYXRlLWFzc2lnbmVlIjoiQml0dGUgZWluZW4gYW5kZXJlbiBCZXZvbGxtw6RjaHRpZ3RlbiBhdXN3w6RobGVuIiwiYXNzaWduLWRldGFpbHNfZXJyb3JfYXNzaWduLXNoaXBtZW50LXJlY2VpdmVyLWNvdW50cnktY2hhbmdlLW5vdC1hbGxvd2VkIjoiS2FubiB2b20gU2VuZHVuZ3NiZXZvbGxtw6RjaHRpZ3RlbiBuaWNodCBnZcOkbmRlcnQgd2VyZGVuwqBFbXBmw6RuZ2VyIExhbmQiLCJhc3NpZ24tZGV0YWlsc19iYWNrZW5kLWVycm9yX2Fzc2lnbi1hc3NpZ25tZW50LWNhbmNlbGxlZCI6IlNlbmR1bmcgc3Rvcm5pZXJ0In0sIlNISVBNRU5UX0NPU1QiOnsiU1VNTUFSWV9CVVRUT05fU0VORF9GT1JfQVBQUk9WQUwiOiJWZXJzZW5kZW4gZsO8ciBCZXN0w6R0aWd1bmciLCJDT05GSVJNX1VQR1JBREVfSEVBREVSX0lOU19QT1BVUF9USVRMRV9JSSI6IiIsIlNVTU1BUllfTElOS19URVJNU19BTkRfQ09ORElUSU9OU19QUk9ISUJJVEVEX0lURU1TIjoiVmVyYm90ZW5lIEfDvHRlciIsIk1BWF9TSElQTUVOVF9DT1NUIjoiRGllIFNlbmR1bmdza29zdGVuIMO8YmVyc3RlaWdlbiBkYXMgZXJsYXVidGUgTWF4aW11bToge3ZhbHVlVHlwZX17YWN0dWFsVmFsdWV9LiDDhG5kZXJuIFNpZSBpaHJlIEF1c3dhaGwgdW0gc2ljaGVyenVzdGVsbGVuLCBkYXNzIGRpZSBLb3N0ZW4gaW5uZXJoYWxiIGRlcyBNYXhpbXVtcyBsaWVnZW4uIiwiT05MSU5FX1BBWU1FTlRfQUxFUlRfVFJBTlNBQ1RJT05fRkFJTEVEIjoiQmV6YWhsdW5nIG5pY2h0IG3DtmdsaWNoLiBCaXR0ZSDDpG5kZXJuIFNpZSBkaWUgWmFobHVuZ3NvcHRpb24sIHVtIGRlbiBWZXJzYW5kYXVmdHJhZyBmZXJ0aWd6dXN0ZWxsZW4uICIsIlNISVBNRU5UX0NPU1RfVVNFUl9MSU1JVF9MRVZFTCI6IkRpZXNlIFBlcnNvbiIsIk9OTElORV9QQVlNRU5UX0VSUk9SX1ZBVF9UQVhfSURfTk9UX0FMTE9XRUQiOiI8ZGl2IGNsYXNzPVwiZXdmX2RpY3Rpb25hcnlfdmFsdWVcIj5ESEwgRXhwcmVzcyBhY2NlcHRzIHNoaXBtZW50cyBmcm9tIFB1YmxpYyBBZG1pbmlzdHJhdGlvbnMgb25seSBpZiB0aGV5IGFyZSBtYWRlIGJ5IHN1YnNjcmlwdGlvbi4gQWx0ZXJuYXRpdmVseSwgeW91IGNhbiBhbHdheXMgbWFrZSBhIHByaXZhdGUgZGVsaXZlcnkgdXNpbmcgb3VyIE15REhMICsgdG9vbCwgdXNpbmcgeW91ciBUYXhwYXllciBJRCBjb2RlLsKgPGEgaHJlZj1cImh0dHBzOi8vd3d3LmRobC5pdC9pdC9leHByZXNzL3NwZWRpcmUvcmljaGllZGVyZV9jb2RpY2VfY2xpZW50ZS5odG1sXCI+T3BlbiBhIERITCBhY2NvdW50PFwvYT48XC9kaXY+IiwiVE9UQUxfV0VJR0hUX1BFUklPRF9BUFBST1ZBTF9OT1RfUkVRVUlSRUQiOiJFcyBpc3QgbmljaHQgbcO2Z2xpY2ggZGllc2UgU2VuZHVuZyBhYnp1c2NobGllw59lbi4gR2VzYW10IGdld2ljaHQgdm9uIHNlbmR1bmdlbiwgZGllIFNpZSBpbiBkaWVzZXIgUGVyaW9kZSBlcnN0ZWxsdCBoYWJlbiB2b24ge3N0YXJ0RGF0ZX0gYW4ge2VuZERhdGV9IMO8YmVyc2NocmVpdGV0IGRhcyB6dWzDpHNzaWdlIE1heGltdW06IHtyZXN0cmljdGVkVmFsdWV9IHt2YWx1ZVR5cGV9LiIsIkNPTkZJUk1fVVBHUkFERV9QQVJBR1JBUEhfSU5TX1BPUFVQX01FU1NBR0VfSUkiOiJJY2ggbcO2Y2h0ZSBlaW5lIFRyYW5zcG9ydHZlcnNpY2hlcnVuZyBmw7xyIHtwcmljZX0gaGluenVmw7xnZW4uIiwiU0hJUE1FTlRfQ09VTlRfUEVSSU9EX0FQUFJPVkFMX05PVF9SRVFVSVJFRCI6IkVzIGlzdCBuaWNodCBtw7ZnbGljaCBkaWVzZSBTZW5kdW5nIGFienVzY2hsaWXDn2VuLiBHZXNhbXQgbnVtbWVyIHZvbiBzZW5kdW5nZW4sIGRpZSBTaWUgaW4gZGllc2VyIFBlcmlvZGUgZXJzdGVsbHQgaGFiZW4gdm9uIHtzdGFydERhdGV9IGFuIHtlbmREYXRlfSDDvGJlcnNjaHJlaXRldCBkYXMgenVsw6Rzc2lnZSBNYXhpbXVtOiB7cmVzdHJpY3RlZFZhbHVlfS4iLCJDT05GSVJNX1VQR1JBREVfUEFSQUdSQVBIX0lOU19QT1BVUF9NRVNTQUdFX0lCIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+PGRpdiBjbGFzcz0ibWVzc2FnZS13cmFwcGVyIj48cD5JbSBzZWx0ZW5lbiBGYWxsIGRlcyBWZXJsdXN0ZXMgSWhyZXIgRG9rdW1lbnRlbi1TZW5kdW5nIHdpcmQgREhMIFNpZSBmw7xyIGRpZXNlbiBWZXJsdXN0IG1pdCBkZXIgZml4ZW4gU3VtbWUgdm9uIDQwMCBFVVIgZW50c2Now6RkaWdlbi48XC9wPlxuPHA+wqA8XC9wPlxuPHA+TcO2Y2h0ZW4gU2llIGVpbmUgRG9rdW1lbnRlbmhhZnR1bmcgaGluenVmw7xnZW4gZsO8ciBudXIge3ByaWNlfT88XC9wPlxuPFwvZGl2PjxcL2Rpdj4iLCJDT05GSVJNX1VQR1JBREVfSEVBREVSX0lOU19QT1BVUF9USVRMRV9JQiI6IiIsIlJSX1VQR0FERV9MQUJFTF9VUEdSQURFX1RJTUVfTUlEREFZIjoibWl0dGFnIiwiU1VNTUFSWV9WQUxVRV9MQUJFTF9EVVRJRVNfQU5EX1RBWEVTIjoiWm9sbGFiZ2FiZW4gdW5kIFN0ZXVlcm4iLCJTVU1NQVJZX0JVVFRPTl9BR1JFRV9BTkRfUEFZIjoiQWt6ZXB0aWVyZW4gdW5kIHphaGxlbiIsIlNVTU1BUllfVkFMVUVfTEFCRUxfVFJBTlNQT1JUQVRJT05fQ0hBUkdFIjoiVHJhbnNwb3J0a29zdGVuIiwiU1VNTUFSWV9QQVJBR1JBUEhfVEVSTVNfQU5EX0NPTkRJVElPTlMiOiI8ZGl2IGNsYXNzPVwiZXdmX2RpY3Rpb25hcnlfdmFsdWVcIj5EdXJjaCBLbGljayBhdWYgXHUyMDFlVmVyYmluZGxpY2ggYmVzdGVsbGVuXHUyMDFjIGFremVwdGllcmVuIFNpZSBkaWUgPGEgZXdmLWxpZ2h0Ym94PVwiZXdmLWxpZ2h0Ym94XCIgaHJlZj1cIi9jb250ZW50L2RobC9hdC9kZS9zaGlwbWVudC90ZXJtcy1hbmQtY29uZGl0aW9ucy5odG1sXCIgdGFyZ2V0PVwibGlnaHRib3hcIj5BbGxnZW1laW5lIFRyYW5zcG9ydGJlZGluZ3VuZ2VuPFwvYT4ge29ubGluZVRlcm1zQW5kQ29uZGl0aW9uc33CoHVuZCBiZXN0w6R0aWdlbiwgZGFzcyBJaHJlIFNlbmR1bmcga2VpbmUge3Byb2hpYml0ZWRJdGVtc30gZW50aMOkbHQuPFwvZGl2PiIsIlNVTU1BUllfTElOS19URVJNU19BTkRfQ09ORElUSU9OUyI6Ikdlc2Now6RmdHNiZWRpbmd1bmdlbiIsIlRPVEFMX1dFSUdIVF9QRVJJT0RfQVBQUk9WQUxfUkVRVUlSRUQiOiI8ZGl2IGNsYXNzPVwiZXdmX2RpY3Rpb25hcnlfdmFsdWVcIj48ZGl2IGNsYXNzPSJtZXNzYWdlLXdyYXBwZXIiPjxwPi4gR2VzYW10IGdld2ljaHQgc2VuZHVuZ2VuLCBkaWUgU2llIGluIGRpZXNlciBQZXJpb2RlIGVyc3RlbGx0IGhhYmVuIHZvbiA8Yj57c3RhcnREYXRlfTxcL2I+IGFuIDxiPntlbmREYXRlfSA8XC9iPsO8YmVyc2NocmVpdGV0IGRhcyB6dWzDpHNzaWdlIE1heGltdW0gdm9uIDxiPntyZXN0cmljdGVkVmFsdWV9IHt2YWx1ZVR5cGV9PFwvYj4uPFwvcD5cbjxwPjxiPiA8XC9iPjxcL3A+XG48XC9kaXY+PFwvZGl2PiIsIk9OTElORV9QQVlNRU5UX0VSUk9SX1ZBVF9UQVhfSURfSU5WQUxJRCI6IlVuZ8O8bHRpZyBNZWhyd2VydHN0ZXVlciIsIk9OTElORV9QQVlNRU5UX1NVQl9IRUFERVJfT05MSU5FX1BBWU1FTlQiOiJPbmxpbmUgUGF5bWVudCIsIk1BWF9SRVRVUk5fU0hJUE1FTlRfQ09TVF9ISURERU4iOiI8ZGl2IGNsYXNzPVwiZXdmX2RpY3Rpb25hcnlfdmFsdWVcIj5EaWUgUmV0b3Vyc2VuZHVuZ2VuIMO8YmVyc3RlaWdlbiBkYXMgZXJsYXVidGUgTWF4aW11bTogPGI+e3ZhbHVlVHlwZX0ge2FjdHVhbFZhbHVlfTxcL2I+LiDDhG5kZXJuIFNpZSBpaHJlIEF1c3dhaGwgdW0gc2ljaGVyenVzdGVsbGVuLCBkYXNzIGRpZSBLb3N0ZW4gaW5uZXJoYWxiIGRlcyBNYXhpbXVtcyBsaWVnZW4uPFwvZGl2PiIsIlNISVBNRU5UX0NPU1RfUEVSSU9EX0FQUFJPVkFMX05PVF9SRVFVSVJFRCI6IkVzIGlzdCBuaWNodCBtw7ZnbGljaCBkaWVzZSBTZW5kdW5nIGFienVzY2hsaWXDn2VuLiBHZXNhbXQga29zdGVuIHZvbiBzZW5kdW5nZW4sIGRpZSBTaWUgaW4gZGllc2VyIFBlcmlvZGUgZXJzdGVsbHQgaGFiZW4gdm9uIHtzdGFydERhdGV9IGFuIHtlbmREYXRlfSDDvGJlcnNjaHJlaXRldCBkYXMgenVsw6Rzc2lnZSBNYXhpbXVtOiB7cmVzdHJpY3RlZFZhbHVlfSB7dmFsdWVUeXBlfS4iLCJPTkxJTkVfUEFZTUVOVF9BTEVSVF9OT1RJRklDQVRJT05fUFJPTU8iOiIiLCJTSElQTUVOVF9DT1VOVF9QRVJJT0RfQVBQUk9WQUxfUkVRVUlSRUQiOiI8ZGl2IGNsYXNzPVwiZXdmX2RpY3Rpb25hcnlfdmFsdWVcIj48ZGl2IGNsYXNzPSJtZXNzYWdlLXdyYXBwZXIiPjxwPi4gR2VzYW10IG51bW1lciBzZW5kdW5nZW4sIGRpZSBTaWUgaW4gZGllc2VyIFBlcmlvZGUgZXJzdGVsbHQgaGFiZW4gdm9uIDxiPntzdGFydERhdGV9PFwvYj4gYW4gPGI+e2VuZERhdGV9IDxcL2I+w7xiZXJzY2hyZWl0ZXQgZGFzIHp1bMOkc3NpZ2UgTWF4aW11bSB2b24gPGI+e3Jlc3RyaWN0ZWRWYWx1ZX08XC9iPi48XC9wPlxuPHA+PGI+IDxcL2I+PFwvcD5cbjxcL2Rpdj48XC9kaXY+IiwiU1VNTUFSWV9MSU5LX09OTElORV9URVJNU19BTkRfQ09ORElUSU9OUyI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPjxhIGhyZWY9XCIvY29udGVudC9kaGwvYXQvZGUvc2hpcG1lbnQvb25saW5lLWNyZWRpdC1jYXJkLXRlcm1zLWFuZC1jb25kaXRpb25zLmh0bWxcIiB0YXJnZXQ9XCJsaWdodGJveFwiIGV3Zi1saWdodGJveD1cImV3Zi1saWdodGJveFwiPk9ubGluZSBBR0JzPFwvYT48XC9kaXY+IiwiT05MSU5FX1BBWU1FTlRfU1VCX0hFQURFUl9IT1dfV0lMTF9ZT1VfUEFZIjoiWmFobHVuZ3NhcnQgYXVzd8OkaGxlbiIsIlNISVBNRU5UX0NPU1RfR1JPVVBfTElNSVRfTEVWRUwiOiJHcnVwcGUiLCJPTkxJTkVfUEFZTUVOVF9BTEVSVF9DQU5DRUxMRURfQllfVVNFUl9UUkFOU0FDVElPTiI6IlphaGx1bmcgR2Vsw7ZzY2h0IiwiTUFYX1JFVFVSTl9TSElQTUVOVF9DT1NUIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+RGllIFJldG91cnNlbmR1bmdlbiDDvGJlcnN0ZWlnZW4gZGFzIGVybGF1YnRlIE1heGltdW06IDxiPnt2YWx1ZVR5cGV9IHthY3R1YWxWYWx1ZX08XC9iPi4gw4RuZGVybiBTaWUgaWhyZSBBdXN3YWhsIHVtIHNpY2hlcnp1c3RlbGxlbiwgZGFzcyBkaWUgS29zdGVuIGlubmVyaGFsYiBkZXMgTWF4aW11bXMgbGllZ2VuLjxcL2Rpdj4iLCJPTkxJTkVfUEFZTUVOVF9BTEVSVF9BVlNfVFJBTlNBQ1RJT05fRkFJTEVEIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+S2FubiBuaWNodCBhdXNnZWbDvGhydCB3ZXJkZW4uIEJpdHRlIHByw7xmZW4gU2llIGRpZSBSZWNobnVuZ3NhZHJlc3NkYXRlbiB1bmQgdmVyc3VjaGVuIGVzIGVybmV1dCBvZGVyIFdlbm4gU2llIEhpbGZlIGJlbsO2dGlnZW4sIGtvbnRha3RpZXJlbiBTaWUgYml0dGUgZGVuIDxhIGhyZWY9XCJodHRwOi8vd3d3LmRobC5jb20vZW4vZXhwcmVzcy9teWRobF9jb250YWN0X3VzLmh0bWxcIiB0YXJnZXQ9XCJfYmxhbmtcIj5LdW5kZW5zZXJ2aWNlPFwvYT4uIDA4MjAtNTUwNTA1LjxcL2Rpdj4iLCJTSElQTUVOVF9DT1NUX1BFUklPRF9BUFBST1ZBTF9SRVFVSVJFRCI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPjxkaXYgY2xhc3M9Im1lc3NhZ2Utd3JhcHBlciI+PHA+LiBHZXNhbXQga29zdGVuIHNlbmR1bmdlbiwgZGllIFNpZSBpbiBkaWVzZXIgUGVyaW9kZSBlcnN0ZWxsdCBoYWJlbiB2b24gPGI+e3N0YXJ0RGF0ZX08XC9iPiBhbiA8Yj57ZW5kRGF0ZX08XC9iPiDDvGJlcnNjaHJlaXRldCBkYXMgenVsw6Rzc2lnZSBNYXhpbXVtIHZvbiA8Yj57cmVzdHJpY3RlZFZhbHVlfTxcL2I+IDxiPnt2YWx1ZVR5cGV9PFwvYj4uPFwvcD5cbjxwPjxiPiA8XC9iPjxcL3A+XG48XC9kaXY+PFwvZGl2PiIsIk9OTElORV9QQVlNRU5UX01TR19DT05GSVJNX0NSRURJVF9DQVJEX0RFTEVURSI6IlNpbmQgU2llIHNpY2hlciwgZGFzcyBTaWUgZGllc2UgS3JlZGl0a2FydGUgbMO2c2NoZW4gd29sbGVuPyIsIlJSX1VQR0FERV9TVUJfSEVBREVSX1VQR1JBREVfTk9XIjoiSWhyZSBTZW5kdW5nIGFtIHtVcHJnYWRlRGVsaXZlcnlUaW1lfSBmw7xyIG51ciB7cHJpY2V9IG1laHIuIiwiU1VNTUFSWV9WQUxVRV9MQUJFTF9QUk9NT1RJT05fQ09ERSI6IlJhYmF0dGNvZGUgKHtsYWJlbH0pIiwiU1VNTUFSWV9CVVRUT05fQUdSRUVfQU5EX0NPTlRJTlVFIjoiU2VuZHVuZyBhYnNjaGxpZcOfZW4iLCJNQVhfU0hJUE1FTlRfQ09TVF9ISURERU4iOiJEaWUgU2VuZHVuZ3Nrb3N0ZW4gw7xiZXJzdGVpZ2VuIGRhcyBlcmxhdWJ0ZSBNYXhpbXVtLiBLb250YWt0aWVyZW4gU2llIElocmVuIENvcnBvcmF0ZS1BZG1pbmlzdHJhdG9yIGbDvHIgd2VpdGVyZSBEZXRhaWxzLiIsIlVQR1JBREVfSU5TVVJBTkNFX1NVQl9IRUFERVJfVVBHUkFERV9JTlNVUkFOQ0VfTk9XIjoiQnVjaGVuIFNpZSB6dXPDpHR6bGljaGVuIGZpbmFuemllbGxlbiBTY2h1dHogZsO8ciB7cHJpY2V9IG1laHIgaGluenUhIiwiT05MSU5FX1BBWU1FTlRfU1VCX0hFQURFUl9DUkVESVRfUEFZTUVOVCI6Ik1pdCBLcmVkaXRrYXJ0ZSBiZXphaGxlbiJ9LCJzaGlwbWVudC1wcmludCI6eyJwcmludF9idXR0b25fcHJpbnQtY29uZmlybWF0aW9uLW5vIjoiTmVpbiAtIGF1ZiBkZXIgU2VpdGUgYmxlaWJlbiB1bmQgRG9rdW1lbnQgZHJ1Y2tlbiIsInByaW50X3N1Yi1oZWFkZXJfc2VuZC1pbXBvcnQtc2hpcG1lbnQiOiJXw6RobGVuIFNpZSBkaWUgRG9rdW1lbnRlIGF1cywgZGllIFNpZSBhbiBkZW4gVmVyc2VuZGVyIMO8YmVybWl0dGVsbiBtw7ZjaHRlbiIsInByaW50X2FsZXJ0X2xhYmVsLWNhbm5vdC1iZS1yZW5kZXJlZCI6IkVudHNjaHVsZGlndW5nIC0gdW5zZXIgU3lzdGVtIGthbm4genVyIFplaXQgSWhyIFZlcnNhbmRsYWJlbCBuaWNodCBlcnN0ZWxsZW4uIEJpdHRlIHZlcnN1Y2hlbiBTaWUgZXMgc3DDpHRlciBlcm5ldXQuIEZhbGxzIFNpZSBkZW5ub2NoIFByb2JsZW1lIGhhYmVuIHVuZCBJaHJlbiBTZW5kdW5nc2F1ZnRyYWcgbmljaHQgdmVydm9sbHN0w6RuZGlnZW4ga8O2bm5lbiwga29udGFrdGllcmVuIFNpZSB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuIiwicHJpbnRfYWxlcnRfbm8tcGlja3VwLWluZm8iOiJFbnRzY2h1bGRpZ3VuZyAtIHdpciBrw7ZubmVuIElocmUgQWJob2x1bmcgbmljaHQgaW4gZGFzIFN5c3RlbSBlaW5wZmxlZ2VuLiBCaXR0ZSBrb250YWt0aWVyZW4gU2llIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNSBmw7xyIGRpZSBFcmZhc3N1bmcgSWhyZXIgQWJob2x1bmcuIiwicHJpbnRfbGFiZWxfaW5kZW1uaXR5LWxldHRlciI6IlNjaGFkbG9zaGFsdHVuZ3Nlcmtsw6RydW5nIiwicHJpbnRfYWxlcnRfdXNlci1zZWxlY3RlZC10by1zZW5kLXJldHVybi1pbnN0cnVjdGlvbnMiOiJSZXRvdXJlbnNlbmR1bmdzaW5zdHJ1a3Rpb25lbiIsInByaW50X2hlYWRlcl9wcmludC1hbmQteW91LWFyZS1kb25lIjoiRHJ1Y2tlbiB1bmQgRmVydGlnISIsInByaW50X2xhYmVsX3dheWJpbGwiOiJMYWJlbCAoV2F5YmlsbCkiLCJwcmludF9sYWJlbF9hbnRpLWRydWciOiJBbnRpLURydWcgTGV0dGVyIiwicHJpbnRfbGFiZWxfdmF0LXJlY2VpcHQtbGFuZ3VhZ2UiOiJCZXN0w6R0aWd1bmcgaW4gYXVzZ2V3w6RobHRlciBTcHJhY2hlIGRydWNrZW46IiwicHJpbnRfbGFiZWxfcGRzIjoiUHJvZHVrdGluZm9ybWF0aW9uIChQcm9kdWN0IERpc2Nsb3N1cmUgU3RhdGVtZW50KSIsInByaW50X3N1Yi1oZWFkZXJfcmV0dXJuLWRvY3VtZW50cyI6IkRydWNrdm9yc2NoYXUgdW5kIERydWNrIElocmVyIFJldG91cnBhcGllcmUiLCJwcmludF9sYWJlbF9hbGVydC1zdGlja2VyIjoiU2VydmljZSBNZWxkdW5nIExhYmVsIiwicHJpbnRfYnV0dG9uX3NlbmQtc2VsZWN0ZWQtZG9jdW1lbnRzIjoiQXVzZ2V3w6RobHRlIERva3VtZW50ZSBzZW5kZW4iLCJwcmludF9sYWJlbF9jYXNoLXJlY2VpcHQtbGFuZ3VhZ2UiOiJDYXNoIHJlY2VpcHQgbGFuZ3VhZ2UiLCJwcmludF92YWx1ZS1zci10aXRsZS10ZXh0IjoiU2VuZHVuZ3NiZWxlZyIsInByaW50X2FsZXJ0X2Nhbm5vdC1zaG93LXRyYWNraW5nLW51bWJlciI6IkVudHNjaHVsZGlndW5nIC0gZXMgaXN0IGVpbiBGZWhsZXIgYXVmZ2V0cmV0ZW4gdW5kIHdpciBrw7ZubmVuIElocmUgU2VuZHVuZyBuaWNodCBlcnN0ZWxsZW4uIEJpdHRlIGtvbnRha3RpZXJlbiBTaWUgdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyICQoY3VzdG9tZXItc2VydmljZS1waG9uZSkuIiwicHJpbnRfbGFiZWxfaW52b2ljZSI6IlpvbGxyZWNobnVuZyIsInByaW50X2xhYmVsX2FkZHJlc3Mtc3RpY2tlciI6IkVtcGbDpG5nZXIgQWRyZXNzIExhYmVsIiwicHJpbnRfbGFiZWxfY2VydGlmaWNhdGVfb2Zfb3JpZ2luIjoiVXJzcHJ1bmdzc3plcnRpZmlrYXQiLCJwcmludF9zdWItaGVhZGVyX2FkZGl0aW9uYWwtZG9jdW1lbnRzLXRvLXByaW50LXBvcHVwIjoiWnVzw6R0emxpY2hlIERva3VtZW50ZSIsInByaW50X3ZhbHVlLWxhYmVsX3NlbGVjdC1wcmludGVyIjoiRHJ1Y2tlciBhdXN3w6RobGVuIiwicHJpbnRfYnV0dG9uX3ByaW50LXNlbGVjdGVkLWRvY3VtZW50cyI6IkF1c2dld8OkaGx0ZSBEb2t1bWVudGUgZHJ1Y2tlbiIsInByaW50X3N1Yi1oZWFkZXJfYWRkaXRpb25hbC1kb2N1bWVudHMtdG8tcHJpbnQiOiJXZWl0ZXJlIERva3VtZW50ZSB6dW0gRHJ1Y2tlbiIsInByaW50X3N1Yi1oZWFkZXJfcHJpbnQtc2VsZWN0ZWQtc2hpcG1lbnRzLWRvY3VtZW50cyI6IkRydWNrZW4gRG9rdW1lbnRlbnNlbmR1bmdlbiIsInByaW50X2FsZXJ0X3NoaXBtZW50LXNhdmVkLWluLW1hbmFnZWQtc2hpcG1lbnQiOiJTZW5kdW5nIHd1cmRlIHVudGVyIFwiTWFuYWdlIFNoaXBtZW50c1wiIGdlc3BlaWNoZXJ0IiwicHJpbnRfYnV0dG9uX21hbmlmZXN0LXdpdGhvdXQtcHJpbnQiOiJTZW5kdW5nc2F1ZnRyYWcgZmVydGlnc3RlbGxlbiIsInByaW50X2xhYmVsX2N1c3RvbS1yZXR1cm4taW5zdHJ1Y3Rpb25zIjoiUmV0b3VyZW5zZW5kdW5nc2luc3RydWt0aW9uZW4iLCJwcmludF9saW5rX2Rvd25sb2FkLXNlbGVjdGVkLWRvY3VtZW50cyI6IkhlcnVudGVyZ2VsYWRlbmUgRG9rdW1lbnRlIGRydWNrZW4iLCJwcmludF9lcnJvcl9jb3BpZXMtbnVtYmVyLXdyb25nLWZvcm1hdCI6IlVuZ8O8bHRpZ2VzIEZvcm1hdCIsInByaW50X2J1dHRvbl9wcmludC1jb25maXJtYXRpb24teWVzIjoiSmEiLCJwcmludF9sYWJlbF9hbGVydF9zdGlja2VyIjoiU2VydmljZSBBbGVydCBMYWJlbCIsInByaW50X3N1Yi1oZWFkZXJfcHJpbnQtYW5kLXByZXZpZXciOiJEcnVja3ZvcnNjaGF1IiwicHJpbnRfYnV0dG9uX3ByaW50LXdheWJpbGwiOiJGcmFjaHRicmllZiBkcnVja2VuIiwicHJpbnRfcGFyYWdyYXBoX3NlbmQtZG9jdW1lbnRzLXRvLXNoaXBwZXIiOiJWb3JzY2hhdSB2b3IgZGVtIFNlbmRlbiIsInByaW50X2FsZXJ0X3NlcnZpY2UtZXJyb3IiOiJFaW4gRmVobGVyIGlzdCBhdWZnZXRyZXRlbi4gRmFsbHMgU2llIElocmVuIFNlbmR1bmdzYXVmdHJhZyBuaWNodCBhYnNjaGxpZcOfZW4ga8O2bm5lbiwga29udGFrdGllcmVuIFNpZSB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuIiwicHJpbnRfaGVhZGVyX3NlbmQtYW5kLXlvdS1hcmUtZG9uZSI6IkxlaXRlbiBTaWUgZGllIERva3VtZW50ZSB1bmQgSW5zdHJ1a3Rpb25lbiBhbiBkZW4gVmVyc2VuZGVyIHdlaXRlciIsInByaW50X2Vycm9yX2NvcGllcy1udW1iZXItbGVzcy10aGFuLW1pbiI6IkVzIHdlcmRlbiBtZWhyIEtvcGllbiBiZW7DtnRpZ3QiLCJwcmludF9wYXJhZ3JhcGhfbGFiZWxzLWFuZC1jdXN0b21zLXBhcGVyLWZvci1yZXR1cm4iOiIiLCJwcmludF9wYXJhZ3JhcGhfbmF2aWdhdGluZy13aXRob3V0LXByaW50aW5nIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+PGRpdiBjbGFzcz0ibWVzc2FnZS13cmFwcGVyIj48cD48Yj5WZXJnZXNzZW4gU2llIG5pY2h0IElociBWZXJzYW5kbGFiZWwgdW5kIElocmUgRG9rdW1lbnRlIHp1IGRydWNrZW4hPFwvYj48XC9wPlxuPHVsPlxuPGxpPk5pY2h0IGJlaSBNeURITCsgcmVnaXN0cmllcnQ/IERydWNrZW4gU2llIGpldHp0IGF1cyBvZGVyIHNww6R0ZXIgbWl0aGlsZmUgZGVyIEJlc3TDpHRpZ3VuZ3NtYWlsPFwvbGk+XG48bGk+QmVyZWl0cyByZWdpc3RyaWVydD8gRHJ1Y2tlbiBTaWUgamV0enQgYXVzIG9kZXIgc3DDpHRlciB1bnRlciBkZW0gTWVuw7xwdW5rdCBWZXJ3YWx0ZW48XC9saT5cbjxcL3VsPlxuPFwvZGl2PjxcL2Rpdj4iLCJwcmludF9lcnJvcl9jb3BpZXMtbnVtYmVyLWlzLXJlcXVpcmVkIjoiRXJmb3JkZXJsaWNoIiwicHJpbnRfcGFyYWdyYXBoX2xhYmVscy1hbmQtY3VzdG9tcy1wYXBlcndvcmsiOiJWZXJzYW5kbGFiZWwgdW5kIFpvbGxkb2t1bWVudGUgbcO8c3NlbiBmw7xyIGRlbiBGYWhyZXIgYXVzZ2VkcnVja3Qgd2VyZGVuIiwicHJpbnRfYnV0dG9uX2NvbXBsZXRlLXNoaXBtZW50IjoiU2VuZHVuZ3NhdWZ0cmFnIGZlcnRpZ3N0ZWxsZW4iLCJwcmludF92YWx1ZS1kaXNjbGFpbWVyLXRleHQiOiJBbmdhYmUgdm9yYmVoYWx0bGljaCDDnGJlcnByw7xmdW5nIGRlciBHZXdpY2h0c2FuZ2FiZSIsInByaW50X2xhYmVsX2xpdGhpdW0tYmF0dGVyaWVzIjoiTGl0aGl1bSBCYXR0ZXJpZW4iLCJwcmludF9saW5rX2Rvd25sb2FkLWRvY3VtZW50cyI6IkRva3VtZW50ZSBoZXJ1bnRlcmxhZGVuIiwicHJpbnRfbGFiZWxfdmF0LXJlY2VpcHQiOiJTZW5kdW5nc2JlbGVnIiwicHJpbnRfZXJyb3JfY29waWVzLW51bWJlci1ncmF0ZXItdGhhbi1tYXgiOiJNYXhpbWFsZSBBbnphaGwgS29waWVuOiAxMCIsInByaW50X2FsZXJ0X3ByaW50ZXItZXJyb3IiOiJWZXJiaW5kdW5nIHp1bSBEcnVja2VyIG5pY2h0IHZlcmbDvGdhYnIuIMOcYmVycHLDvGZlbiBTaWUgZGllIERydWNrZXItIFZlcmJpbmR1bmcgb2RlciB2ZXJ3ZWRuZW4gU2llIGVpbmVuIGFuZGVyZW4gRHJ1Y2tlciwiLCJxdW90ZV9hbGVydF9iMmwtc2VsZWN0ZWQtcHJvZHVjdC1pbnZhbGlkIjoiTGllZmVyb3B0aW9uIG5pY2h0IHZlcmbDvGdiYXIiLCJwcmludF9idXR0b25fZG93bmxvYWQtc2lsZW50LXByaW50LXByb2dyYW0iOiJEb3dubG9hZCBEcnVja2VyIEFwcCIsInByaW50X3ZhbHVlLWNvcHlyaWdodC10ZXh0IjoiMjAxOSDCqSBEZXV0c2NoZSBQb3N0IEFHIC0gQWxsIHJpZ2h0cyByZXNlcnZlZCIsInByaW50X3ZhbHVlX2luZGlhbi1kaXNjbGFpbWVyLXRleHQiOiJUbyBvYnRhaW4gYSBHU1QgSW52b2ljZSwgY29udGFjdCB1cyBhdDrCoCs5MS0yMi02NzQxMjYxNSIsInByaW50X2FsZXJ0X3RoZXJtYWwtcHJpbnRlci1hcHBsaWNhdGlvbi1lcnJvciI6IkRvd25sb2FkIFByaW50IEFwcCBhbmQgdHJ5IHByaW50aW5nIGFnYWluIiwicHJpbnRfYWxlcnRfbm90aWZ5LXVzZXItdG8tY2hhbmdlLWZmLXNldHRpbmdzIjoiS2VpbmUgVmVyYmluZHVuZyB6dW0gRHJ1Y2tlciIsInByaW50X3ZhbHVlX2hpZGRlbi1yYXRlcy1kaXNjbGFpbWVyLXRleHQiOiJEaWUgS29zdGVuIHNpbmQgbnVyIGbDvHIgZGVuIEluaGFiZXIgZGVyIEt1bmRlbm51bW1lciBzaWNodGJhciIsInByaW50X2FsZXJ0X3Ryb3VibGVzLXByaW50aW5nIjoie2xpbmt9IHdlbm4gU2llIFByb2JsZW1lIG1pdCBkZW0gRHJ1Y2tlbiBoYWJlbiIsInByaW50X3BhcmFncmFwaF9wcmludC1jb25maXJtYXRpb24tdGl0bGUiOiJXb2xsZW4gU2llIGRpZXNlIFNlaXRlIHdpcmtsaWNoIHZlcmxhc3Nlbj8iLCJwcmludF9idXR0b25fcHJpbnQtb3RoZXItZG9jdW1lbnRzIjoiV2VpdGVyZSBEb2t1bWVudGUgZHJ1Y2tlbiIsInByaW50X2FsZXJ0X3NoaXBtZW50LW5vdC1mb3VuZCI6IkVpbiBGZWhsZXIgaXN0IGF1ZmdldHJldGVuLiBGYWxscyBTaWUgSWhyZW4gU2VuZHVuZ3NhdWZ0cmFnIG5pY2h0IGFic2NobGllw59lbiBrw7ZubmVuLCBrb250YWt0aWVyZW4gU2llIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4iLCJwcmludF9sYWJlbF9wcmludC1jb25maXJtYXRpb24tcmVtZW1iZXIiOiJEaWVzIG5pY2h0IG1laHIgYW56ZWlnZW4iLCJwcmludF9sYWJlbF9yZWNlaXB0IjoiQmVsZWciLCJwcmludF9sYWJlbF9yZXR1cm4taW5zdHJ1Y3Rpb25zIjoiUmV0b3VyZW5zZW5kdW5nc2luc3RydWt0aW9uZW4iLCJwcmludF9sYWJlbF9jb3B5IjoiQW56YWhsIGRlciBLb3BpZW4ifSwiU0hJUE1FTlRfSU1QT1JUIjp7IlNISVBNRU5UX0lNUE9SVF9TRUxFQ1RfT1BUSU9OX1VTRVJfU0NIRU1FUyI6IiIsIlNISVBNRU5UX0lNUE9SVF9QQVJBR1JBUEhfRklMTF9NQU5EQVRPUllfRklFTERTIjoibmljaHQgYWxsZSBGZWxkZXIgc2luZCB2ZXJrbsO8cGZ0IiwiTUFOREFUT1JZX0xBQkVMIjoiKEVyZm9yZGVybGljaCkiLCJTSElQTUVOVF9JTVBPUlRfU0VMRUNUX09QVElPTl9DT1JQX1NDSEVNRVMiOiJTY2hlbWVuIG1laW5lcyBVbnRlcm5laG1lbnMiLCJTSElQTUVOVF9JTVBPUlRfU0VMRUNUX01BTkFHRV9DUkVBVEVfTkVXIjoiTmV1IGVyc3RlbGxlbiJ9LCJEQVRFVElNRSI6eyJOT1ZFTUJFUl9TSE9SVCI6IkRpIiwiSkFOVUFSWV9TSE9SVCI6IkphbiIsIlRIVVJTREFZIjoiRG9ubmVyc3RhZyIsIk1BWSI6Ik1haSIsIkZSSURBWV9TSE9SVCI6IkZyIiwiRlJJREFZIjoiRnJlaXRhZyIsIkRFQ0VNQkVSIjoiRGV6ZW1iZXIiLCJTRVBURU1CRVJfU0hPUlQiOiJTZXB0IiwiRkVCUlVBUlkiOiJGZWJydWFyIiwiQVBSSUxfU0hPUlQiOiJBcHIiLCJXRURORVNEQVkiOiJNaXR0d29jaCIsIkpVTFlfU0hPUlQiOiJKdWxpIiwiVEhVUlNEQVlfU0hPUlQiOiJEbyIsIlRPTU9SUk9XIjoibW9yZ2VuIiwiU0FUVVJEQVkiOiJTYW1zdGFnIiwiSE9MSURBWSI6IkZlaWVydGFnIiwiREVDRU1CRVJfU0hPUlQiOiJEZXoiLCJNQVJDSF9TSE9SVCI6Ik3DpHJ6IiwiT0NUT0JFUl9TSE9SVCI6Ik9rdCIsIkFVR1VTVF9TSE9SVCI6IkF1ZyIsIkFQUklMIjoiQXByaWwiLCJKVU5FIjoiSnVuaSIsIkpBTlVBUlkiOiJKYW51YXIiLCJTVU5EQVkiOiJTb25udGFnIiwiVE9EQVkiOiJoZXV0ZSIsIk9DVE9CRVIiOiJPa3RvYmVyIiwiVFVFU0RBWSI6IkRpZW5zdGFnIiwiVFVFU0RBWV9TSE9SVCI6IkRpIiwiU0VQVEVNQkVSIjoiU2VwdGVtYmVyIiwiTk9WRU1CRVIiOiJOb3ZlbWJlciIsIlNVTkRBWV9TSE9SVCI6IlNvIiwiSlVORV9TSE9SVCI6Ikp1bmkiLCJNT05EQVkiOiJNb250YWciLCJTQVRVUkRBWV9TSE9SVCI6IlNhIiwiTUFSQ0giOiJNw6RyeiIsIkFVR1VTVCI6IkF1Z3VzdCIsIkpVTFkiOiJKdWxpIiwiTU9OREFZX1NIT1JUIjoiTW8iLCJXRURORVNEQVlfU0hPUlQiOiJNaSIsIk1BWV9TSE9SVCI6Ik1haSIsIkZFQlJVQVJZX1NIT1JUIjoiRmViIn0sIm1hbmFnZS1hY2NvdW50cyI6eyJtYW5hZ2UtYXV0aF9iYWNrZW5kLWVycm9yX2N1c3RvbWVyLWFuZC1hc3NpZ25lZS1jb3VudHJ5LWNvZGVzLWFyZS1kaWZmZXJlbnQiOiJEaWVzZXIgQWNjY291bnQga2FubiBuaWNodCB2b24gZGllc2VyIFBlcnNvbiBnZW51dHp0IHdlcmRlbi4gRGllIERITCBBY2NvdW50bnVtbWVyIGJlemllaHQgc2ljaCBhdWYgZWluIGFuZGVyZXMgTGFuZCBhbHMgZGFzIExhbmQgaW5kZW0ge3VzZXJOYW1lfSByZWdpc3RyaWVydCBpc3QgZsO8ciBNeURITCsuIFfDpGhsZW4gU2llIGVudHdlZGVyIGVpbmUgYW5kZXJlIEFjY291bnRudW1tZXIgb2RlciBlaW5lIGFuZGVyZSBQZXJzb24uIiwibXktZGhsLWFjY291bnRzX2JhY2tlbmQtZXJyb3JfY291bnRyeS1ub3QtYWxsb3ctZm9yZWlnbi1hY2NvdW50IjoiSW1wb3J0IEFjY291bnRudW1tZXIgbmljaHQgZXJsYXVidCIsIm1hbmFnZS1hdXRoX2JhY2tlbmQtZXJyb3JfZHV0aWVzLWFuZC10YXhlcy1hY2NvdW50LW5vdC1mb3VuZCI6IlVuZ8O8bHRpZ2VyIEFjY291bnQiLCJteS1kaGwtYWNjb3VudHNfYmFja2VuZC1lcnJvcl93cm9uZy1vbGQtcGFzc3dvcmQiOiJVbmfDvGx0aWciLCJteS1kaGwtYWNjb3VudHNfYmFja2VuZC1lcnJvcl91c2VyLWFjY291bnQtY291bnRyeS1zaG91bGQtYmUtdGhlLXNhbWUtZm9yLWxvY2FsLWFjY291bnRzIjoiQWNjb3VudCB1bmQgTGFuZCBtw7xzc2VuIMO8YmVyZWluc3RpbW1lbiIsIm15LWRobC1hY2NvdW50c19iYWNrZW5kLWVycm9yX2FjY291bnQtaXMtbm90LWFwcHJvdmVkIjoiQWNjb3VudCBnZXNwZXJydC4gS29udGFrdGllcmVuIFNpZSBJaHJlbiBESEwgS3VuZGVuYmV0cmV1ZXIiLCJteS1kaGwtYWNjb3VudHNfYmFja2VuZC1lcnJvcl9hY2NvdW50LWNvdW50cnktbm90LWJlbG9uZ3MtdG8teW91ci1jb3VudHJ5IjoiVW5nw7xsdGlnZXIgQWNjb3VudCIsIm15LWRobC1hY2NvdW50c19iYWNrZW5kLWVycm9yX2FjY291bnQtbm90LWFwcHJvdmVkIjoiVW5nw7xsdGlnZXIgQWNjb3VudCIsIm1hbmFnZS1hdXRoX2JhY2tlbmQtZXJyb3JfZHV0aWVzLWFuZC10YXhlcy1hY2NvdW50LWlzLW5vdC12YWxpZCI6IlVuZ8O8bHRpZ2VyIEFjY291bnQiLCJteS1kaGwtYWNjb3VudHNfYmFja2VuZC1lcnJvcl9hY2NvdW50LWlzLWFscmVhZHktdXNlZC1mb3ItY29ycG9yYXRpb24iOiJTaWUgc2luZCBuaWNodCBiZXJlY2h0aWd0LCBkaWVzZW4gQWNjb3VudCB6dSBudXR6ZW4uIEtvbnRha3RpZXJlbiBzaWUgZGVuIEluaGFiZXIgdW0gZWluZSBBdXRob3Jpc2llcnVuZyB6dSBlcmhhbHRlbi4iLCJteS1kaGwtYWNjb3VudHNfYmFja2VuZC1lcnJvcl9hY2NvdW50LWNhbm5vdC1iZS11c2VkLWluLWNvdW50cnkiOiJBY2NvdW50IHVuZCBMYW5kIG3DvHNzZW4gw7xiZXJlaW5zdGltbWVuIiwibXktZGhsLWFjY291bnRzX2JhY2tlbmQtZXJyb3JfY291bnRyeS1ub3QtYWxsb3ctbG9jYWwtYWNjb3VudCI6IkFjY291bnQgbmljaHQgZXJsYXVidCIsIm15LWRobC1hY2NvdW50c19iYWNrZW5kLWVycm9yX2F0LWxlYXN0LW9uZS1zaGlwcGVyLWFjY291bnQtc2hvdWxkLXJlbWFpbiI6Ik1pbmRlc3RlbnMgZWluIERITCBBY2NvdW50IG11c3MgaW4gTXkgREhMIEFjY291bnQgZ2VzcGVpY2hlcnQgc2Vpbi4iLCJtYW5hZ2UtYXV0aF9iYWNrZW5kLWVycm9yX2RobC1hY2NvdW50LW5vdC1mb3VuZCI6IlVuZ8O8bHRpZ2VyIEFjY291bnQuIEtvbnRha3RpZXJlbiBTaWUgSWhyZW4gREhMIEt1bmRlbmJldHJldWVyLiIsIm1hbmFnZS1hdXRoX2Vycm9yX3VuYWJsZS10by1ncmFudC1vd24tZGhsLWFjY291bnQtdXNhZ2UiOiJTaWUga8O2bm5lbiBzaWNoIHNlbGJzdCBrZWluZSBCZXJlY2h0aWd1bmcgZ2V3w6RocmVuIiwibXktZGhsLWFjY291bnRzX2JhY2tlbmQtZXJyb3JfZW50aXR5LWRvZXMtbm90LWV4aXN0IjoiQWNjb3VudCBOdW1tZXIgbmljaHQgbMOkbmdlciBnw7xsdGlnIiwibXktZGhsLWFjY291bnRzX2JhY2tlbmQtZXJyb3Jfc2VsZWN0ZWQtY291bnRyeS1kb2VzLW5vdC1tYXRjaCI6IkFjY291bnQgdW5kIExhbmQgbcO8c3NlbiDDvGJlcmVpbnN0aW1tZW4iLCJteS1kaGwtYWNjb3VudHNfYmFja2VuZC1lcnJvcl9iaWxsaW5nX2Vucm9sbG1lbnRfd2l0aG91dF9hY2NvdW50IjoiREhMIEFjY291bnRudW1tZXIgZXJmb3JkZXJsaWNoLiBGYWxscyBTaWUgZWluZW4gQWNjb3VudCBoYWJlbiwgZsO8Z2VuIFNpZSBpaG4gdW50ZXIgTWVpbmUgRWluc3RlbGx1bmdlbiBoaW56dcKgIiwibXktZGhsLWFjY291bnRzX2JhY2tlbmQtZXJyb3Jfc2VsZi1yZWdpc3RyYXRpb24tbm90LWFsbG93ZWQiOiIiLCJteS1kaGwtYWNjb3VudHNfYmFja2VuZC1lcnJvcl9lbXB0eV9hY2NvdW50X2xpc3QiOiJNaW5kZXN0ZW5zIGVpbiBESEwgQWNjb3VudCBtdXNzIGluIE15IERITCBBY2NvdW50IGdlc3BlaWNoZXJ0IHNlaW4uIiwibXktZGhsLWFjY291bnRzX2JhY2tlbmQtZXJyb3JfYWNjb3VudC1pcy1pbmFjdGl2ZSI6IlVuZ8O8bHRpZ2VyIEFjY291bnQiLCJteS1kaGwtYWNjb3VudHNfYmFja2VuZC1lcnJvcl9hY2NvdW50LWRvZXMtbm90LWV4aXN0LWVycm9yIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+RWluIEFjY291bnQgbXVzcyBoaW56dWdlZsO8Z3Qgd2VyZGVuLiBGw7xnZW4gU2llIGRlbiBBY2NvdW50IHVudGVyIDxhIGhyZWY9XCIvY29udGVudC9kaGwvYXQvZGUvc2hpcG1lbnQtc2V0dGluZ3MuaHRtbCMvZGhsLWFjY291bnRzXCIgdGFyZ2V0PVwiX3NlbGZcIj5NZWluZSBESEwgQWNjb3VudHM8XC9hPiBoaW56dSB1bmQgdmVyc3VjaGVuIFNpZSBlcyBkYW5uIGVybmV1dC48XC9kaXY+IiwibXktZGhsLWFjY291bnRzX2JhY2tlbmQtZXJyb3JfY29ycG9yYXRlLWFjY291bnQtbm90LWFsbG93ZWQiOiJSZWdpc3RyaWVydW5nIG1pdCBkaWVzZW0gQWNjb3VudCBuaWNodCBtw7ZnbGljaC4gUHJvYmllcmVuIFNpZSBlaW5lIGFuZGVyZSBBY2NvdW50bnVtbWVyIG9kZXIgcmVnaXN0cmllcmVuIFNpZSBzaWNoIG9obmUgQWNjb3VudCB1bmQgemFobGVuIFNpZSBkaWUgU2VuZHVuZyBtaXQgZGVyIEtyZWRpdGthcnRlLiIsIm15LWRobC1hY2NvdW50c19hbGVydF9yZW1vdmUtZ3JhbnRlZC1hY2NvdW50cyI6IlNpZSBoYWJlbiBhbmRlcmVuIGRlbiBadWdyaWZmIGF1ZiBkaWVzZW4gQWNjb3VudCBnZW5laG1pZ3QuIFNpZSBtw7xzc2VuIGRpZSBBdXRvcmlzaWVydW5nZW4gZXJzdCB3aWRlcnJ1ZmVuIHVtIGRlbiBBY2NvdW50IGzDtnNjaGVuIHp1IGvDtm5uZW4uIiwibXktZGhsLWFjY291bnRzX2JhY2tlbmQtZXJyb3JfYWNjLXVzZWQtaW4tY29ycG9yYXRlLWluc3RhbmNlIjoiVW5nw7xsdGlnZXIgQWNjb3VudC4gS29udGFrdGllcmVuIFNpZSBJaHJlbiBESEwgS3VuZGVuYmV0cmV1ZXIuIiwibXktZGhsLWFjY291bnRzX2JhY2tlbmQtZXJyb3JfdXNlci1ub3QtdmFsaWQiOiJVbmfDvGx0aWciLCJteS1kaGwtYWNjb3VudHNfYmFja2VuZC1lcnJvcl9hY2NvdW50LWJlbG9uZ3MtdG8tYW5vdGhlci1jdXN0b21lciI6IlVuZ8O8bHRpZ2VyIEFjY291bnQiLCJtYW5hZ2UtYXV0aF9iYWNrZW5kLWVycm9yX2RobC1hY2NvdW50LWlzLWdyYW50ZWQtd2l0aC1ibGFua2V0LWFscmVhZHkiOiJEaWUgQmV2b2xsbcOkY2h0aWd1bmcgZGVuIEFjY291bnQgenUgdmVyd2VuZGVuLCBpc3QgZGllc2VyIFBlcnNvbiBiZXJlaXRzIGdld8OkaHJ0LiIsIm15LWRobC1hY2NvdW50c19tc2dfYWNjb3VudC1ub3QtdmFsaWQiOiJVbmfDvGx0aWdlciBBY2NvdW50IiwibXktZGhsLWFjY291bnRzX2JhY2tlbmQtZXJyb3JfYWNjb3VudC1jYW5ub3QtYmUtdXNlZC1pbi1hZGRyZXNzYm9vayI6IlVuZ8O8bHRpZ2VyIEFjY291bnQiLCJteS1kaGwtYWNjb3VudHNfYmFja2VuZC1lcnJvcl9jb3VudHJ5LW5vdC1hbGxvdy1ub24tZGlnaXQtYWNjb3VudHMiOiJudXIgWmFobGVuIiwibWFuYWdlLWF1dGhfYmFja2VuZC1lcnJvcl9kaGwtYWNjb3VudC1pcy1ub3QtdmFsaWQiOiJVbmfDvGx0aWdlciBBY2NvdW50In0sImNyMDA2NyI6eyJjci1uYW1lIjoiQ0FCOiBFeHBvcnQgY29udGFjdHMifSwiY3IwMTg4Ijp7ImNyLWVycm9ycy1yZXF1aXJlZCI6IlRoaXMgZmllbGQgaXMgcmVxdWlyZWQiLCJjci1uYW1lIjoiR3JvdXAgTWF4aW11bSBDb3N0IG9mIFNoaXBtZW50czogVW5pdCBvZiBQZXJpb2QifSwiY3IwMDY4Ijp7ImNyLW5hbWUiOiJBbGxvdyBBY2Nlc3MgdG8gR3JvdXAgQWRkcmVzcyBCb29rIn0sImNyMDE4OSI6eyJjci1lcnJvcnMtcmVxdWlyZWQiOiJUaGlzIGZpZWxkIGlzIHJlcXVpcmVkIiwiY3ItbmFtZSI6Ikdyb3VwIE1heGltdW0gQ29zdCBvZiBTaGlwbWVudHM6IEVmZmVjdGl2ZSBEYXRlIFN0YXJ0In0sImNyMDA2OSI6eyJjci1uYW1lIjoiR0FCOiBDcmVhdGUgY29udGFjdHMifSwiY3Itbm90aWZpY2F0aW9ucy1hbmQtc2hhcmUiOnsiZ3JvdXAtbmFtZV9oZWFkZXIiOiJCZW5hY2hyaWNodGlndW5nZW4iLCJub3RpZmljYXRpb25zLWFuZC1zaGFyZV9zdWItaGVhZGVyIjoiIiwibm90aWZpY2F0aW9ucy1hbmQtc2hhcmVfbGFiZWxfY3IwMTMyIjoiRGFyZiBCZW5hY2hyaWNodGlndW5nZW4genUgU2VuZHVuZ3NkZXRhaWxzIHVuZCAtc3RhdHVzIGFuIGFuZGVyZSBzZW5kZW4ifSwiRVJST1JTIjp7IkVNQUlMX0VSUk9SX01FU1NBR0UiOiJWb3JnZWdlYmVuZXMgRm9ybWF0OiBuYW1lQGVtYWlsLmNvbSIsIklOVkFMSURfQ09NTU9ESVRZX0NPREUiOiJ1bmfDvGx0aWdlciBDb21tb2RpdHkgQ29kZSIsIklOVkFMSURfQ09NQklOQVRJT05fUE9TVEFMX1pJUF9QUk9WSU5DRV9DSVRZIjoiUG9zdGxlaXR6YWhsLCBCdW5kZXNsYW5kIHVuZCBTdGFkdCBzdGltbXQgbmljaHQgw7xiZXJlaW4iLCJFUlJPUl9PQ0NVUlJFRF9DT05UQUNUX0RITCI6IlNvcnJ5IFx1MjAxMyB1bnNlciBTeXN0ZW0gaXN0IGRlcnplaXQgbmljaHQgdmVyZsO8Z2Jhci4gQml0dGUgdmVyc3VjaGVuIFNpZSBlcyBzcMOkdGVyIG5vY2ggZWlubWFsIG9kZXIga29udGFrdGllcmVuIFNpZSB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUgKDIwIGN0IGplIEFucnVmIGF1cyBkZW4gZGV1dHNjaGVuIEZlc3RuZXR6ZW4sIG1heC4gNjAgY3QgYXVzIGRlbiBkZXV0c2NoZW4gTW9iaWxmdW5rbmV0emVuKS4iLCJNQU5BR0VfU0hJUE1FTlRTX0RBVEVfUkFOR0VfV1JPTkdfUkFOR0UiOiJVbmfDvGx0aWdlcyBGb3JtYXQiLCJJTlZBTElEX0NPTUJJTkFUSU9OX1NVQlVSQl9DSVRZIjoiVm9yb3J0IHVuZCBTdGFkdCBzdGltbXQgbmljaHQgw7xiZXJlaW4iLCJCQURfR0FURVdBWSI6IkVudHNjaHVsZGlnZW4gU2llIFx1MjAxMyBVbnNlciBTeXN0ZW0gaXN0IGRlcnplaXQgbmljaHQgdmVyZsO8Z2Jhci4gQml0dGUgdmVyc3VjaGVuIFNpZSBlcyBzcMOkdGVyIGVybmV1dCBvZGVyIGtvbnRha3RpZXJlbiBTaWUgZGVuIHRlY2huaXNjaGVuIFN1cHBvcnQgdW50ZXIgKzQzIDIyMzYgMjA3IDExMTIgb3IgMTExNCIsIkZPUk1fRklFTERfSVNfUkVRVUlSRUQiOiJFcmZvcmRlcmxpY2giLCJNQVhfTEVOR1RIX0VSUk9SX01FU1NBR0UiOiJNYXhpbWFsIFplaWNoZW46IHttYXhMZW5ndGh9IiwiRVJST1JfT0NDVVJSRURfQ09OVEFDVF9URUNITklDQUxfU1VQUE9SVCI6IkVudHNjaHVsZGlnZW4gU2llIFx1MjAxMyBVbnNlciBTeXN0ZW0gaXN0IGRlcnplaXQgbmljaHQgdmVyZsO8Z2Jhci4gQml0dGUgdmVyc3VjaGVuIFNpZSBlcyBzcMOkdGVyIGVybmV1dCBvZGVyIGtvbnRha3RpZXJlbiBTaWUgZGVuIHRlY2huaXNjaGVuIFN1cHBvcnQgdW50ZXIgKzQzIDIyMzYgMjA3IDExMTIgb3IgMTExNCIsIkdBVEVXQVlfVElNRU9VVCI6IlNvcnJ5IFx1MjAxMyB1bnNlciBTeXN0ZW0gaXN0IGRlcnplaXQgbmljaHQgdmVyZsO8Z2Jhci4gQml0dGUgdmVyc3VjaGVuIFNpZSBlcyBzcMOkdGVyIG5vY2ggZWlubWFsIG9kZXIga29udGFrdGllcmVuIFNpZSB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUgKDIwIGN0IGplIEFucnVmIGF1cyBkZW4gZGV1dHNjaGVuIEZlc3RuZXR6ZW4sIG1heC4gNjAgY3QgYXVzIGRlbiBkZXV0c2NoZW4gTW9iaWxmdW5rbmV0emVuKS4iLCJVTkFCTEVfVE9fUFJPQ0VTU19SRVFVRVNUIjoiU29ycnkgXHUyMDEzIHVuc2VyIFN5c3RlbSBpc3QgZGVyemVpdCBuaWNodCB2ZXJmw7xnYmFyLiBCaXR0ZSB2ZXJzdWNoZW4gU2llIGVzIHNww6R0ZXIgbm9jaCBlaW5tYWwgb2RlciBrb250YWt0aWVyZW4gU2llIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNSAoMjAgY3QgamUgQW5ydWYgYXVzIGRlbiBkZXV0c2NoZW4gRmVzdG5ldHplbiwgbWF4LiA2MCBjdCBhdXMgZGVuIGRldXRzY2hlbiBNb2JpbGZ1bmtuZXR6ZW4pLiIsIlVQTE9BREVEX0ZJTEVfRkFJTEVEIjoiVXBsb2FkIG5pY2h0IGVyZm9sZ3QiLCJQQVRURVJOX05VTUJFUl9FUlJPUl9NRVNTQUdFIjoiTmljaHQgRXJsYXVidDogMCIsIkFDQ0VTU19GT1JCSURERU5fVElUTEUiOiIiLCJOT1RfRU5PVUdIX0RBVEEiOiJQcmVpc2UgbmljaHQgdmVyZsO8Z2JhciIsIlBBVFRFUk5fRVJST1JfTUVTU0FHRSI6IkVybGF1YnQ6IFphaGxlbiwgUHVua3QgdW5kIEtvbW1hIiwiSU5URVJOQUxfU0VSVklDRV9FUlJPUiI6IkVpbiBGZWhsZXIgaXN0IGF1ZmdldHJldGVuIiwiSU5WQUxJRF9DT01CSU5BVElPTl9QT1NUQUxfWklQX1NVQlVSQl9DSVRZIjoiUG9zdGxlaXR6YWhsLCBWb3JvcnQgdW5kIFN0YWR0IHN0aW1tdCBuaWNodCDDvGJlcmVpbiIsIkNPTU1PTl9NU0dfVkFMSURBVElPTl9FTUFJTF9BTFJFQURZX0VYSVNUUyI6IkUtTWFpbCBBZHJlc3NlIGJlcmVpdHMgaW4gVmVyd2VuZHVuZyAtIEJpdHRlIHZlcndlbmRlbiBTaWUgZWluZSBhbmRlcmUgRS1NYWlsLUFkcmVzc2UiLCJNQU5BR0VfU0hJUE1FTlRTX0RBVEVfUkFOR0VfV1JPTkdfRk9STUFUIjoiVW5nw7xsdGlnZXMgRm9ybWF0IiwiQUNDRVNTX0ZPUkJJRERFTl9NRVNTQUdFIjoiWnVnYW5nIHZlcndlaWdlcnQuIEtvbnRha3RpZXJlbiBTaWUgSWhyZW4gREhMIEFjY291bnRtYW5hZ2VyLiIsIkNJX01PREFMX1RJVExFIjoiRWluIEZlaGxlciBpc3QgYXVmZ2V0cmV0ZW4iLCJTRVJWSUNFX1VOQVZBSUxBQkxFIjoiU29ycnkgXHUyMDEzIHVuc2VyIFN5c3RlbSBpc3QgZGVyemVpdCBuaWNodCB2ZXJmw7xnYmFyLiBCaXR0ZSB2ZXJzdWNoZW4gU2llIGVzIHNww6R0ZXIgbm9jaCBlaW5tYWwgb2RlciBrb250YWt0aWVyZW4gU2llIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNSAoMjAgY3QgamUgQW5ydWYgYXVzIGRlbiBkZXV0c2NoZW4gRmVzdG5ldHplbiwgbWF4LiA2MCBjdCBhdXMgZGVuIGRldXRzY2hlbiBNb2JpbGZ1bmtuZXR6ZW4pLiIsIklOVkFMSURfQ09NQklOQVRJT05fUE9TVEFMX1pJUF9TVEFURV9DSVRZIjoiUG9zdGxlaXR6YWhsLCBTdGF0ZSB1bmQgU3RhZHQgc3RpbW10IG5pY2h0IMO8YmVyZWluIiwiSU5WQUxJRF9DT01CSU5BVElPTl9QT1NUQUxfWklQX0NJVFkiOiJQb3N0bGVpdHphaGwgdW5kIFN0YWR0IHN0aW1tdCBuaWNodCDDvGJlcmVpbiJ9LCJwcm9kdWN0c19zZXJ2aWNlcy1zZXJ2aWNlcy1zZXJ2aWNlX2xpc3QiOnsidWZfdWYtZGVzY3JpcHRpb24iOiJDaGlsbGVkIEJveCBTIiwiY2VfY2UtZGVzY3JpcHRpb24iOiJQcm9vZiBvZiBJZGVudGl0eSIsInphX3phLWRlc2NyaXB0aW9uIjoiQ3VzdG9tZXIgQ2xhaW0iLCJ3c193cy1kZXNjcmlwdGlvbiI6IlBlcnNvbmFsIEVmZmVjdHMiLCJ0Y190Yy1kZXNjcmlwdGlvbiI6IlRpbWUgV2luZG93IERlbGl2ZXJ5IiwiYmJfYmItZGVzY3JpcHRpb24iOiJHbG9iYWxtYWlsIEl0ZW0iLCJ1bV91bS1kZXNjcmlwdGlvbiI6IkZyb3plbiBJY2UgU3RpY2tzIE0iLCJwZF9wZC1kZXNjcmlwdGlvbiI6IkRhdGEgRW50cnkiLCJubl9ubi1kZXNjcmlwdGlvbi5kZXNjcmlwdGlvbiI6IlRhdHPDpGNobGljaGVyIFdhcmVud2VydCBkZXIgU2VuZHVuZyB3aXJkIGRlbSBFbXBmw6RuZ2VyIG5pY2h0IMO8YmVybWl0dGVsdC4iLCJ5eV95eS1kZXNjcmlwdGlvbiI6IsOcYmVybWFzcy1QYWNrc3TDvGNrIChnZXdpY2h0KSIsIndsX3dsLWRlc2NyaXB0aW9uIjoiQm9uZGVkIFRyYW5zaXQiLCJvYV9vYS1kZXNjcmlwdGlvbiI6IiIsInhiX2hrLWRlc2NyaXB0aW9uIjoiIiwiaWNfaWMtZGVzY3JpcHRpb24iOiIiLCJ4dl94di1kZXNjcmlwdGlvbiI6IkN1c3RvbXMgU2VydmljZXMgVkFUIiwiZWFfZWEtZGVzY3JpcHRpb24uZGVzY3JpcHRpb24iOiJHbGVpY2hlbiBTaWUgZGVuIEtvaGxlbnN0b2ZmZGlveGlkIGbDvHIgbWVpbmUgU2VuZHVuZyBhdXMuIiwic3hfc3gtZGVzY3JpcHRpb24uZGVzY3JpcHRpb24iOiJJY2ggYmV2b2xsbcOkY2h0aWdlIERITCwgZGllIFNlbmR1bmcgb2huZSBlaW5lIFVudGVyc2NocmlmdCB6dXIgTGllZmVyYmVzdMOkdGlndW5nLCB6dSBsaWVmZXJuLiIsInlsX3lsLWRlc2NyaXB0aW9uIjoiIiwid2Vfd2UtZGVzY3JpcHRpb24iOiJadXNhdHpwb3NpdGlvbmVuIiwiMGVfMGUtZGVzY3JpcHRpb24iOiJFeHByZXNzIExvZ2lzdGljcyBDZW50cmUiLCJ4aV94aS1kZXNjcmlwdGlvbiI6IkltcG9ydCBQZW5hbHR5IiwidmJfdmItZGVzY3JpcHRpb24iOiJBYnNvcmJlbnQgU2xlZXZlIiwiOTVfOTUtZGVzY3JpcHRpb24iOiIiLCJraV9raS1kZXNjcmlwdGlvbiI6IiIsIjBhX2xsLWRlc2NyaXB0aW9uIjoiIiwidXNfdXMtZGVzY3JpcHRpb24iOiJDb21iaW5hdGlvbiBEcnkgSWNlIiwiaGdfaGctZGVzY3JpcHRpb24iOiJQZXJpc2hhYmxlIENhcmdvIiwid3pfd3otZGVzY3JpcHRpb24iOiIiLCJtYl9tYi1kZXNjcmlwdGlvbiI6IiIsImdkX2dkLWRlc2NyaXB0aW9uIjoiUmVwYWNraW5nIiwiMGRfMGQtZGVzY3JpcHRpb24iOiJXYXJlaG91c2luZyIsInlrX3lrLWRlc2NyaXB0aW9uIjoiMTI6MDAgUHJlbWl1bSIsInB5X3B5LWRlc2NyaXB0aW9uIjoiIiwidXRfdXQtZGVzY3JpcHRpb24iOiJGcm96ZW4gSWNlIFN0aWNrcyBFIiwib2Jfb2ItZGVzY3JpcHRpb24iOiJBYmhvbHVuZyBpbiBBdcOfZW5nZWJpZXRlbiIsInd5X3d5LWRlc2NyaXB0aW9uIjoiUGFwZXJsZXNzIFRyYWRlIiwiaWRfaWQtZGVzY3JpcHRpb24iOiJFeHRlbmRlZCBMaWFiaWxpdHkiLCJ6Z196Zy1kZXNjcmlwdGlvbiI6IkNvbW1lcmNpYWwgR2VzdHVyZSIsImJoX2JoLWRlc2NyaXB0aW9uIjoiUGFja2V0IFRyYWNrZWQiLCJsdl8wYS1kZXNjcmlwdGlvbiI6IiIsImNmX2NmLWRlc2NyaXB0aW9uIjoiU2VjdXJlIFN0b3JhZ2UiLCJkdV9kdS1kZXNjcmlwdGlvbiI6IkltcG9ydGVyIG9mIFJlY29yZCIsInpiX3piLWRlc2NyaXB0aW9uIjoiRGFtYWdlIENvbXBlbnNhdGlvbiIsInh1X3h1LWRlc2NyaXB0aW9uIjoiIiwidHhfdHgtZGVzY3JpcHRpb24iOiIxMDMwIiwiZWVfZWUtZGVzY3JpcHRpb24iOiJHb0dyZWVuIENsaW1hdGUgTmV1dHJhbCIsImliX2liLWRlc2NyaXB0aW9uIjoiRXh0ZW5kZWQgTGlhYmlsaXR5Iiwid2Zfd2YtZGVzY3JpcHRpb24iOiJQb3N0IENsZWFyYW5jZSBNb2RpZmljYXRpb24iLCJjZF9jZC1kZXNjcmlwdGlvbiI6IiIsIjBsXzBsLWRlc2NyaXB0aW9uIjoiUHJvZHVjdCBLaXR0aW5nIiwicWhfcWgtZGVzY3JpcHRpb24iOiJCeXBhc3MgSW5qZWN0aW9uIiwieDFfeDEtZGVzY3JpcHRpb24iOiIiLCJ0Yl90Yi1kZXNjcmlwdGlvbiI6IkVhcmx5IERlbGl2ZXJ5IiwidGtfdGstZGVzY3JpcHRpb24iOiJSZXNpZGVudGlhbCBEZWxpdmVyeSIsImdrX2drLWRlc2NyaXB0aW9uIjoiQnVsayBQYWNrYWdpbmciLCJ4Y194Yy1kZXNjcmlwdGlvbiI6IlVucmVjb3ZlcmFibGUgT3JpZ2luIFRheCIsInFhX3FhLWRlc2NyaXB0aW9uIjoiRGVkaWNhdGVkIFBpY2t1cCIsImtjX2tjLWRlc2NyaXB0aW9uIjoiIiwidmhfdmgtZGVzY3JpcHRpb24iOiJEcnkgSWNlIFN1cHBseSIsIm9vX29vLWRlc2NyaXB0aW9uIjoiWnVzdGVsbHVuZyBpbiBBdcOfZW5nZWJpZXRlbiIsInhhX3hhLWRlc2NyaXB0aW9uIjoiQWRkaXRpb25hbCBEdXR5IiwiaG1faG0tZGVzY3JpcHRpb24iOiJMaXRoaXVtIE1ldGFsIFBJOTY5IFNlY3Rpb24gSUkiLCJ5ZV95ZS1kZXNjcmlwdGlvbiI6Ik11bHRpcGllY2UgU2hpcG1lbnQiLCJrYV9rYS1kZXNjcmlwdGlvbiI6IkNoYW5nZSBvZiBCaWxsaW5nIiwicHNfcHMtZGVzY3JpcHRpb24iOiJQaWVjZSBMYWJlbGluZyIsImxlX2xlLWRlc2NyaXB0aW9uIjoiU3RvcmFnZSBhdCBGYWNpbGl0eSIsInR2X3R2LWRlc2NyaXB0aW9uIjoiQ29sbGVjdCBmcm9tIFNlcnZpY2UgUG9pbnQiLCJlY19lYy1kZXNjcmlwdGlvbiI6IkdvR3JlZW4gQ2FyYm9uIEVzdGltYXRlIiwiMGpfMGotZGVzY3JpcHRpb24iOiJJbnZlbnRvcnkgTWFuYWdlbWVudCIsInFpX3FpLWRlc2NyaXB0aW9uIjoiRGlyZWN0IEluamVjdGlvbiIsInB3X3B3LWRlc2NyaXB0aW9uIjoiRGF0YSBTdGFnaW5nIDI0IiwiaGxfaGwtZGVzY3JpcHRpb24iOiJMaW1pdGVkIFF1YW50aXRpZXMgQURSIiwianlfanktZGVzY3JpcHRpb24iOiJDb3VyaWVyIFRpbWUgV2luZG93IiwieWpfeWotZGVzY3JpcHRpb24iOiIxMDozMCBQcmVtaXVtIiwibGdfbGctZGVzY3JpcHRpb24iOiJDb2xkIFN0b3JhZ2UiLCJjal9jai1kZXNjcmlwdGlvbiI6Ik9uYm9hcmQgQ291cmllciIsInhqX3hqLWRlc2NyaXB0aW9uIjoiVHJhZGUgWm9uZSBQcm9jZXNzIiwidWtfdWstZGVzY3JpcHRpb24iOiJGcm96ZW4gTm8gSWNlIEwiLCJ3Z193Zy1kZXNjcmlwdGlvbiI6IkJyb2tlciBCZW5hY2hyaWNodGlndW5nIiwidHlfdHktZGVzY3JpcHRpb24iOiIxMjAwIiwiMG1fMG0tZGVzY3JpcHRpb24iOiJQcmlvcml0eSBBY2NvdW50IERlc2siLCJ3cV93cS1kZXNjcmlwdGlvbi5kZXNjcmlwdGlvbiI6IkxlZ2VuIFNpZSBlaW4gVXJzcHJ1bmdzemV1Z25pcyAod2llIHouQi4gRVVSMSwgRm9ybWJhbHR0IEEgb2RlciBBVFIxKSB6dSBtZWluZXIgU2VuZHVuZyBiZWksIHVtIHp1IGJlc3TDpHRpZ2VuLCB3byBkaWUgYXVzZ2Vmw7xocnRlbiBXYXJlbiAgaW4gZWluZW0gYmVzdGltbXRlbiBMYW5kIHByb2R1emllcnQsIGhlcmdlc3RlbGx0IG9kZXIgdmVyYXJiZWl0ZXQgd3VyZGVuLCB1bSBlaW5lbiBWb3J6dWdzem9sbHNhdHogYW0gQmVzdGltbXVuZ3NvcnQgZ2VsdGVuZCB6dSBtYWNoZW4uIiwid25fd2ctZGVzY3JpcHRpb24iOiIiLCJ5eF95eC1kZXNjcmlwdGlvbiI6IkJyZWFrYnVsayBCYWJ5IiwibHhfbHgtZGVzY3JpcHRpb24iOiJadXIgQWJvbHVuZyBiZXJlaXQiLCJsYV9sYS1kZXNjcmlwdGlvbiI6IlNoaXBtZW50IEludGVyY2VwdCIsIndjX3djLWRlc2NyaXB0aW9uIjoiQXVzemFobHVuZyIsIjBhX2dnLWRlc2NyaXB0aW9uIjoiIiwidGRfdGQtZGVzY3JpcHRpb24iOiJFdmVuaW5nIERlbGl2ZXJ5IiwieGdfeGctZGVzY3JpcHRpb24iOiIiLCJ1aF91aC1kZXNjcmlwdGlvbiI6IkNoaWxsZWQgQm94IEwiLCJoaF9oaC1kZXNjcmlwdGlvbiI6IkV4Y2VwdGVkIFF1YW50aXRpZXMiLCJ5d195dy1kZXNjcmlwdGlvbiI6IkJyZWFrYnVsayBNb3RoZXIiLCJ4a194ay1kZXNjcmlwdGlvbiI6IlJlZ3VsYXRvcnkgQ2hhcmdlcyIsInVsX3VsLWRlc2NyaXB0aW9uIjoiRnJvemVuIEljZSBTdGlja3MgUyIsIm1hX21hLWRlc2NyaXB0aW9uIjoiQWRkcmVzcyBDb3JyZWN0aW9uIiwiZ2NfZ2MtZGVzY3JpcHRpb24iOiJCb3R0bGUgQm94IiwieGZfeGYtZGVzY3JpcHRpb24iOiIiLCJ3dF93dC1kZXNjcmlwdGlvbiI6IlNhbGUgaW4gVHJhbnNpdCIsImRkX2RkLWRlc2NyaXB0aW9uIjoiRHV0aWVzIGFuZCBUYXhlcyBQYWlkIiwic2Zfc2ctZGVzY3JpcHRpb24iOiIiLCJ1Z191Zy1kZXNjcmlwdGlvbiI6IkNoaWxsZWQgQm94IE0iLCJpcF9pcC1kZXNjcmlwdGlvbiI6IiIsImh3X2h0LWRlc2NyaXB0aW9uIjoiIiwidHVfdHUtZGVzY3JpcHRpb24iOiJObyBQYXJ0aWFsIERlbGl2ZXJ5IiwiOTZfOTYtZGVzY3JpcHRpb24iOiIiLCJpYl9pYi1kZXNjcmlwdGlvbi5kZXNjcmlwdGlvbiI6IkltIHNlbHRlbmVuIEZhbGwgZGVzIFZlcmx1c3RlcyBJaHJlciBEb2t1bWVudGVuLVNlbmR1bmcgd2lyZCBESEwgU2llIGbDvHIgZGllc2VuIFZlcmx1c3QgbWl0IGRlciBmaXhlbiBTdW1tZSB2b24gNDAwIEVVUiBlbnRzY2jDpGRpZ2VuLiIsInliX3liLWRlc2NyaXB0aW9uIjoiw5xiZXJtYXNzLVBhY2tzdMO8Y2sgKGFibWVzc3VuZ2VuKSIsIjY3XzY3LWRlc2NyaXB0aW9uIjoiTm8gU1BEIiwicHZfcHYtZGVzY3JpcHRpb24iOiJEYXRhIFN0YWdpbmcgMTIiLCJ2Y192Yy1kZXNjcmlwdGlvbiI6IkNvb2xhbmQgV3JhcCIsInBlX3BlLWRlc2NyaXB0aW9uIjoiUHJlcHJpbnRlZCBXYXliaWxsIiwiOTFfOTEtZGVzY3JpcHRpb24iOiIiLCJrYl9rYi1kZXNjcmlwdGlvbiI6IkNhc2ggT24gRGVsaXZlcnkiLCJ1Y191Yy1kZXNjcmlwdGlvbiI6IkFtYmllbnQgTm9uIEluc3VsYXRlZCIsImhjX2hjLWRlc2NyaXB0aW9uIjoiRHJ5IEljZSBVTjE4NDUiLCJhYV9hYS1kZXNjcmlwdGlvbiI6IlNhbXN0YWdzenVzdGVsbHVuZyIsInlmX3lmLWRlc2NyaXB0aW9uIjoiw5xiZXJtYXNzLVBhY2tzdMO8Y2sgKGdld2ljaHQpIiwidmdfdmctZGVzY3JpcHRpb24iOiJQcmVzc3VyZSBCYWcgTCIsIm9lX29lLWRlc2NyaXB0aW9uIjoiT3V0IG9mIFNlcnZpY2UgQXJlYSIsImJlX2JlLWRlc2NyaXB0aW9uIjoiTGV0dGVyIFBsdXMiLCJ3a193ay1kZXNjcmlwdGlvbiI6IkJvbmRlZCBTdG9yYWdlIiwiaWdfaWctZGVzY3JpcHRpb24iOiJFeHRlbmRlZCBMaWFiaWxpdHkiLCJ3Z193Zy1kZXNjcmlwdGlvbi5kZXNjcmlwdGlvbiI6IlN0ZWxsZW4gU2llIGt1bmRlbnNwZXppZmlzY2hlIFVudGVybGFnZW4genVyIFpvbGxmcmVpZ2FiZSAgbWVpbmVtIGJldm9yenVndGVuIEJyb2tlciB6dXIgVmVyZsO8Z3VuZy4gU3RlbGxlbiBTaWUgZGllIHZvbGxzdMOkbmRpZ2UgU2VuZHVuZyBhbnNjaGxpZcOfZW5kIGRlciBmaW5hbGVuIEVtcGZhbmdzYWRyZXNzZSB6dS4iLCJjaV9jaS1kZXNjcmlwdGlvbiI6IlZpc2EgUHJvZ3JhbSIsIm5uX25uLWRlc2NyaXB0aW9uIjoiTmV1dHJhbCBEZWxpdmVyeSIsInh4X3h4LWRlc2NyaXB0aW9uIjoiSW1wb3J0L0V4cG9ydCBEdXRpZXMiLCIwaV8waS1kZXNjcmlwdGlvbiI6IkNyb3NzIERvY2tpbmciLCJoeV9oeS1kZXNjcmlwdGlvbiI6IkJpb2xvZ2ljYWwgVU4zMzczIiwieGJfeGItZGVzY3JpcHRpb24iOiJJbXBvcnQgRXhwb3J0IFRheGVzIiwid2Jfd2ItZGVzY3JpcHRpb24iOiJGb3JtYWwgQ2xlYXJhbmNlIiwiZWFfZWEtZGVzY3JpcHRpb24iOiJHb0dyZWVuIiwidHRfdHQtZGVzY3JpcHRpb24iOiJTY2hlZHVsZWQgRGVsaXZlcnkiLCIwaF8waC1kZXNjcmlwdGlvbiI6IlRlcm1pbmFsIEhhbmRsaW5nIiwicWRfcWQtZGVzY3JpcHRpb24iOiJMYXRlIFBpY2t1cCIsIjkyXzkyLWRlc2NyaXB0aW9uIjoiIiwidXBfdXAtZGVzY3JpcHRpb24iOiJGcm96ZW4gSWNlIFBsYXRlcyBNIiwidzJfdzItZGVzY3JpcHRpb24iOiIiLCJ6a196ay1kZXNjcmlwdGlvbiI6IiIsImdnX2dnLWRlc2NyaXB0aW9uIjoiIiwibGJfbGItZGVzY3JpcHRpb24iOiIiLCJ5aF95aC1kZXNjcmlwdGlvbiI6IiIsIjBhXzBhLWRlc2NyaXB0aW9uIjoiTG9naXN0aWNzIFNlcnZpY2VzIiwieGVfeGUtZGVzY3JpcHRpb24iOiJNZXJjaGFuZGlzZSBQcm9jZXNzIiwidXdfdXctZGVzY3JpcHRpb24iOiJDdXN0b21lciBUQ1AgMSIsIndwX3dwLWRlc2NyaXB0aW9uIjoiRXhwb3J0ZXIgVmFsaWRhdGlvbiIsInkyX3kyLWRlc2NyaXB0aW9uIjoiMTA6MzAgcHJlbWl1bSIsImx3X2x3LWRlc2NyaXB0aW9uIjoiIiwidWlfdWktZGVzY3JpcHRpb24iOiJGcm96ZW4gTm8gSWNlIFMiLCJ6ZF96ZC1kZXNjcmlwdGlvbiI6IkN1c3RvbWVyIFJlYmF0ZSIsIndtX3dtLWRlc2NyaXB0aW9uLmRlc2NyaXB0aW9uIjoiQmVyZWl0ZW4gU2llIG1laW5lIFNlbmR1bmcgZsO8ciB0ZW1wb3LDpHJlbiBFeHBvcnQgdW5kIGFuc2NobGllw59lbmRlbiBJbXBvcnQgdm9yLiIsInVqX3VqLWRlc2NyaXB0aW9uIjoiRnJvemVuIE5vIEljZSBNIiwic2Nfc2MtZGVzY3JpcHRpb24iOiJOYW1lZCBTaWduYXR1cmUiLCI2Nl82Ni1kZXNjcmlwdGlvbiI6Ik5vIFByb2FjdCBTUEQiLCJwYV9wYS1kZXNjcmlwdGlvbiI6IiIsImNhX2NhLWRlc2NyaXB0aW9uIjoiRWxldmF0ZWQgUmlzayIsInl2X3l2LWRlc2NyaXB0aW9uIjoiIiwid29fd28tZGVzY3JpcHRpb24iOiJFeHBvcnQgVmFsaWRpZXJ1bmciLCJ5MV95MS1kZXNjcmlwdGlvbiI6IjA5OjAwIHByZW1pdW0iLCJzeF9zeC1kZXNjcmlwdGlvbiI6IlNpZ25hdHVyZSBSZWxlYXNlIiwibHZfbHYtZGVzY3JpcHRpb24iOiIiLCJkZV9kZS1kZXNjcmlwdGlvbiI6IlJlY2VpdmVyIFBhaWQiLCJ4c194cy1kZXNjcmlwdGlvbiI6IkV4Y2lzZSBUYXgiLCJjYl9jYi1kZXNjcmlwdGlvbiI6IlJlc3RyaWN0ZWQgRGVzdGluYXRpb24iLCJyYV9yYS1kZXNjcmlwdGlvbiI6IkZyZWlnaHQgU2VydmljZXMiLCJrZV9rZS1kZXNjcmlwdGlvbiI6IldheWJpbGwgQ29weSIsInlpX3lpLWRlc2NyaXB0aW9uIjoiOTowMCBQcmVtaXVtIiwibGNfbGMtZGVzY3JpcHRpb24iOiJTaGlwbWVudCBSZWRpcmVjdCIsIndoX3doLWRlc2NyaXB0aW9uIjoiUGh5c2ljYWwgSW50ZXJ2ZW50aW9uIiwidXZfdXYtZGVzY3JpcHRpb24iOiJGcm96ZW4gSWNlIFBsYXRlcyBFIiwicXlfcXktZGVzY3JpcHRpb24iOiJEcm9wIE9mZiBhdCBGYWNpbGl0eSIsImRzX2RzLWRlc2NyaXB0aW9uIjoiRHV0aWVzICYgVGF4ZXMgVW5wYWlkIiwiYmZfYmYtZGVzY3JpcHRpb24iOiJQYWNrZXQgUGx1cyIsImZjX2ZjLWRlc2NyaXB0aW9uIjoiVHJlaWJzdG9mZnp1c2NobGFnIiwidGdfdGctZGVzY3JpcHRpb24iOiJSZXR1cm4gVW5kZWxpdmVyYWJsZSIsInVxX3VxLWRlc2NyaXB0aW9uIjoiRnJvemVuIEljZSBQbGF0ZXMgTCIsIndhX3dhLWRlc2NyaXB0aW9uIjoiU2luZ2xlIENsZWFyYW5jZSIsImhrX2hrLWRlc2NyaXB0aW9uIjoiQ29uc3VtZXIgR29vZHMgSUQ4MDAwIiwicWNfcWMtZGVzY3JpcHRpb24iOiIiLCJjaF9jaC1kZXNjcmlwdGlvbiI6IlNtYXJ0IFNlbnNvciIsInVvX3VvLWRlc2NyaXB0aW9uIjoiRnJvemVuIEljZSBQbGF0ZXMgUyIsIncxX3cxLWRlc2NyaXB0aW9uIjoiVmVyem9sbHVuZ3N6dXNjaGxhZyBCcmV4aXQiLCJ1ZF91ZC1kZXNjcmlwdGlvbiI6IkFtYmllbnQgSW5zdWxhdGVkIiwieWdfeWctZGVzY3JpcHRpb24iOiLDnGJlcm1hc3MtUGFja3N0w7xjayAoYWJtZXNzdW5nZW4pIiwib2Zfb2YtZGVzY3JpcHRpb24iOiJSZW1vdGUgQXJlYSIsIjB3XzB3LWRlc2NyaXB0aW9uIjoiIiwicHVfcHUtZGVzY3JpcHRpb24iOiJEYXRhIFN0YWdpbmcgMDYiLCJ3d193dy1kZXNjcmlwdGlvbiI6IkFkdmFuY2UgUGF5bWVudCIsImhkX2hkLWRlc2NyaXB0aW9uIjoiTGl0aGl1bSBJb24gUEk5NjYgU2VjdGlvbiBJSSIsImFiX2FiLWRlc2NyaXB0aW9uIjoiU2Ftc3RhZ3NhYmhvbHVuZyIsIncxX3cxLWRlc2NyaXB0aW9uLmRlc2NyaXB0aW9uIjoiVGVtcG9yYXJ5IHN1cmNoYXJnZSBmb3Igb3BlcmF0aW9uYWwgYWRqdXN0bWVudHMgKGUuZy4gcmVyb3V0aW5nLCBsaWNlbnNlc8KgYW5kIHBlcm1pdHMsIGN1c3RvbXMgcHJvY2Vzc2luZ8KgYW5kIGN1c3RvbXMgcGVybWl0cykgZHVlIHRvIGNoYW5nZSBvZsKgY3Jvc3MtYm9yZGVywqB0cmFkZSByZWd1bGF0aW9uIGJldHdlZW4gRVUgYW5kIFVLLiIsInViX3ViLWRlc2NyaXB0aW9uIjoiQW1iaWVudCBWaWFsc2FmZSIsImthXzc3LWRlc2NyaXB0aW9uIjoiIiwic2Zfc2YtZGVzY3JpcHRpb24uZGVzY3JpcHRpb24iOiJESEwgYmVuw7Z0aWd0IGJlaSBkZXIgWnVzdGVsbHVuZyBkaWUgVW50ZXJzY2hyaWZ0IHZvbSBFbXBmw6RuZ2VyIG9kZXIgZWluZW0gQmV2b2xsbcOkY2h0aWd0ZW4uIEltIEZhbGwsIGRhc3MgYmVpIGRlciBadXN0ZWxsdW5nIG5pZW1hbmQgdm9yIE9ydCBpc3QsIHdpcmQgREhMIGVpbmVuIHdlaXRlcmVuIFp1c3RlbGx2ZXJzdWNoIHZvcm5laG1lbi4gRGVyIFNlcnZpY2UgXCJEaXJlY3QgU2lnbmF0dXJlXCIgc3RlbGx0IHNpY2hlciwgZGFzcyBJaHJlIFNlbmR1bmdlbiBuaWNodCB1bWdlcm91dGV0LCBpbiBlaW5lbSBQb3N0ZmFjaCBhYmdlbGVndCBvZGVyIGJlaW0gTmFjaGJhcm4genVnZXN0ZWxsdCB3ZXJkZW4uIiwidmZfdmYtZGVzY3JpcHRpb24iOiJQcmVzc3VyZSBCYWcgTSIsIjk5Xzk5LWRlc2NyaXB0aW9uIjoiIiwiaGJfaGItZGVzY3JpcHRpb24iOiJMaXRoaXVtIElvbiBQSTk2NSBTZWN0aW9uIElJIiwid3Vfd3UtZGVzY3JpcHRpb24iOiIiLCJwaF9waC1kZXNjcmlwdGlvbiI6IiIsImlmX2lmLWRlc2NyaXB0aW9uIjoiIiwiYmRfYmQtZGVzY3JpcHRpb24iOiJQYWNrZXQiLCJ3al93ai1kZXNjcmlwdGlvbiI6IlBlcm1pdHMgJiBMaWNlbmNlcyIsInljX3ljLWRlc2NyaXB0aW9uIjoiTm9uIFN0YWNrYWJsZSBQYWxsZXQiLCJnYl9nYi1kZXNjcmlwdGlvbiI6IkxhcHRvcCBCb3giLCJ2ZF92ZC1kZXNjcmlwdGlvbiI6IkRyeSBJY2UgU3VwcGxpZXMiLCI5N185Ny1kZXNjcmlwdGlvbiI6IiIsImRjX2RjLWRlc2NyaXB0aW9uIjoiZGNfZGMtZGVzY3JpcHRpb24iLCJ3bF93bC1kZXNjcmlwdGlvbi5kZXNjcmlwdGlvbiI6IkJpdHRlIMO8YmVybWl0dGVsbiBTaWUgbWVpbmUgU2VuZHVuZyB1bnRlciBab2xsdmVyc2NobHVzcyBhbiBlaW5lbiBhbmRlcmVuIE9ydCwgYWxzIGRlciByZWd1bMOkcmUgREhMLUdhdGV3YXkgYW0gWmllbG9ydC4iLCJzZV9zZS1kZXNjcmlwdGlvbiI6IkNvbnRyYWN0IFNpZ25hdHVyZSIsIjY4XzY4LWRlc2NyaXB0aW9uIjoiTm8gTlNSIiwiYWRfYWQtZGVzY3JpcHRpb24iOiJGZWllcnRhZ3NhYmhvbHVuZyIsInBmX3BmLWRlc2NyaXB0aW9uIjoiTWFpbCBTZXJ2aWNlIFByb2Nlc3MiLCJ1cl91ci1kZXNjcmlwdGlvbiI6IkNvbWJpbmF0aW9uIE5vIEljZSIsInVhX3VhLWRlc2NyaXB0aW9uIjoiVGhlcm1vIFBhY2thZ2luZyIsInJiX3JiLWRlc2NyaXB0aW9uIjoiIiwid25fd24tZGVzY3JpcHRpb24iOiJSZWxlYXNlIHRvIEJyb2tlciIsIm9jX29jLWRlc2NyaXB0aW9uIjoiWnVzdGVsbHVuZyBpbiBBdcOfZW5nZWJpZXRlbiIsImdpX2dpLWRlc2NyaXB0aW9uIjoiUGFsbGV0dGUgVmVyc2FuZGJveCIsIjBmXzBmLWRlc2NyaXB0aW9uIjoiU3RyYXRlZ2ljIFBhcnRzIENlbnRlciIsInRhX3RhLWRlc2NyaXB0aW9uIjoiRGVkaWNhdGVkIERlbGl2ZXJ5IiwicWJfcWItZGVzY3JpcHRpb24iOiJFYXJseSBQaWNrdXAiLCI5MF85MC1kZXNjcmlwdGlvbiI6IiIsImVlX2VlLWRlc2NyaXB0aW9uLmRlc2NyaXB0aW9uIjoiR2xlaWNoZW4gU2llIGRlbiBLb2hsZW5zdG9mZmRpb3hpZCBmw7xyIG1laW5lIFNlbmR1bmcgYXVzLiIsImtkX2tkLWRlc2NyaXB0aW9uIjoiUHJpbnRlZCBJbnZvaWNlIiwiaHZfaHYtZGVzY3JpcHRpb24iOiJMaXRoaXVtIElvbiBQSTk2N8KgU2VjdGlvbiBJSSIsImhlX2hlLWRlc2NyaXB0aW9uIjoiR2VmYWhyZ3V0Iiwic2Ffc2EtZGVzY3JpcHRpb24uZGVzY3JpcHRpb24iOiJESEwgd2lyZCBlaW5lIFVudGVyc2NocmlmdCB2b20gRW1wZsOkbmdlciBvZGVyIGVpbmVtIFZlcnRyZXRlciBhbiBkZXIgTGllZmVyYWRyZXNzZSBlcmhhbHRlbi4iLCJiZ19iZy1kZXNjcmlwdGlvbiI6IkxldHRlciBUcmFja2VkIiwiZHRfZHQtZGVzY3JpcHRpb24iOiJDb2xsZWN0IEJpbGxpbmciLCJqYV9qYS1kZXNjcmlwdGlvbiI6IiIsImdlX2dlLWRlc2NyaXB0aW9uIjoiVGFibGV0IEJveCIsIjk0Xzk0LWRlc2NyaXB0aW9uIjoiIiwiMHBfMHAtZGVzY3JpcHRpb24iOiJEb2N1bWVudCBQcmludGluZyIsInZhX3ZhLWRlc2NyaXB0aW9uIjoiVGhlcm1vIEFjY2Vzc29yaWVzIiwiYWdfYWctZGVzY3JpcHRpb24iOiJEb21lc3RpYyBTYXR1cmRheSBEZWxpdmVyeSIsInNiX3NiLWRlc2NyaXB0aW9uIjoiQ29udGVudCBTaWduYXR1cmUiLCJmYl9mYi1kZXNjcmlwdGlvbiI6IlRyZWlic3RvZmZ6dXNjaGxhZyIsInBjX3BjLWRlc2NyaXB0aW9uIjoiU2hpcG1lbnQgQ29uc29saWRhdGlvbiIsImNjX2NjLWRlc2NyaXB0aW9uIjoiU2VjdXJpdHkgVmFsaWRhdGlvbiIsImplX2plLWRlc2NyaXB0aW9uIjoiUGVyZm9ybWFuY2UgUmVwb3J0aW5nIiwid3Ffd3EtZGVzY3JpcHRpb24iOiJCZXZvcnp1Z3RlIEhlcmt1bmZ0IiwieTNfeTMtZGVzY3JpcHRpb24iOiIxMjowMCBwcmVtaXVtIiwiZ2ZfZ2YtZGVzY3JpcHRpb24iOiJGaWxsZXIgTWF0ZXJpYWwiLCJrcl9rci1kZXNjcmlwdGlvbiI6IiIsIjkzXzkzLWRlc2NyaXB0aW9uIjoiIiwiemNfemMtZGVzY3JpcHRpb24iOiJMb3NzIENvbXBlbnNhdGlvbiIsInp6X3p6LWRlc2NyaXB0aW9uIjoiIiwic2Ffc2EtZGVzY3JpcHRpb24iOiJEZWxpdmVyeSBTaWduYXR1cmUiLCJ3ZF93ZC1kZXNjcmlwdGlvbiI6IkF2aXNpZXJ1bmciLCJ0ZV90ZS1kZXNjcmlwdGlvbiI6IkRlbGl2ZXJ5IG9uIEFwcG9pbnRtZW50IiwiamRfamQtZGVzY3JpcHRpb24iOiJQcm9hY3RpdmUgVHJhY2tpbmciLCJod19ody1kZXNjcmlwdGlvbiI6IkxpdGhpdW0gTWV0YWwgUEk5NzAgU2VjdGlvbiBJSSIsImNrX2NrLWRlc2NyaXB0aW9uIjoiIiwiMGJfMGItZGVzY3JpcHRpb24iOiJNYWlscm9vbSBNYW5hZ2VtZW50IiwieXVfeXUtZGVzY3JpcHRpb24iOiIiLCJzd19zdy1kZXNjcmlwdGlvbiI6IkJlaW0gTmFjaGJhcm4gYWJnZWJlbiIsIjk4Xzk4LWRlc2NyaXB0aW9uIjoiIiwiZWJfZWItZGVzY3JpcHRpb24iOiJHb0dyZWVuIENhcmJvbiBGb290cHJpbnQiLCI2OV82OS1kZXNjcmlwdGlvbiI6Ik5vIExXTiIsInB4X3B4LWRlc2NyaXB0aW9uIjoiU3RhbmRhcmQgUGlja3VwIiwidmVfdmUtZGVzY3JpcHRpb24iOiJQcmVzc3VyZSBCYWcgUyIsImdhX2dhLWRlc2NyaXB0aW9uIjoiU21hcnRwaG9uZSBCb3giLCJ4ZF94ZC1kZXNjcmlwdGlvbiI6IlF1YXJhbnRpbmUgSW5zcGVjdGlvbiIsIndyX3dyLWRlc2NyaXB0aW9uIjoiRG9jdW1lbnQgVHJhbnNsYXRpb24iLCJ1ZV91ZS1kZXNjcmlwdGlvbiI6IkFtYmllbnQgRXh0cmVtZSIsImFjX2FjLWRlc2NyaXB0aW9uIjoiSG9saWRheSBEZWxpdmVyeSIsIjBnXzBnLWRlc2NyaXB0aW9uIjoiTG9jYWwgRGlzdHJpYnV0aW9uIENlbnRlciIsIndtX3dtLWRlc2NyaXB0aW9uIjoiVGVtcG9yw6RyZXIgSW1wb3J0IEV4cG9ydCIsImx4X2x4LWRlc2NyaXB0aW9uLmRlc2NyaXB0aW9uIjoiSGFsdGVuIFNpZSBtZWluZSBTZW5kdW5nIGFtIFppZWxvcnQgaW4gZGVyIERITCBFaW5yaWNodHVuZyBmw7xyIGRpZSBBYmhvbHVuZyBiZXJlaXQuIERITCB3aXJkIGRlbiBFbXBmw6RuZ2VyIGJlbmFjaHJpY2h0aWdlbiwgc29iYWxkIGRpZSBTZW5kdW5nIGZlcnRpZyB6dXIgQWJob2x1bmcgaXN0LiIsImlpX2lpLWRlc2NyaXB0aW9uIjoiU2VuZHVuZ3N2ZXJzaWNoZXJ1bmciLCJ3b193by1kZXNjcmlwdGlvbi5kZXNjcmlwdGlvbiI6IlJlaWNoZW4gU2llIGRpZSBFeHBvcnRlcmtsw6RydW5nIGVpbiwgdW0gZGVuIEV4cG9ydCBpbSBVcnNwcnVuZ3NsYW5kIHp1IGJlc2NobGV1bmlnZW4sIGRhbm4gYmVhbnRyYWdlbiBTaWUgZGllIGRhbWl0IHZlcmJ1bmRlbmVuIEtvc3RlbiB6dW0gQWNjb3VudCBkZXMgQmV6YWhsZXJzLiIsInd2X3d2LWRlc2NyaXB0aW9uIjoiIiwicHRfcHQtZGVzY3JpcHRpb24iOiJEYXRhIFN0YWdpbmcgMDMiLCJ0d190dy1kZXNjcmlwdGlvbiI6IjA5MDAiLCIwa18way1kZXNjcmlwdGlvbiI6IkxvYWRpbmcvVW5sb2FkaW5nIiwieHpfeHotZGVzY3JpcHRpb24iOiIiLCJiY19iYy1kZXNjcmlwdGlvbiI6IkJyaWVmIiwiemhfemgtZGVzY3JpcHRpb24iOiIiLCJzZl9zZi1kZXNjcmlwdGlvbiI6IkRpcmVjdCBTaWduYXR1cmUiLCJ3aV93aS1kZXNjcmlwdGlvbiI6Ik90aGVyIEdvdmVybm1lbnQgQWdlbmN5IiwicGdfcGctZGVzY3JpcHRpb24iOiIiLCJpZV9pZS1kZXNjcmlwdGlvbiI6IiIsInRqX3RqLWRlc2NyaXB0aW9uIjoiIiwiZmZfZmYtZGVzY3JpcHRpb24iOiJUcmVpYnN0b2ZmenVzY2hsYWciLCJjZ19jZy1kZXNjcmlwdGlvbiI6IkRpcGxvbWF0aWMgTWF0ZXJpYWwiLCIwYV9sdi1kZXNjcmlwdGlvbiI6IiIsImdqX2dqLWRlc2NyaXB0aW9uIjoiIiwidW5fdW4tZGVzY3JpcHRpb24iOiJGcm96ZW4gSWNlIFN0aWNrcyBMIiwiaG5faG4tZGVzY3JpcHRpb24iOiJBRFIgTG9hZCBFeGVtcHRpb24iLCJzd19zdy1kZXNjcmlwdGlvbi5kZXNjcmlwdGlvbiI6IkltIEZhbGwgZWluZXIgZmVobGdlc2NobGFnZW5lbiBMaWVmZXJ1bmcgYmVyZWNodGlnZSBpY2ggREhMLCBkaWUgU2VuZHVuZyBhbiBlaW5lIE5hY2hiYXJhZHJlc3NlIGF1c3p1bGllZmVybi4ifSwidHJhY2tpbmciOnsidHJhY2tpbmctcmVzdWx0X2JhY2tlbmQtZXJyb3JfdW5leHBlY3RlZC1zZXJ2aWNlLWVycm9yIjoiU2VydmljZSBkZXplaXQgbmljaHQgdmVyZsO8Z2JhciIsInRyYWNrLWJ5LW51bWJlcl9hbGVydF90cmFja2luZy1pbnZhbGlkLWlkZW50aWZpZXIiOiJVbmfDvGx0aWdlIFNlbmR1bmdzbnVtbWVyIHt0cmFja2luZ051bWJlcnN9IiwidHJhY2stYnktbnVtYmVyX2FsZXJ0X2R1cGxpY2F0ZS1pZGVudGlmaWVyIjoiU2VuZHVuZ3NudW1tZXIobikgZHVwbGl6aWVyZW4ge3RyYWNraW5nTnVtYmVyc30iLCJ0cmFjay1ieS1udW1iZXJfYWxlcnRfdG9vLW1hbnktaWRlbnRpZmllcnMiOiJNYXhpbWFsIDEwIHp1Z2VsYXNzZW4iLCJ0cmFjay1ieS1udW1iZXJfYWxlcnRfYmFkLXJlcXVlc3QtZW1wdHktaWQiOiJHw7xsdGlnZSBTZW5kdW5nc251bW1lciBiZW7DtnRpZ3QifSwibmF2aWdhdGlvbiI6eyJtZW51X2xpbmtfY3JlYXRlLXNoaXBtZW50LWZyb20tZmF2b3JpdGUiOiJTZW5kdW5nIGF1cyBGYXZvcml0ZW4gZXJzdGVsbGVuIiwibGFuZ3VhZ2UtcmVkaXJlY3Rpb24tcG9wdXBfbXNnX2d1ZXN0LXNoaXBtZW50LW1lc3NhZ2UiOiI8ZGl2IGNsYXNzPVwiZXdmX2RpY3Rpb25hcnlfdmFsdWVcIj48ZGl2IGNsYXNzPSJtZXNzYWdlLXdyYXBwZXIiPjxwPlNpZSBtw7xzc2VuIGVybmV1dCBzdGFydGVuLjxcL3A+XG48cD7CoDxcL3A+XG48cD5Nw7ZjaHRlbiBTaWUgZGllIFNwcmFjaGUgw6RuZGVybj88XC9wPlxuPFwvZGl2PjxcL2Rpdj4iLCJncm91cC1zd2l0Y2hlcl9jb2wtbmFtZV9ncm91cC1uYW1lIjoiTmFtZSIsImFsZXJ0LWFjdGlvbl9iYWNrZW5kLWVycm9yX2NhcmQtdG9rZW5pemF0aW9uLWlzLW5vdC1hbGxvd2VkIjoiQ3JlZGl0IGNhcmQgZGV0YWlscyBjb3VsZCBub3QgYmUgc2F2ZWQiLCJtZW51X2xpbmtfb3JkZXItc3VwcGxpZXMiOiJadWJlaMO2ciBiZXN0ZWxsZW4iLCJ0b3AtbmF2X3N1Yi1oZWFkZXJfbXktc2hpcG1lbnQiOiJNRUlORSBTRU5EVU5HRU4iLCJ0b3AtbmF2X2xpbmtfcmVnaXN0ZXIiOiJSZWdpc3RyaWVyZW4iLCJtZW51X2xpbmtfdW5pdC1vZi1tZWFzdXJlLWFuZC1jdXJyZW5jeSI6IlfDpGhydW5nIHVuZCBNYcOfZSIsImdyb3VwLXN3aXRjaGVyX2NvbC1uYW1lX2FjY291bnQtb3duZXIiOiJJbmhhYmVyIEt1bmRlbm51bW1lciIsIm1lbnVfbGlua19wYWNrYWdpbmctc2V0dGluZ3MiOiJWZXJwYWNrdW5nIiwibWVudV9saW5rX2NyZWF0ZS1zaGlwbWVudC1mcm9tLXBhc3QiOiJTZW5kdW5nIGF1cyBIaXN0b3JpZSBlcnN0ZWxsZW4iLCJtZW51X2xpbmtfc2NoZWR1bGUtcGlja3VwIjoiQWJob2x1bmcgYnVjaGVuIiwibGItc3dpdGNoLXRvLWNvcnBvcmF0ZV92YXJpYWJsZV9wZW9wbGVfY21zIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+PGRpdiBjbGFzcz0ibWVzc2FnZS13cmFwcGVyIj48dWw+PGxpPjxiPlNlbmR1bmdzZWluc3RlbGx1bmdlbjxcL2I+IGbDvHIgPGI+TnV0emVyPFwvYj4gZmVzdGxlZ2VuPFwvbGk+PFwvdWw+PFwvZGl2PjxcL2Rpdj4iLCJsYi1zd2l0Y2gtdG8tY29ycG9yYXRlX3BhcmFncmFwaF93aWxsLWJlLWNvcnBvcmF0ZSI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPjxkaXYgY2xhc3M9Im1lc3NhZ2Utd3JhcHBlciI+PHA+TXlESEwrIHN0ZWxsdCBlaW5lIDxiPm7DvHR6bGljaGUgQWRtaW5pc3RyYXRpb25zbMO2c3VuZzxcL2I+IGRhciwgZGllIGVzIElobmVuIGVybGF1YnQgZGllIFVudGVybmVobWVuc2VmZml6aWVueiB6dSBlcmjDtmhlbiB1bmQgZGFiZWkgaGlsZnQgZGllIEtvc3RlbiB6dSBrb250cm9sbGllcmVuLk1pdCBmbGV4aWJsZW4gT3B0aW9uZW4sIGRpZSB6dSBJaHJlbSBVbnRlcm5laG1lbiBwYXNzZW4ga8O2bm5lbiBTaWU6PFwvcD5cbjx1bD5cbjxsaT48Yj5TZW5kdW5nc2VpbnN0ZWxsdW5nZW48XC9iPiBmw7xyIDxiPk51dHplcjxcL2I+IGZlc3RsZWdlbjxcL2xpPlxuPGxpPkRlZmluaWVyZW4gU2llIEdydXBwZW4sIHVtIDxiPnJvYnVzdGUgVmVyc2FuZDxcL2I+wqB1bmQgQWRtaW5pc3RyYXRvcmZ1bmt0aW9uZW4genUgPGI+bnV0emVuPFwvYj48XC9saT5cbjxsaT5TaWNodGJhcmtlaXQgPGI+ZXJoYWx0ZW4sIFNlbmR1bmdlbjxcL2I+IGJlc3TDpHRpZ2VuIHVuZCA8Yj5TdGFuZGFyZGVpbnN0ZWxsdW5nZW4gZmVzdGxlZ2VuPFwvYj48XC9saT5cbjxsaT48Yj5BZHJlc3Niw7xjaGVyPFwvYj4gZWluc3RlbGxlbiB1bmQgZGVyZW4gTnV0enVuZyBkZWZpbmllcmVuPFwvbGk+XG48XC91bD5cbjxwPkF1w59lcmRlbSBrw7ZubmVuIFNpZTo8XC9wPlxuPHVsPlxuPGxpPlp1Z2FuZyB6dXIgPGI+U2VuZHVuZ3PDvGJlcndhY2h1bmcgdW5kIE9ubGluZXJlY2hudW5nPFwvYj48XC9saT5cbjxsaT48Yj5TdGF0dXNiZW5hY2hyaWNodGlndW5nZW48XC9iPiBmw7xyIElocmUgPGI+U2VuZHVuZ2VuPFwvYj48XC9saT5cbjxsaT48Yj5SZWdpc3RyaWVydW5nPFwvYj4gZsO8ciBkaWdpdGFsZSA8Yj5ab2xscmVjaG51bmdlbjxcL2I+PFwvbGk+XG48bGk+PGI+TmFjaHJpY2h0ZW48XC9iPiBhdWYgTXlESEwrIGbDvHIgTnV0emVyIGF1cyBJaHJlbSBVbnRlcm5laG1lbiBwb3N0ZW48XC9saT5cbjxcL3VsPlxuPFwvZGl2PjxcL2Rpdj4iLCJ0b3AtbmF2X2xpbmtfbXktcHJvZmlsZSI6Ik1laW4gUHJvZmlsIiwibWVudV9saW5rX25vdGlmaWNhdGlvbnMtYW5kLXNoYXJpbmciOiJCZW5hY2hyaWNodGlndW5nZW4iLCJncm91cC1zd2l0Y2hlcl9jb2wtbmFtZV9zaGlwLWZyb20iOiJBYnNlbmRlciIsIm1lbnVfbGlua19waWNrdXBzIjoiQWJob2x1bmdlbiIsInRvcC1uYXZfZmllbGQtcGxhY2Vob2xkZXJfcXVpY2stZmlsdGVyIjoiUXVpY2sgRmlsdGVyIiwibWVudV9saW5rX21vbml0b3JpbmctYW5kLW5vdGlmaWNhdGlvbnMiOiJQcm92aWV3IiwiZ3JvdXAtc3dpdGNoZXJfY29sLW5hbWVfc2hpcC10byI6IkVtcGbDpG5nZXIiLCJncm91cC1zd2l0Y2hlcl9jb2wtbmFtZV95b3VyLXJvbGUiOiJHcnVwcGVuL0NvcnAgQWRtaW4iLCJtZW51X2xpbmtfc2F2aW5nLXNoaXBtZW50cyI6IlNlbmR1bmdlbiBzcGVpY2hlcm4iLCJtZW51X2xpbmtfZGVsaXZlcnktb3B0aW9ucyI6Ilp1c3RlbGxvcHRpb25lbiIsImdyb3VwLXN3aXRjaGVyX2xhYmVsX25vIjoiSmEiLCJtZW51X2xpbmtfbXktZGhsLWFjY291bnRzIjoiTWVpbmUgREhMIEFjY291bnRzIiwibWVudV9saW5rX3ByaW50ZXItc2V0dGluZ3MiOiJEcnVja2VyZWluc3RlbGx1bmdlbiIsImFsZXJ0LWFjdGlvbl9iYWNrZW5kLWVycm9yX2NhcmQtZGV0YWlscy1pcy1ub3QtZm91bmQiOiJDcmVkaXQgY2FyZCBkZXRhaWxzIG5vdCBmb3VuZCIsInN0YXR1cy1iYXJfdmFsdWUtbGFiZWxfcGF5IjoiQmV6YWhsZW4iLCJ0b3AtbmF2X2xpbmtfdHJhY2siOiJWZXJmb2xnZW4iLCJtZW51X2xpbmtfbWFuYWdlLWNyZWRpdC1jYXJkcyI6Ik1laW5lIEtyZWRpdGthcnRlbiBiZWFyYmVpdGVuIiwibGItc3dpdGNoLXRvLWNvcnBvcmF0ZV9idXR0b25feWVzLXByb2NlZWQiOiJKYSIsInRvcC1uYXZfbGFiZWxfdXNlci1ncm91cCI6IlNlbmR1bmcgZsO8cjoiLCJtZW51X2xpbmtfcmV0dXJuLXNoaXBtZW50cyI6IlJldG91cmVuIiwiZ3JvdXAtc3dpdGNoZXJfYnV0dG9uX3N3aXRjaGVyLWFwcGx5LWdyb3VwIjoiQXVzd2FobCIsInN0YXR1cy1iYXJfdmFsdWUtbGFiZWxfY3JlYXRlIjoiU2VuZHVuZyBlcnN0ZWxsZW4iLCJncm91cC1zd2l0Y2hlcl9sYWJlbF95ZXMiOiJKYSIsIm1lbnVfbGlua19hZGRyZXNzLWVudHJ5IjoiQWRyZXNzZW4iLCJtZW51X2xpbmtfbG9nb3V0IjoiTG9nb3V0IiwibGFuZ3VhZ2UtcmVkaXJlY3Rpb24tcG9wdXBfYnV0dG9uX3N0YXktb24tdGhpcy1wYWdlIjoiTmVpbiIsInRvcC1uYXZfbGlua19zaGlwIjoiVmVyc2VuZGVuIiwibWVudV9saW5rX2NoYW5nZS1wYXNzd29yZCI6IlBhc3N3b3J0IMOkbmRlcm4iLCJ0b3AtbmF2X2xpbmtfbXktZGhsLWhvbWUiOiJNeURITCsgSG9tZSIsImxiLXN3aXRjaC10by1jb3Jwb3JhdGVfdmFyaWFibGVfc2V0dGluZ3NfZGVmYXVsdHNfY21zIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+PGRpdiBjbGFzcz0ibWVzc2FnZS13cmFwcGVyIj48dWw+PGxpPlNpY2h0YmFya2VpdCA8Yj5lcmhhbHRlbiwgU2VuZHVuZ2VuPFwvYj4gYmVzdMOkdGlnZW4gdW5kIDxiPlN0YW5kYXJkZWluc3RlbGx1bmdlbiBmZXN0bGVnZW48XC9iPjxcL2xpPjxcL3VsPjxcL2Rpdj48XC9kaXY+IiwibWVudV9saW5rX2NvbXBhbnktb3ZlcnZpZXciOiJGaXJtZW5rb250YWt0ZSIsIm1lbnVfbGlua191cGRhdGUtY29udGFjdC1pbmZvIjoiTWVpbiBQcm9maWwgdmVyd2FsdGVuIiwidG9wLW5hdl9zdWItaGVhZGVyX3NoaXBtZW50LXJlcXVpcmUtbXktYWN0aW9ucyI6Ik9mZmVuZSBBdWZnYWJlbiIsImxhbmd1YWdlLXJlZGlyZWN0aW9uLXBvcHVwX2hlYWRlcl9jb25maXJtLW5hdmlnYXRpb24iOiIiLCJtZW51X3N1Yi1oZWFkZXJfbXktY3VzdG9tcy1jbGVhcmFuY2Utc2V0dGluZ3MiOiJFaW5zdGVsbHVuZ2VuIHp1ciBab2xsYWJmZXJ0aWd1bmciLCJtZW51X2xpbmtfbWFuYWdlLXJld2FyZHMtY2FyZHMiOiJSZXdhcmQgQ2FyZHMgdmVyd2FsdGVuIiwibWVudV9saW5rX21hbmFnZS11c2VycyI6IkFkbWluIEtvbnRyb2xsZSBha3RpdmllcmVuIiwibGItc3dpdGNoLXRvLWNvcnBvcmF0ZV92YXJpYWJsZV9yZWZlcmVuY2VzX2NtcyI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPjxkaXYgY2xhc3M9Im1lc3NhZ2Utd3JhcHBlciI+PHVsPjxsaT48Yj5SZWdpc3RyaWVydW5nPFwvYj4gZsO8ciBkaWdpdGFsZSA8Yj5ab2xscmVjaG51bmdlbjxcL2I+PFwvbGk+PFwvdWw+PFwvZGl2PjxcL2Rpdj4iLCJncm91cC1zd2l0Y2hlcl92YWx1ZS1sYWJlbF92aXJ0dWFsLWdyb3VwLXJlZ3VsYXIiOiJHcnVwcGUgMSIsIm1lbnVfbGlua19jdXN0b21zLWludm9pY2UtdGVtcGxhdGVzIjoiTWVpbmUgWm9sbHJlY2hudW5nc3ZvcmxhZ2VuIiwibGItc3dpdGNoLXRvLWNvcnBvcmF0ZV92YXJpYWJsZV9hY2NvdW50X2FuZF9hdXRob3JpemF0aW9uc19jbXMiOiI8ZGl2IGNsYXNzPVwiZXdmX2RpY3Rpb25hcnlfdmFsdWVcIj48ZGl2IGNsYXNzPSJtZXNzYWdlLXdyYXBwZXIiPjx1bD48bGk+QXV0b3Jpc2llcnVuZ2VuIGbDvHIgSWhyZSA8Yj5BY2NvdW50bnVtbWVybjxcL2I+PFwvbGk+PFwvdWw+PFwvZGl2PjxcL2Rpdj4iLCJncm91cC1zd2l0Y2hlcl9wYXJhZ3JhcGhfc3dpdGNoZXItZGVzY3JpcHRpb24iOiJTaWUga8O2bm5lbiBkaWUgR3J1cHBlIGF1c3fDpGhsZW4sIGRpZSBTZW5kdW5nZW4gZXJzdGVsbGVuIHVuZCBiZWFyYmVpdGVuIHNvbGxlbiB1bmQgSWhyZSBTdGFuZGFyZC1HcnVwcGUgZWlucmljaHRlbi4gRGllIFNlbmR1bmdzb3B0aW9uZW4gYmFzaWVyZW4gYXVmIGRlbiBHcnVwcGVuZWluc3RlbGx1bmdlbi4iLCJtZW51X2xpbmtfcmVwb3J0cyI6IlJlcG9ydHMiLCJtZW51X2xpbmtfYWRkcmVzcy1ib29rIjoiQWRyZXNzYnVjaCIsIm1lbnVfbGlua19pdGFsaWFuLXBvcnRhbC10YXJpZmYiOiJBY2Nlc3MgVGFyaWZmIiwiZ3JvdXAtc3dpdGNoZXJfbGFiZWxfbm8tYWNjb3VudCI6Ik4vQSIsImdyb3VwLXN3aXRjaGVyX2NvbC1uYW1lX2NvcnAtZ3JvdXAtYWRtaW4iOiJHcnVwcGVuL0NvcnAgQWRtaW4iLCJncm91cC1zd2l0Y2hlcl9wYXJhZ3JhcGhfc3dpdGNoZXItZGVzY3JpcHRpb24tZm9yLWF1dGgiOiJXw6RobGVuIFNpZSBkaWUgS3VuZGVudW1tZXIgYXVzLCBkaWUgc3RhbmRhcmRnZW3DpHNzIGVpbmdlc3RlbGx0IHNlaW4gc29sbCwgd2VubiBTaWUgZWluZSBTZW5kdW5nIGVyc3RlbGxlbi4gU2llIGvDtm5uZW4gZGllIFN0YW5kYXJkZWluc3RlbGx1bmcgYmVpIEJlZGFyZiDDpG5kZXJuLiIsIm1lbnVfbGlua19teS1wcm9kdWN0LWxpc3QiOiJNZWluZSBQcm9kdWt0L1dhcmVubGlzdGUiLCJsYi1zd2l0Y2gtdG8tY29ycG9yYXRlX3ZhcmlhYmxlX2FkZHJlc3NfYm9va19jbXMiOiI8ZGl2IGNsYXNzPVwiZXdmX2RpY3Rpb25hcnlfdmFsdWVcIj48ZGl2IGNsYXNzPSJtZXNzYWdlLXdyYXBwZXIiPjx1bD48bGk+PGI+QWRyZXNzYsO8Y2hlcjxcL2I+IGVpbnN0ZWxsZW4gdW5kIGRlcmVuIE51dHp1bmcgZGVmaW5pZXJlbjxcL2xpPjxcL3VsPjxcL2Rpdj48XC9kaXY+IiwiZ3JvdXAtc3dpdGNoZXJfY29sLW5hbWVfZGVmYXVsdC1ncm91cCI6IlN0YW5kYXJkIiwibWVudV9saW5rX2dldC1yYXRlLWFuZC1xdW90ZSI6IlRhcmlmZSB1bmQgTGF1ZnplaXQgYWJmcmFnZW4iLCJtZW51X2xpbmtfYXV0aG9yaXplZC1waWNrdXAtbG9jYXRpb25zIjoiWnVnZWxhc3NlbmUgQWJob2xzdGVsbGUiLCJsYi1zd2l0Y2gtdG8tY29ycG9yYXRlX3ZhcmlhYmxlX2RpZ2l0YWxfaW52b2ljZV9jbXMiOiI8ZGl2IGNsYXNzPVwiZXdmX2RpY3Rpb25hcnlfdmFsdWVcIj48ZGl2IGNsYXNzPSJtZXNzYWdlLXdyYXBwZXIiPjx1bD48bGk+UmVnaXN0cmllcnVuZyBmw7xyIDxiPmRpZ2l0YWxlIFpvbGxyZWNobnVuZ2VuPFwvYj48XC9saT48XC91bD48XC9kaXY+PFwvZGl2PiIsImFsZXJ0LWFjdGlvbl9iYWNrZW5kLWVycm9yX2NhcmRzLXRva2VuaXphdGlvbi1pcy1ub3Qtc3VwcG9ydGVkIjoiQ3JlZGl0IGNhcmQgbm90IGFjY2VwdGVkIiwiZ3JvdXAtc3dpdGNoZXJfY29sLW5hbWVfYWNjb3VudC1udW1iZXIiOiJLdW5kZW5udW1tZXIiLCJncm91cC1zd2l0Y2hlcl9jb2wtbmFtZV9hdXRob3JpemF0aW9uLW5hbWUiOiJBdXRvcmlzaWVydW5nc25hbWUiLCJtZW51X2xpbmtfbXktcGlja3VwcyI6Ik1laW5lIEFiaG9sdW5nZW4iLCJncm91cC1zd2l0Y2hlcl9oZWFkZXJfc3dpdGNoZXItcG9wdXAtdGl0bGUiOiJHcnVwcGUgdW5kIFN0YW5kYXJkZWluc3RlbGx1bmcgYXVzd8OkaGxlbiIsImxiLXN3aXRjaC10by1jb3Jwb3JhdGVfdmFyaWFibGVfbWVzc2FnZV9jbXMiOiI8ZGl2IGNsYXNzPVwiZXdmX2RpY3Rpb25hcnlfdmFsdWVcIj48ZGl2IGNsYXNzPSJtZXNzYWdlLXdyYXBwZXIiPjx1bD48bGk+PGI+TmFjaHJpY2h0ZW48XC9iPiBhdWYgTXlESEwrIGbDvHIgTnV0emVyIGF1cyBJaHJlbSBVbnRlcm5laG1lbiBwb3N0ZW48XC9saT48XC91bD48XC9kaXY+PFwvZGl2PiIsInRvcC1uYXZfbGlua19vbmxpbmUtYmlsbGluZyI6IlJlY2hudW5nZW4gdmVyd2FsdGVuIiwibWVudV9saW5rX2JhcmNvZGUiOiJCYXJjb2RlIHNjYW5uZW4iLCJncm91cC1zd2l0Y2hlcl9jb2wtbmFtZV9uYW1lIjoiTmFtZSIsImxiLXN3aXRjaC10by1jb3Jwb3JhdGVfaGVhZGVyX3dpbGwtYmUtY29ycG9yYXRlIjoiS29udHJvbGxlIHVuZCBTaWNodGJhcmtlaXQgZXJoYWx0ZW7CoFx1MjAxM8KgQmVmw6RoaWdlbiB2b24gTXlESEwrIEFkbWluIEtvbnRyb2xsZSIsImxiLXN3aXRjaC10by1jb3Jwb3JhdGVfdGl0bGVfd2lsbC1iZS1jb3Jwb3JhdGUiOiIiLCJ0b3AtbmF2X2xpbmtfbXktc2hpcG1lbnQtc2V0dGluZ3MiOiJNZWluZSBFaW5zdGVsbHVuZ2VuIiwibGItc3dpdGNoLXRvLWNvcnBvcmF0ZV9wYXJhZ3JhcGhfZG8teW91LXdhbnQtdG8tcHJvY2VlZCI6Ik3DtmNodGVuIFNpZSBudW4gc3RhcnRlbiB1bmQgQWRtaW4gS29udHJvbGxlIGZyZWlzY2hhbHRlbj8iLCJtZW51X2xpbmtfaW5zdXJhbmNlIjoiU2VuZHVuZ3N2ZXJzaWNoZXJ1bmciLCJ0b3AtbmF2X2xpbmtfdXNlci1tYW5hZ2VtZW50IjoiQWRtaW4iLCJtZW51X2xpbmtfZGVjbGFyYXRpb25zIjoiQmVzY2hlaW5pZ3VuZ2VuIiwiZ3JvdXAtc3dpdGNoZXJfY29sLW5hbWVfY29tcGFueSI6IkZpcm1hIiwibWVudV9saW5rX2RpZ2l0YWwtY3VzdG9tcy1pbnZvaWNlcyI6IkRpZ2l0YWxlIFpvbGxyZWNobnVuZ2VuIiwibWVudV9saW5rX2Fzc2lnbmluZy1zaGlwbWVudHMiOiJTZW5kdW5nc2JlYXJiZWl0dW5nIMO8YmVyZ2ViZW4iLCJtZW51X2xpbmtfbXktc2hpcG1lbnQtcmVmZXJlbmNlcyI6IlNlbmR1bmdzcmVmZXJlbnoiLCJtZW51X2xpbmtfYXV0aG9yaXplZC1hY2NvdW50cy11c2FnZSI6IkFjY291bnQgQXV0b3Jpc2llcnVuZyIsImxiLXN3aXRjaC10by1jb3Jwb3JhdGVfYnV0dG9uX25vLWNhbmNlbCI6ImFiYnJlY2hlbiIsInRvcC1uYXZfbGlua19lLWJpbGxpbmciOiJSZWNobnVuZ2VuIHZlcndhbHRlbiIsIm1lbnVfbGlua190cmFjay1ieS1yZWZlcmVuY2UiOiJSZWZlcmVuenRyYWNraW5nIiwibWVudV9saW5rX3RyYWNrLWJ5LW51bWJlciI6IlNlbmR1bmdlbiB2ZXJmb2xnZW4iLCJtZW51X3N1Yi1oZWFkZXJfc2hpcG1lbnQtZGVmYXVsdHMiOiJTZW5kdW5nc2VpbnN0ZWxsdW5nZW4iLCJsYW5ndWFnZS1yZWRpcmVjdGlvbi1wb3B1cF9idXR0b25fbGVhdmUtdGhpcy1wYWdlIjoiSmEiLCJ0b3AtbmF2X2xpbmtfbG9naW4iOiJMb2dpbiIsIm1lbnVfbGlua19lc2VjdXJlIjoiWnVnYW5nIGVTZWN1cmUiLCJzdGF0dXMtYmFyX3ZhbHVlLWxhYmVsX3ByaW50IjoiRHJ1Y2tlbiIsImxiLXN3aXRjaC10by1jb3Jwb3JhdGVfdmFyaWFibGVfZ3JvdXBzX2NtcyI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPjxkaXYgY2xhc3M9Im1lc3NhZ2Utd3JhcHBlciI+PHVsPjxsaT5EZWZpbmllcmVuIFNpZSBHcnVwcGVuLCB1bSA8Yj5yb2J1c3RlIFZlcnNhbmQ8XC9iPsKgdW5kIEFkbWluaXN0cmF0b3JmdW5rdGlvbmVuIHp1IDxiPm51dHplbjxcL2I+PFwvbGk+PFwvdWw+PFwvZGl2PjxcL2Rpdj4iLCJsYW5ndWFnZS1yZWRpcmVjdGlvbi1wb3B1cF9tc2dfZ3Vlc3Qtb3RoZXItZmxvdy1tZXNzYWdlIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+PGRpdiBjbGFzcz0ibWVzc2FnZS13cmFwcGVyIj48cD5TaWUgbcO8c3NlbiBlcm5ldXQgc3RhcnRlbi48XC9wPlxuPHA+wqA8XC9wPlxuPHA+TcO2Y2h0ZW4gU2llIGRpZSBTcHJhY2hlIMOkbmRlcm4/PFwvcD5cbjxcL2Rpdj48XC9kaXY+IiwibWVudV9saW5rX3VwbG9hZC1zaGlwbWVudC1maWxlIjoiU2VuZHVuZ3NhdWZ0csOkZ2UgYXVzIERhdGVpIiwibGItc3dpdGNoLXRvLWNvcnBvcmF0ZV92YXJpYWJsZV9tb25pdG9yaW5nX2JpbGxpbmdfY21zIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+PGRpdiBjbGFzcz0ibWVzc2FnZS13cmFwcGVyIj48dWw+PGxpPlp1Z2FuZyB6dXIgPGI+U2VuZHVuZ3PDvGJlcndhY2h1bmcgdW5kIE9ubGluZXJlY2hudW5nPFwvYj48XC9saT48XC91bD48XC9kaXY+PFwvZGl2PiIsIm1lbnVfbGlua192aWV3LWFsbC11bi1zdWJtaXR0ZWQiOiJOaWNodCDDvGJlcm1pdHRlbHQiLCJsYi1zd2l0Y2gtdG8tY29ycG9yYXRlX3ZhcmlhYmxlX25vdGlmaWNhdGlvbnNfY21zIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+PGRpdiBjbGFzcz0ibWVzc2FnZS13cmFwcGVyIj48dWw+PGxpPjxiPlN0YXR1c2JlbmFjaHJpY2h0aWd1bmdlbjxcL2I+IGbDvHIgSWhyZSA8Yj5TZW5kdW5nZW48XC9iPjxcL2xpPjxcL3VsPjxcL2Rpdj48XC9kaXY+IiwibWVudV9saW5rX2FsbC1zaGlwbWVudHMiOiJBbGxlIFNlbmR1bmdlbiIsIm1lbnVfc3ViLWhlYWRlcl9zYXZlZC1zZXR0aW5ncyI6Ik1laW5lIGdlc3BlaWNoZXJ0ZW4gRWluc3RlbGx1bmdlbiIsImxhbmd1YWdlLXJlZGlyZWN0aW9uLXBvcHVwX21zZ19ub3ZpY2Utb3RoZXItZmxvdy1tZXNzYWdlIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+PGRpdiBjbGFzcz0ibWVzc2FnZS13cmFwcGVyIj48cD5TaWUgbcO8c3NlbiBlcm5ldXQgc3RhcnRlbi48XC9wPlxuPHA+wqA8XC9wPlxuPHA+TcO2Y2h0ZW4gU2llIGRpZSBTcHJhY2hlIMOkbmRlcm4/PFwvcD5cbjxcL2Rpdj48XC9kaXY+IiwibWVudV9saW5rX21hbmFnZS1teS1kaGwiOiJNeURITCsgdmVyd2FsdGVuIiwibWVudV9saW5rX2l0YWxpYW4tcG9ydGFsLXVuZGVsIjoiQWNjZXNzIFVuZGVsIiwibWVudV9saW5rX2N1c3RvbXMtY2xlYXJhbmNlIjoiVmVyem9sbHVuZyIsImxhbmd1YWdlLXJlZGlyZWN0aW9uLXBvcHVwX21zZ19ub3ZpY2Utc2hpcG1lbnQtbWVzc2FnZSI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPjxkaXYgY2xhc3M9Im1lc3NhZ2Utd3JhcHBlciI+PHA+PGI+V2VubiBTaWUgSWhyZSBTcHJhY2hlIGpldHp0IMOkbmRlcm48XC9iPjxcL3A+XG48cD7CoDxcL3A+XG48dWw+XG48bGk+U2llIG3DvHNzZW4gZXJuZXV0IHN0YXJ0ZW4uPFwvbGk+XG48XC91bD5cbjxwPsKgPFwvcD5cbjx1bD5cbjxsaT5PZGVyIFNpZSBzcGVpY2hlcm4gZGllIFNlbmR1bmcgenVuw6RjaHN0IHVuZCBnZWhlbiBzcMOkdGVyIHp1ciBWZXJzYW5kw7xiZXJzaWNodCB1bmQgc2NobGllw59lbiBkaWUgU2VuZHVuZyBkYW5uIGFiLjxcL2xpPlxuPFwvdWw+XG48cD7CoDxcL3A+XG48cD5Nw7ZjaHRlbiBTaWUgZGllIFNwcmFjaGUgw6RuZGVybj88XC9wPlxuPFwvZGl2PjxcL2Rpdj4iLCJtZW51X2xpbmtfY3JlYXRlLWEtc2hpcG1lbnQiOiJTZW5kdW5nIGVyc3RlbGxlbiIsInRvcC1uYXZfbGlua19tYW5hZ2Utc2hpcG1lbnRzIjoiVmVyd2FsdGVuIn0sIlJFR0lTVFJBVElPTiI6eyJOT1RfQUxMT1dFRF9DT1JQX0FDQ09VTlRfRk9SX1JFR1VMQVJfUkVHSVNUUkFUSU9OIjoiUmVnaXN0cmllcnVuZyBtaXQgZGllc2VtIEFjY291bnQgbmljaHQgbcO2Z2xpY2guIFByb2JpZXJlbiBTaWUgZWluZSBhbmRlcmUgQWNjb3VudG51bW1lciBvZGVyIHJlZ2lzdHJpZXJlbiBTaWUgc2ljaCBvaG5lIEFjY291bnQgdW5kIHphaGxlbiBTaWUgZGllIFNlbmR1bmcgbWl0IGRlciBLcmVkaXRrYXJ0ZS4iLCJSRUdJU1RSQVRJT05fU0VMRUNUX09QVElPTl9PTkVfT0ZGX1NISVBNRU5UIjoid2VuaWdlciBhbHMgbW9uYXRsaWNoIiwiQ09OVEFDVF9ERVRBSUxTX01TR18xX1VQUEVSQ0FTRV9MRVRURVIiOiJlaW5lbiBHcm/Dn2J1Y2hzdGFiZW4gYmVpbmhhbHRlbiIsIkFDQ09VTlRfVFlQRV9TSElQUEVSIjoiVmVyc2VuZGVyIiwiQUNDT1VOVF9UWVBFX1BBWUVSIjoiRnJhY2h0emFobGVyIiwiUkVHSVNUUkFUSU9OX0hFQURFUl9FTUFJTF9WRVJJRklDQVRJT05fRVhQSVJFRCI6IiIsIkNPUlBfQUNDT1VOVF9TSE9VTERfQkVfVEhFX09OTFkiOiJEaWVzZXIgQWNjb3VudCBrYW5uIG5pY2h0IHJlZ2lzdGlyZXJ0IHdlcmRlbi4gS29udGFrdGllcmVuIFNpZSBJaHJlbiBESEwgQWNjb3VudCBNYW5hZ2VyLiIsIkNPTlRBQ1RfREVUQUlMU19NU0dfU1BFQ0lBTF9DSEFSQUNURVJTIjoiZWluIFNvbmRlcnplaWNoZW4gYmVpbmhhbHRlbiIsIkNPTlRBQ1RfREVUQUlMU19NU0dfTUlOSU1VTV84X0NIQVJBQ1RFUlMiOiJtaW5kZXN0ZW5zIDggWmVpY2hlbiBsYW5nIHNlaW4iLCJSRUdJU1RSQVRJT05fU0VMRUNUX09QVElPTl9NT05USExZIjoibW9uYXRsaWNoIiwiQ09OVEFDVF9ERVRBSUxTX01TR18xX05VTUJFUiI6ImVpbmUgWmFobCBiZWluaGFsdGVuIiwiUkVHSVNUUkFUSU9OX1NFTEVDVF9PUFRJT05fV0VFS0xZIjoid8O2Y2hlbnRsaWNoIiwiUkVHSVNUUkFUSU9OX1NFTEVDVF9PUFRJT05fREFJTFkiOiJ0w6RnbGljaCIsIkNPTlRBQ1RfREVUQUlMU19NU0dfMV9MT1dFUkNBU0VfTEVUVEVSIjoiZWluZW4gS2xlaW5idWNoc3RhYmVuIGJlaW5oYWx0ZW4iLCJSRUdJU1RSQVRJT05fSEVBREVSX0VNQUlMX0FMUkVBRFlfVVNFRCI6IiJ9LCJTSElQTUVOVF9DVVNUT01TX0lOVk9JQ0UiOnsiQ1VTVE9NU19JTlZPSUNFX0lURU1TX1ZBTFVFX0xBQkVMX09USEVSX0NIQVJHRTMiOiJBbmRlcmUgR2Viw7xociAzIiwiQ1VTVE9NU19JTlZPSUNFX0lURU1TX1ZBTFVFX0xBQkVMX09USEVSX0NIQVJHRTIiOiJBbmRlcmUgR2Viw7xociAyIiwiSU5WT0xWRURfUEFSVElFU19MQUJFTF9DT1VOVFJZX09GX0RFU1RJTkFUSU9OIjoiZW5kZ8O8bHRpZ2VzIFppZWwiLCJDVVNUT01TX0lOVk9JQ0VfSVRFTVNfTEFCRUxfQ09VTlRSWV9USVRMRSI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPkhlcnN0ZWxsdW5nc2xhbmQgPGRpdiBjbGFzcz1cImluZm9cIj48ZGl2PkRpZXMgaXN0IGRhcyAsIGluIGRlbSBkaWUgV2FyZSB1cnNwcsO8bmdsaWNoIGhlcmdlc3RlbGx0LCBwcm9kdXppZXJ0IG9kZXIgYW5nZWJhdXQgd3VyZGUuPFwvZGl2PjxcL2Rpdj48XC9kaXY+IiwiVEVSTVNfU0VMRUNUX09QVElPTl9DUkVESVRfQ0FSRCI6IktyZWRpdGthcnRlIiwiQ1VTVE9NU19JTlZPSUNFX0lURU1TX0xBQkVMX1VTRVJfUFJPRklMRV9DT01NT0RJVFlfQ09ERSI6IldhcmVudGFyaWZudW1tZXIiLCJDUkVBVEVfQ1VTVE9NU19JTlZPSUNFX1BBUkFHUkFQSF9TVEFSVF9CWV9TRUxFQ1RJTkdfVFlQRV9JTlZPSUNFIjoiV8OkaGxlbiBTaWUgZGllIFJlY2hudW5nc2FydCwgd2VsY2hlIGRpZSBXYXJlbiwgZGllIFNpZSB2ZXJzZW5kZW4gd29sbGVuLCBhbSBiZXN0ZW4gYmVzY2hyZWlidC4gT2RlciBudXR6ZW4gU2llIElocmUgZ2VzcGVpY2hlcnRlIFZvcmxhZ2UuIiwiVEVSTVNfU0VMRUNUX09QVElPTl9DQVNIIjoiQmFyIiwiUkVGRVJFTkNFX0FORF9SRU1BUktTX0JVVFRPTl9ZRVMiOiJKYSIsIlRFUk1TX1NFTEVDVF9PUFRJT05fQUxURVJOQVRFX0FDQ09VTlQiOiJQYXllci9GcmFjaHR6YWhsZXIiLCJDVVNUT01TX0lOVk9JQ0VfSVRFTVNfVkFMVUVfTEFCRUxfT1RIRVJfQ0hBUkdFMSI6IkFuZGVyZSBHZWLDvGhyIDEiLCJDVVNUT01TX0lOVk9JQ0VfSVRFTVNfTEFCRUxfSU1QT1JUX0NPTU1PRElUWV9DT0RFIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+PGRpdiBjbGFzcz0ibWVzc2FnZS13cmFwcGVyIj5XYXJlbnRhcmlmbnVtbWVyIDxkaXYgY2xhc3M9XCJpbmZvXCI+PGRpdj48cD5KZWRlciBXYXJlIGlzdCBlaW5lIFpvbGx0YXJpZm51bW1lci9IUy1Db2RlIHp1Z2VvcmRuZXQuPFwvcD5cbjxwPkRpZXMgZXJtw7ZnbGljaHQgZWluZSBlaW5mYWNoZSB1bmQga29ycmVrdGUgVmVyem9sbHVuZy4gRGllc2UgV2FyZW4gYmVzaXR6ZW4genVnZXdpZXNlbmUgQ29kZXMsIHdlbGNoZSBkdXJjaCBab2xscmVndWxpZXJ1bmdlbiBkZWZpbmllcnQgd2VyZGVuIHVuZCBlbnRzY2hlaWRlbmRlIEluZm9ybWF0aW9uZW4gZsO8ciBkZW4gbG9rYWxlbiBab2xsIGJlaW5oYWx0ZW4uPFwvcD5cbjxcL2Rpdj48XC9kaXY+PFwvZGl2PjxcL2Rpdj4iLCJDVVNUT01TX0lOVk9JQ0VfSVRFTVNfRklFTERfUExBQ0VIT0xERVJfT1RIRVJfQ0hBUkdFMV9QTEFDRUhPTERFUiI6IkJlaXNwaWVsOiBGcmFjaHRrb3N0ZW4iLCJDVVNUT01TX0lOVk9JQ0VfSVRFTVNfTEFCRUxfRVhQT1JUX0NPTU1PRElUWV9DT0RFIjoiV2FyZW50YXJpZm51bW1lciIsIkNVU1RPTVNfSU5WT0lDRV9JVEVNU19MQUJFTF9TQ0hFRFVMRV9CIjoiQXVmc3RlbGx1bmcgQiIsIkNVU1RPTVNfSU5WT0lDRV9JVEVNU19GSUVMRF9QTEFDRUhPTERFUl9PVEhFUl9DSEFSR0UyX1BMQUNFSE9MREVSIjoiQmVpc3BpZWw6IFZlcnNpY2hlcnVuZ3Nrb3N0ZW4iLCJSRUZFUkVOQ0VfQU5EX1JFTUFSS1NfQlVUVE9OX05PIjoiTmVpbiIsIkNVU1RPTVNfSU5WT0lDRV9JVEVNU19GSUVMRF9QTEFDRUhPTERFUl9PVEhFUl9DSEFSR0UzX1BMQUNFSE9MREVSIjoiQmVpc3BpZWw6IHNvbnN0aWdlIEtvc3RlbiIsIkNVU1RPTVNfSU5WT0lDRV9JVEVNU19NU0dfQ09ORklSTV9ERVNDUklQVElPTl9SRVBMQUNFIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+PGRpdiBjbGFzcz0ibWVzc2FnZS13cmFwcGVyIj48cD5FcnNldHplbiBTaWUgZGllczo8XC9wPlxuPHA+wqA8XC9wPlxuPHA+e29sZERlc2NyaXB0aW9ufTxcL3A+XG48cD7CoDxcL3A+XG48cD5kdXJjaCBkYXM6PFwvcD5cbjxwPsKgPFwvcD5cbjxwPntuZXdEZXNjcmlwdGlvbn08XC9wPlxuPFwvZGl2PjxcL2Rpdj4ifSwic2hpcG1lbnRfcGFwZXJ3b3JrLWludm9pY2UtcmVhc29uX2Zvcl9leHBvcnQiOnsicmV0dXJuX3RvX29yaWdpbi1kZXNjcmlwdGlvbiI6IlJldHVybiB0byBPcmlnaW4iLCJyZXR1cm5fcmVwYWlyLWRlc2NyaXB0aW9uIjoiUmV0dXJuL1JlcGFpciIsImdpZnQtZGVzY3JpcHRpb24iOiJHaWZ0Iiwid2FycmFudHktZGVzY3JpcHRpb24iOiJXYXJyYW50eSBSZXBsYWNlbWVudCIsInNhbXBsZV9teS1kZXNjcmlwdGlvbiI6IlNhbXBsZSIsInJldHVybl9mb3JfcmVwYWlyLWRlc2NyaXB0aW9uIjoiUmV0dXJuIGZvciBSZXBhaXIiLCJzYW1wbGUtZGVzY3JpcHRpb24iOiJTYW1wbGUiLCJnaWZ0X215LWRlc2NyaXB0aW9uIjoiR2lmdCIsImNvbW1lcmNpYWxfbm90X2Zvcl9yZXNhbGUtZGVzY3JpcHRpb24iOiJDb21tZXJjaWFsIHB1cnBvc2VzIChOb3QgZm9yIFJlc2FsZSkiLCJmb3JtYWxfZXhwb3J0X3Byby1kZXNjcmlwdGlvbiI6IkZvcm1hbCBFeHBvcnQsIFByb2Zvcm1hIiwiY29tbWVyY2lhbF9wdXJwb3NlLWRlc2NyaXB0aW9uIjoiQ29tbWVyY2lhbCIsInBlcnNvbmFsX215LWRlc2NyaXB0aW9uIjoiUGVyc29uYWwgQmVsb25naW5ncyAvIE5vdCBmb3IgUmVzYWxlIiwiZGlwbG9tYXRpY19tYWlsLWRlc2NyaXB0aW9uIjoiRGlwbG9tYXRpYyBNYWlsIiwiZm9ybWFsX2V4cG9ydF9jb21tLWRlc2NyaXB0aW9uIjoiRm9ybWFsIEV4cG9ydCwgQ29tbWVyY2lhbCIsIm1pY3JvX2V4cG9ydF9jb20tZGVzY3JpcHRpb24iOiJNaWNybyBFeHBvcnQgKENvbW1lcmNpYWwgSW52b2ljZSkiLCJvdGhlci1kZXNjcmlwdGlvbiI6IkNsYWltIiwibWljcm9fZXhwb3J0X3Byby1kZXNjcmlwdGlvbiI6Ik1pY3JvIEV4cG9ydCAoUHJvZm9ybWEgSW52b2ljZSkiLCJyZXR1cm5fYWZ0ZXJfcmVwYWlyLWRlc2NyaXB0aW9uIjoiUmV0dXJuIGFmdGVyIFJlcGFpciIsInBlcnNvbmFsLWRlc2NyaXB0aW9uIjoiUGVyc29uYWwsIE5vdCBmb3IgUmVzYWxlIn0sIlNISVBNRU5UX0FERFJFU1MiOnsiQUREUkVTU19ERVRBSUxTX0hFQURFUl9UTyI6IkFuIiwiTEJfQ1JFQVRFX0lNUE9SVF9BTEVSVF9FTlRFUl9BQ0NPVU5UX05JQ0tOQU1FIjoiRXJmb3JkZXJsaWNoIiwiQUREUkVTU19ERVRBSUxTX0xBQkVMX1NUQVRFIjoiQnVuZGVzbGFuZCIsIkFERFJFU1NfREVUQUlMU19TRUxFQ1RfT1BUSU9OX05PTkRPQ19FWEVNUFQiOiJQYWNrYWdlIFNoaXBtZW50IChFeGVtcHQgZnJvbSBzdGF0ZSByZWdpc3RyYXRpb24pIiwiQUREUkVTU19ERVRBSUxTX0xBQkVMX05PVF9CUkFaSUwiOiJEb2VzIG5vdCBvcmlnaW5hdGUgZnJvbSBCcmF6aWwiLCJFUlJPUl9PU1JfTlVNQkVSX0lOVkFMSUQiOiJVbmfDvGx0aWcgR1NUIE51bW1lciIsIkFERFJFU1NfREVUQUlMU19CQUNLRU5EX0VSUk9SX0lOVkFMSURfUE9TVF9MT0NBVElPTiI6IlVuZ8O8bHRpZ2UgUExaIiwiQUREUkVTU19ERVRBSUxTX0xBQkVMX0ZST01fRkFWT1JJVEVTX0RST1BET1dOIjoiPGRpdj5Wb24gRmF2b3JpdGVuPFwvZGl2PlxuIiwiQUREUkVTU19ERVRBSUxTX0VSUk9SX0lFX1RBWF9JRF9OT1RfU1BFQ0lGSUVEX1BST1ZJTkNFIjoiUHJvdmluY2UgcmVxdWlyZWQiLCJBRERSRVNTX0RFVEFJTFNfU0VMRUNUX09QVElPTl9PVEhFUiI6ImFuZGVyZSIsIkFERFJFU1NfREVUQUlMU19TRUxFQ1RfT1BUSU9OX09GRklDRSI6IkLDvHJvIiwiQUREUkVTU19ERVRBSUxTX0xBQkVMX0FERFJFU1NfMyI6IkFkcmVzc2UgMyIsIkFERFJFU1NfREVUQUlMU19TRUxFQ1RfT1BUSU9OX1NFQVJDSF9BRERSRVNTQk9PSyI6IkFkcmVzc2J1Y2ggZHVyY2hzdWNoZW4iLCJPRkFDX0FMRVJUIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+PGRpdiBjbGFzcz0ibWVzc2FnZS13cmFwcGVyIj48cD5VLlMuIHRyYWRlIHJlc3RyaWN0aW9ucyBhcHBseSB0byBzaGlwbWVudHMgYmV0d2VlbiB0aGUgVS5TLiBhbmQgQ3ViYSwgSXJhbiwgS29yZWEgRC5QLlIgKE5vcnRoIEtvcmVhKSwgU3VkYW4gYW5kIFN5cmlhIGZvciBkb2N1bWVudHMgYW5kIG5vbi1kb2N1bWVudHMgYmFzZWQgb24gc2VydmljZSBkaXJlY3RvcnkgcmVzdHJpY3Rpb25zLjxcL3A+XG48cD48YnI+XG5TdWNoIHNoaXBtZW50cyBhcmUgbm90IGFjY2VwdGFibGUgZm9yIHRyYW5zaXQsIGV4Y2VwdCBmb3IgcHJlLWFwcHJvdmVkIGN1c3RvbWVycyBwb3NzZXNzaW5nIHRoZSByZXF1aXJlZCBleHBvcnQgbGljZW5zZXMgb3IgZXhlbXB0aW9ucy4gVGhlIHByZS1hcHByb3ZhbCBmb3IgdGhlc2Ugc2hpcG1lbnRzIGJ5IHRoZSBESEwgSW50ZXJuYXRpb25hbCBUcmFkZSBBZmZhaXJzIGFuZCBDb21wbGlhbmNlIChJVEFDKSB0ZWFtIGZvciBsaWNlbnNlZCBvciBleGVtcHRlZCBzaGlwbWVudHMgbXVzdCB0YWtlIHBsYWNlIGJlZm9yZSB0aGUgc2hpcG1lbnQgaXMgcGlja2VkIHVwIGJ5IG9yIHRlbmRlcmVkIHRvIERITC48XC9wPlxuPHA+PGJyPlxuQSBSZXN0cmljdGVkIEFjY2VzcyBDb3VudHJ5IHNlcnZpY2UgY2hhcmdlIG9mICQzMC4wMCBwZXIgc2hpcG1lbnQgd2lsbCBhcHBseSwgaW4gYWRkaXRpb24gdG8gdGhlIHN0YW5kYXJkIHNoaXBwaW5nIGNoYXJnZXMuPFwvcD5cbjxcL2Rpdj48XC9kaXY+IiwiQUREUkVTU19ERVRBSUxTX1NFTEVDVF9PUFRJT05fU0VBUkNIX0FERFJFU1NFUyI6IkFkcmVzc2Ugc3VjaGVuIiwiQUREUkVTU19ERVRBSUxTX0hFQURFUl9ORkVfVE8iOiJORmUgQW4iLCJBRERSRVNTX0RFVEFJTFNfU0VMRUNUX09QVElPTl9JTVBPUlRfTkZfRklMRSI6IlVwbG9hZCBORmUgZmlsZShzKSIsIk9TUl9NU0dfQ09ORklSTV9PU1JfREVMRVRJT04iOiJTaW5kIFNpZSBzaWNoZXIsIGRhc3MgU2llIGRpZSBHU1QtTnVtbWVyIGRlcyB0cmFuc2F0bGFudGlzY2ggcmVnaXN0cmllcnRlbiBMaWVmZXJhbnRlbiBlbnRmZXJuZW4gbcO2Y2h0ZW4/IiwiQUREUkVTU19ERVRBSUxTX0xBQkVMX05JQ0tOQU1FIjoiQWxpYXMiLCJBRERSRVNTX0RFVEFJTFNfTEFCRUxfTk9UQV9GSVNDQUxfTlVNQkVSIjoiTm90YSBGaXNjYWwgTnVtYmVyOiIsIkxCX0RPTUVTVElDX1JFU1RSSUNURURfSEVBREVSX1NPUlJZIjoiTmF0aW9uYWxlIFNlcnZpY2VzIE5pY2h0IFZlcmbDvGdiYXIiLCJBRERSRVNTX0RFVEFJTFNfU0VMRUNUX09QVElPTl9OT05ET0NfTk9UX0VYRU1QVCI6IlBhY2thZ2UgU2hpcG1lbnQgKE5vdCBleGVtcHQgZnJvbSBzdGF0ZSByZWdpc3RyYXRpb24pIiwiQUREUkVTU19ERVRBSUxTX0xBQkVMX05PTkRPQ19FWEVNUFQiOiJQYWNrYWdlIFNoaXBtZW50IChFeGVtcHQgZnJvbSBzdGF0ZSByZWdpc3RyYXRpb24pIiwiTEJfRE9NRVNUSUNfUkVTVFJJQ1RFRF9QQVJBR1JBUEhfTk9fRE9NRVNUSUMiOiJCaXR0ZSB3w6RobGVuIFNpZSBlaW4gYW5kZXJlcyBaaWVsIGF1cy4iLCJBRERSRVNTX0RFVEFJTFNfU0VMRUNUX09QVElPTl9OT1RfQlJBWklMIjoiRG9lcyBub3Qgb3JpZ2luYXRlIGZyb20gQnJhemlsIiwiQUREUkVTU19ERVRBSUxTX0xBQkVMX0VNQUlMIjoiRS1NYWlsIEFkcmVzc2UiLCJBRERSRVNTX0JPT0tfTVNHX0VNUFRZX01BSUxJTkdfTElTVCI6IkRpZXNlIE1haWxpbmdsaXN0ZSBlbnRow6RsdCBrZWluZSBLb250YWt0ZS8gQWRyZXNzZW4uIEJpdHRlIGFrdHVhbGlzaWVyZW4gU2llIElocmUgTWFpbGluZ2xpc3RlLCBzb2Rhc3MgZGllc2UgbWluZGVzdGVucyBlaW5lL24gQWRyZXNzZS8gS29udGFrdCBlbnRow6RsdC4iLCJBRERSRVNTX0RFVEFJTFNfSEVBREVSX0ZST00iOiJWb24iLCJMQl9JTVBPUlRfUkVTVFJJQ1RFRF9IRUFERVJfQ1JFQVRJTkdfSU1QT1JUX1NISVBNRU5UIjoiU2llIGVyc3RlbGxlbiBlaW5lIEltcG9ydHNlbmR1bmciLCJBRERSRVNTX0RFVEFJTFNfTEFCRUxfQ05QSl9DUEZfVEFYX0lEIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+PGRpdiBjbGFzcz0ibWVzc2FnZS13cmFwcGVyIj5DTkovQ1BGIFN0ZXVlcm51bW1lciA8ZGl2IGNsYXNzPVwiaW5mb1wiPjxkaXY+PHA+VGhlIEltcG9ydGVyXHUyMDE5cyBUYXggSUQgbnVtYmVyIGlzIHJlcXVpcmVkIGZvciBhbGwgc2hpcG1lbnRzIHRvIEJyYXppbC4gTGFjayBvZiBUYXggSUQgbnVtYmVyIGNhbiByZXN1bHQgaW4gY3VzdG9tcyBjbGVhcmFuY2UgZGVsYXlzIGFuZC9vciBzaGlwbWVudCByZXR1cm5lZCB0byBvcmlnaW4uPFwvcD5cbjx1bD5cbjxsaT5DTlBKIChDYWRhc3RybyBOYWNpb25hbCBkYSBQZXNzb2EgSnVyaWRpY2EgLSBCcmF6aWwgQ29ycG9yYXRlIFRheCBJRCkgaXMgYSBDb21wYW55IFRheCBJRCBudW1iZXI8XC9saT5cbjxcL3VsPlxuPHA+wqA8XC9wPlxuPHVsPlxuPGxpPkNQRiAoQ2FkYXN0cm8gZGUgUGVzc29hIEbDrXNpY2EgLSBCcmF6aWwgU29jaWFsIFNlY3VyaXR5KSBpcyBhbiBJbmRpdmlkdWFsIFRheCBJRCBudW1iZXIuIMKgT2J0YWluIHRoaXMgbnVtYmVyIGZyb20gdGhlIFJlY2lwaWVudCBpbiBCcmF6aWw8XC9saT5cbjxcL3VsPlxuPFwvZGl2PjxcL2Rpdj48XC9kaXY+PFwvZGl2PiIsIkFERFJFU1NfREVUQUlMU19MQUJFTF9FWFRFTlNJT04iOiJEdXJjaHdhaGwiLCJMQl9JTVBPUlRfUkVTVFJJQ1RFRF9QQVJBR1JBUEhfSU1QT1JUX1NISVBNRU5UX05PVF9BTExPV0VEIjoiSW1wb3J0c2VuZHVuZ2VuIGbDvHIgZGllc2VzIFppZWxsYW5kIG5pY2h0IGVybGF1YnQuIiwiQUREUkVTU19ERVRBSUxTX0xBQkVMX0RPQyI6IkRva3VtZW50IiwiQUREUkVTU19ERVRBSUxTX1NFTEVDVF9PUFRJT05fRkFYIjoiRmF4IiwiQUREUkVTU19ERVRBSUxTX0xBQkVMX0lFX1RBWF9JRCI6IklFL1JHIiwiQUREUkVTU19ERVRBSUxTX0xBQkVMX1BST1ZJTkNFIjoiQnVuZGVzbGFuZCIsIkFERFJFU1NfREVUQUlMU19MQUJFTF9OT05ET0NfTk9UX0VYRU1QVCI6IlBhY2thZ2UgU2hpcG1lbnQgKE5vdCBleGVtcHQgZnJvbSBzdGF0ZSByZWdpc3RyYXRpb24pIiwiQUREUkVTU19ERVRBSUxTX0xBQkVMX0RBTkZFIjoiREFORmUga2V5KHMpIiwiQUREUkVTU19ERVRBSUxTX1NFTEVDVF9PUFRJT05fTU9CSUxFIjoiSGFuZHkiLCJMQl9CUkFaSUxfT1VUQk9VTkRfUkVTVFJJQ1RFRF9QQVJBR1JBUEhfT1VUQk9VTkRfTk9UX0FMTE9XRUQiOiJTaGlwbWVudCB0byBCcmF6aWwgbm90IGFsbG93ZWQiLCJBRERSRVNTX0RFVEFJTFNfU0VMRUNUX09QVElPTl9EQU5GRSI6Ikkgd2lsbCBlbnRlciBEQU5GZSBLZXkocykiLCJBRERSRVNTX0RFVEFJTFNfSEVBREVSX05GRV9GUk9NIjoiTkZlIFZvbiIsIkxCX0NSRUFURV9JTVBPUlRfQUxFUlRfRU5URVJfQUNDT1VOVF9OVU1CRVIiOiJJbXBvcnQgQWNjb3VudCBudW1tZXIgYmVuw7Z0aWd0IiwiQUREUkVTU19ERVRBSUxTX0xBQkVMX0lNUE9SVF9ORl9GSUxFIjoiaG9jaGdlbGFkZW4iLCJBRERSRVNTX0RFVEFJTFNfU0VMRUNUX09QVElPTl9ET0MiOiJEb2t1bWVudCIsIkFERFJFU1NfREVUQUlMU19QQVJBR1JBUEhfU1dJVENIX1JFU1RSSUNURUQiOiJXZWNoc2VsIG5pY2h0IG3DtmdsaWNoIiwiTEJfRU1BSUxfU0FWRV9QQVJBR1JBUEhfRU1BSUxfVE9fU0FWRSI6IkdlYmVuIFNpZSBlaW5lIGVNYWlsLUFkcmVzc2UgYW4gdW0gZGllc2VuIEtvbnRha3Qgc3BlaWNoZXJuIHp1IGvDtm5uZW4uIiwiTEJfQ1JFQVRFX0lNUE9SVF9BTEVSVF9BQ0NPVU5UX0lTX0lOVkFMSUQiOiJVbmfDvGx0aWdlciBBY2NvdW50IiwiQUREUkVTU19ERVRBSUxTX0VSUk9SX0lOVkFMSURfVEFYX0lEIjoidW5nw7xsdGlnZSBTdGV1ZXIgSUQiLCJBRERSRVNTX0RFVEFJTFNfTEFCRUxfU1VCVVJCIjoiVm9yb3J0IiwiTEJfSU1QT1JUX1JFU1RSSUNURURfUEFSQUdSQVBIX0lNUE9SVF9BQ0NPVU5UX05FRURFRCI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPjxkaXYgY2xhc3M9Im1lc3NhZ2Utd3JhcHBlciI+PHA+Qml0dGUgZsO8Z2VuIFNpZSBlaW5lIEltcG9ydC1LdW5kZW5udW1tZXIgaGluenUuPFwvcD5cbjxwPkZhbGxzIFNpZSBrZWluZSBJbXBvcnQtS3VuZGVubnVtbWVyIGJlc2l0emVuLCDDpG5kZXJuIFNpZSBkYXMgVk9OIExhbmQuPFwvcD5cbjxcL2Rpdj48XC9kaXY+IiwiQUREUkVTU19ERVRBSUxTX0xBQkVMX1RPX0ZBVk9SSVRFU19EUk9QRE9XTiI6Ilp1IEZhdm9yaXRlbiJ9LCJ1c2VyLXByb2ZpbGUiOnsiY29tbW9uX2JhY2tlbmQtZXJyb3JfdXNlci1uYW1lLWFscmVhZHktZXhpc3RzIjoie2VtYWlsfSBleGlzdGllcnQgYmVyZWl0cyIsImFkbWluLXRvb2xzX2xhYmVsX2VtcGxveWVlLWZpcnN0LW5hbWUiOiJWb3JuYW1lIiwiYWRtaW4tdG9vbHNfbGFiZWxfZW1wbG95ZWUtY29ycC1hZG1pbiI6IlVudGVybmVobWVuc2FkbWluIiwiY29ycG9yYXRlLXNldHRpbmdzX2JhY2tlbmQtZXJyb3JfdXNlcl9jYW5ub3RfYmVfcHJvbW90ZWRfdG9fY29ycG9yYXRlIjoiLiBLb250YWt0aWVyZW4gU2llIElocmVuIERITCBBZG1pbmlzdHJhdG9yLiIsImFkbWluLXRvb2xzX2xhYmVsX2VtcGxveWVlLW1lbWJlcl9vZiI6IkdydXBwZSIsImF1dGgtcGlja3VwLWxvY2F0aW9uX2JhY2tlbmQtZXJyb3JfYWNjb3VudC1ub3QtZm91bmQiOiJBY2NvdW50IHlvdSBhcmUgdXNpbmcgbmVlZHMgdG8gYmUgc2V0dXAgaW4geW91ciBwcm9maWxlIGFzIGFuIEF1dGhvcml6ZWQgUGlja3VwIExvY2F0aW9uIGFjY291bnQiLCJhZG1pbi10b29sc19sYWJlbF9lbXBsb3llZS1sYXN0LW5hbWUiOiJOYWNobmFtZSIsImxvZ2luLXNlY3Rpb25fZXJyb3JfbG9naW4tbm90LWFsbG93ZWQiOiJMb2dpbiBuaWNodCBtw7ZnbGljaC4gQml0dGUga29udGFrdGllcmVuIFNpZSBJaHJlbiBTeXN0ZW1hZG1pbmlzdHJhdG9yLiIsIm5vdGlmaWNhdGlvbl9hbmRfc2hhcmluZ19zaG91bGRfcGllY2VzX2JvdW5kX3RhZ3NfcHJlc2VudCI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPlplaWNoZW4genVyIEF1c3dlaXN1bmcgdm9uIEFuZmFuZyB1bmQgRW5kZSBkZXMgUGFja3N0w7xja3MuIEbDvGdlbiBTaWUgQW5mYW5ncy0gdW5kIEVuZHplaWNoZW4gPGI+dm9yIHVuZCBuYWNoIGplZGVtIFBhY2tzdMO8Y2sgaGluenU8XC9iPjo8YnI+XG48YnI+XG48Yj5TdGFydDxcL2I+OiBwaWVjZV9zdGFydF9zZWN0aW9uX3RhZzxicj5cbjxiPkVuZGU8XC9iPjogcGllY2VfZW5kX3NlY3Rpb25fdGFnPFwvZGl2PiIsImFkbWluLXRvb2xzX2xhYmVsX2VtcGxveWVlLXR5cGUiOiJBcnQiLCJyZWdpc3RyYXRpb25fYmFja2VuZC1lcnJvcl9jb3Jwb3JhdGUtbm90LWZvdW5kIjoiRWluIEZlaGxlciBpc3QgYXVmZ2V0cmV0ZW4uIEtvbnRha3RpZXJlbiBTaWUgZGVuIFVudGVybmVobWVuc2FkbWluaXN0cmF0b3IuIiwiYWRtaW4tdG9vbHNfbGFiZWxfZW1wbG95ZWUtZW1haWwiOiJFLU1haWwgQWRyZXNzZSIsInF1aWNrLWxpbmtzX2JhY2tlbmQtZXJyb3JfbWF4LWNvdW50LWV4Y2VlZGVkIjoiTWF4aW11bSBlcnJlaWNodCIsIm5vdGlmaWNhdGlvbl9hbmRfc2hhcmluZ19lbmRfYW5kX3N0YXJ0X3BpZWNlX3NlY3Rpb25faW5jb3JyZWN0X29yZGVyIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+U2V0emVuIFNpZSBlaW4gWmVpY2hlbjxiPiBbW3RhZ19waWVjZV9zZWN0aW9uX3N0YXJ0XV08XC9iPiB2b3IgZGllc2VtIFplaWNoZW48Yj4gW1t0YWdfcGllY2Vfc2VjdGlvbl9lbmRdXTxcL2I+PFwvZGl2PiIsIm15LXByb2ZpbGVfYmFja2VuZC1lcnJvcl9jb21wYW55LW92ZXJpdmlldy1ub3QtYXZhaWxhYmxlIjoiRWluIEZlaGxlciBpc3QgYXVmZ2V0cmV0ZW4uIEtvbnRha3RpZXJlbiBTaWUgZGVuIFVudGVybmVobWVuc2FkbWluaXN0cmF0b3IuIiwibm90aWZpY2F0aW9uX2FuZF9zaGFyaW5nX3BpZWNlX3RhZ19ub3RfaW5zaWRlX3BpZWNlX3NlY3Rpb24iOiI8ZGl2IGNsYXNzPVwiZXdmX2RpY3Rpb25hcnlfdmFsdWVcIj48ZGl2IGNsYXNzPSJtZXNzYWdlLXdyYXBwZXIiPjxwPlN0ZWxsZW4gU2llIHBhc3NlbmRlIFplaWNoZW4gZsO8cjxiPiBqZWRlcyBTdMO8Y2s8XC9iPiB6dXIgVmVyZsO8Z3VuZy48XC9wPlxuPHA+wqA8XC9wPlxuPHA+U3RhcnRlbiBTaWUgamVkZXMgU3TDvGNrIG1pdDogPGI+W1t0YWdfcGllY2Vfc2VjdGlvbl9zdGFydF1dPFwvYj48XC9wPlxuPHA+wqA8XC9wPlxuPHA+SmVkZXMgU3TDvGNrIGVuZGVuIG1pdDogPGI+W1t0YWdfcGllY2Vfc2VjdGlvbl9lbmRdXTxcL2I+PFwvcD5cbjxcL2Rpdj48XC9kaXY+IiwiY29ycG9yYXRlLXNldHRpbmdzX2JhY2tlbmQtZXJyb3JfY2Fubm90LXN3aXRjaC10by1jb3JwLWR1ZS10by1uby1wcm90b3R5cGUtZm9yLWNvdW50cnkiOiJLb250YWt0aWVyZW4gU2llIElocmVuIERITCBBZG1pbmlzdHJhdG9yIHVtIEJlbnV0emVyIGhpbnp1enVmw7xnZW4iLCJhZG1pbi10b29sc19sYWJlbF9lbXBsb3llZS1zdGF0dXMiOiJTdGF0dXMiLCJxdWljay1saW5rc19iYWNrZW5kLWVycm9yX3VybC1hbHJlYWR5LWV4aXN0cyI6IkR1cGxpemllcmVuIiwiYWRtaW4tdG9vbHNfbGFiZWxfZW1wbG95ZWUtZW5kLXVzZXIiOiJHcnVwcGVubWl0Z2xpZWQifSwic2NoZWR1bGUtbWFuYWdlLXBpY2t1cCI6eyJtYW5hZ2UtbGlzdF9iYWNrZW5kLWVycm9yX2Nzdi13cml0aW5nLWVycm9yIjoiRG93bmxvYWQgZmVobGVyaGFmdCIsIm1hbmFnZS1saXN0X2JhY2tlbmQtZXJyb3JfY3N2LXJlYWRpbmctZXJyb3IiOiJVcGxvYWQgbmljaHQgZXJmb2xndCIsInBpY2t1cC1kb3dubG9hZF92YWx1ZS1sYWJlbF9waWNrdXAtbG9jYXRpb24iOiJBYmhvbG9ydCIsImxhYmVsLXJlZmVyZW5jZV9lcnJvcl9waWNrdXBzLW5vdC1mb3VuZCI6IktlaW5lIEVyZ2Vibmlzc2UgZ2VmdW5kZW4uIiwicGlja3VwLWRvd25sb2FkX3ZhbHVlLWxhYmVsX3BhY2thZ2luZy1yZXF1ZXN0ZWQiOiJBbmdlZnJhZ3RlIFZlcnBhY2t1bmciLCJwaWNrdXAtZG93bmxvYWRfdmFsdWUtbGFiZWxfYm9va2luZy1yZWZlcmVuY2UtbnVtYmVyIjoiQWJob2xudW1tZXIiLCJtYW5hZ2UtbGlzdF9iYWNrZW5kLWVycm9yX2Nzdi1jb250YWlucy1kdXBsaWNhdGUtbmFtZS1yZWNvcmRzIjoiRGllIERhdGVpIGVudGjDpGx0IGVpbmVuIGRvcHBlbHRlbiBFaW50cmFnIGbDvHIgTkFNRSIsInBpY2t1cC1kb3dubG9hZF92YWx1ZS1sYWJlbF90b3RhbC13ZWlnaHQiOiJHZXNhbXRnZXdpY2h0IiwicGlja3VwLWRvd25sb2FkX3ZhbHVlLWxhYmVsX3RvdGFsLXBhY2thZ2luZy1jb3VudCI6IkFuemFobCBQYWNrc3TDvGNrZSIsInBpY2t1cC1kb3dubG9hZF92YWx1ZS1sYWJlbF9hZGRyZXNzLWxpbmUtMSI6IkFiaG9sYWRyZXNzZSIsInBpY2t1cC1kb3dubG9hZF92YWx1ZS1sYWJlbF9waWNrdXAtd2luZG93LWxhdGVzdCI6IlNww6R0ZXN0ZSBBYmhvbHplaXQiLCJwaWNrdXAtZG93bmxvYWRfdmFsdWUtbGFiZWxfbnVtYmVyLW9mLXBpZWNlcyI6IkFuemFobCBTZW5kdW5nZW4vUGFja3N0w7xja2UgIiwicGlja3VwLWRvd25sb2FkX3ZhbHVlLWxhYmVsX3NoaXBtZW50LXJlZmVyZW5jZSI6IlNlbmR1bmdzcmVmZXJlbnoiLCJwaWNrdXAtZG93bmxvYWRfdmFsdWUtbGFiZWxfYWNjb3VudC1udW1iZXIiOiJLdW5kZW5udW1tZXIiLCJwaWNrdXAtZG93bmxvYWRfdmFsdWUtbGFiZWxfY29ycG9yYXRlLWdyb3VwLW5hbWUiOiJHcnVwcGVubmFtZSIsIm1hbmFnZS1saXN0X2JhY2tlbmQtZXJyb3JfYmFkLXVwbG9hZGVkLWNzdi1maWxlIjoiVXBsb2FkIG5pY2h0IGVyZm9sZ3QiLCJwaWNrdXAtZG93bmxvYWRfdmFsdWUtbGFiZWxfcGlja3VwLXdpbmRvdy1lYXJsaWVzdCI6ImZyw7xoZXN0ZSBBYmhvbHplaXQiLCJwaWNrdXAtZG93bmxvYWRfdmFsdWUtbGFiZWxfcGlja3VwLXN0YXR1cyI6IkFiaG9sc3RhdHVzIiwicGlja3VwLWRvd25sb2FkX3ZhbHVlLWxhYmVsX3BpY2t1cC1kYXRlIjoiQWJob2xkYXR1bSIsInBpY2t1cC1kb3dubG9hZF92YWx1ZS1sYWJlbF9waWNrdXAtb3duZXItdXNlcm5hbWUiOiJBYmhvbHVuZyBnZWJ1Y2h0IHZvbiIsImxhYmVsLXJlZmVyZW5jZV9lcnJvcl9jc3Ytd3JpdGluZy1lcnJvciI6IlVwbG9hZCBuaWNodCBlcmZvbGd0In0sInBpY2t1cC1waWNrdXBfbG9jYXRpb24iOnsicGlja3VwX290aGVyLWRlc2NyaXB0aW9uIjoiT3RoZXIiLCJwaWNrdXBfZGVzcGF0Y2gtZGVzY3JpcHRpb24iOiIiLCJtYWluX2dhdGUtZGVzY3JpcHRpb24iOiIiLCJwaWNrdXBfZ2F0ZWhvdXNlLWRlc2NyaXB0aW9uIjoiIiwicGlja3VwX3Nla3JhdGFyLWRlc2NyaXB0aW9uIjoiIiwicGlja3VwX21haW5fZ2F0ZS1kZXNjcmlwdGlvbiI6IiIsInBpY2t1cF9sb2FkaW5kX2RvY2stZGVzY3JpcHRpb24iOiIiLCJwaWNrdXBfZG9vcmJlbGwtZGVzY3JpcHRpb24iOiIiLCJwaWNrdXBfc2VjdXJpdHlfcm9vbS1kZXNjcmlwdGlvbiI6IiIsInRyYWRlX2RlcGFydG1lbnQtZGVzY3JpcHRpb24iOiIiLCJndWFyZF9yb29tLWRlc2NyaXB0aW9uIjoiIiwibWFya2V0aW5nLWRlc2NyaXB0aW9uIjoiIiwicGlja3VwX2xvYWRpbmdfZG9jay1kZXNjcmlwdGlvbiI6IkxvYWRpbmcgRG9jayIsInBpY2t1cF9ob3VzZS1kZXNjcmlwdGlvbiI6IiIsInBpY2t1cF9sb2FkaW5nX2Rvb3ItZGVzY3JpcHRpb24iOiIiLCJwaWNrdXBfZnJvbnRfZG9vci1kZXNjcmlwdGlvbiI6IkZyb250IERvb3IiLCJwaWNrdXBfcmVjZXB0aW9uLWRlc2NyaXB0aW9uIjoiUmVjZXB0aW9uIiwib3RoZXItZGVzY3JpcHRpb24iOiIiLCJwaWNrdXBfYmFja19kb3ItZGVzY3JpcHRpb24iOiIiLCJwaWNrdXBfZ3VhcmRob3VzZS1kZXNjcmlwdGlvbiI6IiIsImZyb250X2Rlc2stZGVzY3JpcHRpb24iOiIiLCJtZW50aW9uX3BpY2stdXBfZmxvb3ItZGVzY3JpcHRpb24iOiIiLCJleHBvcnQtZGVzY3JpcHRpb24iOiIiLCJwaWNrdXBfZnJvbnRkb29yLWRlc2NyaXB0aW9uIjoiSGF1cHRlaW5nYW5nIiwic2VjdXJpdHlfZ2F0ZS1kZXNjcmlwdGlvbiI6IiIsInNlY3VyaXR5X3Bvc3QtZGVzY3JpcHRpb24iOiIiLCJwcml2YXRlLWRlc2NyaXB0aW9uIjoiIiwicGlja3VwX2Rvb3ItZGVzY3JpcHRpb24iOiIiLCJwaWNrX2JhY2tfZG9vci1kZXNjcmlwdGlvbiI6IiIsInBpY2t1cF9rb250b3ItZGVzY3JpcHRpb24iOiIiLCJyb2Rpbm55X2R1bS1kZXNjcmlwdGlvbiI6IiIsInBpY2t1cF9sYWR1LWRlc2NyaXB0aW9uIjoiIiwibG9naXN0aWthLWRlc2NyaXB0aW9uIjoiIiwicGlja3VwX3Zhc3R1dm90dC1kZXNjcmlwdGlvbiI6IiIsInBpY2t1cF9iYWNrX29mZmljZS1kZXNjcmlwdGlvbiI6IiIsInZyYXRuaWNlLWRlc2NyaXB0aW9uIjoiIiwicGlja3VwX3dhcmVob3VzZS1kZXNjcmlwdGlvbiI6IkxhZ2VyIiwicGlja3VwX3ZpZ2lsZS1kZXNjcmlwdGlvbiI6IiIsInBpY2t1cF9zdG9yYWdlLWRlc2NyaXB0aW9uIjoiIiwicGlja3VwX29mZmljZS1kZXNjcmlwdGlvbiI6IiIsInBpY2t1cF9zZWN1cml0eS1kZXNjcmlwdGlvbiI6IiIsInZpZ2lsZS1kZXNjcmlwdGlvbiI6IiIsIm1haWxfcm9vbS1kZXNjcmlwdGlvbiI6IiIsInBpY2t1cF9zZWNyYXRhcnktZGVzY3JpcHRpb24iOiIiLCJ6dm9uZWstZGVzY3JpcHRpb24iOiIiLCJwaWNrdXBfYmFja19kb29yLWRlc2NyaXB0aW9uIjoiQmFjayBEb29yIn0sImNyMDIwNyI6eyJjci1uYW1lIjoiRW5hYmxlIFRheGVzIEFjY291bnRzIFJlc3RyaWN0aW9uIn0sImNyMDIwOCI6eyJjci1uYW1lIjoiUmVjZWl2ZXIgV2lsbCBQYXkifSwiY3IwMjA5Ijp7ImNyLW5hbWUiOiJBbGxvdyBlZGl0IFBpY2tVcCBhZGRyZXNzIGRldGFpbHMifSwiY3IwMjAzIjp7ImNyLW5hbWUiOiJFbmFibGUgRHV0aWVzIEFjY291bnRzIFJlc3RyaWN0aW9uIn0sIkNPTU1PTiI6eyJVTklUU19CVSI6IkJVIiwiQ09NTU9OX1NFTEVDVF9PUFRJT05fQUxMIjoiQWxsZSIsIkNPTU1PTl9NU0dfQ09PS0lFU19QT0xJQ1kiOiI8ZGl2IGNsYXNzPVwiZXdmX2RpY3Rpb25hcnlfdmFsdWVcIj5adSBhbmFseXRpc2NoZW4gWndlY2tlbiB1bmQgenVyIEdld8OkaHJsZWlzdHVuZyBkZXIgRnVua3Rpb25hbGl0w6R0IHZlcndlbmRlbiB3aXIgYXVmIGRpZXNlciBTZWl0ZSBDb29raWVzLiBVbSBtZWhyIMO8YmVyIENvb2tpZXMgenUgZXJmYWhyZW4sIHdpZSB3aXIgc2llIGJlbnV0emVuIHVuZCB3aWUgU2llIElocmUgQ29va2llIEVpbnN0ZWxsdW5nZW4gw6RuZGVybiBrw7ZubmVuLCBrbGlja2VuIFNpZSA8YSBocmVmPVwiL2NvbnRlbnQvZGhsL2F0L2RlL2Zvb3Rlci9wcml2YWN5LWFuZC1jb29raWVzLmh0bWxcIiB0YXJnZXQ9XCJfYmxhbmtcIj5oaWVyPFwvYT4uIFdlbm4gU2llIHdlaXRlcmhpbiBkaWUgU2VpdGUgYmVudXR6ZW4gb2huZSBkaWUgQ29va2llIEVpbnN0ZWxsdW5nZW4genUgw6RuZGVybiwgc3RpbW1lbiBTaWUgZGVyIFZlcndlbmR1bmcgdm9uIENvb2tpZXMgenUuPFwvZGl2PiIsIkNPTU1PTl9NU0dfVkFMSURBVElORyI6IkJlYXJiZWl0dW5nIiwiVU5JVFNfS0ciOiJrZyIsIkxCX1NISVBNRU5UX1dJTExfQkVfU0FWRURfSEVBREVSX1NFU1NJT05fVElNRU9VVCI6IiIsIkNPTU1PTl9CVVRUT05fRURJVCI6IkJlYXJiZWl0ZW4iLCJDT01NT05fSEVBREVSX0NPTkZJUk1fU0lOR0xFX0RFTEVUSU9OIjoiRWxlbWVudCBsw7ZzY2hlbiIsIkNPTU1PTl9IRUFERVJfTE9DQVRJT05fU1VHR0VTVElPTlMiOiJXb25hY2ggc3VjaGVuIFNpZT8iLCJDT01NT05fQlVUVE9OX05PIjoiTmVpbiIsIlVOSVRTX0lOIjoiaW4iLCJVTklUU19DTSI6ImNtIiwiQ09NTU9OX0JVVFRPTl9ERUxFVEUiOiJMw7ZzY2hlbiIsIkNPTU1PTl9CVVRUT05fVVBEQVRFIjoiQWt0dWFsaXNpZXJ1bmciLCJDT01NT05fSEVBREVSX0NPTkZJUk1fTVVMVElQTEVfREVMRVRJT04iOiJMw7ZzY2hlbiIsIkNPTU1PTl9JTkZPX1RFWFRfR1JJRF9QQUdJTkFUSU9OX1JBTkdFIjoie2ZpcnN0UmVjb3JkSW5kZXh9IC0ge2xhc3RSZWNvcmRJbmRleH0gdm9uIHt0b3RhbFJlY29yZHN9IiwiQ09NTU9OX0JVVFRPTl9DQU5DRUwiOiJhYmJyZWNoZW4iLCJMQl9TSElQTUVOVF9XSUxMX0JFX1NBVkVEX0hFQURFUl9TRVJWSUNFX0lTX1VOQVZBSUxBQkxFIjoiRWluIEZlaGxlciBpc3QgYXVmZ2V0cmV0ZW4iLCJDT01NT05fTVNHX0NBUFRDSEFfVElUTEUiOiJLbGlja2VuIFNpZSBhdWYgZm9sZ2VuZGVzIFN5bWJvbDoiLCJVTklUU19MQiI6ImxiIiwiQ09NTU9OX01TR19DQVBUQ0hBX1JFRlJFU0hfQUxUIjoiTWVociIsIkNPTU1PTl9NU0dfQ0FQVENIQV9SRUZSRVNIX1RJVExFIjoiTWVociIsIkNPTU1PTl9CVVRUT05fQ09OVElOVUUiOiJGb3J0c2V0emVuIiwiU0VTU0lPTl9FWFBJUkVEX05PVElGSUNBVElPTiI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPjxkaXYgY2xhc3M9Im1lc3NhZ2Utd3JhcHBlciI+PHA+SWhyZSBkZXJ6ZWl0aWdlIFNpdHp1bmcgd2lyZCBhdXRvbWF0aXNjaCBpbiB7bWludXRlc30gTWludXRlbiBlbmRlbiBzb2Zlcm4gc2llIGRpZSBTaXR6dW5nIG5pY2h0IGZvcnRzZXR6ZW4uPFwvcD5cbjxwPsKgPFwvcD5cbjxwPldvbGxlbiBzaWUgYmVlbmRlbiBvZGVyIGZvcnRzZXR6ZW4/PFwvcD5cbjxcL2Rpdj48XC9kaXY+IiwiQ09NTU9OX0JVVFRPTl9ZRVMiOiJKYSIsIkNPTU1PTl9CVVRUT05fT0siOiJvayIsIkNPTU1PTl9NU0dfQ09ORklSTV9MRUFWRV9QQUdFIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+PGI+U2luZCBTaWUgc2ljaGVyLCBkYXNzIFNpZSBkaWVzZSBTZWl0ZSB2ZXJsYXNzZW4gbcO2Y2h0ZW4/PGJyPlxuIDxcL2I+XHUyMDIyIE5pY2h0IGJlaSBNeURITCsgcmVnaXN0cmllcnQ/IEVzIHdlcmRlbiBrZWluZSBEYXRlbiBnZXNwZWljaGVydDxicj5cblx1MjAyMiBTaWUgc2luZCByZWdpc3RyaWVydD8gRWluaWdlIFZlcnNhbmRhdWZ0csOkZ2Ugd2VyZGVuIHVudGVyIFwiU2VuZHVuZ2VuIHZlcndhbHRlblwiIGdlc3BlaWNoZXJ0PFwvZGl2PiIsIkNPTU1PTl9NU0dfREVMRVRFX09ORV9JVEVNIjoiU2luZCBTaWUgc2ljaGVyLCBkYXNzIFNpZSBkZW4gVm9yZ2FuZyBsw7ZzY2hlbiBtw7ZjaHRlbj8iLCJDT01NT05fQlVUVE9OX05FWFQiOiJXZWl0ZXIiLCJGSUxFX1NJWkVTIjoiQnl0ZXMsIEtCLCBNQiwgR0IsIFRCLCBQQiwgRUIsIFpCLCBZQiJ9LCJjci1nZW5lcmFsLXNldHRpbmdzIjp7Im1hbmFnZS1zaGlwbWVudHNfc3ViLWhlYWRlciI6IiIsImdyb3VwLW5hbWVfaGVhZGVyIjoiU2VuZHVuZ2VuIGJlYXJiZWl0ZW4iLCJibGFua19sYWJlbF9jcjAxNzEiOiJLYW5uIFVudGVybmVobWVuc2tvbnRha3RlIGFuc2VoZW4iLCJhc3NpZ24tc2hpcG1lbnRzX2xhYmVsX2NyMDE3MiI6Ikthbm4gU2VuZHVuZ2VuIGFuZGVyZW4genV3ZWlzZW4iLCJhc3NpZ24tc2hpcG1lbnRzX3N1Yi1oZWFkZXIiOiIiLCJtYW5hZ2Utc2hpcG1lbnRzX2xhYmVsX2NyMDE2MCI6Ikthbm4gZGllIFNlbmR1bmdlbiBhbmRlcmVyIEdydXBwZW5taXRnbGllZGVyIGFuc2VoZW4sIHZlcnZvbGxzdMOkbmRpZ2VuLCBiZWFyYmVpdGVuIHVuZCBsw7ZzY2hlbiIsIm1hbmFnZS1zaGlwbWVudHNfbGFiZWxfY3IwMjA5IjoiS2FubiBBYmhvbC1BZHJlc3NlIMOkbmRlcm4ifSwiY3IwMjA0Ijp7ImNyLWVycm9ycy1taW5sZW5ndGgiOiJNaW5pbXVtIGxlbmd0aCBmb3IgdGhpcyBmaWVsZCBpcyAwIiwiY3ItZXJyb3JzLXJlcXVpcmVkIjoiVGhpcyBmaWVsZCBpcyByZXF1aXJlZCIsImNyLW5hbWUiOiJSZXN0cmljdGVkIER1dGllcyBBY2NvdW50IE51bWJlciIsImNyLWVycm9ycy1tYXhsZW5ndGgiOiJNYXhpbXVtIGxlbmd0aCBmb3IgdGhpcyBmaWVsZCBpcyAyNTUifSwicmVnaXN0cmF0aW9uIjp7InJlZ2lzdHJhdGlvbl9iYWNrZW5kLWVycm9yX2F1dGhvcml6YXRpb24tY291bnRyeS1taXNtYXRjaCI6IiBtdXNzIG1pdCBkZW0gREhMIEFjY291bnQgw7xiZXJlaW5zdGltbWVuIiwicmVnaXN0cmF0aW9uX2JhY2tlbmQtZXJyb3JfbG9jYWwtYWNjLW5vdC1iZWxvbmdzLWN1cnItY291bnRyeSI6IlJlZ2lzdHJpZXJ1bmcgbWl0IGRpZXNlbSBBY2NvdW50IG5pY2h0IG3DtmdsaWNoLiBQcm9iaWVyZW4gU2llIGVpbmUgYW5kZXJlIEFjY291bnRudW1tZXIgb2RlciByZWdpc3RyaWVyZW4gU2llIHNpY2ggb2huZSBBY2NvdW50IHVuZCB6YWhsZW4gU2llIGRpZSBTZW5kdW5nIG1pdCBkZXIgS3JlZGl0a2FydGUuIiwicmVnaXN0cmF0aW9uX2JhY2tlbmQtZXJyb3JfYXV0aG9yaXphdGlvbi11cmwtaW5hY3RpdmUiOiI8ZGl2IGNsYXNzPVwiZXdmX2RpY3Rpb25hcnlfdmFsdWVcIj48ZGl2IGNsYXNzPSJtZXNzYWdlLXdyYXBwZXIiPjxwPjxiPldlbm4gU2llIGJlaSBNeURITCsgcmVnaXN0cmllcnQgc2luZDxcL2I+PFwvcD5cbjx1bD5cbjxsaT5Mb2dnZW4gU2llIHNpY2ggYmVpIE15REhMKywgdW0gU2VuZHVuZ2VuIHp1IGVyc3RlbGxlbiB1bmQgZsO8ciBTaWUgZnJlaWdlc2NoYWx0ZXRlIEtvbnRlbiBlaW56dXNlaGVuIHVudGVyIE1laW5lIFNlbmR1bmdzZWluc3RlbGx1bmdlbjxcL2xpPlxuPGxpPkZhbGxzIFNpZSBlaW5lIG5ldWUgQXV0b3Jpc2llcnVuZyBiZW7DtnRpZ2VuLCBrb250YWt0aWVyZW4gU2llIGJpdHRlIEFjY291bnRpbmhhYmVyPFwvbGk+XG48XC91bD5cbjxwPsKgPFwvcD5cbjxwPjxiPldlbm4gU2llIG5pY2h0IGJlaSBNeURITCsgcmVnaXN0cmllcnQgc2luZDxcL2I+PFwvcD5cbjx1bD5cbjxsaT5Lb250YWt0aWVyZW4gU2llIGRlbiBBY2NvdW50aW5oYWJlciBmw7xyIGVpbmUgbmV1ZSBBdXRvcmlzaWVydW5nPFwvbGk+XG48XC91bD5cbjxcL2Rpdj48XC9kaXY+IiwicmVnaXN0cmF0aW9uX2JhY2tlbmQtZXJyb3JfbWFueS1jb3Jwb3JhdGUtYWNjb3VudHMtd2l0aC1zYW1lLW51bWJlciI6IlJlZ2lzdHJpZXJ1bmcgbWl0IGRpZXNlbSBBY2NvdW50IG5pY2h0IG3DtmdsaWNoLiBQcm9iaWVyZW4gU2llIGVpbmUgYW5kZXJlIEFjY291bnRudW1tZXIgb2RlciByZWdpc3RyaWVyZW4gU2llIHNpY2ggb2huZSBBY2NvdW50IHVuZCB6YWhsZW4gU2llIGRpZSBTZW5kdW5nIG1pdCBkZXIgS3JlZGl0a2FydGUuIiwicmVnaXN0cmF0aW9uX2JhY2tlbmQtZXJyb3JfbGluay1leHBpcmVkIjoiU2llIGhhYmVuIHNpY2ggbmljaHQgZWluZ2Vsb2dndCwgdW0gSWhyZSBSZWdpc3RyaWVydW5nIGbDvHIgTXlESEwrIHp1IGFrdGl2aWVyZW4uIEJpdHRlIHJlZ2lzdHJpZXJlbiBTaWUgc2ljaCBlcm5ldXQgdW5kIGxvZ2dlbiBTaWUgc2ljaCBhbnNjaGxpZcOfZW5kIHNvZm9ydCBlaW4uIiwicmVnaXN0cmF0aW9uX2JhY2tlbmQtZXJyb3JfYXV0aG9yaXphdGlvbi11cmwtZXhwaXJlZCI6IkRpZXNlciBMaW5rIGlzdCBhYmdlbGF1ZmVuLiBCaXR0ZSBrb250YWt0aWVyZW4gU2llIGRlbiBBY2NvdW50aW5oYWJlciBmw7xyIGVpbmUgbmV1ZSBCZXZvbGxtw6RjaHRpZ3VuZy4iLCJyZWdpc3RyYXRpb25fYmFja2VuZC1lcnJvcl9hY2NvdW50LWRvZXMtbm90LWV4aXN0IjoiVW5nw7xsdGlnZXIgQWNjb3VudCIsInJlZ2lzdHJhdGlvbl9iYWNrZW5kLWVycm9yX2ZvcmVpZ24taW1wLXJlc3RyaWN0ZWQiOiJEaWVzZXIgQWNjb3VudCBrYW5uIG5pY2h0IHJlZ2lzdGlyZXJ0IHdlcmRlbi4gUmVnaXN0cmllcmVuIFNpZSBzaWNoIG9obmUgQWNjb3VudCB1bmQgemFobGVuIFNpZSBJaHJlIFNlbmR1bmcgcGVyIEtyZWRpdGthcnRlIG9kZXIga29udGFrdGllcmVuIFNpZSBJaHJlbiBESEwgQWNjb3VudCBNYW5hZ2VyLiIsInJlZ2lzdHJhdGlvbl9hbGVydF9zZWxmLXJlZ2lzdHJhdGlvbi1ub3QtYWxsb3dlZCI6IlJlZ2lzdHJpZXJ1bmcgbWl0IGRpZXNlbSBBY2NvdW50IG5pY2h0IG3DtmdsaWNoLiBQcm9iaWVyZW4gU2llIGVpbmUgYW5kZXJlIEFjY291bnRudW1tZXIgb2RlciByZWdpc3RyaWVyZW4gU2llIHNpY2ggb2huZSBBY2NvdW50IHVuZCB6YWhsZW4gU2llIGRpZSBTZW5kdW5nIG1pdCBkZXIgS3JlZGl0a2FydGUuIiwicmVnaXN0cmF0aW9uX2JhY2tlbmQtZXJyb3JfY2FzLWFjY291bnQtcmVzdHJpY3RlZCI6IkRpZXNlciBBY2NvdW50IGthbm4gbmljaHQgcmVnaXN0aXJlcnQgd2VyZGVuLiBSZWdpc3RyaWVyZW4gU2llIHNpY2ggb2huZSBBY2NvdW50IHVuZCB6YWhsZW4gU2llIElocmUgU2VuZHVuZyBwZXIgS3JlZGl0a2FydGUgb2RlciBrb250YWt0aWVyZW4gU2llIElocmVuIERITCBBY2NvdW50IE1hbmFnZXIuIiwicmVnaXN0cmF0aW9uX2JhY2tlbmQtZXJyb3JfYWNjb3VudC1jcmVkaXQtaXNzdWVzIjoiRGllc2VyIEFjY291bnQga2FubiBuaWNodCByZWdpc3RpcmVydCB3ZXJkZW4uIEtvbnRha3RpZXJlbiBTaWUgSWhyZW4gREhMIEFjY291bnQgTWFuYWdlci4iLCJyZWdpc3RyYXRpb25fYmFja2VuZC1lcnJvcl9hY2NvdW50LWluYWN0aXZlIjoiRGllc2VyIEFjY291bnQga2FubiBuaWNodCByZWdpc3RpcmVydCB3ZXJkZW4uIFJlZ2lzdHJpZXJlbiBTaWUgc2ljaCBvaG5lIEFjY291bnQgdW5kIHphaGxlbiBTaWUgSWhyZSBTZW5kdW5nIHBlciBLcmVkaXRrYXJ0ZSBvZGVyIGtvbnRha3RpZXJlbiBTaWUgSWhyZW4gREhMIEFjY291bnQgTWFuYWdlci4iLCJyZWdpc3RyYXRpb25fYmFja2VuZC1lcnJvcl93cm9uZy1leHQtc3lzLWNyZWRlbnRpYWxzIjoiVW5nw7xsdGlnZSBFLU1haWwgQWRyZXNzZSBvZGVyIFBhc3N3b3J0IiwicmVnaXN0cmF0aW9uX2JhY2tlbmQtZXJyb3JfY2Fubm90LXNhdmUtZHVwbGljYXRlLWFjY291bnQtbnVtYmVyIjoiQWNjb3VudCB3aXJkIGJlcmVpdHMgYmVudXR6dCIsInJlZ2lzdHJhdGlvbl9iYWNrZW5kLWVycm9yX2ZvcmVpZ24taW1wLW5vdC1hbGxvd2VkLWJ5LWVzZWN1cmUiOiJJbXBvcnQgQWNjb3VudG51bW1lciBuaWNodCBlcmxhdWJ0IiwicmVnaXN0cmF0aW9uX2JhY2tlbmQtZXJyb3JfYXV0aG9yaXphdGlvbi1ub3QtZm91bmQiOiJTaWUgc2luZCBuaWNodCBiZXJlY2h0aWd0LCBkaWVzZW4gQWNjb3VudCB6dSBudXR6ZW4uIiwicmVnaXN0cmF0aW9uX2JhY2tlbmQtZXJyb3JfYWNjb3VudC10eXBlLXJlc3RyaWN0ZWQiOiJEaWVzZXIgQWNjb3VudCBrYW5uIG5pY2h0IHJlZ2lzdGlyZXJ0IHdlcmRlbi4gS29udGFrdGllcmVuIFNpZSBJaHJlbiBESEwgQWNjb3VudCBNYW5hZ2VyLiIsInJlZ2lzdHJhdGlvbl9iYWNrZW5kLWVycm9yX2ZvYy1hY2NvdW50LXJlc3RyaWN0ZWQiOiJEaWVzZXIgQWNjb3VudCBrYW5uIG5pY2h0IHJlZ2lzdGlyZXJ0IHdlcmRlbi4gUmVnaXN0cmllcmVuIFNpZSBzaWNoIG9obmUgQWNjb3VudCB1bmQgemFobGVuIFNpZSBJaHJlIFNlbmR1bmcgcGVyIEtyZWRpdGthcnRlIG9kZXIga29udGFrdGllcmVuIFNpZSBJaHJlbiBESEwgQWNjb3VudCBNYW5hZ2VyLiIsInJlZ2lzdHJhdGlvbl9hbGVydF9hY2NvdW50LW5vdC1hbGxvd2VkLWZvci1zZWxmLXJlZ2lzdHJhdGlvbiI6IlJlZ2lzdHJpZXJ1bmcgbWl0IGRpZXNlbSBBY2NvdW50IG5pY2h0IG3DtmdsaWNoLiBQcm9iaWVyZW4gU2llIGVpbmUgYW5kZXJlIEFjY291bnRudW1tZXIgb2RlciByZWdpc3RyaWVyZW4gU2llIHNpY2ggb2huZSBBY2NvdW50IHVuZCB6YWhsZW4gU2llIGRpZSBTZW5kdW5nIG1pdCBkZXIgS3JlZGl0a2FydGUuIiwiY29tbW9uX2JhY2tlbmQtZXJyb3JfcHJvdmlld19yZWdpc3RyYXRpb25fZmFpbGVkIjoiRW50c2NodWxkaWd1bmcgXHUyMDEzIGVpbiBGZWhsZXIgaXN0IGF1ZmdldHJldGVuLiBCaXR0ZSBsb2dnZW4gU2llIHNpY2ggbmV1IGVpbi4gIEZhbGxzIHdlaXRlcmhpbiBQcm9ibGVtZSBiZXN0ZWhlbiwgd2VuZGVuIFNpZSBzaWNoIGFuIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4iLCJyZWdpc3RyYXRpb25fYWxlcnRfbm90LWFsbG93ZWQtY29ycG9yYXRlLWFjY291bnQtZm9yLXJlZ3VsYXItcmVnaXN0cmF0aW9uIjoiUmVnaXN0cmllcnVuZyBtaXQgZGllc2VtIEFjY291bnQgbmljaHQgbcO2Z2xpY2guIFByb2JpZXJlbiBTaWUgZWluZSBhbmRlcmUgQWNjb3VudG51bW1lciBvZGVyIHJlZ2lzdHJpZXJlbiBTaWUgc2ljaCBvaG5lIEFjY291bnQgdW5kIHphaGxlbiBTaWUgZGllIFNlbmR1bmcgbWl0IGRlciBLcmVkaXRrYXJ0ZS4iLCJyZWdpc3RyYXRpb25fYWxlcnRfYWNjb3VudC11c2VkLWluLW11bHRpcGxlLWNvcnBzIjoiUmVnaXN0cmllcnVuZyBtaXQgZGllc2VtIEFjY291bnQgbmljaHQgbcO2Z2xpY2guIFByb2JpZXJlbiBTaWUgZWluZSBhbmRlcmUgQWNjb3VudG51bW1lciBvZGVyIHJlZ2lzdHJpZXJlbiBTaWUgc2ljaCBvaG5lIEFjY291bnQgdW5kIHphaGxlbiBTaWUgZGllIFNlbmR1bmcgbWl0IGRlciBLcmVkaXRrYXJ0ZS4iLCJyZWdpc3RyYXRpb25fYmFja2VuZC1lcnJvcl9hdXRob3JpemF0aW9uLWVtYWlsLW1pc21hdGNoIjoiVW5nw7xsdGlnZSBFLU1haWwgQWRyZXNzZSIsInJlZ2lzdHJhdGlvbl9iYWNrZW5kLWVycm9yX2xvY2FsLWltcC1hY2NvdW50LXJlc3RyaWN0ZWQiOiJEaWVzZXIgQWNjb3VudCBrYW5uIG5pY2h0IHJlZ2lzdGlyZXJ0IHdlcmRlbi4gUmVnaXN0cmllcmVuIFNpZSBzaWNoIG9obmUgQWNjb3VudCB1bmQgemFobGVuIFNpZSBJaHJlIFNlbmR1bmcgcGVyIEtyZWRpdGthcnRlIG9kZXIga29udGFrdGllcmVuIFNpZSBJaHJlbiBESEwgQWNjb3VudCBNYW5hZ2VyLiJ9LCJjcjAyMDUiOnsiY3ItbmFtZSI6IkVuYWJsZSBBbHRlcm5hdGl2ZSBEdXRpZXMgQWNjb3VudHMgUmVzdHJpY3Rpb24ifSwiY3IwMjA2Ijp7ImNyLW5hbWUiOiJSZWNlaXZlciBXaWxsIFBheSJ9LCJTSElQTUVOVF9RVU9URSI6eyJRVU9URV9BTEVSVF9SQVRFU19BTkRfUVVPVEVTX1NFUlZJQ0VfVU5BVkFJTEFCTEUiOiJTb3JyeSBcdTIwMTMgdW5zZXIgU3lzdGVtIGlzdCBkZXJ6ZWl0IG5pY2h0IHZlcmbDvGdiYXIuIEJpdHRlIHZlcnN1Y2hlbiBTaWUgZXMgc3DDpHRlciBub2NoIGVpbm1hbCBvZGVyIGtvbnRha3RpZXJlbiBTaWUgdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1ICgyMCBjdCBqZSBBbnJ1ZiBhdXMgZGVuIGRldXRzY2hlbiBGZXN0bmV0emVuLCBtYXguIDYwIGN0IGF1cyBkZW4gZGV1dHNjaGVuIE1vYmlsZnVua25ldHplbikuIiwiUVVPVEVfQUxFUlRfTk9fUFJPRFVDVFNfRk9VTkQiOiJLZWluZSBMaWVmZXJvcHRpb25lbiBtw7ZnbGljaCIsIlFVT1RFX0FMRVJUX1BST0RVQ1RfTk9UX0ZPVU5EX0RBVEFfSVNfV1JPTkciOiJGw7xyIElocmUgQXVzd2FobCBzaW5kIGtlaW5lIExpZWZlcm9wdGlvbmVuIG3DtmdsaWNoLiBCaXR0ZSDDvGJlcnByw7xmZW4gU2llIElocmUgQXVzd2FobCB1bmQgVmVyc2FuZGRhdGVuIHVuZCB2ZXJzdWNoZW4gU2llIGVzIGVybmV1dC4iLCJRVU9URV9WQUxVRV9MQUJFTF9ERVBFTkRFTlRfT05fU0hJUE1FTlRfREFURSI6ImFiaMOkbmdpZyB2b20gU2VuZHVuZ3NkYXR1bSIsIlFVT1RFX0xBQkVMX0RJU0NPVU5UX1dJVEhPVVRfUFJPTU9fQ09ERSI6IkVybcOkw59pZ3VuZyBhbmdld2VuZGV0IiwiUVVPVEVfVkFMVUVfTEFCRUxfRlVUVVJFX1NISVBNRU5UX0RBVEUiOiJOaWNodCB2ZXJmw7xnYmFyIGbDvHIgenVrw7xuZnRpZ2UgVGFnZSIsIlFVT1RFX0ZJRUxEX1BMQUNFSE9MREVSX1NVQkpFQ1QiOiJESEwgRXhwcmVzcyBBbmdlYm90IiwiUVVPVEVfVkFMVUVfTEFCRUxfRU5EX09GX0RBWSI6IkVuZCBvZiBEYXkiLCJSUl9UUkFERV9MQU5FX1BBUkFHUkFQSF9GQVNUX0xJTkUiOiIiLCJRVU9URV9WQUxVRV9MQUJFTF9SQVRFX0VTVElNQVRFIjoiU3RhbmQgUHJlaXNiZXJlY2hudW5nIHtkYXRlfSIsIlFVT1RFX0FMRVJUX1BST0RVQ1RTX05PVF9BVkFJTEFCTEUiOiJTb3JyeSBcdTIwMTMgdW5zZXIgU3lzdGVtIGlzdCBkZXJ6ZWl0IG5pY2h0IHZlcmbDvGdiYXIuIEJpdHRlIHZlcnN1Y2hlbiBTaWUgZXMgc3DDpHRlciBub2NoIGVpbm1hbCBvZGVyIGtvbnRha3RpZXJlbiBTaWUgdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1ICgyMCBjdCBqZSBBbnJ1ZiBhdXMgZGVuIGRldXRzY2hlbiBGZXN0bmV0emVuLCBtYXguIDYwIGN0IGF1cyBkZW4gZGV1dHNjaGVuIE1vYmlsZnVua25ldHplbikuIiwiU1VNTUFSWV9CVVRUT05fQUdSRUVfQU5EX0NPTlRJTlVFIjoiVmVyYmluZGxpY2ggYmVzdGVsbGVuIiwiUlJfVVBTRUxMX1BBUkFHUkFQSF9HRVRfSVRfVEhFUkVfRkFTVEVSIjoiTWl0IHtwcm9kdWN0X25hbWV9IGvDtm5uZW4gU2llIElocmUgU2VuZHVuZyBzY2huZWxsZXIgenVzdGVsbGVuIGxhc3Nlbi4ifSwiY3IwMjAwIjp7ImNyLW5hbWUiOiJFbmFibGUgVHJhbnNwb3J0YXRpb24gQWNjb3VudHMgUmVzdHJpY3Rpb24ifSwic2hpcG1lbnRfcGFwZXJ3b3JrLWludm9pY2UtaW52b2ljZV90eXBlcyI6eyJ0eXBlLXAiOiJQcm9mb3JtYSIsInR5cGUtYyI6IkhhbmRlbHNyZWNobnVuZyJ9LCJjcjAyMDEiOnsiY3ItZXJyb3JzLW1pbmxlbmd0aCI6Ik1pbmltdW0gbGVuZ3RoIGZvciB0aGlzIGZpZWxkIGlzIDAiLCJjci1lcnJvcnMtcmVxdWlyZWQiOiJUaGlzIGZpZWxkIGlzIHJlcXVpcmVkIiwiY3ItbmFtZSI6IlJlc3RyaWN0ZWQgVHJhbnNwb3J0YXRpb24gQWNjb3VudCBOdW1iZXIiLCJjci1lcnJvcnMtbWF4bGVuZ3RoIjoiTWF4aW11bSBsZW5ndGggZm9yIHRoaXMgZmllbGQgaXMgMjU1In0sImNyMDIwMiI6eyJjci1uYW1lIjoiRW5hYmxlIEFsdGVybmF0aXZlIFRyYW5zcG9ydGF0aW9uIEFjY291bnRzIFJlc3RyaWN0aW9uIn0sImNyMDA5NiI6eyJjci1lcnJvcnMtcmVxdWlyZWQiOiJWYWx1ZSByZXF1aXJlZCBmb3IgdGhpcyBmaWVsZCIsImNyLW5hbWUiOiJSZXN0cmljdCBTaGlwVG8gQWRkcmVzczogU291cmNlIGxpc3QifSwiY3IwMDk3Ijp7ImNyLW5hbWUiOiJNYXhpbXVtIE51bWJlciBvZiBTaGlwbWVudHM6IEVuYWJsZWQifSwiY3IwMDk4Ijp7ImNyLWVycm9ycy1yZXF1aXJlZCI6IlRoaXMgZmllbGQgaXMgcmVxdWlyZWQiLCJjci1uYW1lIjoiTWF4aW11bSBOdW1iZXIgb2YgU2hpcG1lbnRzOiBWYWx1ZSIsImNyLWVycm9ycy1yYW5nZSI6IlZhbHVlIGlzIG91dCBvZiB0aGUgcmFuZ2UifSwiY3IwMDk5Ijp7ImNyLWVycm9ycy1yZXF1aXJlZCI6IlRoaXMgZmllbGQgaXMgcmVxdWlyZWQiLCJjci1uYW1lIjoiTWF4aW11bSBOdW1iZXIgb2YgU2hpcG1lbnRzOiBQZXJpb2QiLCJjci1lcnJvcnMtcmFuZ2UiOiJWYWx1ZSBpcyBvdXQgb2YgdGhlIHJhbmdlIn0sImNyMDA5MiI6eyJjci1uYW1lIjoiRHV0aWVzIGFuZCBUYXhlcyJ9LCJjcjAwOTMiOnsiY3ItbmFtZSI6IlJlc3RyaWN0IFNoaXBGcm9tIEFkZHJlc3M6IEVuYWJsZWQifSwiY3IwMDk0Ijp7ImNyLWVycm9ycy1yZXF1aXJlZCI6IlZhbHVlIHJlcXVpcmVkIGZvciB0aGlzIGZpZWxkIiwiY3ItbmFtZSI6IlJlc3RyaWN0IFNoaXBGcm9tIEFkZHJlc3M6IFNvdXJjZSBsaXN0In0sImNyMDA5NSI6eyJjci1uYW1lIjoiUmVzdHJpY3QgU2hpcFRvIEFkZHJlc3M6IEVuYWJsZWQifSwicHJvdmlldyI6eyJtZW51aXRlbS1tb25pdG9yc2hpcG1lbnRzIjoiU2VuZHVuZ3N2ZXJ3YWx0dW5nIiwibWVudWl0ZW0tdmlldzNyZHBhcnR5IjoiU2llaGUgRHJpdHRlIFBlcnNvbiAoM3JkIFBhcnR5KSIsIm1lbnVpdGVtLXZpZXdyZWNlaXZlcmJpbGxlZCI6IsOcYmVyYmxpY2sgYmV6YWhsdGUgUmVjaG51bmdlbiBkdXJjaCBFbXBmw6RuZ2VyIiwibWVudWl0ZW0tdmlld291dGJvdW5kIjoiw5xiZXJibGljayBPdXRib3VuZCIsIm1lbnVpdGVtLW1hbmFnZWNvbnRhY3RzIjoiS29udGFrdGUgdmVyd2FsdGVuIiwibWVudWl0ZW0tdHJhY2twaWVjZXMiOiJWZXJmb2xnZW4gcGVyIFNlbmR1bmdzbnVtbWVyIiwibWVudWl0ZW0tbWFuYWdlYWNjb3VudHMiOiJBY2NvdW50cyB2ZXJ3YWx0ZW4iLCJtZW51aXRlbS1tYW5hZ2Vub3RpZmljYXRpb25zIjoiQmVuYWNocmljaHRpZ3VuZ2VuIHZlcndhbHRlbiIsIm1lbnVpdGVtLm1vbml0b3JzaGlwbWVudHMiOiJTZW5kdW5nc3ZlcndhbHR1bmcifSwiY3ItYXNzaWduLXJlc3RyaWN0aW9ucyI6eyJncm91cC1uYW1lX2hlYWRlciI6IlNlbmR1bmdzYmVhcmJlaXR1bmcgw7xiZXJnZWJlbiIsImJsYW5rX2xhYmVsX2NyMDIxMSI6IkFsbG93IE5GZSBlbnRyeSBvbmx5In0sImNyMDA5MSI6eyJjci1uYW1lIjoiU2hpcHBpbmcgUmVzdHJpY3Rpb24gT3JkZXIgTW9kaWZpY2F0aW9uIDogZW5hYmxlZCJ9LCJzaGlwbWVudC1kZWZhdWx0cyI6eyJ1c2VyLXByb2R1Y3RzX2JhY2tlbmQtZXJyb3JfcHJvZHVjdC13YXMtbW9kaWZpZWQtYnktYW5vdGhlci11c2VyIjoiQXJ0aWtlbCBnZWzDtnNjaHQiLCJ1c2VyLXByb2R1Y3RzX2JhY2tlbmQtZXJyb3JfcHJvZHVjdC13YXMtZGVsZXRlZC1vci15b3UtbG9zdC1hY2Nlc3MiOiJBcnRpa2VsIGdlbMO2c2NodCIsInVuaXRzLW1lYXN1cmUtY3VycmVuY3lfYmFja2VuZC1lcnJvcl9zb20tdmFsdWUtaXMtbm90LWFjY2VwdGFibGUiOiJVbmfDvGx0aWcifSwic2hpcG1lbnQtY29zdCI6eyJzdW1tYXJ5X2JhY2tlbmQtZXJyb3JfbWF4LXBpZWNlLWRpbWVuc2lvbnMtbGltaXQtZXhjZWVkZWQiOiIiLCJzdW1tYXJ5X2FsZXJ0X3JlY29yZC1oYXMtY2hhbmdlZC1ieS1hbm90aGVyLXVzZXIiOiJTaWUga8O2bm5lbiBkZXJ6ZWl0IG5pY2h0IGRpZSBEYXRlbiBkZXIgU2VuZHVuZyBhdWZydWZlbi4gRWluZSBhbmRlcmUgUGVyc29uIGhhdCB6dXIgWmVpdCBadWdyaWZmIGF1ZiBkaWVzZSBTZW5kdW5nLiIsInN1bW1hcnlfYmFja2VuZC1lcnJvcl9kaGwtcHJvbW8tcmV3YXJkLXByb2dyYW0tbm90LWF2YWlsYWJsZSI6IlJhYmF0dGNvZGUga29ubnRlIG5pY2h0IGVpbmdlbMO2c3Qgd2VyZGVuIiwic3VtbWFyeV9iYWNrZW5kLWVycm9yX21heC1waWVjZS13ZWlnaHQtbGltaXQtZXhjZWVkZWQiOiJHZXdpY2h0IGjDtmhlciBhbHMgbWF4aW1hbCB6dWdlbGFzc2VuIn0sImNyLWFkZHJlc3MtYm9vayI6eyJncm91cC1hZGRyZXNzLWJvb2tfbGFiZWxfY3IwMDcxIjoiS29udGFrdGUgbMO2c2NoZW4iLCJncm91cC1hZGRyZXNzLWJvb2tfbGFiZWxfY3IwMDcwIjoiS29udGFrdGUgYmVhcmJlaXRlbiIsInJlc3RyaWN0LXNoaXB0by1hZGRyZXNzX3NlbGVjdC1vcHRpb25fY3IwMDk2LWdyYWIiOiJHcnVwcGUgKEVtcGbDpG5nZXIpIEFkcmVzc2J1Y2giLCJwcml2YXRlLWFkZHJlc3MtYm9va19zdWItaGVhZGVyIjoiUGVyc8O2bmxpY2hlcyBBZHJlc3NidWNoIiwiZ3JvdXAtYWRkcmVzcy1ib29rX2xhYmVsX2NyMDA3MyI6IktvbnRha3RlIGhlcnVudGVybGFkZW4iLCJncm91cC1hZGRyZXNzLWJvb2tfbGFiZWxfY3IwMDcyIjoiS29udGFrdGUgaG9jaGxhZGVuIiwicmVzdHJpY3Qtc2hpcGZyb20tYWRkcmVzc19zZWxlY3Qtb3B0aW9uX2NyMDA5NC1nYWIiOiJHcnVwcGUgQWRyZXNzYnVjaCIsInJlc3RyaWN0LXNoaXBmcm9tLWFkZHJlc3Nfc2VsZWN0LW9wdGlvbl9jcjAwOTQtY2FiIjoiRmlybWEgQWRyZXNzYnVjaCIsImdyb3VwLWFkZHJlc3MtYm9va19zdWItaGVhZGVyIjoiR3J1cHBlIEFkcmVzc2J1Y2giLCJyZXN0cmljdC1zaGlwdG8tYWRkcmVzc19zZWxlY3Qtb3B0aW9uX2NyMDA5Ni1jcmFiIjoiRmlybWEgKEVtcGbDpG5nZXIpIEFkcmVzc2J1Y2giLCJjb21wYW55LWFkZHJlc3MtYm9va19sYWJlbF9jcjAwNjciOiJLb250YWt0ZSBoZXJ1bnRlcmxhZGVuIiwicmVzdHJpY3Qtc2hpcGZyb20tYWRkcmVzc19zdWItaGVhZGVyIjoiPGgzPldlbm4gU2llIGRpZSBBYnNlbmRlciBBZHJlc3NlIGF1c3fDpGhsZW48XC9oMz5cbiIsImNvbXBhbnktYWRkcmVzcy1ib29rX2xhYmVsX2NyMDA2MyI6IktvbnRha3RlIGhpbnp1ZsO8Z2VuIiwiY29tcGFueS1hZGRyZXNzLWJvb2tfbGFiZWxfY3IwMDY0IjoiS29udGFrdGUgYmVhcmJlaXRlbiIsInJlc3RyaWN0LXNoaXB0by1hZGRyZXNzX3N1Yi1oZWFkZXIiOiI8aDM+V2VubiBTaWUgZGllIEVtcGbDpG5nZXIgQWRyZXNzZSBhdXN3w6RobGVuPFwvaDM+XG4iLCJyZXN0cmljdC1zaGlwdG8tYWRkcmVzc19sYWJlbF9jcjAwOTUiOiJTaWUga8O2bm5lbiBudXIgQWRyZXNzZW4gbnV0emVuIGF1cyIsImNvbXBhbnktYWRkcmVzcy1ib29rX2xhYmVsX2NyMDA2NSI6IktvbnRha3RlIGzDtnNjaGVuIiwicmVzdHJpY3Qtc2hpcHRvLWFkZHJlc3NfbGFiZWxfY3IwMDk2IjoiIiwiY29tcGFueS1hZGRyZXNzLWJvb2tfbGFiZWxfY3IwMDY2IjoiS29udGFrdGUgaG9jaGxhZGVuIiwiY29tcGFueS1hZGRyZXNzLWJvb2tfbGFiZWxfY3IwMDYyIjoiS2FubiB6dWdyZWlmZW4iLCJyZXN0cmljdC1zaGlwZnJvbS1hZGRyZXNzX2xhYmVsX2NyMDA5NCI6IiIsInJlc3RyaWN0LXNoaXB0by1hZGRyZXNzX3NlbGVjdC1vcHRpb25fY3IwMDk2LWdhYiI6IkdydXBwZSBBZHJlc3NidWNoIiwiZ3JvdXAtbmFtZV9oZWFkZXIiOiJBZHJlc3Niw7xjaGVyIiwicmVzdHJpY3Qtc2hpcGZyb20tYWRkcmVzc19sYWJlbF9jcjAwOTMiOiJTaWUga8O2bm5lbiBudXIgQWRyZXNzZW4gbnV0emVuIGF1cyIsInJlc3RyaWN0LXNoaXBmcm9tLWFkZHJlc3NfZXJyb3JfY3IwMDk0LXJlcXVpcmVkIjoiRXJmb3JkZXJsaWNoIiwiZ3JvdXAtYWRkcmVzcy1ib29rX2xhYmVsX2NyMDA2OCI6Ikthbm4genVncmVpZmVuIiwiZ3JvdXAtYWRkcmVzcy1ib29rX2xhYmVsX2NyMDA2OSI6IktvbnRha3RlIGhpbnp1ZsO8Z2VuIiwicmVzdHJpY3Qtc2hpcGZyb20tYWRkcmVzc19zZWxlY3Qtb3B0aW9uX2NyMDA5NC1ncmFiIjoiR3J1cHBlIChBYnNlbmRlcikgQWRyZXNzYnVjaCIsInByaXZhdGUtYWRkcmVzcy1ib29rX2xhYmVsX2NyMDA3NCI6Ikthbm4genVncmVpZmVuIiwicmVzdHJpY3Qtc2hpcHRvLWFkZHJlc3NfZXJyb3JfY3IwMDk2LXJlcXVpcmVkIjoiRXJmb3JkZXJsaWNoIiwicmVzdHJpY3Qtc2hpcGZyb20tYWRkcmVzc19zZWxlY3Qtb3B0aW9uX2NyMDA5NC1jcmFiIjoiRmlybWEgKEFic2VuZGVyKSBBZHJlc3NidWNoIiwicmVzdHJpY3Qtc2hpcHRvLWFkZHJlc3Nfc2VsZWN0LW9wdGlvbl9jcjAwOTYtY2FiIjoiRmlybWEgQWRyZXNzYnVjaCIsImNvbXBhbnktYWRkcmVzcy1ib29rX3N1Yi1oZWFkZXIiOiJGaXJtYSBBZHJlc3NidWNoIn0sInNoaXBtZW50LWNvbmZpcm1hdGlvbiI6eyJMQi1nZXQtc2VuZC1ub3RpZmljYXRpb25zX2xhYmVsX2VtYWlsLnByb21wdCI6Im5hbWVAZW1haWwuY29tIiwiUlItY29uZmlybS1yZWNhcF92YWx1ZS1sYWJlbF9waWNrdXAtdGltZSI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPnp3aXNjaGVuIDxiPntwaWNrdXBFYXJsaWVzdH08XC9iPiB1bmQgPGI+e3BpY2t1cExhdGVzdH08XC9iPjxcL2Rpdj4iLCJMQi1zYXZlLXNoaXBtZW50LXNldHRpbmdzX2hlYWRlcl9zYXZlLXNldHRpbmdzIjoiU2VuZHVuZ3NlaW5zdGVsbHVuZ2VuIHNwZWljaGVybiIsIkxCLWFkZGl0aW9uYWwtZG9jdW1lbnQtbGlzdF9jb2wtbmFtZV9kb2N1bWVudC10aXRsZSI6IlRpdGVsIGRlcyBEb2t1bWVudHMiLCJjb25maXJtYXRpb25fbXNnX3NhdmVkLWFzLWZhdm9yaXRlIjoiQWxzIEZhdm9yaXQgZ2VzcGVpY2hlcnQiLCJjb25maXJtYXRpb25fdGl0bGVfaW5jb21wbGV0ZS1zaGlwbWVudCI6IlVudm9sbHN0w6RuZGlnZSBTZW5kdW5nZW46ICh7Y291bnR9KSIsIkxCLXNhdmUtc2hpcG1lbnQtc2V0dGluZ3NfYnV0dG9uX3NhdmUiOiJTcGVpY2hlcm4iLCJMQi1zZW5kLWltcG9ydC1zaGlwbWVudF9sYWJlbF9tZXNzYWdlIjoiTmFjaHJpY2h0IiwiTEItc2VuZC1pbXBvcnQtc2hpcG1lbnRfc3ViLWhlYWRlcl9hdHRhY2htZW50cyI6IkFuaMOkbmdlIiwiY29uZmlybWF0aW9uX2xpbmtfbm90aWZpY2F0aW9ucy1jb250YWN0cyI6Ikdlc2FtdMO8YmVyc2ljaHQiLCJjb25maXJtYXRpb25fcGFyYWdyYXBoX25vdGlmaWNhdGlvbnMtc3Vic2NyaWJlZCI6IkJlbmFjaHJpY2h0aWd1bmdlbiB3ZXJkZW4gYW5oYW5kIGRlciBHcnVwcGVuZWluc3RlbGx1bmdlbiBnZW1hY2h0IiwiY29uZmlybWF0aW9uX2xpbmtfc2NoZWR1bGUtcGlja3VwIjoiQWJob2x1bmcgYnVjaGVuIiwic2hpcG1lbnQtY29uZmlybWF0aW9uX25vdGlmeS1saWdoYm94X0NNUyI6IlfDpGhsZW4gU2llIGF1cywgd2VuIFNpZSDDvGJlciB3ZWxjaGVuIFNlbmR1bmdzc3RhdHVzIGJlbmFjaHJpY2h0aWdlbiBtw7ZjaHRlbi4iLCJMQi1hZGRpdGlvbmFsLWRvY3VtZW50LWxpc3RfY29sLW5hbWVfZ2VuZXJhdGVkLWF0IjoiIiwiY29uZmlybWF0aW9uX2FsZXJ0X3NoaXBtZW50LXN1Y2Nlc3NmdWxseS1jcmVhdGVkIjoiSWhyZSBTZW5kdW5nIHd1cmRlIGVyZm9sZ3JlaWNoIGVyc3RlbGx0IHVuZCBJaHJlIFpvbGxyZWNodW5nIGRpZ2l0YWwgYW4gZGVuIFpvbGwgd2VpdGVyZ2VsZWl0ZXQuIiwiY29uZmlybWF0aW9uX2Vycm9yX3NlbGVjdC1vbmUtaXRlbS10by1zaGFyZSI6Ik1pbmRlc3RlbnMgZWluL2UgYXVzd8OkaGxlbiIsImNvbmZpcm1hdGlvbl9idXR0b25fc2hhcmUiOiJUZWlsZW4iLCJjb25maXJtYXRpb25fYnV0dG9uX2Rvd25sb2FkLWRvY3VtZW50cyI6IkRva3VtZW50ZSBoZXJ1bnRlcmxhZGVuIiwiY29uZmlybWF0aW9uX3RpdGxlX3NoaXBtZW50cy1yZWFkeS10by1wcmludCI6IlNlbmR1bmdzZG9rdW1lbnRlIHNpbmQgYmVyZWl0IGdlZHJ1Y2t0IHp1IHdlcmRlbiAoe2NvdW50fSkiLCJMQi1zZW5kLWltcG9ydC1zaGlwbWVudF9wYXJhZ3JhcGhfc2VwYXJhdGUtd2l0aC1jb21tYS1vci1zZW1pY29sb24iOiJHZWJlbiBTaWUgSWhyZSBlTWFpbC1BZHJlc3NlbiBlaW4gdW5kIHRyZW5uZW4gU2llIGRpZXNlIG1pdCBlaW5lbSBLb21tYS4iLCJjb25maXJtYXRpb25fbm90aWZ5X2RpYWxvZy1zaGFyZS1oZWFkZXIiOiJTZW5kdW5nc2RldGFpbHMgd2VyZGVuIHBlciBFLU1haWwgZ2VzZW5kZXQgYW46IiwiY29uZmlybWF0aW9uX3BhcmFncmFwaF9ub3RpZmljYXRpb25zLWNvbnRhY3RzLWRlc2NyaXB0aW9uIjoiRGllIHZvbiBJaG5lbiBhdXNnZXfDpGhsdGVuIFNlbmR1bmdzc3RhdHVzIEJlbmFjaHJpY2h0aWd1bmdlbiB3ZXJkZW4gcGVyIEUtTWFpbCB2ZXJzZW5kZXQgYW4ge2xpbmt9IiwiY29uZmlybWF0aW9uX3BhcmFncmFwaF9zYXZlLXNoaXBtZW50LWRlZmF1bHRzIjoiU3BlaWNoZXJuIFNpZSBkaWVzZSBWb3JlaW5zdGVsbHVuZyBmw7xyIHdlaXRlcmUgU2VuZHVuZ2VuLiIsIkxCLXNlbmQtaW1wb3J0LXNoaXBtZW50X3N1Yi1oZWFkZXJfc2hpcHBpbmctZGV0YWlscyI6IlNlbmR1bmdzZGV0YWlscyAiLCJMQi1nZXQtc2VuZC1ub3RpZmljYXRpb25zX2xhYmVsX3R5cGUiOiJBcnQiLCJMQi1nZXQtc2VuZC1ub3RpZmljYXRpb25zX3NlbGVjdC1vcHRpb25fZW1haWwiOiJFLU1haWwiLCJjb25maXJtYXRpb25fcGFyYWdyYXBoX25vdGlmaWNhdGlvbnMtc2hhcmUtZGVzY3JpcHRpb24iOiJTZW5kdW5nc2RldGFpbHMgd3VyZGVuIHBlciBFLU1haWwgdmVyc2VuZGV0IGFuIHtsaW5rfSIsIlJSLWNvbmZpcm0tcmVjYXBfdmFsdWUtbGFiZWxfcGllY2UtbnVtYmVyIjoiUGllY2UgIyIsImNvbmZpcm1hdGlvbl9wYXJhZ3JhcGhfc2hpcG1lbnRzLW5lZWQtdG8tYmUtbW9kaWZpZWQiOiI8ZGl2IGNsYXNzPVwiZXdmX2RpY3Rpb25hcnlfdmFsdWVcIj48ZGl2IGNsYXNzPSJtZXNzYWdlLXdyYXBwZXIiPjxwPkRpZXNlIFNlbmR1bmdlbiBzaW5kIHVudm9sbHN0w6RuZGlnLiBVbSBTZW5kdW5nc2xhYmVsIHp1IGRydWNrZW4gbcO8c3NlbiBkaWUgU2VuZHVuZ3NhdWZ0csOkZ2UgdmVydm9sbHN0w6RuZGlndCB3ZXJkZW4uPFwvcD5cbjxwPkdlaGVuIFNpZSBhdWYgPGEgaHJlZj1cIi9jb250ZW50L2RobC9hdC9kZS9tYW5hZ2Utc2hpcG1lbnRzLmh0bWxcIiB0YXJnZXQ9XCJfc2VsZlwiPlZlcndhbHRlbjxcL2E+wqB1bSBTZW5kdW5nc2F1ZnRyw6RnZSBhbnp1cGFzc2VuIHVuZCBhYnp1c2NobGllc3Nlbi48XC9wPlxuPFwvZGl2PjxcL2Rpdj4iLCJjb25maXJtYXRpb25fc3ViLWhlYWRlcl9zYXZlLXNoaXBtZW50LWRlZmF1bHRzIjoiU2VuZHVuZ3NlaW5zdGVsbHVuZ2VuIHNwZWljaGVybiIsIkxCLXNlbmQtaW1wb3J0LXNoaXBtZW50X2hlYWRlcl9zZW5kLXlvdXItaW1wb3J0LXNoaXBtZW50IjoiU2VuZHVuZ3NkZXRhaWxzIHRlaWxlbiIsImNvbmZpcm1hdGlvbl9hbGVydF9kdXBsaWNhdGVkLWZhdm9yaXRlLW5hbWUiOiJOYW1lIGJlcmVpdHMgdmVyZ2ViZW4iLCJjb25maXJtYXRpb25fbGFiZWxfY3VzdG9tcy1pbnZvaWNlIjoiWm9sbHJlY2hudW5nIiwiTEItc2VuZC1ub3RpZmljYXRpb25zX3BhcmFncmFwaF9vdXRib3VuZC1idXR0b24iOiJPdXRib3VuZCIsIkxCLWdldC1zZW5kLW5vdGlmaWNhdGlvbnNfbGFiZWxfcGhvbmUiOiJUZWxlZm9uIiwiY29uZmlybWF0aW9uX2xpbmtfY3VzdG9tLWNsZWFyYW5jZS1kaXNtaXNzIjoiQWJsZWhuZW4iLCJSUi1jb25maXJtLXJlY2FwX3N1Yi1oZWFkZXJfcGlja3VwLWRldGFpbHMiOiJBYmhvbGRldGFpbHMiLCJMQi1zZW5kLW5vdGlmaWNhdGlvbnNfcGFyYWdyYXBoX3JldHVybi1idXR0b24iOiJadXLDvGNrIiwiY29uZmlybWF0aW9uX21zZ19yZXR1cm4taW5zdHJ1Y3Rpb25zLWVtYWlsLXNlbnQiOiJSZXRvdXJlbiBFLU1haWwgd3VyZGUgZ2VzZW5kZXQgYW4ge2VtYWlsfSIsIkxCLXNlbmQtaW1wb3J0LXNoaXBtZW50X2xhYmVsX3BpY2t1cC1jb25maXJtYXRpb24iOiJBYmhvbG51bW1lciIsImNvbmZpcm1hdGlvbl9ub3RpZnlfZGlhbG9nLWNvbnRhY3RzLWhlYWRlciI6IlN0YXR1cyBCZW5hY2hyaWNodGlndW5nZW4gd2VyZGVuIGdlc2VuZGV0IGFuOiIsIkxCLXNlbmQtaW1wb3J0LXNoaXBtZW50X2hlYWRlcl9zaGFyZS15b3VyLXNoaXBtZW50IjoiSW1wb3J0c2VuZHVuZ3NkZXRhaWxzIHNlbmRlbiIsImNvbmZpcm1hdGlvbl9wYXJhZ3JhcGhfc2VsZWN0LXNoaXBtZW50LWRldGFpbHMiOiJXw6RobGVuIFNpZSBTZW5kdW5nc2RhdGVuIGF1cywgZGllIFNpZSBhbiBEcml0dGUgd2VpdGVybGVpdGVuIG3DtmNodGVuLiIsImNvbmZpcm1hdGlvbl9saW5rX3ZpZXctZGNpLWltYWdlcy1naWEtZmFpbGVkIjoiQW56ZWlnZW4gdm9uIGRpZ2l0YWxlbiBab2xscmVjaG51bmdlbiB1bmQgZGVtIEZyYWNodGJyaWVmYXJjaGl2IiwiYWxlcnQtYWN0aW9uX2JhY2tlbmQtZXJyb3JfbWFpbGluZy1saXN0LXNoaXBtZW50LWNyZWF0aW9uLXJlc3RyaWN0ZWQiOiJVbmbDpGhpZyBkaWUgU2VuZHVuZyBtaXQgZWluZXIgTWFpbGluZ2xpc3RlIHp1IGVyc3RlbGxlbiIsIkxCLWdldC1zZW5kLW5vdGlmaWNhdGlvbnNfc2VsZWN0LW9wdGlvbl9zbXMiOiJTTVMiLCJMQi1nZXQtc2VuZC1ub3RpZmljYXRpb25zX2hlYWRlcl9nZXQtc2VuZC1ub3RpZmljYXRpb25zIjoiQmVuYWNocmljaHRpZ3VuZ2VuIGVpbnN0ZWxsZW4iLCJMQi1nZXQtc2VuZC1ub3RpZmljYXRpb25zX2Vycm9yX3NldHRpbmdzIjoiTWluZGVzdGVucyBlaW4vZSBhdXN3w6RobGVuIiwiTEItc2VuZC1pbXBvcnQtc2hpcG1lbnRfbGFiZWxfbGFuZ3VhZ2UiOiJFLU1haWwgSW1wb3J0IFZlcnNhbmRkZXRhaWxzIGluIGZvbGdlbmRlciBTcHJhY2hlIiwiY29uZmlybWF0aW9uX3BhcmFncmFwaF9hZGRpdGlvbmFsLWRvY3VtZW50cyI6Ik3DtmdsaWNoZXJ3ZWlzZSB3ZXJkZW4gYW5kZXJlIHJlbGV2YW50ZSBab2xsLSB1bmQgVmVyc2FuZGRva3VtZW50ZSBiZW7DtnRpZ3QuIMOcYmVycHLDvGZlbiB1bmQgRHJ1Y2tlbiBTaWUgZGllIGdlZ2ViZW5mYWxscyB6dSBlcmfDpG56ZW5kZW4gRG9rdW1lbnRlIiwiY29uZmlybWF0aW9uX2hlYWRlcl9zaGlwbWVudC1jb21wbGV0ZSI6IlZlcnNhbmRiZXN0w6R0aWd1bmciLCJMQi1zYXZlLXNoaXBtZW50LXNldHRpbmdzX2J1dHRvbl9zYXZlLWFuZC1jb250aW51ZSI6IlNwZWljaGVybiIsImNvbmZpcm1hdGlvbl9wYXJhZ3JhcGhfbm8taW5jb21wbGV0ZS1zaGlwbWVudHMiOiJTZW5kdW5nZW4gdm9uIGRpZXNlciBNYWlsaW5nbGlzdGUgd3VyZGVuIGVyc3RlbGx0IHVuZCBkaWUgRG9rdW1lbnRlLyBMYWJlbCBrw7ZubmVuIGF1c2dlZHJ1Y2t0IHdlcmRlbi4iLCJMQi1nZXQtc2VuZC1ub3RpZmljYXRpb25zX2xhYmVsX2NvdW50cnktY29kZS5wcm9tcHQiOiIrX19fIiwiY29uZmlybWF0aW9uX2J1dHRvbl9kb3dubG9hZC1yZXR1cm4tZG9jdW1lbnRzIjoiUsO8Y2tzZW5kZWRva3VtZW50ZSBoZXJ1bnRlcmxhZGVuIiwiTEItc2VuZC1pbXBvcnQtc2hpcG1lbnRfaW5mby10ZXh0X21lc3NhZ2UiOiIiLCJjb25maXJtYXRpb25fYnV0dG9uX3JlcHJpbnQtZG9jdW1lbnRzIjoiRG9rdW1lbnRlIGVybmV1dCBkcnVja2VuIiwiTEItZ2V0LXNlbmQtbm90aWZpY2F0aW9uc19zZWxlY3Qtb3B0aW9uX2xhbmd1YWdlIjoiQmVuYWNocmljaHRpZ3VuZyBhdWYiLCJMQi1nZXQtc2VuZC1ub3RpZmljYXRpb25zX2Vycm9yX3NlcnZpY2UtaXMtbm90LWF2YWlsYWJsZSI6IlVuc2VyIEJlbmFjaHJpY2h0aWd1bmdzZGllbnN0IGlzdCBkZXJ6ZWl0IG5pY2h0IHZlcmbDvGdiYXIuIiwiY29uZmlybWF0aW9uX2xpbmtfZWRpdCI6IkJlYXJiZWl0ZW4iLCJjb25maXJtYXRpb25fbGFiZWxfdHJhY2tpbmctbnVtYmVyIjoiU2VuZHVuZ3NudW1tZXIiLCJMQi1nZXQtc2VuZC1ub3RpZmljYXRpb25zX2xhYmVsX2VtYWlsIjoiRS1NYWlsIEFkcmVzc2UiLCJjb25maXJtYXRpb25fYnV0dG9uX2N1c3RvbS1jbGVhcmFuY2UtZW5yb2xsIjoiSmV0enQgYW5tZWxkZW4gdW5kIHN0YXJ0ZW4iLCJSUi1jb25maXJtLXJlY2FwX3BhcmFncmFwaF9uby1waWNrdXAtdGltZSI6IkRITCBob2x0IHTDpGdsaWNoIGJlaSBJaG5lbiAoYW4gZGllc2VyIEFkcmVzc2UpIFNlbmR1bmdlbiBhYiIsIkxCLXNhdmUtc2hpcG1lbnQtc2V0dGluZ3NfcGFyYWdyYXBoX3NhdmUtc2V0dGluZ3MiOiJCZWkgZGVyIGVybmV1dGVuIEVyc3RlbGx1bmcgZWluZXIgU2VuZHVuZywgd2lyZCBkaWVzIGJlcmVpdHMgdm9yZWluZ2VzdGVsbHQgc2VpbiIsImNvbmZpcm1hdGlvbl9saW5rX3ZpZXctZGNpLWltYWdlcyI6Ikdyw7bDn3RlIFZlcnBhY2t1bmdzZ3LDtsOfZSIsIkxCLWFkZGl0aW9uYWwtZG9jdW1lbnQtbGlzdF9oZWFkZXJfYWRkaXRpb25hbC1kb2N1bWVudHMtbGlzdCI6IlZlcnNhbmRkb2t1bWVudGUiLCJMQi1nZXQtc2VuZC1ub3RpZmljYXRpb25zX2xhYmVsX3Bob25lLnByb21wdCI6IihfX18pIF9fXy1fX19fIiwiTEItc2VuZC1pbXBvcnQtc2hpcG1lbnRfYnV0dG9uX3NlbmQiOiJWZXJzZW5kZW4iLCJMQi1zZW5kLWltcG9ydC1zaGlwbWVudF9sYWJlbF90cmFja2luZy1udW1iZXIiOiJTZW5kdW5nc251bW1lciIsImNvbmZpcm1hdGlvbl9idXR0b25fY3JlYXRlLWFub3RoZXItc2hpcG1lbnQiOiJOZXVlIFNlbmR1bmcgZXJzdGVsbGVuIiwiY29uZmlybWF0aW9uX3BhcmFncmFwaF9ub3RpZmljYXRpb25zLWNvbnRhY3RzIjoiS29udGFrdGUiLCJjb25maXJtYXRpb25fYnRuX21hbmFnZS1teS1zaGlwbWVudHMiOiJNZWluZSBTZW5kdW5nZW4gdmVyd2FsdGVuIiwiTEItZ2V0LXNlbmQtbm90aWZpY2F0aW9uc19sYWJlbF9jb3VudHJ5LWNvZGUiOiJMw6RuZGVyY29kZSIsIkxCLXNlbmQtaW1wb3J0LXNoaXBtZW50X2xhYmVsX3NoYXJlLWZyb20iOiJWb24iLCJMQi1zYXZlLXNoaXBtZW50LXNldHRpbmdzX2Vycm9yX2VudGVyLWZhdm9yaXRlLW5hbWUiOiJFcmZvcmRlcmxpY2giLCJMQi1zZW5kLWltcG9ydC1zaGlwbWVudF9zZWxlY3Qtb3B0aW9uX3NlbGVjdC1sYW5ndWFnZSI6IlNwcmFjaGUgYXVzd8OkaGxlbiIsImNvbmZpcm1hdGlvbl9zdWItaGVhZGVyX25vdGlmaWNhdGlvbnMtc3RhdHVzIjoiTcO2Y2h0ZW4gU2llIMO8YmVyIGRlbiBTZW5kdW5nc3N0YXR1cyBpbmZvcm1pZXJ0IHdlcmRlbj8iLCJjb25maXJtYXRpb25fYnV0dG9uX3NhdmUtYXMtZmF2b3JpdGUiOiJBbHMgRmF2b3JpdCBzcGVpY2hlcm4iLCJMQi1zZW5kLWltcG9ydC1zaGlwbWVudF9sYWJlbF9zdWJqZWN0IjoiQmV0cmVmZiIsIkxCLWdldC1zZW5kLW5vdGlmaWNhdGlvbnNfYnV0dG9uX2FkZC1hbm90aGVyIjoiV2VpdGVyZSBoaW56dWbDvGdlbiIsImNvbmZpcm1hdGlvbl90aXRsZV9zaGlwbWVudC1wcm9jZXNzZWQiOiJJaHIgQXVmdHJhZyB3dXJkZSBhbiBESEwgw7xiZXJtaXR0ZWx0LiIsImNvbmZpcm1hdGlvbl9saW5rX3ZpZXctZ2lhLWRvY3VtZW50cy1hcmNoaXZlLWdpYS1mYWlsZWQiOiJMYWRlbiBTaWUgZWluZSBLb3BpZSBkZXMgRnJhY2h0YnJpZWZzIGbDvHIgbWVpbmUgVW50ZXJsYWdlbiBoZXJ1bnRlciIsImNvbmZpcm1hdGlvbl9sYWJlbF9zaGlwbWVudC1kZXRhaWxzIjoiU2VuZHVuZ3NkZXRhaWxzICIsIkxCLWdldC1zZW5kLW5vdGlmaWNhdGlvbnNfYnV0dG9uX3JlbW92ZSI6IkVudGZlcm5lbiIsIkxCLXNlbmQtaW1wb3J0LXNoaXBtZW50X3N1Yi1oZWFkZXJfc2hpcHBpbmctcmV0dXJuLWRldGFpbHMiOiIiLCJjb25maXJtYXRpb25fYWxlcnRfaXRuLXJlcXVlc3RlZCI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPjxkaXYgY2xhc3M9Im1lc3NhZ2Utd3JhcHBlciI+PHA+RWxlY3Ryb25pYyBFeHBvcnQgSW5mb3JtYXRpb24gc3VibWl0dGVkLiBJVE4gYXBwbGllZCB0byB3YXliaWxsICg8YSBocmVmPVwiL2NvbnRlbnQvZGhsL2F0L2RlL21hbmFnZS1zaGlwbWVudHMuaHRtbFwiIHRhcmdldD1cIl9ibGFua1wiPnZpZXcgSVROIGluIE1hbmFnZSBTaGlwbWVudHM8XC9hPikuPFwvcD48cD5QcmludCBzaGlwcGluZyBsYWJlbCBub3cuPFwvcD48XC9kaXY+PFwvZGl2PiIsImNvbmZpcm1hdGlvbl9idXR0b25fc2F2ZSI6IlNwZWljaGVybiIsIkxCLWdldC1zZW5kLW5vdGlmaWNhdGlvbnNfYnV0dG9uX25vdGlmeSI6IkJlbmFjaHJpY2h0aWdlbiIsImNvbmZpcm1hdGlvbl9zdWItaGVhZGVyX3dhbnQtdG8tc2hhcmUiOiJNw7ZjaHRlbiBTaWUgZGllcyB0ZWlsZW4/IiwiY29uZmlybWF0aW9uX2xpbmtfdmlldy1naWEtZG9jdW1lbnRzLWFyY2hpdmUiOiJEb3dubG9hZCBhIGNvcHkgb2YgdGhlIHdheWJpbGwgZm9yIG15IHJlY29yZHMiLCJjb25maXJtYXRpb25fbGFiZWxfd2F5YmlsbCI6IkxhYmVsIChXYXliaWxsKSIsImNvbmZpcm1hdGlvbl9wYXJhZ3JhcGhfc2hpcG1lbnQtc2hhcmVkIjoiU2VuZHVuZyB3aXJkIGR1cmNoIEdydXBwZW5laW5zdGVsbHVuZ2VuIGdldGVpbHQiLCJjb25maXJtYXRpb25fYnV0dG9uX25vdGlmaWNhdGlvbnMtc3RhdHVzIjoiQmVuYWNocmljaHRpZ3VuZ2VuIGVpbnN0ZWxsZW4iLCJjb25maXJtYXRpb25fbGlua192aWV3LWFsbC1waWNrdXBzIjoiw5xiZXJzaWNodCBhbGxlciBnZXBsYW50ZXIgQWJob2x1bmdlbiIsImNvbmZpcm1hdGlvbl9hbGVydF9zaGlwbWVudC1zdWNjZXNzZnVsbHktY3JlYXRlZC1naWEtZG9jdW1lbnRzLWJ1dC1naWEtZmFpbGVkIjoiUGxlYXNlIHByaW50IGNvcGllcyBvZiB5b3VyIHdheWJpbGwgYW5kIHRvIGluY2x1ZGUgd2l0aCB0aGlzIHNoaXBtZW50IiwiY29uZmlybWF0aW9uX2xhYmVsX3BpY2t1cC1jb25maXJtYXRpb24tbnVtYmVyIjoiQWJob2xudW1tZXIiLCJSUi1jb25maXJtLXJlY2FwX3N1Yi1oZWFkZXJfeW91ci10cmFja2luZy1udW1iZXIiOiJJaHJlIFNlbmR1bmdzbnVtbWVyIiwiTEItc2VuZC1pbXBvcnQtc2hpcG1lbnRfbGFiZWxfdXNlLW1lc3NhZ2UtZnJvbS1jdXN0b20tZW1haWwtdGVtcGxhdGUiOiJOdXR6ZW4gU2llIG1laW5lIHBlcnNvbmFsaXNpZXJ0ZSBFLU1haWwgTmFjaHJpY2h0IiwiY29uZmlybWF0aW9uX2J1dHRvbl9jcmVhdGUtcmV0dXJuLWxhYmVsIjoiUmV0b3VyLUxhYmVsIGVyc3RlbGxlbiIsImNvbmZpcm1hdGlvbl9wYXJhZ3JhcGhfbm8tcmVhZHktdG8tcHJpbnQtc2hpcG1lbnRzIjoiS2VpbmUgU2VuZHVuZyB3dXJkZSB2b24gZGllc2VyIE1haWxpbmdsaXN0ZSBlcnN0ZWxsdC4iLCJjb25maXJtYXRpb25fYWxlcnRfY3VzdG9tLWNsZWFyYW5jZSI6IkVyZmFocmVuIFNpZSBoaWVyLCB3aWUgSWhyZSBab2xscmVjaG51bmdlbiBvbmxpbmUgdmVyc2VuZGV0IHdlcmRlbiBrw7ZubmVuLiIsIkxCLXNlbmQtaW1wb3J0LXNoaXBtZW50X2xhYmVsX3NoYXJlLXRvIjoiQW4iLCJMQi1zYXZlLXNoaXBtZW50LXNldHRpbmdzX2hlYWRlcl9uYW1lLXNoaXBtZW50LXRvLXNhdmUiOiJCZW5lbm5lbiBTaWUgSWhyZW4gRmF2b3JpdGVuIGJlaSBkZXIgU2VuZHVuZ3NlcnN0ZWxsdW5nIiwiY29uZmlybWF0aW9uX3N1Yi1oZWFkZXJfY3VzdG9tLWNsZWFyYW5jZSI6IkRpcmVrdCB6dXIgWm9sbGFid2lja2x1bmciLCJjb25maXJtYXRpb25fbXNnX3ByaW50LWhhcmQtZWFkLWNvcGllcyI6IkRydWNrZW4gU2llIElociBBdXNmdWhyYmVnbGVpdGRva3VtZW50IChBQkQpIGluIFBhcGllcmZvcm0gYXVzIHVuZCBmw7xnZW4gU2llIGRpZXNlcyBJaHJlciBTZW5kdW5nIGJlaSIsImNvbmZpcm1hdGlvbl9wYXJhZ3JhcGhfbm90aWZpY2F0aW9ucy1zdGF0dXMiOiJSaWNodGVuIFNpZSBCZW5hY2hyaWNodGlndW5nc2VpbnN0ZWxsdW5nZW4gZsO8ciBkaWVzZSBTZW5kdW5nIGVpbiAtIFNpZSBrw7ZubmVuIGF1Y2ggRHJpdHRlIMO8YmVyIGRlbiBTZW5kdW5nc3N0YXR1cyBpbmZvcm1pZXJlbiAhIiwiY29uZmlybWF0aW9uX2xhYmVsX3JlY2VpcHQiOiJTZW5kdW5nc2JlbGVnIiwiY29uZmlybWF0aW9uX3BhcmFncmFwaF9zaGlwbWVudHMtcmVhZHktdG8tcHJpbnQiOiJGw7xyIGRpZXNlIFNlbmR1bmdlbiBrw7ZubmVuIFNlbmR1bmdzbGFiZWwgZ2VkcnVja3Qgd2VyZGVuLiIsIkxCLXNlbmQtaW1wb3J0LXNoaXBtZW50X2luZm8tdGV4dF9lbWFpbCI6Im5hbWVAZW1haWwuY29tIiwiUlItY29uZmlybS1yZWNhcF92YWx1ZS1sYWJlbF9waWNrdXAtY29uZmlybWF0aW9uLW51bWJlciI6IkFiaG9sbnVtbWVyIHtudW1iZXJ9IiwiTEItc2F2ZS1zaGlwbWVudC1zZXR0aW5nc19sYWJlbF9zYXZlLWFzIjoiU3BlaWNoZXJuIHVudGVyIiwiY29uZmlybWF0aW9uX2FsZXJ0X3NoaXBtZW50LXN1Y2Nlc3NmdWxseS1jcmVhdGVkLWJ1dC1naWEtZmFpbGVkIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+PGRpdiBjbGFzcz0ibWVzc2FnZS13cmFwcGVyIj48cD48Yj5XSUNIVElHPFwvYj48XC9wPlxuPHA+PGI+Qml0dGUgRG9rdW1lbnRlIGF1c2RydWNrZW4hPFwvYj48XC9wPlxuPHA+wqA8XC9wPlxuPHA+RW50c2NodWxkaWd1bmcgLSBlaW4gRmVobGVyIGlzdCBhdWZnZXRyZXRlbiB1bmQgd2lyIGvDtm5uZW4gZGVyemVpdCBrZWluZSBab2xsZG9rdW1lbnRlIGRpZ2l0YWwgdm9ybGVnZW4uIEJpdHRlIGRydWNrZW4gU2llIEtvcGllbiBJaHJlciBab2xscmVjaG51bmdlbiBhdXMsIHVtIFNpZSB6dXIgWm9sbHJlY2hudW5nIGhpbnp1enVmw7xnZW4uPFwvcD5cbjxcL2Rpdj48XC9kaXY+IiwiY29uZmlybWF0aW9uX2xpbmtfc2hvdy1hZGRpdGlvbmFsLWRvY3VtZW50cyI6IldlaXRlcmUgRG9rdW1lbnRlIHfDpGhsZW4iLCJjb25maXJtYXRpb25fYWxlcnRfc2hpcG1lbnQtc3VjY2Vzc2Z1bGx5LWNyZWF0ZWQtZ2lhLWRvY3VtZW50cy1hcmNoaXZlIjoiIn0sIk1PQklMRSI6eyJQSUNLVVBfQUxFUlRfSU5WQUxJRF9FQVJMSUVTVF9USU1FX01JTiI6IkZyw7xoZXN0ZW5zIHtlYXJsaWVzdFRpbWV9IiwiTE9DQVRPUl9NU0dfSU5WQUxJRF9BRERSRVNTIjoiS2VpbmUgRXJnZWJuaXNzZSBnZWZ1bmRlbi4iLCJSQVRFX0FORF9RVU9URV9IRUFERVJfSU5WQUxJRF9FTlRSWSI6IlVuZ8O8bHRpZ2VyIEVpbnRyYWciLCJSQVRFX0FORF9RVU9URV9IRUFERVJfVkFMVUUiOiJXYXJlbndlcnQiLCJSQVRFX0FORF9RVU9URV9MQUJFTF9JTlNVUkFOQ0VfVkFMVUUiOiJXZWxjaGVuIFdlcnQgd29sbGVuIFNpZSB2ZXJzaWNoZXJuPyIsIkFERFJFU1NfRklFTERfUExBQ0VIT0xERVJfQ0hPT1NFX0NJVFkiOiJTdGFkdCIsIkNPVU5UUllfTEFOR0FVR0VfRklFTERfUExBQ0VIT0xERVJfUVVJQ0tfU0VBUkNIIjoiU3VjaGUiLCJIT01FX0FMRVJUX1JFRElSRUNUX1RPX0RFU0tUT1BfVkVSU0lPTl9MSU5LIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+PGEgaHJlZj1cImh0dHBzOi8vbXlkaGwuZXhwcmVzcy5kaGwvaW5kZXgvZW4uaHRtbFwiPldlYnNpdGU8XC9hPjxcL2Rpdj4iLCJSQVRFX0FORF9RVU9URV9FUlJPUl9UT1RBTF9ERUNMQVJFRF9NQVhfVkFMVUUiOiJNYXhpbWFsOiB7bWF4VmFsdWV9IiwiQ09VTlRSWV9MQU5HQVVHRV9GSUVMRF9QTEFDRUhPTERFUl9DT1VOVFJZIjoiIiwiU0NIRURVTEVfUElDS1VQX01TR19OT1RfRU5BQkxFIjoiVEJEOyBzY2hlZHVsZS1waWNrdXBfbXNnX25vdC1lbmFibGUiLCJTQ0hFRFVMRV9QSUNLVVBfTVNHX0hFQURFUiI6IiIsIkVSUk9SU19NU0dfVFJBQ0tJTkdfRU1QVFlfSUQiOiJFcmZvcmRlcmxpY2giLCJBRERSRVNTX0ZJRUxEX1BMQUNFSE9MREVSX0VOVEVSX1BPU1RBTF9DT0RFIjoiIiwiUkFURV9BTkRfUVVPVEVfTEFCRUxfREVDTEFSRURfVkFMVUUiOiJXaWUgaG9jaCBpc3QgZGVyIFdlcnQgSWhyZXIgU2VuZHVuZz8iLCJSQVRFX0FORF9RVU9URV9FUlJPUl9JTlNVUkFOQ0VfTUFYX1ZBTFVFIjoiTWF4aW1hbDoge21heFZhbHVlfSIsIlJBVEVfQU5EX1FVT1RFX01TR19TSEFSRV9RVU9URV9ZT1VSX0VNQUlMX1dBU19TRU5UIjoiRS1NYWlsIGdlc2VuZGV0IiwiSE9NRV9BTEVSVF9SRURJUkVDVF9UT19ERVNLVE9QX1ZFUlNJT04iOiJBdWYgdW5zZXJlciBtb2JpbGVuIFdlYnNpdGUgc2luZCBuaWNodCBhbGxlIEZ1bmt0aW9uZW4gdmVyZsO8Z2Jhci4gVW0gZWluZSBTZW5kdW5nIHp1IGVyc3RlbGxlbiwgYmVzdWNoZW4gU2llIHVuc2VyZcKge2xpbmt9IiwiUkFURV9BTkRfUVVPVEVfRVJST1JfRU1QVFlfRklFTEQiOiJFcmZvcmRlcmxpY2giLCJTQ0hFRFVMRV9QSUNLVVBfTVNHX0FDQ09VTlRfQ09VTlRSWV9ET0VTTlRfTUFUQ0giOiJFbnRzY2h1bGRpZ2VuIFNpZSAtIGRpZXNlciBBY2NvdW50IGRhcmYgdGVtcG9yw6RyIGtlaW5lIEFiaG9sdW5nZW4gYmVhdWZ0cmFnZW4uIiwiQUREUkVTU19GSUVMRF9QTEFDRUhPTERFUl9DT1VOVFJZIjoiTGFuZC9UZXJyaXRvcml1bSIsIlNISVBNRU5UX0FQUFJPVkFMX01TR19SRVFVRVNUX0VSUk9SIjoiRWluIEZlaGxlciBpc3QgYXVmZ2V0cmV0ZW4iLCJFUlJPUlNfTVNHX1RSQUNLSU5HX0lOVkFMSURfSUQiOiJVbmfDvGx0aWdlcyBGb3JtYXQiLCJSQVRFX0FORF9RVU9URV9CVVRUT05fSElERV9ERVRBSUxTIjoiRGV0YWlscyBhdXNibGVuZGVuIiwiUElDS1VQX0FMRVJUX1BJQ0tVUF9SRVFVRVNUX0hBU19CRUVOX0NBTkNFTExFRCI6IkFiaG9sdW5nIHtib29raW5nUmVmZXJlbmNlTnVtYmVyfSBHZWzDtnNjaHQiLCJSQVRFX0FORF9RVU9URV9CVVRUT05fUVVPVEVfU0hBUkUiOiJUZWlsZW4iLCJQSUNLVVBfQlVUVE9OX1JFUVVFU1RfUElDS1VQIjoiQWJob2x1bmcgYnVjaGVuIiwiTE9DQVRPUl9CVVRUT05fVklFV19BTExfUkVTVUxUUyI6Ikdlc2FtdMO8YmVyc2ljaHQge2xpc3RMZW5ndGh9IiwiU0hJUE1FTlRfQVBQUk9WQUxfTVNHX05PX1NISVBNRU5UU19GT1JfQVBQUk9WQUwiOiJLZWluZSBTZW5kdW5nZW4genVtIEJlc3TDpHRpZ2VuIiwiUkFURV9BTkRfUVVPVEVfSEVBREVSX1ZBTFVFX0FORF9JTlNVUkFOQ0UiOiIiLCJMT0dJTl9IRUFERVJfU1VDQ0VTU19VU0VSX0xPR0lOIjoiV2lsbGtvbW1lbiB6dSBNeURITCsiLCJSQVRFX0FORF9RVU9URV9QQVJBR1JBUEhfSU5WQUxJRF9FTlRSWSI6IkVyZm9yZGVybGljaCIsIkVSUk9SU19IRUFERVJfRVJST1IiOiIiLCJBRERSRVNTX0ZJRUxEX1BMQUNFSE9MREVSX1FVSUNLX1NFQVJDSCI6IlN1Y2hlIiwiUkFURV9BTkRfUVVPVEVfQUxFUlRfTk9fUFJPRFVDVFNfRk9VTkQiOiJLZWluZSBMaWVmZXJvcHRpb25lbiBtw7ZnbGljaCIsIlJBVEVfQU5EX1FVT1RFX0VSUk9SX0RFQ0xBUkVEX1pFUk9fVkFMVUUiOiJNdXNzIGdyw7bDn2VyIHNlaW4gYWxzIDAiLCJBRERSRVNTX0ZJRUxEX1BMQUNFSE9MREVSX0VOVEVSX0FERFJFU1MiOiJBZHJlc3NlLCBTdGFkdCBvZGVyIFBvc3RsZWl0emFobCBlaW5nZWJlbiIsIlJBVEVfQU5EX1FVT1RFX0JVVFRPTl9WSUVXX0RFVEFJTFMiOiJEZXRhaWxzICIsIlNISVBNRU5UX0FQUFJPVkFMX01TR19SRUpFQ1RFRCI6IkFiZ2VsZWhudCIsIlJBVEVfQU5EX1FVT1RFX0JVVFRPTl9DT05USU5VRSI6IldlaXRlciIsIlBJQ0tVUF9BTEVSVF9JTlZBTElEX0VBUkxJRVNUX1RJTUVfTUFYIjoiQWJob2x6ZWl0IG11c3Mgdm9yIHtwaWNrdXBDdXRvZmZUaW1lfSBzZWluIiwiUkFURV9BTkRfUVVPVEVfTVNHX1NIQVJFX1FVT1RFX1RPX0VNQUlMUyI6ImFuIHtlbWFpbHN9IiwiRVJST1JTX0hFQURFUl9XQVJOSU5HIjoiIiwiU0hJUE1FTlRfQVBQUk9WQUxfTVNHX0FDQ0VQVEVEIjoiR2VuZWhtaWd0IiwiU0hJUE1FTlRfQVBQUk9WQUxfUEFSQUdSQVBIX05PVF9BVkFJTEFCTEUiOiJLZWluZSBTZW5kdW5nZW4genVtIEJlc3TDpHRpZ2VuIiwiUElDS1VQX0FMRVJUX0lOVkFMSURfTEFJRVNUX1RJTUUiOiJTcMOkdGVzdGVucyB7bGF0ZXN0VGltZX0iLCJDT1VOVFJZX0xBTkdBVUdFX0ZJRUxEX1BMQUNFSE9MREVSX0xBTkdVQUdFIjoiIiwiUkFURV9BTkRfUVVPVEVfSEVBREVSX0lOU1VSQU5DRSI6IlNlbmR1bmdzdmVyc2ljaGVydW5nIiwiUkFURV9BTkRfUVVPVEVfSU5GT19URVhUX1NIQVJFX1FVT1RFX1NVQkpFQ1QiOiJESEwgRXhwcmVzcyBBbmdlYm90In0sImRhc2hib2FyZC1pbmR1c3RyaWFsX2dyb3VwcyI6e30sImNyMDExMCI6eyJjci1uYW1lIjoiTWF4aW11bSBXZWlnaHQgb2YgU2hpcG1lbnRzOiBFbmFibGVkIn0sImNyLWFjY291bnQtcmVzdHJpY3Rpb25zIjp7InJlc3RyaWN0LXRheGVzX2xhYmVsX2NyMDIwOCI6IlJlY2VpdmVyIFdpbGwgUGF5IiwicmVzdHJpY3QtdGF4ZXNfbGFiZWxfY3IwMjA3IjoiRW5hYmxlIFRheGVzIEFjY291bnRzIFJlc3RyaWN0aW9uIiwicmVzdHJpY3Qtc2hpcHBpbmctYWNjb3VudHNfZXJyb3JfY3IwMTk5LXJlcXVpcmVkIjoiVGhpcyBmaWVsZCBpcyByZXF1aXJlZCIsInJlc3RyaWN0LXNoaXBwaW5nLWFjY291bnRzX2Vycm9yX2NyMDE5OS1tYXhsZW5ndGgiOiJNYXhpbXVtIGxlbmd0aCBmb3IgdGhpcyBmaWVsZCBpcyAyNTUiLCJyZXN0cmljdC1kdXRpZXNfZXJyb3JfY3IwMjA0LXJlcXVpcmVkIjoiVGhpcyBmaWVsZCBpcyByZXF1aXJlZCIsInJlc3RyaWN0LWR1dGllc19lcnJvcl9jcjAyMDQtbWlubGVuZ3RoIjoiTWluaW11bSBsZW5ndGggZm9yIHRoaXMgZmllbGQgaXMgMCIsInJlc3RyaWN0LXRyYW5zcG9ydGF0aW9uLWFjY291bnRzX2Vycm9yX2NyMDIwMS1tYXhsZW5ndGgiOiJNYXhpbXVtIGxlbmd0aCBmb3IgdGhpcyBmaWVsZCBpcyAyNTUiLCJyZXN0cmljdC10cmFuc3BvcnRhdGlvbi1hY2NvdW50c19lcnJvcl9jcjAyMDEtbWlubGVuZ3RoIjoiTWluaW11bSBsZW5ndGggZm9yIHRoaXMgZmllbGQgaXMgMCIsInJlc3RyaWN0LWR1dGllc19sYWJlbF9jcjAyMDQiOiJSZXN0cmljdGVkIER1dGllcyBBY2NvdW50IE51bWJlciIsInJlc3RyaWN0LWR1dGllc19lcnJvcl9jcjAyMDQtbWF4bGVuZ3RoIjoiTWF4aW11bSBsZW5ndGggZm9yIHRoaXMgZmllbGQgaXMgMjU1IiwicmVzdHJpY3QtZHV0aWVzX2xhYmVsX2NyMDIwNSI6IkVuYWJsZSBBbHRlcm5hdGl2ZSBEdXRpZXMgQWNjb3VudHMgUmVzdHJpY3Rpb24iLCJyZXN0cmljdC1kdXRpZXNfbGFiZWxfY3IwMjAzIjoiRW5hYmxlIER1dGllcyBBY2NvdW50cyBSZXN0cmljdGlvbiIsInJlc3RyaWN0LXRyYW5zcG9ydGF0aW9uLWFjY291bnRzX2xhYmVsX2NyMDIwMCI6IkVuYWJsZSBUcmFuc3BvcnRhdGlvbiBBY2NvdW50cyBSZXN0cmljdGlvbiIsInJlc3RyaWN0LXRheGVzX3N1Yi1oZWFkZXIiOiJSZXN0cmljdCBUYXhlcyIsInJlc3RyaWN0LXNoaXBwaW5nLWFjY291bnRzX3N1Yi1oZWFkZXIiOiJSZXN0cmljdCBTaGlwcGluZyBBY2NvdW50cyIsInJlc3RyaWN0LWR1dGllc19sYWJlbF9jcjAyMDYiOiJSZWNlaXZlciBXaWxsIFBheSIsInJlc3RyaWN0LXRyYW5zcG9ydGF0aW9uLWFjY291bnRzX2xhYmVsX2NyMDIwMiI6IkVuYWJsZSBBbHRlcm5hdGl2ZSBUcmFuc3BvcnRhdGlvbiBBY2NvdW50cyBSZXN0cmljdGlvbiIsInJlc3RyaWN0LXRyYW5zcG9ydGF0aW9uLWFjY291bnRzX2xhYmVsX2NyMDIwMSI6IlJlc3RyaWN0ZWQgVHJhbnNwb3J0YXRpb24gQWNjb3VudCBOdW1iZXIiLCJncm91cC1uYW1lX2hlYWRlciI6IkFjY291bnQgUmVzdHJpY3Rpb25zIiwicmVzdHJpY3Qtc2hpcHBpbmctYWNjb3VudHNfZXJyb3JfY3IwMTk5LW1pbmxlbmd0aCI6Ik1pbmltdW0gbGVuZ3RoIGZvciB0aGlzIGZpZWxkIGlzIDAiLCJyZXN0cmljdC1kdXRpZXNfc3ViLWhlYWRlciI6IlJlc3RyaWN0IER1dGllcyIsInJlc3RyaWN0LXNoaXBwaW5nLWFjY291bnRzX2xhYmVsX2NyMDE5OCI6IkVuYWJsZSBTaGlwcGluZyBBY2NvdW50cyBSZXN0cmljdGlvbiIsInJlc3RyaWN0LXNoaXBwaW5nLWFjY291bnRzX2xhYmVsX2NyMDE5OSI6IlJlc3RyaWN0ZWQgU2hpcHBpbmcgQWNjb3VudCBOdW1iZXIiLCJyZXN0cmljdC10cmFuc3BvcnRhdGlvbi1hY2NvdW50c19zdWItaGVhZGVyIjoiUmVzdHJpY3QgVHJhbnNwb3J0YXRpb24gQWNjb3VudHMiLCJyZXN0cmljdC10cmFuc3BvcnRhdGlvbi1hY2NvdW50c19lcnJvcl9jcjAyMDEtcmVxdWlyZWQiOiJUaGlzIGZpZWxkIGlzIHJlcXVpcmVkIn0sIlNISVBNRU5UX0NPTkZJUk1BVElPTiI6eyJDT05GSVJNQVRJT05fUEFSQUdSQVBIX05PVElGSUNBVElPTlNfQ09OVEFDVFNfREVTQ1JJUFRJT04iOiJEaWUgdm9uIElobmVuIGF1c2dld8OkaGx0ZW4gU2VuZHVuZ3NzdGF0dXMgQmVuYWNocmljaHRpZ3VuZ2VuIHdlcmRlbiBwZXIgRS1NYWlsIHZlcnNlbmRldCBhbiB7bGlua30iLCJMQl9TRU5EX0lNUE9SVF9TSElQTUVOVF9IRUFERVJfU0VORF9ZT1VSX0lNUE9SVF9TSElQTUVOVCI6IlNlbmR1bmdzZGV0YWlscyB0ZWlsZW4iLCJDT05GSVJNQVRJT05fUEFSQUdSQVBIX05PVElGSUNBVElPTlNfU0hBUkVfREVTQ1JJUFRJT04iOiJTZW5kdW5nc2RldGFpbHMgd3VyZGVuIHBlciBFLU1haWwgdmVyc2VuZGV0IGFuIHtsaW5rfSIsIkxCX1NFTkRfSU1QT1JUX1NISVBNRU5UX0hFQURFUl9TSEFSRV9ZT1VSX0lNUE9SVF9TSElQTUVOVCI6IkltcG9ydHNlbmR1bmdzZGV0YWlscyBzZW5kZW4iLCJDT05GSVJNQVRJT05fTk9USUZZX0RJQUxPR19TSEFSRV9IRUFERVIiOiJTZW5kdW5nc2RldGFpbHMgd2VyZGVuIHBlciBFLU1haWwgZ2VzZW5kZXQgYW46IiwiQ09ORklSTUFUSU9OX0FMRVJUX1NISVBNRU5UX1NVQ0NFU1NGVUxMWV9DUkVBVEVEX0dJQV9ET0NVTUVOVFNfQVJDSElWRSI6IiIsIkNPTkZJUk1BVElPTl9MQUJFTF9XQVlCSUxMIjoiTGFiZWwgKFdheWJpbGwpIiwiTEJfU0FWRV9TSElQTUVOVF9TRVRUSU5HU19CVVRUT05fU0FWRSI6IlNwZWljaGVybiIsIkxCX1NBVkVfU0hJUE1FTlRfU0VUVElOR1NfSEVBREVSX1NBVkVfU0VUVElOR1MiOiJTZW5kdW5nc2VpbnN0ZWxsdW5nZW4gc3BlaWNoZXJuIiwiQ09ORklSTUFUSU9OX0FMRVJUX1NISVBNRU5UX1NVQ0NFU1NGVUxMWV9DUkVBVEVEIjoiSWhyZSBTZW5kdW5nIHd1cmRlIGVyZm9sZ3JlaWNoIGVyc3RlbGx0IHVuZCBJaHJlIFpvbGxyZWNodW5nIGRpZ2l0YWwgYW4gZGVuIFpvbGwgd2VpdGVyZ2VsZWl0ZXQuIiwiQ09ORklSTUFUSU9OX0FMRVJUX1NISVBNRU5UX1NVQ0NFU1NGVUxMWV9DUkVBVEVEX0JVVF9HSUFfRkFJTEVEIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+PGRpdiBjbGFzcz0ibWVzc2FnZS13cmFwcGVyIj48cD48Yj5XSUNIVElHPFwvYj48XC9wPlxuPHA+PGI+Qml0dGUgRG9rdW1lbnRlIGF1c2RydWNrZW4hPFwvYj48XC9wPlxuPHA+wqA8XC9wPlxuPHA+RW50c2NodWxkaWd1bmcgLSBlaW4gRmVobGVyIGlzdCBhdWZnZXRyZXRlbiB1bmQgd2lyIGvDtm5uZW4gZGVyemVpdCBrZWluZSBab2xsZG9rdW1lbnRlIGRpZ2l0YWwgdm9ybGVnZW4uIEJpdHRlIGRydWNrZW4gU2llIEtvcGllbiBJaHJlciBab2xscmVjaG51bmdlbiBhdXMsIHVtIFNpZSB6dXIgWm9sbHJlY2hudW5nIGhpbnp1enVmw7xnZW4uPFwvcD5cbjxcL2Rpdj48XC9kaXY+IiwiQ09ORklSTUFUSU9OX0xBQkVMX1RSQUNLSU5HX05VTUJFUiI6IlNlbmR1bmdzbnVtbWVyIiwiQ09ORklSTUFUSU9OX0xBQkVMX0NVU1RPTVNfSU5WT0lDRSI6IlpvbGxyZWNobnVuZyIsIkxCX0dFVF9TRU5EX05PVElGSUNBVElPTlNfRVJST1JfU0VSVklDRV9JU19OT1RfQVZBSUxBQkxFIjoiVW5zZXIgQmVuYWNocmljaHRpZ3VuZ3NkaWVuc3QgaXN0IGRlcnplaXQgbmljaHQgdmVyZsO8Z2Jhci4iLCJMQl9BRERJVElPTkFMX0RPQ1VNRU5UX0xJU1RfQ09MX05BTUVfR0VORVJBVEVEX0FUIjoiIiwiQ09ORklSTUFUSU9OX05PVElGWV9ESUFMT0dfQ09OVEFDVFNfSEVBREVSIjoiU3RhdHVzIEJlbmFjaHJpY2h0aWd1bmdlbiB3ZXJkZW4gZ2VzZW5kZXQgYW46IiwiQ09ORklSTUFUSU9OX0xJTktfVklFV19HSUFfRE9DVU1FTlRTX0FSQ0hJVkVfR0lBX0ZBSUxFRCI6IkxhZGVuIFNpZSBlaW5lIEtvcGllIGRlcyBGcmFjaHRicmllZnMgZsO8ciBtZWluZSBVbnRlcmxhZ2VuIGhlcnVudGVyIiwiTEJfU0VORF9OT1RJRklDQVRJT05TX1BBUkFHUkFQSF9SRVRVUk5fQlVUVE9OIjoiWnVyw7xjayIsIkxCX1NBVkVfU0hJUE1FTlRfU0VUVElOR1NfUEFSQUdSQVBIX1NBVkVfU0VUVElOR1MiOiJCZWkgZGVyIGVybmV1dGVuIEVyc3RlbGx1bmcgZWluZXIgU2VuZHVuZywgd2lyZCBkaWVzIGJlcmVpdHMgdm9yZWluZ2VzdGVsbHQgc2VpbiIsIkNPTkZJUk1BVElPTl9MSU5LX1ZJRVdfRENJX0lNQUdFUyI6Ikdyw7bDn3RlIFZlcnBhY2t1bmdzZ3LDtsOfZSIsIkNPTkZJUk1BVElPTl9MSU5LX1ZJRVdfRENJX0lNQUdFU19HSUFfRkFJTEVEIjoiQW56ZWlnZW4gdm9uIGRpZ2l0YWxlbiBab2xscmVjaG51bmdlbiB1bmQgZGVtIEZyYWNodGJyaWVmYXJjaGl2IiwiQ09ORklSTUFUSU9OX0xBQkVMX1JFQ0VJUFQiOiJTZW5kdW5nc2JlbGVnIiwiQ09ORklSTUFUSU9OX0xBQkVMX1BJQ0tVUF9DT05GSVJNQVRJT05fTlVNQkVSIjoiQWJob2xudW1tZXIiLCJDT05GSVJNQVRJT05fQUxFUlRfU0hJUE1FTlRfU1VDQ0VTU0ZVTExZX0NSRUFURURfR0lBX0RPQ1VNRU5UU19CVVRfR0lBX0ZBSUxFRCI6IlBsZWFzZSBwcmludCBjb3BpZXMgb2YgeW91ciB3YXliaWxsIGFuZCB0byBpbmNsdWRlIHdpdGggdGhpcyBzaGlwbWVudCIsIkxCX0FERElUSU9OQUxfRE9DVU1FTlRfTElTVF9DT0xfTkFNRV9ET0NVTUVOVF9USVRMRSI6IlRpdGVsIGRlcyBEb2t1bWVudHMiLCJMQl9TRU5EX0lNUE9SVF9TSElQTUVOVF9TVUJfSEVBREVSX1NISVBQSU5HX1JFVFVSTl9ERVRBSUxTIjoiIiwiTEJfU0VORF9OT1RJRklDQVRJT05TX1BBUkFHUkFQSF9PVVRCT1VORF9CVVRUT04iOiJPdXRib3VuZCIsIkNPTkZJUk1BVElPTl9MSU5LX1ZJRVdfR0lBX0RPQ1VNRU5UU19BUkNISVZFIjoiRG93bmxvYWQgYSBjb3B5IG9mIHRoZSB3YXliaWxsIGZvciBteSByZWNvcmRzIiwiQ09ORklSTUFUSU9OX0xBQkVMX1NISVBNRU5UX0RFVEFJTFMiOiJTZW5kdW5nc2RldGFpbHMgIiwiTEJfU0VORF9JTVBPUlRfU0hJUE1FTlRfU1VCX0hFQURFUl9TSElQUElOR19ERVRBSUxTIjoiU2VuZHVuZ3NkZXRhaWxzICJ9LCJTSElQTUVOVF9QUklOVCI6eyIiOiJFcyB3ZXJkZW4gbWVociBLb3BpZW4gYmVuw7Z0aWd0IiwiUFJJTlRfQUxFUlRfVFJPVUJMRVNfUFJJTlRJTkciOiJ7bGlua30gd2VubiBTaWUgUHJvYmxlbWUgbWl0IGRlbSBEcnVja2VuIGhhYmVuIiwiUFJJTlRfTEFCRUxfV0FZQklMTCI6IkxhYmVsIChXYXliaWxsKSIsIlBSSU5UX0xBQkVMX0FOVElfRFJVRyI6IkFudGktRHJ1ZyBMZXR0ZXIiLCJQUklOVF9MQUJFTF9JTkRFTU5JVFlfTEVUVEVSIjoiU2NoYWRsb3NoYWx0dW5nc2Vya2zDpHJ1bmciLCJQUklOVF9MQUJFTF9SRUNFSVBUIjoiQmVsZWciLCJQUklOVF9BTEVSVF9OT1RJRllfVVNFUl9UT19DSEFOR0VfRkZfU0VUVElOR1MiOiJLZWluZSBWZXJiaW5kdW5nIHp1bSBEcnVja2VyIiwiUFJJTlRfTEFCRUxfQUxFUlRfU1RJQ0tFUiI6IlNlcnZpY2UgQWxlcnQgTGFiZWwiLCJQUklOVF9MQUJFTF9DRVJUSUZJQ0FURV9PRl9PUklHSU4iOiJVcnNwcnVuZ3NzemVydGlmaWthdCIsIlBSSU5UX0xBQkVMX1JFVFVSTl9JTlNUUlVDVElPTlMiOiJSZXRvdXJlbnNlbmR1bmdzaW5zdHJ1a3Rpb25lbiIsIlBSSU5UX0xJTktfRE9XTkxPQURfRE9DVU1FTlRTIjoiRG9rdW1lbnRlIGhlcnVudGVybGFkZW4iLCJQUklOVF9MQUJFTF9MSVRISVVNX0JBVFRFUklFUyI6IkxpdGhpdW0gQmF0dGVyaWVuIiwiUFJJTlRfTEFCRUxfQ1VTVE9NX1JFVFVSTl9JTlNUUlVDVElPTlMiOiJSZXRvdXJlbnNlbmR1bmdzaW5zdHJ1a3Rpb25lbiIsIlBSSU5UX0FMRVJUX1BSSU5URVJfRVJST1IiOiJWZXJiaW5kdW5nIHp1bSBEcnVja2VyIG5pY2h0IHZlcmbDvGdhYnIuIMOcYmVycHLDvGZlbiBTaWUgZGllIERydWNrZXItIFZlcmJpbmR1bmcgb2RlciB2ZXJ3ZWRuZW4gU2llIGVpbmVuIGFuZGVyZW4gRHJ1Y2tlciwiLCJQUklOVF9QQVJBR1JBUEhfTkFWSUdBVElOR19XSVRIT1VUX1BSSU5USU5HIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+PGRpdiBjbGFzcz0ibWVzc2FnZS13cmFwcGVyIj48cD48Yj5WZXJnZXNzZW4gU2llIG5pY2h0IElociBWZXJzYW5kbGFiZWwgdW5kIElocmUgRG9rdW1lbnRlIHp1IGRydWNrZW4hPFwvYj48XC9wPlxuPHVsPlxuPGxpPk5pY2h0IGJlaSBNeURITCsgcmVnaXN0cmllcnQ/IERydWNrZW4gU2llIGpldHp0IGF1cyBvZGVyIHNww6R0ZXIgbWl0aGlsZmUgZGVyIEJlc3TDpHRpZ3VuZ3NtYWlsPFwvbGk+XG48bGk+QmVyZWl0cyByZWdpc3RyaWVydD8gRHJ1Y2tlbiBTaWUgamV0enQgYXVzIG9kZXIgc3DDpHRlciB1bnRlciBkZW0gTWVuw7xwdW5rdCBWZXJ3YWx0ZW48XC9saT5cbjxcL3VsPlxuPFwvZGl2PjxcL2Rpdj4iLCJQUklOVF9MQUJFTF9QRFMiOiJQcm9kdWt0aW5mb3JtYXRpb24gKFByb2R1Y3QgRGlzY2xvc3VyZSBTdGF0ZW1lbnQpIiwiUFJJTlRfQUxFUlRfVEhFUk1BTF9QUklOVEVSX0FQUExJQ0FUSU9OX0VSUk9SIjoiRG93bmxvYWQgUHJpbnQgQXBwIGFuZCB0cnkgcHJpbnRpbmcgYWdhaW4iLCJQUklOVF9BTEVSVF9DQU5OT1RfU0hPV19UUkFDS0lOR19OVU1CRVIiOiJFbnRzY2h1bGRpZ3VuZyAtIGVzIGlzdCBlaW4gRmVobGVyIGF1ZmdldHJldGVuIHVuZCB3aXIga8O2bm5lbiBJaHJlIFNlbmR1bmcgbmljaHQgZXJzdGVsbGVuLiBCaXR0ZSBrb250YWt0aWVyZW4gU2llIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAkKGN1c3RvbWVyLXNlcnZpY2UtcGhvbmUpLiIsIlBSSU5UX0xBQkVMX1ZBVF9SRUNFSVBUIjoiU2VuZHVuZ3NiZWxlZyIsIlBSSU5UX0FMRVJUX05PX1BJQ0tVUF9JTkZPIjoiRW50c2NodWxkaWd1bmcgLSB3aXIga8O2bm5lbiBJaHJlIEFiaG9sdW5nIG5pY2h0IGluIGRhcyBTeXN0ZW0gZWlucGZsZWdlbi4gQml0dGUga29udGFrdGllcmVuIFNpZSB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUgZsO8ciBkaWUgRXJmYXNzdW5nIElocmVyIEFiaG9sdW5nLiIsIlBSSU5UX0xBQkVMX0FERFJFU1NfU1RJQ0tFUiI6IkVtcGbDpG5nZXIgQWRyZXNzIExhYmVsIiwiUFJJTlRfTEFCRUxfSU5WT0lDRSI6IlpvbGxyZWNobnVuZyIsIkxBQkVMX1ZBVF9SRUNFSVBUX0xBTkdVQUdFIjoiQmVzdMOkdGlndW5nIGluIGF1c2dld8OkaGx0ZXIgU3ByYWNoZSBkcnVja2VuOiJ9LCJSRVBPUlRTIjp7IlpJUCI6IlpJUCBmaWxlICguemlwKSIsIkxJU1RJTkdfSEVBREVSX0RFTEVURV9NVUxUSVBMRV9QT1BVUCI6IlJlcG9ydGUgZ2Vsw7ZzY2h0IiwiQ09SUE9SQVRFX1NISVBNRU5UX1JFRkVSRU5DRVNfQllfVVNFUiI6IlNoaXBtZW50IFJlZmVyZW5jZXMgUmVwb3J0IC0gYnkgUGVyc29uIiwiTElTVElOR19DT0xfTkFNRV9SRVBPUlRfVFlQRSI6IlJlcG9ydHR5cCIsIkNPUlBPUkFURV9QSUNLVVBfSElTVE9SWSI6IlBpY2t1cCBIaXN0b3J5IFJlcG9ydCIsIlVOREVGSU5FRCI6Ik5pY2h0IGFuIERITCDDvGJlcm1pdHRlbHQiLCJZRVNURVJEQVkiOiJHZXN0ZXJuIiwiREVUQUlMU19SRVZJRVdfSEVBREVSX0RFTEVURV9QT1BVUCI6IkJlcmljaHQgbMO2c2NoZW4iLCJVU0VSX0dST1VQX0ZJTFRFUl9MQUJFTCI6IkdydXBwZSIsIlBFTkRJTkdfQVNTSUdORUVfQUNUSU9OIjoiQXVzc3RlaGVuZGUgQmVhcmJlaXR1bmcgZHVyY2ggRW1wZsOkbmdlciIsIkNPUlBPUkFURV9BUFBST1ZBTCI6IkJlc3TDpHRpZ3VuZyBSZXBvcnQiLCJMQVNUXzMwX0RBWVMiOiJMZXR6dGUocikgMzAgVGFnZSIsIlNISVBNRU5UX0lOVk9JQ0VfREVUQUlMUyI6IlRyYW5zcG9ydHJlY2hudW5nIERldGFpbCBSZXBvcnQiLCJJTl9UUkFOU0lUIjoiSW0gVHJhbnNpdCIsIlJFUE9SVF9OQU1FX0FMUkVBRFlfRVhJU1RTX0VSUk9SIjoiTmFtZSBiZXJlaXRzIHZlcmdlYmVuIiwiTElTVElOR19CVVRUT05fQUREIjoiUmVwb3J0IGVyc3RlbGxlbiIsIlJFUE9SVF9TQ0hFRFVMRV9PTkVfVElNRSI6IiIsIlNBVkVEX0JZX01FIjoiR2VzcGVpY2hlcnQiLCJVU0VSX0ZJTFRFUl9MQUJFTCI6IlBlcnNvbiIsIkVESVRfUkVRVUVTVEVEIjoiIiwiQUxMX1VTRVJfR1JPVVBfT1BUSU9OIjoiQXVzd2FobCBBbGxlIiwiQVNTSUdORURfVE9fTUUiOiJCZWFyYmVpdHVuZyBkdXJjaCBtaWNoIiwiUkVQT1JUX1NDSEVEVUxFX1NDSEVEVUxFRCI6IkdlcGxhbnQiLCJMSVNUSU5HX0NPTF9OQU1FX0NPTVBBTllfTkFNRSI6IkVtcGbDpG5nZXIgRmlybWEgTmFtZSIsIkxJU1RJTkdfSEVBREVSX0RFTEVURV9TSU5HTEVfUE9QVVAiOiJCZXJpY2h0IGzDtnNjaGVuIiwiU0hJUE1FTlRfREVUQUlMUyI6IlNoaXBtZW50IERldGFpbCBSZXBvcnQiLCJDQU5DRUxMRUQiOiJHZWzDtnNjaHQiLCJERVRBSUxTX1JFVklFV19QQVJBR1JBUEhfREVMRVRFX1BPUFVQX1FVRVNUSU9OIjoiV29sbGVuIFNpZSBkaWVzZW4gQmVyaWNodCB3aXJrbGljaCBsw7ZzY2hlbj8iLCJSRUFEWV9UT19QUklOVCI6IkJlcmVpdCB6dW0gRHJ1Y2tlbiIsIlBFTkRJTkdfQURNSU5fQVBQUk9WQUwiOiJhdXNzdGVoZW5kZSBCZXdpbGxpZ3VuZyIsIkFMTF9QQVlNRU5UX09QVElPTlMiOiJBdXN3YWhsIEFsbGUiLCJFT0RfTUFOSUZFU1QiOiJDb3VyaWVyIFJlcG9ydCAoVGFnZXNhYnNjaGx1c3MpIiwiQ1VTVE9NX0RBVEVfUkFOR0UiOiJWZXJzYW5kemVpdHJhdW0iLCJERUxJVkVSRUQiOiJadWdlc3RlbGx0IiwiQ09SUE9SQVRFX0FDQ09VTlRTIjoiQWNjb3VudCBOdW1iZXIgLSBieSBQZXJzb24iLCJSRUFEWV9UT19TSElQIjoiVmVyc2FuZGJlcmVpdCIsIlBFTkRJTkdfUkVRVUVTVE9SX0FQUFJPVkFMIjoiYXVzc3RlaGVuZGUgR2VuZWhtaWd1bmcgdm9uIEF1ZnRyYWdzYWJzZW5kZXIiLCJERVRBSUxTX1JFVklFV19BTEVSVF9FUlJPUl9JTl9DT0RFIjoiRWluIEZlaGxlciBpc3QgYXVmZ2V0cmV0ZW4iLCJQREYiOiJQREYgRGF0ZWkgKC5wZGYpIiwiUEVORElOR19NWV9BUFBST1ZBTCI6IkF1c3N0ZWhlbmRlIFp1c3RpbW11bmciLCJBTExfVVNFUl9GUk9NX0dST1VQX09QVElPTiI6IkF1c3dhaGwgQWxsZSIsIlNISVBNRU5UX1NVTU1BUlkiOiJTaGlwbWVudCBTdW1tYXJ5IFJlcG9ydCIsIkRFQ0xJTkVEX0JZX1NISVBQRVIiOiJBYmdlbGVobnQgdm9uIGF1dG9yaXNpZXJ0ZW0gRW1wZsOkbmdlciIsIkxJU1RJTkdfQ09MX05BTUVfUkVQT1JUX05BTUUiOiJCZXJpY2h0L1JlcG9ydCBOYW1lIiwiU0hJUFBJTkdfVE9EQVkiOiJBa3R1ZWxsZSBTZW5kdW5nZW4iLCJUT0RBWSI6ImhldXRlIiwiRlVMTF9TSElQTUVOVF9ERVRBSUxTIjoiRGV0YWlsIEJyZWFrZG93biBSZXBvcnQiLCJDU1YiOiJDU1YgRGF0ZWkgKC5jc3YpIiwiTEFTVF83X0RBWVMiOiJMZXR6dGUocikgNyBUYWdlIiwiQUxMX1NUQVRVU0VTIjoiQXVzd2FobCBBbGxlIiwiQUREUkVTU19CT09LIjoiQWRkcmVzcyBCb29rIFJlcG9ydCIsIklNUE9SVF9VU0VSUyI6IkNvcnAgQWNjb3VudCAtIE1pZ3JhdGVkIFBlb3BsZSIsIkxJU1RJTkdfQlVUVE9OX0RPV05MT0FEIjoiRG93bmxvYWQiLCJDT1JQT1JBVEVfVVNFUl9ERVRBSUwiOiJBZG1pbiBPdmVydmlldyAtIGJ5IFBlcnNvbiIsIkxJU1RJTkdfQ09MX05BTUVfQVdCX05VTUJFUiI6IlNlbmR1bmdzbnVtbWVyIiwiUElDS0VEX1VQIjoiUGlja2VkIFVwIiwiRlVUVVJFX1NISVBNRU5UIjoiWnVrw7xuZnRpZ2UiLCJMSVNUSU5HX1BBUkFHUkFQSF9ERUxFVEVfUE9QVVBfUVVFU1RJT04iOiJNw7ZjaHRlbiBTaWUgZGllc2UvbiBSZXBvcnQvZSBsw7ZzY2hlbj8iLCJBUFBST1ZFRCI6IkdlbmVobWlndCIsIkxBU1RfOTBfREFZUyI6IkxldHp0ZShyKSA5MCBUYWdlIiwiVU5fU1VCTUlUVEVEIjoiTmljaHQgw7xiZXJtaXR0ZWx0IiwiREVUQUlMU19SRVZJRVdfQUxFUlRfREFUQUJBU0VfSVNfTk9UX0FWQUlMQUJMRSI6IlNlcnZpY2UgZGV6ZWl0IG5pY2h0IHZlcmbDvGdiYXIifSwiY3IwMTE1Ijp7ImNyLWVycm9ycy1yZXF1aXJlZCI6IlRoaXMgZmllbGQgaXMgcmVxdWlyZWQiLCJjci1uYW1lIjoiTWF4aW11bSBXZWlnaHQgb2YgU2hpcG1lbnRzOiBFZmZlY3RpdmUgRGF0ZSBTdGFydCJ9LCJjcjAxMTYiOnsiY3ItbmFtZSI6Ik1heGltdW0gV2VpZ2h0IG9mIFNoaXBtZW50czogQXBwcm92YWwgUmVxdWlyZWQifSwiYWRkcmVzcy1ib29rLWltcG9ydCI6eyJhZGRyZXNzLWJvb2staW1wb3J0X2J1dHRvbl9nby1iYWNrIjoienVyw7xjayIsImFkZHJlc3MtYm9vay1maWVsZHNfc2VsZWN0LW9wdGlvbl9yZWZlcmVuY2UtNCI6IlJlZmVyZW56IDQiLCJhZGRyZXNzLWJvb2stZmllbGRzX3NlbGVjdC1vcHRpb25fcmVmZXJlbmNlLTIiOiJSZWZlcmVueiAyIiwiYWRkcmVzcy1ib29rLWZpZWxkc19zZWxlY3Qtb3B0aW9uX3JlZmVyZW5jZS0zIjoiUmVmZXJlbnogMyIsImFkZHJlc3MtYm9vay1maWVsZHNfc2VsZWN0LW9wdGlvbl9yZWZlcmVuY2UtMSI6IlJlZmVyZW56IDEiLCJzaGlwbWVudC1pbXBvcnRfbGFiZWxfcm93LW51bWJlciI6IlJlaWhlwqB7cm93TnVtYmVyfSIsImFkZHJlc3MtYm9vay1pbXBvcnRfZXJyb3ItbG9nX3Jvdy1wcmVmaXgiOiIqIiwiYWRkcmVzcy1ib29rLWltcG9ydF9idXR0b25fc2F2ZS1hcy1uZXciOiJhbHMgTmV1IHNwZWljaGVybiIsInNoaXBtZW50LWltcG9ydF9hbGVydF9tYXgtY29sdW1ucy1jb3VudCI6Ik1heGltYWxlIEZlbGRhbnphaGwge21heENvdW50fSIsInNoaXBtZW50LWltcG9ydF9idXR0b25fc2F2ZS1zY2hlbWUiOiJTcGVpY2hlcm4iLCJhZGRyZXNzLWJvb2stZmllbGRzX3NlbGVjdC1vcHRpb25faWUtdGF4LWlkIjoiSUUvUkciLCJzaGlwbWVudC1pbXBvcnRfYnV0dG9uX2V4aXN0aW5nIjoiRGF0ZWkgaG9jaGxhZGVuIiwic2hpcG1lbnQtaW1wb3J0X2luZm8tdGV4dF9tYW5hZ2UiOiI8ZGl2IGNsYXNzPVwiZXdmX2RpY3Rpb25hcnlfdmFsdWVcIj48ZGl2IGNsYXNzPSJtZXNzYWdlLXdyYXBwZXIiPjxwPkRITCBGZWxkZXIgZsO8ciB6dWvDvG5mdGlnZSBVcGxvYWRzIHNwZWljaGVybi4gPGEgaHJlZj1cIi9jb250ZW50L2RobC9tYXN0ZXJfbGFuZ3VhZ2VzL2RlL2FkZHJlc3MtYm9vay1pbXBvcnQvY3JlYXRlLXF1aWNrLXRpcHMuaHRtbFwiIHRhcmdldD1cImxpZ2h0Ym94XCIgZXdmLWxpZ2h0Ym94PVwiZXdmLWxpZ2h0Ym94XCI+VGlwcHM8XC9hPjxcL3A+XG48cD7CoDxcL3A+XG48cD48YSBocmVmPVwiL2NvbnRlbnQvZGhsL21hc3Rlcl9sYW5ndWFnZXMvZGUvYWRkcmVzcy1ib29rLWltcG9ydC9jcmVhdGUtZWRpdC1maWVsZC1ndWlkZWxpbmVzLmh0bWxcIiB0YXJnZXQ9XCJsaWdodGJveFwiIGV3Zi1saWdodGJveD1cImV3Zi1saWdodGJveFwiPkRhdGVpLVJpY2h0bGluaWVuPFwvYT48XC9wPlxuPFwvZGl2PjxcL2Rpdj4iLCJhZGRyZXNzLWJvb2stZmllbGRzX3NlbGVjdC1vcHRpb25fYmlsbC1kdXRpZXMtYW5kLXRheGVzLXRvIjoiU3RhbmRhcmQgWm9sbC9TdGV1ZXJuIChSZWNobnVuZyBhbikiLCJhZGRyZXNzLWJvb2stZmllbGRzX3NlbGVjdC1vcHRpb25fYWRkcmVzcy1saW5lLTEiOiJBZHJlc3NlIDEiLCJhZGRyZXNzLWJvb2stZmllbGRzX3NlbGVjdC1vcHRpb25fYWRkcmVzcy1saW5lLTMiOiJBZHJlc3NlIDMiLCJhZGRyZXNzLWJvb2stZmllbGRzX3NlbGVjdC1vcHRpb25fcGhvbmUtdHlwZSI6IlRlbGVmb25hcnQgKE0vSC9PKSIsImFkZHJlc3MtYm9vay1maWVsZHNfc2VsZWN0LW9wdGlvbl9hZGRyZXNzLWxpbmUtMiI6IkFkcmVzc2UgMiIsImFkZHJlc3MtYm9vay1pbXBvcnRfYnV0dG9uX2Rvd25sb2FkLWVycm9yLWxvZyI6IkRvd25sb2FkZGV0YWlscyIsImFkZHJlc3MtYm9vay1pbXBvcnRfbGFiZWxfZmlsZS1lbmNvZGluZy5pSGVscCI6IkRhbWl0IElocmUgRGF0ZWkgcmljaHRpZyBob2NoZ2VsYWRlbiB3ZXJkZW4ga2FubiBpbiAke2JyYW5kfSwgbcO8c3NlbiB3aXIgd2lzc2VuIHdpZSBpaHJlIERhdGVpIGtvZGllcnQgaXN0LiIsInF1aWNrLXRpcHNfaG93LXdvcmtzX2ludHJvX21hcCI6IlNpZSBwcm9maXRpZXJlbiB2b24gZWluZW0gc2NobmVsbGVuIHVuZCBlaW5mYWNoZW4gVXBsb2FkIGFsbCBJaHJlciBLb250YWt0ZSBpbiBJaHIgQWRyZXNzYnVjaCEgTWl0IGRlbSBtYW51ZWxsZW4gUHJvemVzcyBlaW5lciBlaWdlbmVuIFZvcmxhZ2Uga8O2bm5lbiBTaWUgZGllIEZlbGRlciBlaW5mYWNoIHp1IGRlbmVuIHZvbSBNeURITCsgQWRyZXNzYnVjaCBtYXBwZW4uIiwic2hpcG1lbnQtaW1wb3J0X3NlbGVjdF9tYW5hZ2UtZGVmYXVsdCI6Ik5ldWVzIG9kZXIgYmVzdGVoZW5kZXMgRGF0ZWktRm9ybWF0IHZlcndlbmRlbiIsImFkZHJlc3MtYm9vay1pbXBvcnRfcGFyYWdyYXBoX2Vycm9yLWxvZyI6IkZlaGxlcmRldGFpbHMgYW56ZWlnZW4sIGRhbm4gRGF0ZWkga29ycmlnaWVyZW4gdW5kIGVybmV1dCBob2NobGFkZW4uIiwiYWRkcmVzcy1ib29rLWZpZWxkc19zZWxlY3Qtb3B0aW9uX3ZhdFRheElkIjoiTWVocndlcnRzdGV1ZXIiLCJzaGlwbWVudC1pbXBvcnRfYWxlcnRfc3VjY2Vzc2Z1bGx5LXVwbG9hZGVkLXNoaXBtZW50cyI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPjxiPkVyZm9sZ3JlaWNoOiB7c3VjY2Vzc0NvdW50fTxcL2I+IHZvbiA8Yj57dG90YWxDb3VudH08XC9iPiBLb250YWt0ZSA8XC9kaXY+Iiwic2hpcG1lbnQtaW1wb3J0X3NlbGVjdC1vcHRpb25fZGVmYXVsdC1zY2hlbWVzIjoiIiwic2hpcG1lbnQtaW1wb3J0X2xhYmVsX2luc2VydC1jb2x1bW4tYmVsb3ciOiJGZWxkIGhpbnp1ZsO8Z2VuIiwiYWRkcmVzcy1ib29rLWltcG9ydF9wYXJhZ3JhcGhfaW1wb3J0LXRvLXNlbGVjdGVkLWNvbGxlY3Rpb24iOiJLb250YWt0ZSB3ZXJkZW4gaGluenVnZWbDvGd0IHp1OiB7Y29sbGVjdGlvbn0iLCJzaGlwbWVudC1pbXBvcnRfcGFyYWdyYXBoX3N1cmUtd2FudC1kZWxldGUtc2NoZW1lIjoiV29sbGVuIFNpZSBkaWVzZXMgU2NoZW1hIHdpcmtsaWNoIGzDtnNjaGVuPyIsImFkZHJlc3MtYm9vay1maWVsZHNfc2VsZWN0LW9wdGlvbl9tYXRjaC1jb2RlIjoiQmV6ZWljaG51bmfCoDIiLCJhZGRyZXNzLWJvb2stZmllbGRzX3NlbGVjdC1vcHRpb25fY2l0eSI6IlN0YWR0Iiwic2hpcG1lbnQtaW1wb3J0X3NlbGVjdC1vcHRpb25fc2VsZWN0LXVwbG9hZC1zY2hlbWUiOiJBdXN3w6RobGVuIiwic2hpcG1lbnQtaW1wb3J0X2FsZXJ0X25vdC1udW1lcmljLWNvbHVtbnMtY291bnQiOiJudXIgWmFobGVuIiwic2hpcG1lbnQtaW1wb3J0X2FsZXJ0X3NjaGVtZS1uYW1lLWlzLWludmFsaWQiOiJOYW1lIGJlcmVpdHMgdmVyZ2ViZW4iLCJhZGRyZXNzLWJvb2stZmllbGRzX3NlbGVjdC1vcHRpb25fYmlsbC1kdXRpZXMtdG8iOiJTdGFuZGFyZCBab2xsIChSZWNobnVuZyBhbikiLCJhZGRyZXNzLWJvb2stZmllbGRzX3NlbGVjdC1vcHRpb25fcGhvbmUtY29kZSI6IlRlbGVmb25udW1tZXIgTMOkbmRlcmNvZGUiLCJzaGlwbWVudC1pbXBvcnRfbGFiZWxfY29sdW1uLW51bWJlciI6Ik1laW5lIFNjaGVtZW4gLSBGZWxkIHtudW1iZXJ9IiwiYWRkcmVzcy1ib29rLWltcG9ydF9wYXJhZ3JhcGhfZ28tYmFjay1jb25maXJtYXRpb24iOiJTaW5kIFNpZSBzaWNoZXIsIGRhc3MgU2llIGRpZXNlIFNlaXRlIHZlcmxhc3NlbiBtw7ZjaHRlbj8iLCJzaGlwbWVudC1pbXBvcnRfbGFiZWxfYWRkLWNvbHVtbi1jdXN0b20tY291bnQiOiJGZWxkZXIgaGluenVmw7xnZW4iLCJhZGRyZXNzLWJvb2staW1wb3J0X3BhcmFncmFwaF9zZWxlY3QtdXBsb2FkLXNjaGVtZSI6ImhvY2hsYWRlbiBPcHRpb25lbiIsImFkZHJlc3MtYm9vay1pbXBvcnRfaW50cm9fQ01TIjoiWW91IGNhbiBhZGQgY29udGFjdHMgZnJvbSB5b3VyIG93biBmaWxlcyBpbnRvIHlvdXIgTXlESEwrIEFkZHJlc3MgQm9vayBcdTIwMTMganVzdCB1cGxvYWQgeW91ciBmaWxlIGFuZCBzZWxlY3Qgb3IgY3JlYXRlIGEgc2NoZW1lLiBUaGUgc2NoZW1lIHdpbGwgbWFwIHRoZSBmaWVsZHMgaW4geW91ciBmaWxlIHRvIG91ciBBZGRyZXNzIEJvb2sgZmllbGRzLiIsInNoaXBtZW50LWltcG9ydF9sYWJlbF9hZGQtY29sdW1uIjoiIiwiYWRkcmVzcy1ib29rLWZpZWxkc19zZWxlY3Qtb3B0aW9uX2VtYWlsLTEiOiJFLU1haWwgQWRyZXNzZSAxIiwiYWRkcmVzcy1ib29rLWZpZWxkc19zZWxlY3Qtb3B0aW9uX2VtYWlsLTIiOiJFLU1haWwgQWRyZXNzZSAyIiwiYWRkcmVzcy1ib29rLWZpZWxkc19zZWxlY3Qtb3B0aW9uX2VtYWlsLTMiOiJFLU1haWwgQWRyZXNzZSAzIiwic2hpcG1lbnQtaW1wb3J0X2xhYmVsX21hbmFnZS15b3VyLXNjaGVtZXMiOiJFcnN0ZWxsZW4vQmVhcmJlaXRlbiBkZXMgVXBsb2FkIEZvcm1hdHMiLCJhZGRyZXNzLWJvb2stZmllbGRzX3NlbGVjdC1vcHRpb25fZW1haWwtNCI6IkUtTWFpbCBBZHJlc3NlIDQiLCJhZGRyZXNzLWJvb2stZmllbGRzX3NlbGVjdC1vcHRpb25fZW1haWwtNSI6IkUtTWFpbCBBZHJlc3NlIDUiLCJhZGRyZXNzLWJvb2stZmllbGRzX3NlbGVjdC1vcHRpb25fcG9zdGFsLWNvZGUiOiJQb3N0bGVpdHphaGwiLCJhZGRyZXNzLWJvb2stZmllbGRzX3NlbGVjdC1vcHRpb25fYmlsbC1zaGlwbWVudC1jaGFyZ2VzLXRvIjoiU3RhbmRhcmQgVmVyc2VuZGVuIEtvc3RlbiAoUmVjaG51bmcgYW4pIiwiYWRkcmVzcy1ib29rLWZpZWxkc19zZWxlY3Qtb3B0aW9uX2NvbXBhbnktbmFtZSI6IkZpcm1hIiwic2hpcG1lbnQtaW1wb3J0X2xhYmVsX3NjaGVtZS10ZXh0LWRlbGltaXRlciI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPjxkaXYgY2xhc3M9Im1lc3NhZ2Utd3JhcHBlciI+VGV4dC1UcmVubnplaWNoZW4gPGRpdiBjbGFzcz1cImluZm9cIj48ZGl2PjxwPldlbm4gU2llIFRyZW5uemVpY2hlbiB6d2lzY2hlbiBXw7ZydGVybiBpbiBJaHJlbiBEYXRlaWVuIG51dHplbiwgbcO8c3NlbiBTaWUgZGFzIFRleHQtVHJlbm56ZWljaGVuIGluIElocmVyIENTViBvZGVyIFRYVC1EYXRlaSBkZWZpbmllcmVuLiBaLkIuOjxcL3A+XG48cD7CoDxcL3A+XG48cD5BRERSRVNTX1pFSUxFXzE8XC9wPlxuPHA+wqA8XC9wPlxuPHA+SW4gZGllc2VtIEZhbGwgaXN0IElociBUZXh0LVRyZW5uemVpY2hlbiBcIl9cIjxcL3A+XG48cD7CoDxcL3A+XG48cD5EYXMgVGV4dC1UcmVubnplaWNoZW4gbXVzcyBhbmRlcnMgYWxzIGRhcyBGZWxkLVRyZW5uemVpY2hlbiBzZWluLjxcL3A+XG48XC9kaXY+PFwvZGl2PjxcL2Rpdj48XC9kaXY+IiwiYWRkcmVzcy1ib29rLWltcG9ydF9oZWFkZXJfYWRkcmVzcy1ib29rLWltcG9ydCI6IktvbnRha3RlIGhvY2hsYWRlbiIsImFkZHJlc3MtYm9vay1maWVsZHNfc2VsZWN0LW9wdGlvbl9jb3VudHJ5LWNvZGUiOiJMw6RuZGVyY29kZSIsImFkZHJlc3MtYm9vay1maWVsZHNfc2VsZWN0LW9wdGlvbl9waG9uZSI6IlRlbGVmb25udW1tZXIiLCJzaGlwbWVudC1pbXBvcnRfYnV0dG9uX2RlbGV0ZS10aGlzLXNjaGVtZSI6IkzDtnNjaGVuIiwiYWRkcmVzcy1ib29rLWltcG9ydF9hbGVydF9tYXgtbnVtYmVyLW9mLWNvbnRhY3RzLXJlYWNoZWQiOiLDnGJlcnNjaHJlaXRldCBkaWUgbWF4aW1hbGUgQW56YWhsIGFuIFJlaWhlbi4gUmVpaGUobikge3Jvd051bWJlcn0gbmljaHQgaG9jaGdlbGFkZW4uIiwiYWRkcmVzcy1ib29rLWZpZWxkc19zZWxlY3Qtb3B0aW9uX2RlZmF1bHQtc2hpcHBlci1hY2NvdW50IjoiU3RhbmRhcmQgVmVyc2VuZGVyIEFjY291bnQiLCJxdWljay10aXBzX2hvdy13b3Jrc19pbnRybyI6IlNpZSBwcm9maXRpZXJlbiB2b24gZWluZW0gc2NobmVsbGVuIHVuZCBlaW5mYWNoZW4gVXBsb2FkIGFsbCBJaHJlciBLb250YWt0ZSBpbiBJaHIgQWRyZXNzYnVjaCEgVW5zZXJlIFVwbG9hZC1Wb3JsYWdlIG51dHp0IHZvcmRlZmluaWVydGUgRmVsZGVyLCB1bSBkaWUgS29udGFrdGUgaW4gSWhyZXIgRGF0ZWkgbWl0IGRlbSBNeURITCsgQWRyZXNzYnVjaGZlbGQgenUgc3luY2hyb25pc2llcmVuLiIsImFkZHJlc3MtYm9vay1pbXBvcnRfbGFiZWxfZW50ZXItc2NoZW1lLW5hbWUtZm9yLXNhdmUiOiJTY2hlbWEgYmVuZW5uZW4gdW5kIHNwZWljaGVybiIsImFkZHJlc3MtYm9vay1pbXBvcnRfcGFyYWdyYXBoX21hcC1jb2x1bW5zLWluLXlvdXItZmlsZSI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPjxkaXYgY2xhc3M9Im1lc3NhZ2Utd3JhcHBlciI+PHVsPlxuPGxpPk1hcHBlbiBTaWUgSWhyZSBEYXRlaWZlbGRlciBtaXQgZGVuIE15REhMKyBBZHJlc3NidWNoZmVsZGVybjxcL2xpPlxuPGxpPk1hcHBlbiBTaWUgYWxsZSBQZmxpY2h0ZmVsZGVyPFwvbGk+XG48bGk+RsO8Z2VuIFNpZSBiZWkgQmVkYXJmIG5ldWUgRmVkbGVyIGhpbnp1IG9kZXIgZm9yZGVybjxcL2xpPlxuPGxpPlNpZSBuZXVlIEZlbGRlciBmw7xyIElocmUgTWFwcGluZ3RhYmVsbGUgYW48XC9saT5cbjxcL3VsPlxuPFwvZGl2PjxcL2Rpdj4iLCJzaGlwbWVudC1pbXBvcnRfYWxlcnRfdW5zdWNjZXNzZnVsbHktdXBsb2FkZWQtc2hpcG1lbnRzLXdpdGgtZmFpbGVkIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+PGI+e2ZhaWxlZENvdW50fTxcL2I+IEtvbnRha3QoZSkgbmljaHQgZXJmb2xncmVpY2g8XC9kaXY+Iiwic2hpcG1lbnQtaW1wb3J0X2xhYmVsX3NjaGVtZS10ZXh0LWRlbGltaXRlci5pSGVscCI6IjxwPldlbm4gU2llIFRyZW5uemVpY2hlbiB6d2lzY2hlbiBXw7ZydGVybiBpbiBJaHJlbiBEYXRlaWVuIG51dHplbiwgbcO8c3NlbiBTaWUgZGFzIFRleHQtVHJlbm56ZWljaGVuIGluIElocmVyIENTViBvZGVyIFRYVC1EYXRlaSBkZWZpbmllcmVuLiBaLkIuOjxcL3A+XG48cD4mbmJzcDs8XC9wPlxuPHA+QUREUkVTU19aRUlMRV8xPFwvcD5cbjxwPiZuYnNwOzxcL3A+XG48cD5JbiBkaWVzZW0gRmFsbCBpc3QgSWhyIFRleHQtVHJlbm56ZWljaGVuICZxdW90O18mcXVvdDs8XC9wPlxuPHA+Jm5ic3A7PFwvcD5cbjxwPkRhcyBUZXh0LVRyZW5uemVpY2hlbiBtdXNzIGFuZGVycyBhbHMgZGFzIEZlbGQtVHJlbm56ZWljaGVuIHNlaW4uPFwvcD5cbiIsInNoaXBtZW50LWltcG9ydF9idXR0b25fbWFuYWdlIjoiRXJzdGVsbGVuIG9kZXIgYmVhcmJlaXRlbiBTaWUgRGF0ZWllbiB6dW0gQWRyZXNzaW1wb3J0IiwicXVpY2stdGlwc19ob3ctd29ya3NfYnVsbGV0cyI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPjxkaXYgY2xhc3M9Im1lc3NhZ2Utd3JhcHBlciI+PHVsPlxuPGxpPkRpZXMgZ2V3w6RocmxlaXN0ZXQsIGRhc3MgZGllIEluZm9ybWF0aW9uIHp1IGplZGVtIEtvbnRha3QgaW4gZGFzIHJpY2h0aWdlIEZlbGQgw7xiZXJ0cmFnZW4gd2lyZDxcL2xpPlxuPGxpPk5hY2ggZGVtIEhvY2hsYWRlbiBkZXIgRGF0ZWksIHN0ZWhlbiBJaHJlIEtvbnRha3RlIHVubWl0dGVsYmFyIHp1ciBWZXJmw7xndW5nPFwvbGk+XG48bGk+U2llIGvDtm5uZW4gZ2FueiBlaW5mYWNoIGVpbiBTZW5kdW5nc2xhYmVsIG1pdCBJaHJlbiBuZXVlbiBLb250YWt0ZW4gaW0gTXlESEwrIEFkcmVzc2J1Y2ggZXJzdGVsbGVuPFwvbGk+XG48bGk+SG9jaGdlbGFkZW5lIEtvbnRha3RlIGvDtm5uZW4gZGlyZWt0IGltIEFkcmVzc2J1Y2ggYWt0dWFsaXNpZXJ0IHdlcmRlbjxcL2xpPlxuPFwvdWw+XG48XC9kaXY+PFwvZGl2PiIsImFkZHJlc3MtYm9vay1maWVsZHNfc2VsZWN0LW9wdGlvbl90ZXJtcy1vZi10cmFkZSI6IkhhbmRlbHNiZWRpbmd1bmdlbiIsImFkZHJlc3MtYm9vay1pbXBvcnRfbGFiZWxfdHJ1bmNhdGUtaW1wb3J0ZWQtZmllbGRzIjoiSmEiLCJzaGlwbWVudC1pbXBvcnRfYWxlcnRfdW5zdWNjZXNzZnVsbHktdXBsb2FkZWQtc2hpcG1lbnRzLXdpdGgtaW5jb21wbGV0ZSI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPjxiPntpbmNvbXBsZXRlQ291bnR9PFwvYj4gS29udGFrdGUgbWl0IHVudm9sbHN0w6RuZGlnZW4gQW5nYWJlbiBob2NoZ2VsYWRlbjxcL2Rpdj4iLCJzaGlwbWVudC1pbXBvcnRfbGlua192aWV3LWd1aWRlbGluZXMiOiJEZXRhaWxzICIsImFkZHJlc3MtYm9vay1maWVsZHNfc2VsZWN0LW9wdGlvbl9jbnBqLXRheC10eXBlIjoiQ05QSi9DUEYgVGF4IFR5cGUiLCJhZGRyZXNzLWJvb2stZmllbGRzX3NlbGVjdC1vcHRpb25fY25wai10YXgtaWQiOiJDTkovQ1BGIFN0ZXVlcm51bW1lciIsInNoaXBtZW50LWltcG9ydF9sYWJlbF9yZW1vdmUtY29sdW1uIjoiRW50ZmVybmVuIiwiYWRkcmVzcy1ib29rLWZpZWxkc19zZWxlY3Qtb3B0aW9uX2NvbnRhY3QtbmFtZSI6Ik5hbWUiLCJhZGRyZXNzLWJvb2stZmllbGRzX3NlbGVjdC1vcHRpb25fZGl2aXNpb24tY29kZSI6IkJlemlyayBDb2RlIiwiYWRkcmVzcy1ib29rLWZpZWxkc19zZWxlY3Qtb3B0aW9uX25pY2tuYW1lIjoiQWxpYXMgKEJlc2NocmVpYnVuZykiLCJzaGlwbWVudC1pbXBvcnRfbGFiZWxfYWRkLWNvbHVtbi1kZWZhdWx0LWNvdW50IjoiRmVsZCBoaW56dWbDvGdlbiIsImFkZHJlc3MtYm9vay1pbXBvcnRfZXJyb3ItbG9nX3Jvdy1oZWFkZXIiOiJSZWloZSB7cm93TnVtYmVyfSIsImFkZHJlc3MtYm9vay1pbXBvcnRfbGFiZWxfaW1wb3J0LWZpbGUtd2l0aC1oZWFkZXIiOiJEYXRlaSBlbnRow6RsdCBTcGFsdGVuw7xiZXJzY2hyaWZ0ZW4iLCJzaGlwbWVudC1pbXBvcnRfYnV0dG9uX2J1aWxkIjoiRGF0ZWkgaG9jaGxhZGVuIHVuZCBkZW4gRmVsZGVybiB6dW9yZG5lbiIsInNoaXBtZW50LWltcG9ydF9hbGVydF91bnN1Y2Nlc3NmdWxseS11cGxvYWRlZC1zaGlwbWVudHMtd2l0aC1mYWlsZWQtYW5kLWluY29tcGxldGUiOiI8ZGl2IGNsYXNzPVwiZXdmX2RpY3Rpb25hcnlfdmFsdWVcIj48Yj57aW5jb21wbGV0ZUNvdW50fTxcL2I+IEtvbnRha3RlIG1pdCB1bnZvbGxzdMOkbmRpZ2VuIEFuZ2FiZW4gaG9jaGdlbGFkZW48XC9kaXY+Iiwic2hpcG1lbnQtaW1wb3J0X2FsZXJ0X3Vuc3VjY2Vzc2Z1bGx5LXVwbG9hZGVkLXNoaXBtZW50cy13aXRoLWZhaWxlZC1hbmQtbm90LWJlLXVwbG9hZGVkIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+PGI+e25vdEJlVXBsb2FkZWRDb3VudH08XC9iPiBuaWNodCBob2NoZ2VsYWRlbjxcL2Rpdj4iLCJhZGRyZXNzLWJvb2stZmllbGRzX3NlbGVjdC1vcHRpb25fcGhvbmUtZXh0IjoiRHVyY2h3YWhsIiwiYWRkcmVzcy1ib29rLWZpZWxkc19zZWxlY3Qtb3B0aW9uX2RpdmlzaW9uLW5hbWUiOiJCZXppcmsiLCJhZGRyZXNzLWJvb2staW1wb3J0X2J1dHRvbl9wcm9jZXNzLWNvbnRhY3RzIjoiS29udGFrdGUgZGVtIEFkcmVzc2J1Y2ggaGluenVmw7xnZW4iLCJhZGRyZXNzLWJvb2staW1wb3J0X3N1Yi1oZWFkZXJfZXJyb3ItaGFuZGxpbmciOiI8ZGl2IGNsYXNzPVwiZXdmX2RpY3Rpb25hcnlfdmFsdWVcIj48ZGl2IGNsYXNzPSJtZXNzYWdlLXdyYXBwZXIiPk3DtmNodGVuIFNpZSBEZXRhaWxzIGvDvHJ6ZW4sIHVtIGRpZSBGZWxkbMOkbmdlIGVpbmhhbHRlbiB6dSBrw7ZubmVuPyA8ZGl2IGNsYXNzPVwiaW5mb1wiPjxkaXY+PHA+U29mZXJuIGRpZSBGZWxkbMOkbmdlbiBJaHJlciBEYXRlbiBkaWUgbWF4aW1hbGUgTMOkbmdlIMO8YmVyc2NocmVpdGVuLCB3aXJkIGRlciBVcGxvYWQgZ2VzdG9wcHQuPFwvcD5cbjxwPsKgPFwvcD5cbjxwPlVtIGRpZXMgenUgdmVybWVpZGVuLCBrw7ZubmVuIHdpciBJaHJlIERhdGVuIGF1dG9tYXRpc2NoIHfDpGhyZW5kIGRlbSBVcGxvYWQtUHJvemVzcyBrw7xyemVuLjxcL3A+XG48cD5CZWlzcGllbDogSWhyIEZlbGQgYmVzdGVodCBhdXMgNTAgWmVpY2hlbiAoaW5rbC4gTGVlcnplaWNoZW4pLCB1bnNlcmUgRmVsZGzDpG5nZW4gZXJsYXViZW4gNDAuIEhpZXIgd2VyZGVuIGRpZSBlcnN0ZW4gNDAgWmVpY2hlbiBhYmdlYmlsZGV0LjxcL3A+XG48cD7CoDxcL3A+XG48cD5TaWUga8O2bm5lbiBJaHJlIEtvbnRha3RkYXRlbiBzcMOkdGVyIGltIEFkcmVzc2J1Y2ggw6RuZGVybi48XC9wPlxuPFwvZGl2PjxcL2Rpdj48XC9kaXY+PFwvZGl2PiIsInNoaXBtZW50LWltcG9ydF9maWVsZC1wbGFjZWhvbGRlcl9zZWxlY3QtZmllbGRzLXRvLW1hcCI6IkZlbGQgenVtIFZlcmtuw7xwZmVuIHfDpGhsZW4iLCJhZGRyZXNzLWJvb2staW1wb3J0X21zZ19zY2hlbWUtYWxyZWFkeS1kZWxldGVkIjoiTWFwcGluZyB3dXJkZSB2b24gZWluZW0gYW5kZXJlbiBOdXR6ZXIgZ2Vsw7ZzY2h0IiwiYWRkcmVzcy1ib29rLWltcG9ydF9sYWJlbF9maWxlLWVuY29kaW5nIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+WmVpY2hlbnNhdHogd8OkaGxlbiA8ZGl2IGNsYXNzPVwiaW5mb1wiPjxkaXY+RGFtaXQgSWhyZSBEYXRlaSByaWNodGlnIGhvY2hnZWxhZGVuIHdlcmRlbiBrYW5uIGluIE15REhMKywgbcO8c3NlbiB3aXIgd2lzc2VuIHdpZSBpaHJlIERhdGVpIGtvZGllcnQgaXN0LjxcL2Rpdj48XC9kaXY+PFwvZGl2PiIsImFkZHJlc3MtYm9vay1pbXBvcnRfc3ViLWhlYWRlcl9lcnJvci1oYW5kbGluZy5pSGVscCI6IjxwPlNvZmVybiBkaWUgRmVsZGzDpG5nZW4gSWhyZXIgRGF0ZW4gZGllIG1heGltYWxlIEzDpG5nZSDDvGJlcnNjaHJlaXRlbiwgd2lyZCBkZXIgVXBsb2FkIGdlc3RvcHB0LjxcL3A+XG48cD4mbmJzcDs8XC9wPlxuPHA+VW0gZGllcyB6dSB2ZXJtZWlkZW4sIGvDtm5uZW4gd2lyIElocmUgRGF0ZW4gYXV0b21hdGlzY2ggd8OkaHJlbmQgZGVtIFVwbG9hZC1Qcm96ZXNzIGvDvHJ6ZW4uPFwvcD5cbjxwPkJlaXNwaWVsOiBJaHIgRmVsZCBiZXN0ZWh0IGF1cyA1MCBaZWljaGVuIChpbmtsLiBMZWVyemVpY2hlbiksIHVuc2VyZSBGZWxkbMOkbmdlbiBlcmxhdWJlbiA0MC4gSGllciB3ZXJkZW4gZGllIGVyc3RlbiA0MCBaZWljaGVuIGFiZ2ViaWxkZXQuPFwvcD5cbjxwPiZuYnNwOzxcL3A+XG48cD5TaWUga8O2bm5lbiBJaHJlIEtvbnRha3RkYXRlbiBzcMOkdGVyIGltIEFkcmVzc2J1Y2ggw6RuZGVybi48XC9wPlxuIiwiYWRkcmVzcy1ib29rLWZpZWxkc19zZWxlY3Qtb3B0aW9uX2FkZGl0aW9uYWwtbm90ZXMiOiJOb3RpemVuIiwicXVpY2stdGlwc19ob3ctd29ya3NfYnVsbGV0c19tYXAiOiI8ZGl2IGNsYXNzPVwiZXdmX2RpY3Rpb25hcnlfdmFsdWVcIj48ZGl2IGNsYXNzPSJtZXNzYWdlLXdyYXBwZXIiPjx1bD5cbjxsaT5EaWVzZSBPcHRpb24gZXJtw7ZnbGljaHQgZXMgSWhuZW4sIElocmUgRGF0ZW4gYmVpbSBBZHJlc3NidWNoaW1wb3J0IG1pdCBiZWxpZWJpZ2VyIFJlaWhlbmZvbGdlIGRlciBBZHJlc3NidWNoZmVsZGVyIHp1IG51dHplbjxcL2xpPlxuPGxpPldlbm4gZGllIEluZm9ybWF0aW9uZW4gaW4gSWhyZW4gRGF0ZWllbiB1bnNlcmVuIFJpY2h0bGluaWVuIGVudHNwcmVjaGVuLCB3ZXJkZW4gZGllIEtvbnRha3RlIGVyZm9sZ3JlaWNoIGhvY2hnZWxhZGVuPFwvbGk+XG48bGk+TmFjaCBkZW0gSG9jaGxhZGVuIHVuZCBadW9yZG5lbiBkZXIgRmVsZGVyIHN0ZWhlbiBJaG5lbiBJaHJlIEtvbnRha3RlIHVubWl0dGVsYmFyIHp1bSBWZXJzZW5kZW4gYmVyZWl0ITxcL2xpPlxuPGxpPlZvbiBkYSBhbiBrw7ZubmVuIFNpZSBiZWltIEFkcmVzc2ltcG9ydCBJaHJlIGdlc3BlaWNoZXJ0ZSBWb3JsYWdlIHZlcndlbmRlbi48XC9saT5cbjxcL3VsPlxuPFwvZGl2PjxcL2Rpdj4iLCJhZGRyZXNzLWJvb2stZmllbGRzX3NlbGVjdC1vcHRpb25fY291bnRyeS1uYW1lIjoiTGFuZCIsImFkZHJlc3MtYm9vay1maWVsZHNfc2VsZWN0LW9wdGlvbl9mYXgiOiJGYXgiLCJzaGlwbWVudC1pbXBvcnRfYnV0dG9uX3VwbG9hZC1maWxlIjoiVXBsb2FkIiwic2hpcG1lbnQtaW1wb3J0X2luZm8tdGV4dF9idWlsZCI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPjxkaXYgY2xhc3M9Im1lc3NhZ2Utd3JhcHBlciI+PHA+T3JkbmVuIFNpZSBkaWUgRmVsZGVyIGluIElocmVyIERhdGVpIGRlbSBNeURITCsgQWRyZXNzYnVjaCB6dS4gPGEgaHJlZj1cIi9jb250ZW50L2RobC9hdC9kZS9hZGRyZXNzLWJvb2staW1wb3J0L3VwbG9hZC1tYXAtcXVpY2stdGlwcy5odG1sXCIgdGFyZ2V0PVwibGlnaHRib3hcIiBld2YtbGlnaHRib3g9XCJld2YtbGlnaHRib3hcIj5UaXBwczxcL2E+PFwvcD5cbjxwPsKgPFwvcD5cbjxwPjxhIGhyZWY9XCIvY29udGVudC9kaGwvYXQvZGUvYWRkcmVzcy1ib29rLWltcG9ydC91cGxvYWQtbWFwLWZpbGUtZ3VpZGVsaW5lcy5odG1sXCIgdGFyZ2V0PVwibGlnaHRib3hcIiBld2YtbGlnaHRib3g9XCJld2YtbGlnaHRib3hcIj5GZWxkdm9yZ2FiZW4genVtIE1hcHBpbmc8XC9hPjxcL3A+XG48XC9kaXY+PFwvZGl2PiIsImFkZHJlc3MtYm9vay1pbXBvcnRfZXJyb3ItbG9nX2hlYWRlciI6IkZlaGxlcmRldGFpbHMiLCJhZGRyZXNzLWJvb2stZmllbGRzX3NlbGVjdC1vcHRpb25fYmlsbC10YXhlcy10byI6IlN0YW5kYXJkIFN0ZXVlciAoUmVjaG51bmcgYW4pIiwiYWRkcmVzcy1ib29rLWZpZWxkc19zZWxlY3Qtb3B0aW9uX2VvcmktbnVtYmVyIjoiRU9SSSBOdW1tZXIiLCJzaGlwbWVudC1pbXBvcnRfbGFiZWxfc2NoZW1lLWZpZWxkLWRlbGltaXRlciI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPjxkaXYgY2xhc3M9Im1lc3NhZ2Utd3JhcHBlciI+RmVsZC1UcmVubnplaWNoZW4gPGRpdiBjbGFzcz1cImluZm9cIj48ZGl2PjxwPkRlZmluaWVyZW4gU2llIGRhcyBUcmVubnplaWNoZW4sIGRhcyBkaWUgRmVsZGVyIGluIElocmVyIENTVi4gT2RlciBUWFQgRGF0ZWkgdm9uZWluYW5kZXIgdHJlbm50LCB6LkIuOjxcL3A+XG48cD7CoDxcL3A+XG48cD58PD4vLDxcL3A+XG48cD7CoDxcL3A+XG48cD5GYWxscyBTaWUgenVzw6R0emxpY2ggVGV4dHRyZW5uemVpY2hlbiB2ZXJ3ZW5kZW4sIG11c3MgSWhyIEZlbGR0cmVubnplaWNoZW4gYW5kZXJzIGFscyBkYXMgVGV4dHJlbm56ZWljaGVuIHNlaW4uPFwvcD5cbjxcL2Rpdj48XC9kaXY+PFwvZGl2PjxcL2Rpdj4iLCJhZGRyZXNzLWJvb2staW1wb3J0X2FsZXJ0X25vdC11bmlxdWUtbmFtZSI6Ik5hbWUgYmVyZWl0cyB2ZXJnZWJlbiIsImFkZHJlc3MtYm9vay1pbXBvcnRfbGFiZWxfc2NoZW1lLW5hbWUiOiJOYW1lIiwiYWRkcmVzcy1ib29rLWltcG9ydF9pbnRybyI6IkbDvGdlbiBTaWUgS29udGFrdGUgenUgSWhyZW0gTXlESEwrIEFkcmVzc2J1Y2ggbWl0IGRlciBTdGFuZGFyZCBVcGxvYWQtRnVua3Rpb24gaGluenUuIiwic2hpcG1lbnQtaW1wb3J0X2luZm8tdGV4dF9leGlzdGluZyI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPjxkaXYgY2xhc3M9Im1lc3NhZ2Utd3JhcHBlciI+PHA+TGFkZW4gU2llIElocmUgZWlnZW5lIERhdGVpIGhvY2ggaW5kZW0gU2llIGVpbmVuIHZvcmRlZmluaWVydGVuIFByb3plc3MgbnV0emVuLiA8YSBocmVmPVwiL2NvbnRlbnQvZGhsL2F0L2RlL2FkZHJlc3MtYm9vay1pbXBvcnQvdXBsb2FkLXF1aWNrLXRpcHMuaHRtbFwiIHRhcmdldD1cImxpZ2h0Ym94XCIgZXdmLWxpZ2h0Ym94PVwiZXdmLWxpZ2h0Ym94XCI+VGlwcHM8XC9hPjxcL3A+XG48cD7CoDxcL3A+XG48cD48YSBocmVmPVwiL2NvbnRlbnQvZGhsL2F0L2RlL2FkZHJlc3MtYm9vay1pbXBvcnQvdXBsb2FkLWZpbGUtZ3VpZGVsaW5lcy5odG1sXCIgdGFyZ2V0PVwibGlnaHRib3hcIiBld2YtbGlnaHRib3g9XCJld2YtbGlnaHRib3hcIj5EYXRlaS1SaWNodGxpbmllbjxcL2E+PFwvcD5cbjxcL2Rpdj48XC9kaXY+IiwiaW1wb3J0aW5nLXNjaGVtZXNfc2VsZWN0LW9wdGlvbl9ld2Ytc2luZ2xlbGluZS1jb250YWN0LXNjaGVtYSI6Ik15REhMKyBob2NobGFkZW4iLCJhZGRyZXNzLWJvb2staW1wb3J0X3N1Yi1oZWFkZXJfaG93LWlzLWZpbGUtb3JnYW5pemVkIjoiIiwic2hpcG1lbnQtaW1wb3J0X3BhcmFncmFwaF9zZWxlY3RfYW5fYWN0aW9uIjoiIiwiYWRkcmVzcy1ib29rLWZpZWxkc19zZWxlY3Qtb3B0aW9uX3N1YnVyYi1uYW1lIjoiVm9yb3J0Iiwic2hpcG1lbnQtaW1wb3J0X2xhYmVsX3NjaGVtZS1maWVsZC1kZWxpbWl0ZXIuaUhlbHAiOiI8cD5EZWZpbmllcmVuIFNpZSBkYXMgVHJlbm56ZWljaGVuLCBkYXMgZGllIEZlbGRlciBpbiBJaHJlciBDU1YuIE9kZXIgVFhUIERhdGVpIHZvbmVpbmFuZGVyIHRyZW5udCwgei5CLjo8XC9wPlxuPHA+Jm5ic3A7PFwvcD5cbjxwPnwmbHQ7Jmd0Oy8sPFwvcD5cbjxwPiZuYnNwOzxcL3A+XG48cD5GYWxscyBTaWUgenVzw6R0emxpY2ggVGV4dHRyZW5uemVpY2hlbiB2ZXJ3ZW5kZW4sIG11c3MgSWhyIEZlbGR0cmVubnplaWNoZW4gYW5kZXJzIGFscyBkYXMgVGV4dHJlbm56ZWljaGVuIHNlaW4uPFwvcD5cbiJ9LCJjcjAxMTEiOnsiY3ItZXJyb3JzLXJlcXVpcmVkIjoiVGhpcyBmaWVsZCBpcyByZXF1aXJlZCIsImNyLW5hbWUiOiJNYXhpbXVtIFdlaWdodCBvZiBTaGlwbWVudHM6IFZhbHVlIiwiY3ItZXJyb3JzLXJhbmdlIjoiVmFsdWUgaXMgb3V0IG9mIHRoZSByYW5nZSJ9LCJVTklUUyI6eyJGSUxFX1NJWkVTIjoiQnl0ZXMsS0IsTUIsR0IsVFAsUEIsRUIsWkIsWUIifSwic2V0dGluZ3MtZGVmYXVsdCI6eyJ1c2VyLXByb2R1Y3RzX2JhY2tlbmQtZXJyb3JfcHJvZHVjdC13YXMtbW9kaWZpZWQtYnktYW5vdGhlci11c2VyIjoiS2FubiBuaWNodCBiZWFyYmVpdGV0IHdlcmRlbiIsInVzZXItcHJvZHVjdHNfYmFja2VuZC1lcnJvcl9wcm9kdWN0LXdhcy1kZWxldGVkLW9yLXlvdS1sb3N0LWFjY2VzcyI6Ild1cmRlIGJlcmVpdHMgZ2Vsw7ZzY2h0In0sImNyMDExMiI6eyJjci1uYW1lIjoiTWF4aW11bSBXZWlnaHQgb2YgU2hpcG1lbnRzOiBVb00ifSwiY3IwMTEzIjp7ImNyLWVycm9ycy1yZXF1aXJlZCI6IlRoaXMgZmllbGQgaXMgcmVxdWlyZWQiLCJjci1uYW1lIjoiTWF4aW11bSBXZWlnaHQgb2YgU2hpcG1lbnRzOiBQZXJpb2QiLCJjci1lcnJvcnMtcmFuZ2UiOiJWYWx1ZSBpcyBvdXQgb2YgdGhlIHJhbmdlIn0sImNyMDExNCI6eyJjci1uYW1lIjoiTWF4aW11bSBXZWlnaHQgb2YgU2hpcG1lbnRzOiBVbml0IG9mIFBlcmlvZCJ9LCJMT0dJTl9GT1JHT1RfUkVTRVRfUEFTU1dPUkQiOnsiUkVTRVRfUEFTU1dPUkRfQUxFUlRfUkVTRVRfUEFTU1dPUkRfRVhQSVJFRCI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPklocmUgUGFzc3dvcnQtUsO8Y2tzZXR6dW5nIGlzdCBhYmdlbGF1ZmVuLiBCaXR0ZSBnZW5lcmllcmVuIFNpZSBlaW5lIG5ldWUgRS1NYWlsLiA8YSBocmVmPVwiL2NvbnRlbnQvZGhsL2F0L2RlL2F1dGgvZm9yZ290LXBhc3N3b3JkLmh0bWxcIiB0YXJnZXQ9XCJfc2VsZlwiPlBhc3N3b3J0IGpldHp0IMOkbmRlcm48XC9hPjxcL2Rpdj4iLCJMT0dJTl9BTEVSVF9TRVNTSU9OX1RJTUVEX09VVCI6IlNpdHp1bmcgYWJnZWxhdWZlbiIsIkVYVEVSTkFMX0FDQ0VTU19BVVRIT1JJWkVEX0FDQ09VTlRfTElOS19FWFBJUkVEX09SX1VTRUQiOiJEaWVzZXIgTGluayBpc3QgYWJnZWxhdWZlbi4gQml0dGUga29udGFrdGllcmVuIFNpZSBkZW4gQWNjb3VudGluaGFiZXIgZsO8ciBlaW5lIG5ldWUgQmV2b2xsbcOkY2h0aWd1bmcuIiwiTE9HSU5fTVNHX1dST05HX1VTRVJfT1JfUEFTU1dPUkRfU1NPIjoiTG9naW4gZmVobGdlc2NobGFnZW4uIEJpdHRlIHdlbmRlbiBTaWUgc2ljaCBhbiBJaHJlbiBVbnRlcm5laG1lbnMtQWRtaW5pc3RyYXRvci4iLCJMT0dJTl9NU0dfQUNUSVZBVElPTl9FTUFJTF9SRVNFTlQiOiIiLCJMT0dJTl9BTEVSVF9TRVJWRVJfVEVNUE9SQVJZX1VOQVZBSUxBQkxFIjoiU29ycnkgXHUyMDEzIHVuc2VyIFN5c3RlbSBpc3QgZGVyemVpdCBuaWNodCB2ZXJmw7xnYmFyLiBCaXR0ZSB2ZXJzdWNoZW4gU2llIGVzIHNww6R0ZXIgbm9jaCBlaW5tYWwgb2RlciBrb250YWt0aWVyZW4gU2llIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNSAoMjAgY3QgamUgQW5ydWYgYXVzIGRlbiBkZXV0c2NoZW4gRmVzdG5ldHplbiwgbWF4LiA2MCBjdCBhdXMgZGVuIGRldXRzY2hlbiBNb2JpbGZ1bmtuZXR6ZW4pLiIsIkxPR0lOX0hFQURFUl9MT0dJTiI6IkxvZ2luIiwiUkVTRVRfUEFTU1dPUkRfTVNHX1JFU0VUX1BBU1NXT1JEX1NVQ0NFU1MiOiJMb2dpbiB1bmQgbWl0IE15REhMKyBzdGFydGVuISIsIkVYVEVSTkFMX0FDQ0VTU19MSU5LX0VYUElSRURfT1JfVVNFRCI6IkRpZXNlciBMaW5rIGlzdCBhYmdlbGF1ZmVuLiIsIkxPR0lOX01TR19BRE1JTl9MT0NLX1NTTyI6IkxvZ2luIGZlaGxnZXNjaGxhZ2VuLiBCaXR0ZSB3ZW5kZW4gU2llIHNpY2ggYW4gSWhyZW4gVW50ZXJuZWhtZW5zLUFkbWluaXN0cmF0b3IuIiwiUkVTRVRfUEFTU1dPUkRfTVNHX0NSRUFURV9QQVNTV09SRF9TVUNDRVNTIjoiUGFzc3dvcnQgZXJzdGVsbHQiLCJSRVNFVF9QQVNTV09SRF9BTEVSVF9DUkVBVEVfUEFTU1dPUkRfQUxSRUFEWV9VU0VEIjoiRGFzIFBhc3N3b3J0IG11c3MgYW5kZXJzIGFscyBJaHJlIHZvcmhlcmlnIGdlbnV0enRlbiBQYXNzd8O2cnRlciBzZWluLiIsIkxPR0lOX01TR19BQ0NPVU5UX0RFTEVURURfU1NPIjoiTG9naW4gZmVobGdlc2NobGFnZW4uIEJpdHRlIHdlbmRlbiBTaWUgc2ljaCBhbiBJaHJlbiBVbnRlcm5laG1lbnMtQWRtaW5pc3RyYXRvci4iLCJMT0dJTl9NU0dfTE9HR0VEX09VVCI6IkF1c2dlbG9nZ3QuIiwiTE9HSU5fSEVBREVSX0FTU0lHTkVEX1NISVBNRU5UIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+PGRpdiBjbGFzcz0ibWVzc2FnZS13cmFwcGVyIj48cD5JaG5lbiB3dXJkZSBlaW5lIFNlbmR1bmcgenVnZXdpZXNlbi48XC9wPlxuPHA+SmV0enQgZWlubG9nZ2VuIHVuZCBkZW4gVmVyc2FuZGF1ZnRyYWcgYWJzY2hsaWXDn2VuLjxcL3A+XG48XC9kaXY+PFwvZGl2PiIsIkxPR0lOX01TR19QRU5ESU5HX0FDVElWQVRJT05fU1NPIjoiTG9naW4gZmVobGdlc2NobGFnZW4uIEJpdHRlIHdlbmRlbiBTaWUgc2ljaCBhbiBJaHJlbiBVbnRlcm5laG1lbnMtQWRtaW5pc3RyYXRvci4iLCJSRVNFVF9QQVNTV09SRF9NU0dfQ0hBTkdFX1BBU1NXT1JEX1NVQ0NFU1MiOiJQYXNzd29ydCBnZcOkbmRlcnQiLCJMT0dJTl9IRUFERVJfQVVUSE9SSVpFRF9BQ0NPVU5UIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+PGRpdiBjbGFzcz0ibWVzc2FnZS13cmFwcGVyIj48cD5TaWUgd3VyZGVuIGJldm9sbG3DpGNodGlndCBlaW5lIERITCBTZW5kdW5nIHp1IGVyc3RlbGxlbi48XC9wPlxuPHA+QW5tZWxkZW4gdW5kIGVpbmUgw5xiZXJzaWNodCBJaHJlciBCZXZvbGxtw6RjaHRpZ3VuZ2VuIGVyaGFsdGVuLjxcL3A+XG48XC9kaXY+PFwvZGl2PiIsIlJFU0VUX1BBU1NXT1JEX0hFQURFUl9SRVNFVF9QQVNTV09SRF9TVUNDRVNTIjoiSWhyIFBhc3N3b3J0IHd1cmRlIHp1csO8Y2tnZXNldHp0LiIsIlJFU0VUX1BBU1NXT1JEX0FMRVJUX1JFU0VUX1BBU1NXT1JEX0FMUkVBRFlfVVNFRCI6IkRhcyBQYXNzd29ydCBtdXNzIGFuZGVycyBhbHMgSWhyZSB2b3JoZXJpZyBnZW51dHp0ZW4gUGFzc3fDtnJ0ZXIgc2Vpbi4iLCJFWFRFUk5BTF9BQ0NFU1NfQVNTSUdORURfU0hJUE1FTlRfTElOS19FWFBJUkVEX09SX1VTRUQiOiJEaWVzZXIgTGluayBpc3QgYWJnZWxhdWZlbi4iLCJMT0dJTl9NU0dfU0VMRl9MT0NLX1NTTyI6IkxvZ2luIGZlaGxnZXNjaGxhZ2VuLiBCaXR0ZSB3ZW5kZW4gU2llIHNpY2ggYW4gSWhyZW4gVW50ZXJuZWhtZW5zLUFkbWluaXN0cmF0b3IuIiwiUkVTRVRfUEFTU1dPUkRfRVJST1JfUEFTU1dPUkRfSURFTlRJQ0FMX1RPX0VYUElSRUQiOiJQYXNzd29ydCBtdXNzIGFuZGVycyBhbHMgdm9yaGVyaWdlIFBhc3N3w7ZydGVyIHNlaW4iLCJSRVNFVF9QQVNTV09SRF9IRUFERVJfQ0hBTkdFX1BBU1NXT1JEX1NVQ0NFU1MiOiIiLCJSRVNFVF9QQVNTV09SRF9IRUFERVJfQ1JFQVRFX1BBU1NXT1JEX1NVQ0NFU1MiOiIiLCJMT0dJTl9BTEVSVF9BQ1RJVkFUSU9OX0VNQUlMX0VYUElSRUQiOiIiLCJMT0dJTl9IRUFERVJfQVBQUk9WRV9TSElQTUVOVCI6IkVpbmxvZ2dlbiB1bSBTZW5kdW5nc2F1ZnRyYWcgenUgYmVzdMOkdGlnZW4iLCJSRVNFVF9QQVNTV09SRF9CVVRUT05fQ1JFQVRFX1BBU1NXT1JEIjoiTmV1ZXMgUGFzc3dvcnQiLCJSRVNFVF9QQVNTV09SRF9CVVRUT05fQ0hBTkdFX1BBU1NXT1JEIjoiUGFzc3dvcnQgZXJzdGVsbGVuIn0sImNyMDAwOSI6eyJjci1uYW1lIjoiTWluaW11bSBXZWlnaHQgUGVyIFNoaXBtZW50OiBFbmFibGVkIn0sIk1BTkFHRV9BQ0NPVU5UUyI6eyJBVVRIX0FDQ09VTlRfVVNBR0VfQ09MX05BTUVfUkVTVFJJQ1RJT05TIjoiQmVzY2hyw6Rua3VuZ2VuIiwiTUFOQUdFX0FVVEhfU0VMRUNUX09QVElPTl9FTVBUWSI6IkF1c3fDpGhsZW4gIiwiTUFOQUdFX0FVVEhfU0VMRUNUX0RJRkZFUkVOVF9ERVNUSU5BVElPTiI6IkJpdHRlIHfDpGhsZW4gU2llIGVpbiBhbmRlcmVzIFppZWwgYXVzLiIsIkFVVEhfQUNDT1VOVF9VU0FHRV9DT0xfTkFNRV9BQ0NPVU5UX09XTkVSIjoiSW5oYWJlciBLdW5kZW5udW1tZXIiLCJNQU5BR0VfQVVUSF9TRUxFQ1RfT1BUSU9OX0FOWV9BRERSRVNTIjoiQW55IEFkZHJlc3MiLCJBVVRIX0FDQ09VTlRfVVNBR0VfQ09MX05BTUVfQVVUSE9SSVpBVElPTl9OQU1FIjoiQXV0b3Jpc2llcnVuZ3NuYW1lIiwiU09SVF9PUkRFUl9PUFRJT05fTlVNQkVSX0RFU0MiOiJOdW1tZXIgKE5pZWRyaWcgenUgSG9jaCkiLCJNQU5BR0VfQVVUSF9BTEVSVF9OT1RfUkVHSVNURVJFRF9VU0VSIjoiRGllc2UgUGVyc29uIGlzdCBkZXJ6ZWl0IG5pY2h0IGbDvHIgTXlESEwrIHJlZ2lzdHJpZXJ0LiBTaWUgbXVzcyBzaWNoIHJlZ2lzdHJpZXJlbiwgdW0gSWhyZW4gQWNjb3VudCBudXR6ZW4genUga8O2bm5lbi4iLCJNWV9ESExfQUNDT1VOVFNfTVNHX0FDQ09VTlRfRVNFQ1VSRV9SRUpFQ1RFRCI6IlNpZSBzaW5kIG5pY2h0IGJlcmVjaHRpZ3QsIGRpZXNlbiBBY2NvdW50IHp1IG51dHplbi4gS29udGFrdGllcmVuIHNpZSBkZW4gSW5oYWJlciB1bSBlaW5lIEF1dGhvcmlzaWVydW5nIHp1IGVyaGFsdGVuLiIsIkFVVEhfQUNDT1VOVF9VU0FHRV9CVVRUT05fUkVWT0tFIjoiV2lkZXJydWZlbiIsIk1ZX0RITF9BQ0NPVU5UU19NU0dfQUNDT1VOVF9JU19FU0VDVVJFX1VOQVVUSE9SSVpFRF9FUlJPUiI6IlNpZSBzaW5kIG5pY2h0IGJlcmVjaHRpZ3QsIGRpZXNlbiBBY2NvdW50IHp1IG51dHplbi4gS29udGFrdGllcmVuIHNpZSBkZW4gSW5oYWJlciB1bSBlaW5lIEF1dGhvcmlzaWVydW5nIHp1IGVyaGFsdGVuLiIsIkFVVEhfQUNDT1VOVF9VU0FHRV9QQVJBR1JBUEhfU0VBUkNIX05PX1JFU1VMVFMiOiJLZWluZSBFcmdlYm5pc3NlIGdlZnVuZGVuLiIsIkxCX0FERF9BQ0NPVU5UX0xJTktfUkVRVUVTVF9ESExfQUNDT1VOVCI6IkFjY291bnRudW1tZXIgYW5mb3JkZXJuIiwiTEJfREVMRVRFX0FVVEhfSEVBREVSX0RFTEVURV9DT05GSVJNQVRJT04iOiJBdXRvcmlzaWVydW5nIGbDvHIgQWNjb3VudG51dHp1bmcgbMO2c2NoZW4iLCJMQl9SRVZPS0VfQVVUSF9QQVJBR1JBUEhfUkVWT0tFX0NPTkZJUk1BVElPTiI6IkRpZXNlIFBlcnNvbiB3aXJkIG5pY2h0IG1laHIgYmVyZWNodGlndCBzZWluLCBTZW5kdW5nZW4gw7xiZXIgSWhyZSBBY2NvdW50bnVtbWVyIGF1Znp1Z2ViZW4uIFNpbmQgc2llIHNpY2hlciwgZGFzcyBTaWUgZGllIEJlcmVjaHRpZ3VuZyBhdWZoZWJlbiBtw7ZjaHRlbj8iLCJNQU5BR0VfQVVUSF9TRUxFQ1RfT1BUSU9OX1NQRUNJRklDX0FERFJFU1MiOiJBIFNwZWNpZmljIEFkZHJlc3MgT25seSIsIk1ZX0RITF9BQ0NPVU5UU19NU0dfQUNDT1VOVF9JU19VTkFVVEhPUklaRURfRVJST1IiOiJVbmfDvGx0aWdlciBBY2NvdW50IiwiU09SVF9PUkRFUl9MQUJFTF9OSUNLTkFNRV9ERVNDIjoiQWxpYXMgKEJlc2NocmVpYnVuZykgKFogYmlzIEEpIiwiQVVUSF9BQ0NPVU5UX1VTQUdFX1ZBTFVFX0xBQkVMX0hJREVfUkFURVNfRkFMU0UiOiJOZWluIiwiU09SVF9PUkRFUl9MQUJFTF9OVU1CRVJfQVNDIjoiTnVtbWVyIChOaWVkcmlnIHp1IEhvY2gpIiwiTVlfREhMX0FDQ09VTlRTX01TR19BQ0NPVU5UX0VTRUNVUkVfVU5LTk9XTiI6IlVuZ8O8bHRpZ2VyIEFjY291bnQiLCJBVVRIX0FDQ09VTlRfVVNBR0VfVkFMVUVfTEFCRUxfUkVTVFJJQ1RJT05TX1RSVUUiOiJKYSIsIkFVVEhfQUNDT1VOVF9VU0FHRV9TRUxFQ1RfT1BUSU9OX1VTRVJfTkFNRSI6Ik5hbWUiLCJTT1JUX09SREVSX09QVElPTl9OSUNLTkFNRV9ERVNDIjoiQWxpYXMgKEJlc2NocmVpYnVuZykgKFogYmlzIEEpIiwiU09SVF9PUkRFUl9PUFRJT05fTlVNQkVSX0FTQyI6Ik51bW1lciAoSG9jaCB6dSBOaWVkcmlnKSIsIlNPUlRfT1JERVJfTEFCRUxfTklDS05BTUVfQVNDIjoiQWxpYXMgKEJlc2NocmVpYnVuZykgKEEgYmlzIFopIiwiTUFOQUdFX0FVVEhfVkFMVUVfTEFCRUxfRkFMU1kiOiJhdXMiLCJBVVRIX0FDQ09VTlRfVVNBR0VfQ09MX05BTUVfSElERV9SQVRFUyI6IlByZWlzZSB2ZXJiZXJnZW4iLCJMQl9SRVZPS0VfQVVUSF9IRUFERVJfUkVWT0tFX0NPTkZJUk1BVElPTiI6IkF1dG9yaXNpZXJ1bmcgZsO8ciBtZWluZW4gQWNjb3VudCB3aWRlcnJ1ZmVuIiwiQVVUSF9BQ0NPVU5UX1VTQUdFX1ZBTFVFX0xBQkVMX1JFU1RSSUNUSU9OU19GQUxTRSI6Ik5laW4iLCJBVVRIX0FDQ09VTlRfVVNBR0VfRklFTERfUExBQ0VIT0xERVJfU0VBUkNIIjoiU3VjaGUiLCJBVVRIX0FDQ09VTlRfVVNBR0VfU0VMRUNUX09QVElPTl9BQ0NPVU5UX05VTUJFUiI6Ikt1bmRlbm51bW1lciIsIkFVVEhfQUNDT1VOVF9VU0FHRV9TRUxFQ1RfT1BUSU9OX0FDQ09VTlRfTklDS05BTUUiOiJBbGlhcyAoQmVzY2hyZWlidW5nKSIsIk1BTkFHRV9BVVRIX1ZBTFVFX0xBQkVMX1VOU0VUIjoiZnJlaSIsIk1ZX0RITF9BQ0NPVU5UU19NU0dfQUNDT1VOVF9FU0VDVVJFX1BFTkRJTkciOiJTaWUgc2luZCBuaWNodCBiZXJlY2h0aWd0LCBkaWVzZW4gQWNjb3VudCB6dSBudXR6ZW4uIEtvbnRha3RpZXJlbiBzaWUgZGVuIEluaGFiZXIgdW0gZWluZSBBdXRob3Jpc2llcnVuZyB6dSBlcmhhbHRlbi4iLCJNWV9ESExfQUNDT1VOVFNfTVNHX0FDQ09VTlRfQ1JFRElUX0lTX1NUT1BQRUQiOiJBY2NvdW50IGdlc3BlcnJ0IiwiTEJfQUREX0FDQ09VTlRfUEFSQUdSQVBIX0FERF9BQ0NPVU5UIjoiIiwiTVlfREhMX0FDQ09VTlRTX0NPTF9OQU1FX0FDQ09VTlRfTlVNQkVSIjoiS3VuZGVubnVtbWVyIiwiTUFOQUdFX0FVVEhfU0VMRUNUX09QVElPTl9SRUNFSVZFUl9XSUxMX1BBWSI6IkVtcGbDpG5nZXIgemFobHQgKHN0YW5kYXJkKSIsIk1ZX0RITF9BQ0NPVU5UU19NU0dfQ09ORklSTV9ERUxFVElPTiI6IlNpbmQgU2llIHNpY2hlciwgZGFzcyBTaWUgZGVuIFZvcmdhbmcgbMO2c2NoZW4gbcO2Y2h0ZW4/IiwiQVVUSF9BQ0NPVU5UX1VTQUdFX1NFTEVDVF9PUFRJT05fTkFNRV9PRl9BVVRIT1JJWkFUSU9OIjoiQXV0b3Jpc2llcnVuZ3NuYW1lIiwiQVVUSF9BQ0NPVU5UX1VTQUdFX1ZBTFVFX0xBQkVMX0hJREVfUkFURVNfVFJVRSI6IkphIiwiTVlfREhMX0FDQ09VTlRTX0NPTF9OQU1FX05JQ0tOQU1FIjoiQWxpYXMgKEJlc2NocmVpYnVuZykiLCJBVVRIX0FDQ09VTlRfVVNBR0VfVkFMVUVfTEFCRUxfQkxBTktFVF9BVVRIT1JJWkFUSU9OIjoiQWRyZXNzZTogQmxhbmtldCIsIk1ZX0RITF9BQ0NPVU5UU19NU0dfQUNDT1VOVF9FU0VDVVJFX05PVF9FWElTVCI6IlNpZSBzaW5kIG5pY2h0IGJlcmVjaHRpZ3QsIGRpZXNlbiBBY2NvdW50IHp1IG51dHplbi4gS29udGFrdGllcmVuIHNpZSBkZW4gSW5oYWJlciB1bSBlaW5lIEF1dGhvcmlzaWVydW5nIHp1IGVyaGFsdGVuLiIsIk1ZX0RITF9BQ0NPVU5UU19NU0dfQUNDT1VOVF9OT1RfVkFMSUQiOiJVbmfDvGx0aWdlciBBY2NvdW50IiwiTEJfREVMRVRFX0FVVEhfUEFSQUdSQVBIX0RFTEVURV9DT05GSVJNQVRJT04iOiJTaWUgc2luZCBuaWNodCBtZWhyIGJlcmVjaHRpZ3QsIMO8YmVyIGRpZXNlbiBBY2NvdW50IFNlbmR1bmdlbiBhdWZ6dWdlYmVuLiBTaW5kIFNpZSBzaWNoZXIsIGRhc3MgU2llIGRpZXNlIEJlcmVjaHRpZ3VuZyBhdWZoZWJlbiBtw7ZjaHRlbj8iLCJNWV9ESExfQUNDT1VOVFNfQ09MX05BTUVfQUNDT1VOVF9UWVBFIjoiQWNjb3VudCBUeXAiLCJBVVRIX0FDQ09VTlRfVVNBR0VfU0VMRUNUX09QVElPTl9VU0VSX0VNQUlMIjoiRS1NYWlsIEFkcmVzc2UiLCJTT1JUX09SREVSX09QVElPTl9OSUNLTkFNRV9BU0MiOiJBbGlhcyAoQmVzY2hyZWlidW5nKSAoQSBiaXMgWikiLCJNQU5BR0VfQVVUSF9ET01FU1RJQ19TRVJWSUNFX05PVF9BVkFJTEFCTEUiOiJOYXRpb25hbGUgU2VydmljZXMgTmljaHQgVmVyZsO8Z2JhciIsIk1BTkFHRV9BVVRIX1NFTEVDVF9PUFRJT05fQUxURVJOQVRFX0FDQ09VTlQiOiJBbHRlcm5hdGUgREhMIEFjY291bnQiLCJTT1JUX09SREVSX0xBQkVMX05VTUJFUl9ERVNDIjoiTnVtbWVyIChIb2NoIHp1IE5pZWRyaWcpIiwiQVVUSF9BQ0NPVU5UX1VTQUdFX0NPTF9OQU1FX0FVVEhPUklaQVRJT04iOiJBdXRvcmlzaWVydW5nIiwiTVlfREhMX0FDQ09VTlRTX1ZBTFVFX0xBQkVMX1RZUEVfTk9ORSI6IktlaW5lIiwiTVlfREhMX0FDQ09VTlRTX01TR19BQ0NPVU5UX0lTX0lOQ09SUkVDVF9FUlJPUiI6IlVuZ8O8bHRpZ2VyIEFjY291bnQiLCJBVVRIX0FDQ09VTlRfVVNBR0VfVkFMVUVfTEFCRUxfU1RBTkRJTkdfQVVUSE9SSVpBVElPTiI6IkFkcmVzc2U6IEF1c3N0ZWhlbmQiLCJNWV9ESExfQUNDT1VOVFNfVkFMVUVfTEFCRUxfVFlQRV9BTFRFUk5BVEUiOiJQYXllci9GcmFjaHR6YWhsZXIiLCJBVVRIX0FDQ09VTlRfVVNBR0VfQ09MX05BTUVfQUNDT1VOVF9OQU1FIjoiS3VuZGVubnVtbWVyIiwiTVlfREhMX0FDQ09VTlRTX0NPTF9OQU1FX0FDQ09VTlRfU1RBVFVTIjoiQWNjb3VudCBTdGF0dXMiLCJNQU5BR0VfQVVUSF9WQUxVRV9MQUJFTF9UUlVUSFkiOiJhbiIsIk1BTkFHRV9BVVRIX0VSUk9SX1NBTUVfQ09NUEFOWV9VU0VSIjoiU2llIGvDtm5uZW4gZGllIEF1dG9yaXTDpHQgbmljaHQgYW4gamVtYW5kZW4gaW0gVW50ZXJuZWhtZW4gw7xiZXJnZWJlbiIsIk1ZX0RITF9BQ0NPVU5UU19WQUxVRV9MQUJFTF9UWVBFX1JFQ0VJVkVSX1BBWSI6IkVtcGbDpG5nZXIgemFobHQifSwiY3IwMDA1Ijp7ImNyLW5hbWUiOiJNYXhpbXVtIFdlaWdodCBQZXIgc2hpcG1lbnQ6IEVuYWJsZWQifSwiY3IwMDA2Ijp7ImNyLWVycm9ycy1yZXF1aXJlZCI6IlRoaXMgZmllbGQgaXMgcmVxdWlyZWQiLCJjci1uYW1lIjoiTWF4aW11bSBXZWlnaHQgUGVyIHNoaXBtZW50OiBMaW1pdCB2YWx1ZSIsImNyLWVycm9ycy1yYW5nZSI6IlZhbHVlIGlzIG91dCBvZiB0aGUgcmFuZ2UifSwiY3IwMDA3Ijp7ImNyLWVycm9ycy1yZXF1aXJlZCI6IlZhbHVlIHJlcXVpcmVkIGZvciB0aGlzIGZpZWxkIiwiY3ItbmFtZSI6Ik1heGltdW0gV2VpZ2h0IFBlciBzaGlwbWVudDogVW9NIn0sInJhdGUtYW5kLXF1b3RlIjp7IndjYy1xdW90ZV9iYWNrZW5kLWVycm9yX2Ryb3Atb2ZmLXByb2R1Y3Qtbm90LWZvdW5kIjoiRsO8ciBJaHJlIEF1c3dhaGwgc2luZCBrZWluZSBMaWVmZXJvcHRpb25lbiBtw7ZnbGljaC4iLCJ3Y2MtcXVvdGVfYmFja2VuZC1lcnJvcl9pbnZhbGlkLWRyb3Atb2ZmLXByb2R1Y3QiOiJGw7xyIElocmUgQXVzd2FobCBzaW5kIGtlaW5lIExpZWZlcm9wdGlvbmVuIG3DtmdsaWNoLiIsInNlbGYtc2VydmljZS1ib29raW5nLWNvbmZpcm1hdGlvbi1lbWFpbC1zdWJqZWN0IjoiREhMIEV4cHJlc3MgQW5nZWJvdCJ9LCJjcjAwMDgiOnsiY3ItbmFtZSI6Ik1heGltdW0gV2VpZ2h0IFBlciBzaGlwbWVudDogQXBwcm92YWwgcmVxdWlyZWQifSwiZXJyb3JzIjp7ImVycm9yX2ludmFsaWRfcG9zdGFsX2FkZHJlc3MiOiJVbmfDvGx0aWcgUG9zdGxlaXR6YWhsIiwiY29tbW9uX2JhY2tlbmQtZXJyb3Jfd3JvbmctY291bnRyeS1jb2RlIjoiVW5nw7xsdGlnZXIgQ291bnRyeSBDb2RlIiwiY29tbW9uX2JhY2tlbmQtZXJyb3JfdXBsb2FkZWQtZmlsZS1pcy1udWxsIjoiVXBsb2FkIG5pY2h0IGVyZm9sZ3QiLCJjb21tb25faGVhZGVyX2FjY2Vzcy1mb3JiaWRkZW4tbW9kYWwtdGl0bGUiOiIiLCJjb21tb25fbXNnX3VuZXhwZWN0ZWQtY2FzLWV4Y2VwdGlvbiI6IlNvcnJ5IFx1MjAxMyB1bnNlciBTeXN0ZW0gaXN0IGRlcnplaXQgbmljaHQgdmVyZsO8Z2Jhci4gQml0dGUgdmVyc3VjaGVuIFNpZSBlcyBzcMOkdGVyIG5vY2ggZWlubWFsIG9kZXIga29udGFrdGllcmVuIFNpZSB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUgKDIwIGN0IGplIEFucnVmIGF1cyBkZW4gZGV1dHNjaGVuIEZlc3RuZXR6ZW4sIG1heC4gNjAgY3QgYXVzIGRlbiBkZXV0c2NoZW4gTW9iaWxmdW5rbmV0emVuKS4iLCJjb21tb25fYmFja2VuZC1lcnJvcl9zbXRwLXNlcnZlci1lcnJvciI6IkVpbiBGZWhsZXIgaXN0IGF1ZmdldHJldGVuIiwiY29tbW9uX2JhY2tlbmQtZXJyb3JfaW1wb3J0LXNoaXBtZW50LWFjY291bnQtc2hvdWxkLWJlLWltcG9ydCI6IkltcG9ydCBBY2NvdW50IG51bW1lciBiZW7DtnRpZ3QiLCJjb21tb25fYmFja2VuZC1lcnJvcl9icmF6aWwtc2hpcG1lbnQtbXVzdC1iZS1udWxsIjoiQnJhemlsIHNoaXBtZW50IHZhbGlkYXRpb24gLSBCcmF6aWwgc2hpcG1lbnQgbXVzdCBiZSBudWxsIiwiY29tbW9uX2JhY2tlbmQtZXJyb3Jfc2hpcG1lbnRfcGlja3VwX2NvbnRhY3Rfbm90X2VsaWdpYmxlIjoiQWRyZXNzZSBrYW5uIG5pY2h0IGbDvHIgS3VyaWVyYWJob2x1bmcgZ2VudXR6dCB3ZXJkZW4iLCJhbGVydC1hY3Rpb25fYmFja2VuZC1lcnJvcl91cy1pdG4tb3ItZnRyLWZpZWxkLXNob3VsZC1iZS1wcmVzZW50IjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+SVROIE9ERVIgRlRSIE51bW1lciBFcmZvcmRlcmxpY2g8YnI+XG48XC9kaXY+IiwiY29tbW9uX2JhY2tlbmQtZXJyb3JfdmFsdWUtaXMtdW5rbm93biI6IkVpbiBGZWhsZXIgaXN0IGF1ZmdldHJldGVuIiwiY29tbW9uX21zZ19pbnZhbGlkLXN1YnVyYiI6IlVuZ8O8bHRpZ2VyIFZvcm9ydCIsImNvbW1vbl9iYWNrZW5kLWVycm9yX3NoaXBtZW50LWFjY291bnQtbm90LXZhbGlkIjoiVW5nw7xsdGlnZXIgQWNjb3VudCIsImNvbW1vbl9iYWNrZW5kLWVycm9yX21hbmlmZXN0LWNhbGwtZmFpbGVkLWNvZGUiOiJFbnRzY2h1bGRpZ2VuIFNpZSBiaXR0ZSAtIGVzIGlzdCBkZXJ6ZWl0IGxlaWRlciBuaWNodCBtw7ZnbGljaCBkZW4gS3VyaWVyLVJlcG9ydCB6dSBkcnVja2VuLiIsImNvbW1vbl9tc2dfaW52YWxpZC1waG9uZS1jb3VudHJ5LWNvZGUiOiJVbmfDvGx0aWdlciBDb3VudHJ5IENvZGUiLCJjb21tb25fbXNnX3ZhbGlkYXRpb24tZW1haWwtYWxyZWFkeS1leGlzdHMiOiJFLU1haWwgQWRyZXNzZSBiZXJlaXRzIGluIFZlcndlbmR1bmcgLSBCaXR0ZSB2ZXJ3ZW5kZW4gU2llIGVpbmUgYW5kZXJlIEUtTWFpbC1BZHJlc3NlIiwiY29tbW9uX21zZ19jaS1taXNjb25maWd1cmVkLWZvci1hY2NvdW50LW51bWJlciI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPjxkaXYgY2xhc3M9Im1lc3NhZ2Utd3JhcHBlciI+PHA+RsO8ciBkaWVzZXMgTGFuZDoge2NvdW50cnlDb2RlfTxcL3A+XG48cD5EaWVzZXMgS29udG8gdmVyd2VuZGVuOiB7YWNjb3VudE51bWJlcn08XC9wPlxuPHA+RGllcyBpc3QgbmljaHQgdmVyZsO8Z2Jhcjoge2NpS2V5fSA8XC9wPlxuPFwvZGl2PjxcL2Rpdj4iLCJjb21tb25fZXJyb3JfZGF0ZS1yYW5nZS13cm9uZy1yYW5nZSI6IlVuZ8O8bHRpZ2VzIEZvcm1hdCIsImNvbW1vbl9iYWNrZW5kLWVycm9yX2RlY2xhcmVkLXZhbHVlLW5vdC1lcXVhbC10by10b3RhbC1nb29kcy12YWx1ZSI6IkRlciBkZWtsYXJpZXJ0ZSBXZXJ0IHVuZCBkZXIgR2VzYW10d2FyZW53ZXJ0IG3DvHNzZW4gaWRlbnRpc2NoIHNlaW4iLCJjb3Jwb3JhdGUtc2V0dGluZ3NfZGVmYXVsdC1zaGlwcGVyLWFjY291bnQtbm90LWFsbG93ZWQiOiIiLCJjb21tb25fYmFja2VuZC1lcnJvcl9iaWxsaW5nLWNvbXBhbnktc2hvdWxkLWJlLXByZXNlbnQiOiJCaWxsaW5nIGNvbXBhbnkgc2hvdWxkIGJlIHByZXNlbnQiLCJhbGVydC1hY3Rpb25fYmFja2VuZC1lcnJvcl90by1jdXN0b21lci1lbWFpbC1pcy1tYW5kYXRvcnktZm9yLXJwYSI6IlNoaXAgVE8gZW1haWwgYWRkcmVzcyByZXF1aXJlZCBmb3IgUlBBIHNoaXBtZW50IiwiY29tbW9uX2Vycm9yX25mZS1kdXBsaWNhdGUtZmlzY2FsLW51bWJlciI6IkZpbGUgYWxyZWFkeSBhZGRlZCwgdXBsb2FkIGEgZGlmZmVyZW50IGZpbGUuIiwiY29tbW9uX2JhY2tlbmQtZXJyb3JfdW5zdXBwb3J0ZWQtYnJhemlsLWNmb3AiOiJVbmfDvGx0aWcgQ0ZPUCIsImNvbW1vbl9iYWNrZW5kLWVycm9yX3NoaXBtZW50LXNlYXJjaC1pcy10b28tZ2VuZXJpYyI6Ilp1IHZpZWxlIEVyZ2Vibmlzc2UgZ2VmdW5kZW4uIEJpdHRlIHZlcmZlaW5lcm4gU2llIElocmUgU3VjaGUuIiwiY29tbW9uX2Vycm9yX2ludmFsaWQtdmFsdWUiOiJVbmfDvGx0aWdlciBFaW50cmFnIiwiY29tbW9uX2Vycm9yX3ZhbGlkYXRpb24tZXJyb3IiOiJFaW4gRmVobGVyIGlzdCBhdWZnZXRyZXRlbiIsImNvbW1vbl9iYWNrZW5kLWVycm9yX2JpbGxpbmctdmF0LW51bWJlci1pbnZhbGlkIjoiVW5nw7xsdGlnIiwiYWxlcnQtYWN0aW9uX2JhY2tlbmQtZXJyb3JfcGFja2FnaW5nLXZhbGlkYXRpb24tbGVuZ3RoLWlzLW1vcmUtdGhhbi1hbGxvd2VkIjoiTWHDn2UgZ3LDtsOfZXIgYWxzIGVybGF1YnQiLCJjb21tb25fYmFja2VuZC1lcnJvcl9icmF6aWwtc2hpcG1lbnQtY3RlLW9wdGlvbi1yZXF1aXJlZCI6IkNURSBvcHRpb24gcmVxdWlyZWQiLCJjb21tb25fYmFja2VuZC1lcnJvcl9hZHQtc2VydmljZS11bmF2YWlsYWJsZSI6IlNlcnZpY2UgZGV6ZWl0IG5pY2h0IHZlcmbDvGdiYXIiLCJjb21tb25fZXJyb3JfbWFpbC1wbHVnaW4tZXJyb3IiOiJBdWZncnVuZCBlaW5lcyB0ZWNobmlzY2hlcyBQcm9ibGVtcyBrYW5uIGRpZXNlIEUtTWFpbCBuaWNodCB2ZXJzZW5kZXQgd2VyZGVuLiBCaXR0ZSBrb3JyaWdpZXJlbiBTaWUgZGllIEUtTWFpbGFkcmVzc2Ugb2RlciB2ZXJzdWNoZW4gU2llIGVzIHNww6R0ZXIgZXJuZXV0LiIsImNvbW1vbl9iYWNrZW5kLWVycm9yX3NoaXBtZW50LWdzdC10b3RhbC1pZ3N0LXBhaWQtZXhjZWVkcy1kZWNsYXJlZC12YWx1ZSI6IlRvdGFsIElHU1QgY2Fubm90IGV4Y2VlZCB0aGUgZGVjbGFyZWQgdmFsdWUiLCJjb21tb25fZXJyb3JfbmZlLWR1cGxpY2F0ZS1rZXkiOiJLZXkgYWxyZWFkeSBhZGRlZCwgdXBsb2FkIGEgZGlmZmVyZW50IGtleS4iLCJhbGVydC1hY3Rpb25fbXNnX2ludmFsaWRfc2hpcG1lbnRfdHlwZV9kb2N1bWVudCI6IkRva3VtZW50ZW5zZW5kdW5nIGlzdCBuaWNodCBlcmxhdWJ0IiwiY29tbW9uX21zZ19jaS1ub3QtZm91bmQtZm9yLWFjY291bnQtbnVtYmVyIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+PGRpdiBjbGFzcz0ibWVzc2FnZS13cmFwcGVyIj48cD5Gw7xyIGRpZXNlcyBMYW5kOiB7Y291bnRyeUNvZGV9PFwvcD5cbjxwPkRpZXNlcyBLb250byB2ZXJ3ZW5kZW46IHthY2NvdW50TnVtYmVyfTxcL3A+XG48cD5EaWVzIGlzdCBuaWNodCB2ZXJmw7xnYmFyOiB7Y2lLZXl9IDxcL3A+XG48XC9kaXY+PFwvZGl2PiIsImNvbW1vbl9iYWNrZW5kLWVycm9yX3dyb25nLXVybCI6IkVpbiBGZWhsZXIgaXN0IGF1ZmdldHJldGVuIEJpdHRlIGtvbnRha3RpZXJlbiBTaWUgZGVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUiLCJhY2NvdW50X2VzZWN1cmVfcGVuZGluZyI6IlNpZSBzaW5kIG5pY2h0IGJlcmVjaHRpZ3QsIGRpZXNlbiBBY2NvdW50IHp1IG51dHplbi4gS29udGFrdGllcmVuIHNpZSBkZW4gSW5oYWJlciB1bSBlaW5lIEF1dGhvcmlzaWVydW5nIHp1IGVyaGFsdGVuLiIsImNvbW1vbl9tc2dfc2VydmljZS11bmF2YWlsYWJsZSI6IlNvcnJ5IFx1MjAxMyB1bnNlciBTeXN0ZW0gaXN0IGRlcnplaXQgbmljaHQgdmVyZsO8Z2Jhci4gQml0dGUgdmVyc3VjaGVuIFNpZSBlcyBzcMOkdGVyIG5vY2ggZWlubWFsIG9kZXIga29udGFrdGllcmVuIFNpZSB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUgKDIwIGN0IGplIEFucnVmIGF1cyBkZW4gZGV1dHNjaGVuIEZlc3RuZXR6ZW4sIG1heC4gNjAgY3QgYXVzIGRlbiBkZXV0c2NoZW4gTW9iaWxmdW5rbmV0emVuKS4iLCJhbGVydC1hY3Rpb25fYmFja2VuZC1lcnJvcl9tYXhpbWFsX3NoaXBtZW50X251bWJlcl9leGNlZWRlZCI6IkVzIGlzdCBuaWNodCBtw7ZnbGljaCBkaWVzZSBTZW5kdW5nIGFienVzY2hsaWXDn2VuLiBHZXNhbXQgbnVtbWVyIHZvbiBzZW5kdW5nZW4sIGRpZSBTaWUgaW4gZGllc2VyIFBlcmlvZGUgZXJzdGVsbHQgaGFiZW4gdm9uIHtzdGFydERhdGV9IGFuIHtlbmREYXRlfSDDvGJlcnNjaHJlaXRldCBkYXMgenVsw6Rzc2lnZSBNYXhpbXVtOiB7cmVzdHJpY3RlZFZhbHVlfS4iLCJhbGVydC1hY3Rpb25fYmFja2VuZC1lcnJvcl9wYWNrYWdpbmctdmFsaWRhdGlvbi1oZWlnaHQtd2lkdGgtbGVuZ3RoLXNob3VsZC1iZS1maWxsZWQtb3ItbGVmdC1lbXB0eS1hbHRvZ2V0aGVyIjoiU3RlbGxlbiBTaWUgZGllIFNlbmR1bmdzbWHDn2UgenVyIFZlcmbDvGd1bmcuIEZhbGxzIElobmVuIGRpZSBTZW5kdW5nc21hw59lIG5pY2h0IHZvcmxpZWdlbiwgbGFzc2VuIFNpZSBkaWUgRmVsZGVyIGxlZXIgKEzDpG5nZSwgQnJlaXRlLCBIw7ZoZSkuIiwiY29tbW9uX21zZ19taW4tdmFsdWUtZXJyb3ItbWVzc2FnZSI6Ik1pbmltdW06IHt2YWx1ZX0iLCJhbGVydC1hY3Rpb25fYmFja2VuZC1lcnJvcl9jdXN0b21zX2ludm9pY2UtdG90YWwtZ3Jvc3Mtd2VpZ2h0LW5vdC1lcXVhbC1hY3R1YWwtdmFsdWUiOiIiLCJhbGVydC1hY3Rpb25fYmFja2VuZC1lcnJvcl9wbHQtc2hpcG1lbnQtY3JlYXRpb24tYXR0ZW1wdCwtd2hlbi1wbHQtY3ItZGlzYWJsZWQiOiJFcyBpc3QgbmljaHQgbcO2Z2xpY2ggZGllc2UgU2VuZHVuZyBhYnp1c2NobGllw59lbi4gRGlnaXRhbGUgUmVjaG51bmdzZWluc3RlbGx1bmdlbiB3dXJkZW4gd8OkaHJlbmQgSWhyZXIgU2VuZHVuZ3NlcnN0ZWxsdW5nIGdlw6RuZGVydC4gQml0dGUgZXJzdGVsbGxlbiBTaWUgZGllc2UgU2VuZHVuZyBlcm5ldXQgb2huZSBkaWdpdGFsZSBSZWNobnVuZy4iLCJhbGVydC1hY3Rpb25fYmFja2VuZC1lcnJvcl9zaGlwcGVyLWllLXRheC1pZC1pcy1tYW5kYXRvcnkiOiJWZXJzZW5kZXIgSUUgVGF4IElEIEVyZm9yZGVybGljaCIsImNvbW1vbl9iYWNrZW5kLWVycm9yX2ZpbGUtd3JpdGluZy1lcnJvciI6IkRvd25sb2FkIGZlaGxlcmhhZnQiLCJjb21tb25fbXNnX3VuYWJsZS10by1wcm9jZXNzLXJlcXVlc3QiOiJTb3JyeSBcdTIwMTMgdW5zZXIgU3lzdGVtIGlzdCBkZXJ6ZWl0IG5pY2h0IHZlcmbDvGdiYXIuIEJpdHRlIHZlcnN1Y2hlbiBTaWUgZXMgc3DDpHRlciBub2NoIGVpbm1hbCBvZGVyIGtvbnRha3RpZXJlbiBTaWUgdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1ICgyMCBjdCBqZSBBbnJ1ZiBhdXMgZGVuIGRldXRzY2hlbiBGZXN0bmV0emVuLCBtYXguIDYwIGN0IGF1cyBkZW4gZGV1dHNjaGVuIE1vYmlsZnVua25ldHplbikuIiwiY29tbW9uX2JhY2tlbmQtZXJyb3JfYWNjb3VudC1jcmVkaXQtaXMtc3RvcHBlZCI6IkFjY291bnQgZ2VzcGVycnQiLCJhbGVydC1hY3Rpb25fbXNnX21heC10b3RhbC1zaGlwbWVudC13ZWlnaHQiOiJHZXdpY2h0IGjDtmhlciBhbHMgbWF4aW1hbCB6dWdlbGFzc2VuIiwibG9naW5fYmFja2VuZC1lcnJvcl9jb21wYW55LWlkLW5vdC1mb3VuZCI6IkxvZ2luIGZlaGxnZXNjaGxhZ2VuLiBCaXR0ZSB3ZW5kZW4gU2llIHNpY2ggYW4gSWhyZW4gVW50ZXJuZWhtZW5zLUFkbWluaXN0cmF0b3IuIiwiY29tbW9uX2JhY2tlbmQtZXJyb3JfbmZlLWZpbGUtbm90LWFwcHJvdmVkIjoiRXJyb3JzIG9jY3VycmVkIHdpdGggdXBsb2FkaW5nIE5GZSBmaWxlLiBQbGVhc2UgY2hlY2sgeW91ciBmaWxlIHRvIGVuc3VyZSBpdCBtZWV0cyBtYW5kYXRvcnkgQnJhemlsIHJlZ3VsYXRpb25zIGFuZCB0cnkgdXBsb2FkaW5nIGFnYWluLiIsImFsZXJ0LWFjdGlvbl9iYWNrZW5kLWVycm9yX3BpY2t1cC1ib29raW5nLWlzLW5vdC1lbmFibGVkLWluLWFkdCI6IkRpZXNlIEZ1bmt0aW9uIGlzdCBiaXNoZXIgbmljaHQgZsO8ciBkaWVzZXMgTGFuZCBmcmVpZ2VzY2hhbHRldC4gQml0dGUga29udGFrdGllcmVuIFNpZSBJaHJlbiB6dXN0w6RuZGlnZW4gREhMIFZlcnRyaWVic21hbmFnZXIgZsO8ciBVbnRlcnN0w7x0enVuZy4iLCJjb21tb25fYmFja2VuZC1lcnJvcl9uby1zaGlwcGVyLWFjY291bnRzLXByb3ZpZGVkIjoiQWNjb3VudG51bW1lciBkZXMgVmVyc2VuZGVycyBlcmZvcmRlcmxpY2giLCJjb21tb25fbXNnX2ludmFsaWQtY29tYmluYXRpb24tcG9zdGFsLXppcC1wcm92aW5jZS1jaXR5IjoiUG9zdGxlaXR6YWhsLCBCdW5kZXNsYW5kIHVuZCBTdGFkdCBzdGltbXQgbmljaHQgw7xiZXJlaW4iLCJjb21tb25fbXNnX2NpLW5vdC1mb3VuZCI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPjxkaXYgY2xhc3M9Im1lc3NhZ2Utd3JhcHBlciI+PHA+RsO8ciBkaWVzZXMgTGFuZDoge2NvdW50cnlDb2RlfTxcL3A+XG48cD5EaWVzIGlzdCBuaWNodCB2ZXJmw7xnYmFyOiB7Y2lLZXl9IDxcL3A+XG48XC9kaXY+PFwvZGl2PiIsImNvbW1vbl9lcnJvcl9uZmUtd3JvbmctbGVuZ3RoIjoiTXVzdCBiZSA0NCBudW1iZXJzIiwiY29tbW9uX2JhY2tlbmQtZXJyb3JfYWNjb3VudC1kb2VzLW5vdC1leGlzdCI6IlVuZ8O8bHRpZ2VyIEFjY291bnQiLCJhbGVydC1hY3Rpb25fYmFja2VuZC1lcnJvcl9xdWFudGl0eS1vZi1kcnktaWNlLXdlaWdodC12YWx1ZXMtZXhjZWVkcy1xdWFudGl0eS1vZi1wYWNrYWdlcyI6IlRyb2NrZW5laXMgZ2V3aWNodCDDvGJlcnN0ZWlnZW4gYW56YWhsIHZvbiB3YXJlbnNlbmR1bmdlbiIsImNvbW1vbl9iYWNrZW5kLWVycm9yX3Vuc3VwcG9ydGVkLWJyYXppbC10YXgtY29kZS10eXBlIjoiSW52YWxpZCB0YXggY29kZSIsImNvbW1vbl9tc2dfYmFkLWdhdGV3YXkiOiJFbnRzY2h1bGRpZ2VuIFNpZSBcdTIwMTMgVW5zZXIgU3lzdGVtIGlzdCBkZXJ6ZWl0IG5pY2h0IHZlcmbDvGdiYXIuIEJpdHRlIHZlcnN1Y2hlbiBTaWUgZXMgc3DDpHRlciBlcm5ldXQgb2RlciBrb250YWt0aWVyZW4gU2llIGRlbiB0ZWNobmlzY2hlbiBTdXBwb3J0IHVudGVyICs0MyAyMjM2IDIwNyAxMTEyIG9yIDExMTQiLCJjb21tb25fYmFja2VuZC1lcnJvcl9zaGlwbWVudF9ub3RfZm91bmQiOiJTZW5kdW5nIG5pY2h0IGdlZnVuZGVuIiwiY29tbW9uX21zZ190b2tlbi1lbXB0eSI6IlBmbGljaHRmZWxkZXIgbcO8c3NlbiBhdXNnZWbDvGxsdCB3ZXJkZW4iLCJjb21tb25fYmFja2VuZC1lcnJvcl9jaS1rZXktbm90LWV4aXN0LWVycm9yIjoiRWluIEZlaGxlciBpc3QgYXVmZ2V0cmV0ZW4iLCJjb21tb25fbXNnX21heC12YWx1ZS1lcnJvci1tZXNzYWdlIjoiw5xiZXJzY2hyZWl0ZXQgZGFzIHp1bMOkc3NpZ2UgTWF4aW11bSIsInNoaXBtZW50LXBpY2t1cF9lcnJvcl9lc2Itc2VydmljZS11bmF2YWlsYWJsZSI6IlNvcnJ5IFx1MjAxMyB1bnNlciBTeXN0ZW0gaXN0IGRlcnplaXQgbmljaHQgdmVyZsO8Z2Jhci4gQml0dGUgdmVyc3VjaGVuIFNpZSBlcyBzcMOkdGVyIG5vY2ggZWlubWFsIG9kZXIga29udGFrdGllcmVuIFNpZSB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUgKDIwIGN0IGplIEFucnVmIGF1cyBkZW4gZGV1dHNjaGVuIEZlc3RuZXR6ZW4sIG1heC4gNjAgY3QgYXVzIGRlbiBkZXV0c2NoZW4gTW9iaWxmdW5rbmV0emVuKS4iLCJhbGVydC1hY3Rpb25fbXNnX21pbi1oZWlnaHQtcGVyLXNoaXBtZW50IjoiSMO2aGUgd2VuaWdlciBhbHMgbWltaW11bSBlcmxhdWJ0IiwiY29tbW9uX2JhY2tlbmQtZXJyb3JfZG93bmxvYWQtY3N2LWVycm9yIjoiRG93bmxvYWQgZmVobGVyaGFmdCIsImFsZXJ0LWFjdGlvbl9iYWNrZW5kLWVycm9yX3VzLWl0YXItc2VjdGlvbi1pcy1tYW5kYXRvcnkiOiJJVEFSIERldGFpbHMgRXJmb3JkZXJsaWNoIiwiY29tbW9uX2JhY2tlbmQtZXJyb3JfemVyby1kZWNsYXJlZC12YWx1ZSI6IkJpdHRlIGdlYmVuIFNpZSBkZW4gZGVrbGFyaWVydGVuIFdhcmVud2VydCBhbiIsImNvbW1vbl9iYWNrZW5kLWVycm9yX3VwbG9hZGVkLWZpbGUtaGFzLXdyb25nLWRpbWVuc2lvbnMiOiJtYXhpbWFsZSBEYXRlaWdyw7bDn2Uge2ZpbGVTaXplfSIsIm15LWRobC1hY2NvdW50c19tc2dfYWNjb3VudC1jcmVkaXQtaXMtc3RvcHBlZCI6IkFjY291bnQgZ2VzcGVycnQiLCJzaGlwbWVudC1xdW90ZV9lcnJvcl9kaGwtcHJvbW8tcmV3YXJkLXByb2dyYW0tbm90LWF2YWlsYWJsZSI6IlJhYmF0dGNvZGUga29ubnRlIG5pY2h0IGVpbmdlbMO2c3Qgd2VyZGVuIiwiYWxlcnQtYWN0aW9uX2JhY2tlbmQtZXJyb3JfcGlja3VwLWJvb2tpbmctbWFuZGF0b3J5LWZvci1jYXNoLXBheW1lbnQiOiJGw7xyIGRpZXNlIFNlbmR1bmcgaXN0IGVpbmUgQWJob2x1bmcgZXJmb3JkZXJsaWNoLiBCaXR0ZSB2ZXJlaW5iYXJlbiBTaWUgZWluZSBBYmhvbHVuZyB1bSBmb3J0enVmYWhyZW4uIiwiY29tbW9uX2JhY2tlbmQtZXJyb3JfYnJhemlsX3NoaXBtZW50X2RhbmZlX2tleXNfY2hlY2tzdW0iOiJEQU5GZSBrZXlzIGNoZWNrc3VtIGVycm9yIiwiYWxlcnQtYWN0aW9uX2JhY2tlbmQtZXJyb3JfbWlzc2luZy1pbmNvdGVybS1maWVsZCI6IkhhbmRlbHNiZWRpbmd1bmdlbiBFcmZvcmRlcmxpY2giLCJjb21tb25fYmFja2VuZC1lcnJvcl9icmF6aWwtc2hpcG1lbnQtbm90YS1maXNjYWwtaXRlbS1tdXN0LW5vdC1iZS1udWxsIjoiQnJhemlsIHNoaXBtZW50IG5vdGEgZmlzY2FsIGl0ZW0gbXVzdCBub3QgYmUgbnVsbCIsImNvbW1vbl9tc2dfY2ktaGVscC1tZXNzYWdlIjoiQml0dGUga29udGFrdGllcmVuIFNpZSBkZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4iLCJtYW5hZ2UtYWNjb3VudHNfbXNnX2F0LWxlYXN0LW9uZS1zaGlwcGVyLWFjY291bnQtc2hvdWxkLXJlbWFpbiI6IkFjY291bnRudW1tZXIgZGVzIFZlcnNlbmRlcnMgZXJmb3JkZXJsaWNoIiwiY29tbW9uX21zZ191cGxvYWRlZC1maWxlLWlzLW51bGwiOiJVcGxvYWQgbmljaHQgZXJmb2xndCIsImNvbW1vbl9iYWNrZW5kLWVycm9yX2JyYXppbC1zaGlwbWVudC1pdGVtLWNmb3AtaW52YWxpZCI6IkJyYXppbCBzaGlwbWVudCBub3RhIGZpc2NhbCBpdGVtIENGT1AgaW52YWxpZCIsInNoaXBtZW50LWl0YXJfYWNjb3VudC1pcy1ub3QtYXBwcm92ZWQtZm9yLWl0YXItc2hpcG1lbnQiOiJBY2NvdW50IGlzIG5vdCBhcHByb3ZlZCBmb3IgSXRhciBzaGlwbWVudCIsImFsZXJ0LWFjdGlvbl9iYWNrZW5kLWVycm9yX2luc3VyYW5jZS12YWx1ZS1pcy1tb3JlLXRoYW4tbWF4LWFsbG93ZWQtdmFsdWUiOiJEaWUgVHJhbnNwb3J0dmVyc2ljaGVydW5nIMO8YmVyc3RlaWd0IGRlbiBtYXhpbWFsZW4gV2VydCIsImNvbW1vbl9iYWNrZW5kLWVycm9yX2JyYXppbF9zaGlwbWVudF9pdGVtX2Nmb3BfaW52YWxpZCI6IlVuZ8O8bHRpZyBDRk9QIiwiY29tbW9uX2JhY2tlbmQtZXJyb3JfbWluLWRlY2xhcmVkLXZhbHVlIjoiRGVyIGRla2xhcmllcnRlIFdlcnQgbXVzcyBncsO2w59lciBzZWluIGFscyBkZXIgbWluaW1hbGUgV2VydC4iLCJjb21tb25fZXJyb3JfZGN0LWlzc3VlLXdpdGgtcG9zdGFsLWxvY2F0aW9uLWxvb2t1cCI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPjxkaXYgY2xhc3M9Im1lc3NhZ2Utd3JhcHBlciI+PHA+RXMgdHV0IHVucyBsZWlkLCBlcyBiZXN0ZWh0IGFrdHVlbGwgZWluIHRlY2huaXNjaGVzIFByb2JsZW0gdW5kIHdpciBrw7ZubmVuIElocmUgU2VuZHVuZyBuaWNodCBmZXJ0aWcgc3RlbGxlbi4gPFwvcD48dWw+PGxpPkJlaSBNeURITCsgcmVnaXN0cmllcnQgLSBJaHJlIFNlbmR1bmcgd2lyZCB1bnRlciBcIlNlbmR1bmdlbiBWZXJ3YWx0ZW5cIiBnZXNwZWljaGVydC4gQml0dGUgbG9nZ2VuIFNpZSBzaWNoIGVybmV1dCBlaW4sIHVtIHNpZSB6dSB2ZXJ2b2xsc3TDpG5kaWdlbi48XC9saT48bGk+V2VubiBzaWUgTklDSFQgYmVpIE15REhMKyBhbmdlbWVsZGV0IHNpbmQgd2VyZGVuIHdpciBJaG5lbnBlciBFLU1haWwgZWluZW4gTGluayB6dXNlbmRlbiB1bSBmb3JzZXR6ZW56dSBrw7ZubmVuLiBXZW5uIElocmUgU2VuZHVuZyBkcmluZ2VuZCBpc3QsIGtvbnRha3RpZXJlbiBTaWUgYml0dGUgdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LjxcL2xpPjxcL3VsPjxcL2Rpdj48XC9kaXY+IiwiY29tbW9uX21zZ19yZXF1aXJlZC1lcnJvci1tZXNzYWdlIjoiUGZsaWNodGZlbGRlciBtw7xzc2VuIGF1c2dlZsO8bGx0IHdlcmRlbiIsImNvbW1vbl9iYWNrZW5kLWVycm9yX2JyYXppbF9zaGlwbWVudF9kYW5mZV9rZXlzX3VuaXF1ZSI6IkR1cGxpY2F0ZSBEQU5GZSBrZXlzIGlzIG5vdCBhbGxvd2VkIiwiY29tbW9uX21zZ19zZXJ2aWNlLW9wZXJhdGlvbi1lcnJvciI6IlNvcnJ5IFx1MjAxMyB1bnNlciBTeXN0ZW0gaXN0IGRlcnplaXQgbmljaHQgdmVyZsO8Z2Jhci4gQml0dGUgdmVyc3VjaGVuIFNpZSBlcyBzcMOkdGVyIG5vY2ggZWlubWFsIG9kZXIga29udGFrdGllcmVuIFNpZSB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUgKDIwIGN0IGplIEFucnVmIGF1cyBkZW4gZGV1dHNjaGVuIEZlc3RuZXR6ZW4sIG1heC4gNjAgY3QgYXVzIGRlbiBkZXV0c2NoZW4gTW9iaWxmdW5rbmV0emVuKS4iLCJhbGVydC1hY3Rpb25fYmFja2VuZC1lcnJvcl9wbHQtc2hpcG1lbnQtY3JlYXRlZC13aXRob3V0LWRjaSwtd2hlbi1wbHQtaXMtbWFuZGF0b3J5IjoiRGlnaXRhbGUgUmVjaG51bmcgbmljaHQgaG9jaGdlbGFkZW4iLCJjb21tb25fYmFja2VuZC1lcnJvcl9jb21tb2RpdHktY29kZXMtbGlzdC1pcy1ub3QtdmFsaWQiOiJ1bmfDvGx0aWdlciBDb21tb2RpdHkgQ29kZSIsImFsZXJ0LWFjdGlvbl9iYWNrZW5kLWVycm9yX3VzLWl0bi1udW1iZXItc2hvdWxkLWJlLWVtcHR5LXdoZW4tbm90LWl0bi1leHBvcnQtZmlsbGluZy1vcHRpb24iOiJVUyBJVE4gbnVtYmVyIGZpZWxkIHNob3VsZCBiZSBlbXB0eSwgd2hlbiBub3QgSVROIGV4cG9ydCBmaWxsaW5nIG9wdGlvbiBzZWxlY3RlZCIsImFsZXJ0LWFjdGlvbl9tc2dfaW52YWxpZF9zaGlwbWVudF90eXBlX3BhY2thZ2UiOiJXYXJlbnNlbmR1bmcgaXN0IG5pY2h0IGVybGF1YnQiLCJjb21tb25fbXNnX2ZpbGUtc2l6ZS1saW1pdC1leGNlZWRlZCI6Im1heGltYWxlIERhdGVpZ3LDtsOfZSB7ZmlsZVNpemV9IiwiY29tbW9uX2JhY2tlbmQtZXJyb3JfY3VycmVuY3ktbm90LWVxdWFsLWZvci1pdGVtcyI6IkRpZSBXw6RocnVuZyBtdXNzIGbDvHIgYWxsZSBab2xscmVjaG51bmdzYXJ0aWtlbCBnbGVpY2ggc2VpbiIsImFsZXJ0LWFjdGlvbl9tc2dfbWluLXRvdGFsLXNoaXBtZW50LXdlaWdodCI6IlNlbmR1bmcgR2V3aWNodCB3ZW5pZ2VyIGFscyBtaW1pbXVtIGVybGF1YnQiLCJub19zaGlwbWVudHNfZm91bmQiOiJLZWluZSBTZW5kdW5nKGVuKSBnZWZ1bmRlbiIsImVycm9yX2FsZXJ0X3Byb3ZpZXctZmFpbGVkIjoiU29ycnkgXHUyMDEzIHVuc2VyIFN5c3RlbSBpc3QgZGVyemVpdCBuaWNodCB2ZXJmw7xnYmFyLiBCaXR0ZSB2ZXJzdWNoZW4gU2llIGVzIHNww6R0ZXIgbm9jaCBlaW5tYWwgb2RlciBrb250YWt0aWVyZW4gU2llIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNSAoMjAgY3QgamUgQW5ydWYgYXVzIGRlbiBkZXV0c2NoZW4gRmVzdG5ldHplbiwgbWF4LiA2MCBjdCBhdXMgZGVuIGRldXRzY2hlbiBNb2JpbGZ1bmtuZXR6ZW4pLiIsImNvbW1vbl9iYWNrZW5kLWVycm9yX2ludGVybi1yZXR1cm4tc2hpcG1lbnQtYWNjb3VudC1zaG91bGQtYmUtaW1wb3J0IjoiSW1wb3J0IEFjY291bnQgbnVtbWVyIGJlbsO2dGlndCIsInN1bW1hcnlfYWxlcnRfc2hpcG1lbnQtaGFzLWNoYW5nZWQtYnktYW5vdGhlci11c2VyIjoiRGllIFNlbmR1bmcgd3VyZGUgdm9uIGplbWFuZGVtIHZlcsOkbmRlcnQuIEFrdHVhbGlzaWVyZW4gU2llIGRpZSBTZWl0ZSB1bSBadWdhbmcgenUgZGVyIGFrdHVlbGxlbiBTZW5kdW5nIHp1IGVyaGFsdGVuLiIsImNvbW1vbl9iYWNrZW5kLWVycm9yX3NoaXBtZW50LWdzdGluLWRhdGEtaW52YWxpZCI6IlVuZ8O8bHRpZyIsImFsZXJ0LWFjdGlvbl9iYWNrZW5kLWVycm9yX2N1c3RvbXMtaW52b2ljZS1hdC1sZWFzdC1vbmUtaXRlbXMtdmFsdWUtZXF1YWxzLXplcm8iOiJQb3NpdGlvbnN3ZXJ0ZSBmw7xyIGRpZSBab2xscmVjaG51bmcgZmVobGVuLiBVbSBJaHJlbiBWZXJzYW5kIGFienVzY2hsaWXDn2VuLCBtw7xzc2VuIFNpZSBXZXJ0ZSBmw7xyIGFsbGUgUG9zaXRpb25lbiBpbiBkZXIgWm9sbHJlY2hudW5nIGFuZ2ViZW4uIiwiY29tbW9uX21zZ19uZmUtY29udGFjdC1kZXRhaWxzLWRpZmZlcnMiOiJGaWxlIGRldGFpbHMgZG8gbm90IG1hdGNoIGZpbGUgYWxyZWFkeSB1cGxvYWRlZCIsImNvbW1vbl9iYWNrZW5kLWVycm9yX2ludmFsaWQtcGF5bWVudC1jb21iaW5lZCI6IkRpZSBhdXNnZXfDpGhsdGVuIEFjY291bnRudW1tZXJuIGvDtm5uZW4gbmljaHQgenVzYW1tZW4gYmVudXR6dCB3ZXJkZW4uIEJpdHRlIMOkbmRlcm4gU2llIGRpZSBBdXN3YWhsIGRlciBBY2NvdW50bnVtbWVybiB1bmQgdmVyc3VjaGVuIFNpZSBlcyBlcm5ldXQuIiwiY29tbW9uX21zZ19tYXgtbGVuZ3RoLWVycm9yLW1lc3NhZ2UiOiJNYXhpbWFsIFplaWNoZW46IHttYXhMZW5ndGh9IiwiY29tbW9uX2JhY2tlbmQtZXJyb3JfcmVhZC1maWxlLWZhaWxlZCI6IlVwbG9hZCBuaWNodCBlcmZvbGd0IiwiY29tbW9uX2JhY2tlbmQtZXJyb3Jfc2hpcG1lbnQtZ3N0LWRhdGUtaXMtZW1wdHkiOiJHU1QgSW52b2ljZSBEYXRlIFJlcXVpcmVkIiwiY3N2X3Byb2R1Y3RzX2ltcG9ydF9iYWNrZWQtZXJyb3JfaXNfbm90X2FfdmFsaWRfY3VycmVuY3kiOiJ7MX0gVW5nw7xsdGlnIiwiY3N2X3Byb2R1Y3RzX2ltcG9ydF9iYWNrZWQtZXJyb3JfaXNfbm90X2FfdmFsaWRfaW50ZWdlciI6InsxfSBVbmfDvGx0aWciLCJjb21tb25fbXNnX2NpLW5vdC1mb3VuZC1mb3ItYWNjb3VudCI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPjxkaXYgY2xhc3M9Im1lc3NhZ2Utd3JhcHBlciI+PHA+RsO8ciBkaWVzZXMgTGFuZDoge2NvdW50cnlDb2RlfTxcL3A+XG48cD5EaWVzZXMgS29udG8gdmVyd2VuZGVuOiB7YWNjb3VudE51bWJlcn08XC9wPlxuPHA+RGllcyBpc3QgbmljaHQgdmVyZsO8Z2Jhcjoge2NpS2V5fTxcL3A+XG48XC9kaXY+PFwvZGl2PiIsImFsZXJ0LWFjdGlvbl9iYWNrZW5kLWVycm9yX3JlY2VpdmVyLXZhdC10YXgtaWQtY3ItaXMtbWFuZGF0b3J5IjoiQWJzZW5kZXIgTWVocndlcnRzdGV1ZXIvQ1IgRXJmb3JkZXJsaWNoIiwiY29tbW9uX2JhY2tlbmQtZXJyb3Jfc2hpcG1lbnRfcGlja3VwX2FkZHJlc3Nfbm90X3NhbWVfYXNfZnJvbSI6IkFiaG9sYWRyZXNzZSBpcyBuaWNodCBkaWVzZWxiZSB3aWUgU2VuZHVuZ3NhZHJlc3NlIiwiY29tbW9uX21zZ19mb3JtLWZpZWxkLWlzLXJlcXVpcmVkIjoiRXJmb3JkZXJsaWNoIiwiY29tbW9uX21zZ19taW4tbGVuZ3RoLWVycm9yLW1lc3NhZ2UiOiJNaW5pbXVtIFplaWNoZW46IHttaW5MZW5ndGh9IiwidW5hYmxlX3RvX3Byb2Nlc3NfcmVxdWVzdCI6IlNvcnJ5IFx1MjAxMyB1bnNlciBTeXN0ZW0gaXN0IGRlcnplaXQgbmljaHQgdmVyZsO8Z2Jhci4gQml0dGUgdmVyc3VjaGVuIFNpZSBlcyBzcMOkdGVyIG5vY2ggZWlubWFsIG9kZXIga29udGFrdGllcmVuIFNpZSB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUgKDIwIGN0IGplIEFucnVmIGF1cyBkZW4gZGV1dHNjaGVuIEZlc3RuZXR6ZW4sIG1heC4gNjAgY3QgYXVzIGRlbiBkZXV0c2NoZW4gTW9iaWxmdW5rbmV0emVuKS4iLCJjb21tb25fYmFja2VuZC1lcnJvcl9idGwtbWlzc2luZy1yZWNpcGllbnQtZGV0YWlscyI6IkRlbGl2ZXJ5IGRldGFpbHPCoEVyZm9yZGVybGljaCIsImNvbW1vbl9tc2dfY2FuLW5vdC1iZS1udWxsIjoiUGZsaWNodGZlbGRlciBtw7xzc2VuIGF1c2dlZsO8bGx0IHdlcmRlbiIsImNvbW1vbl9tc2dfbm90LWVub3VnaC1kYXRhLWVycm9yIjoiUHJlaXNlIG5pY2h0IHZlcmbDvGdiYXIiLCJjb21tb25fbXNnX2NoYXJhY3Rlci1lcnJvci1tZXNzYWdlIjoiTmljaHQgRXJsYXVidDoge2ludmFsaWRDaGFyYWN0ZXJzfSIsImFsZXJ0LWFjdGlvbl9iYWNrZW5kLWVycm9yX2N1c3RvbXNfaW52b2ljZS10b3RhbC1uZXQtd2VpZ2h0LW5vdC1lcXVhbC1hY3R1YWwtdmFsdWUiOiIiLCJjb21tb25fbXNnX3VzZXItc2VsZi1sb2NrZWQiOiJMb2dpbiBuaWNodCBtw7ZnbGljaC4gS29udGFrdGllcmVuIFNpZSBkZW4gREhMIEt1bmRlbnNlcnZpY2UgMDgyMC01NTA1MDUuIiwiY29tbW9uX2JhY2tlbmQtZXJyb3JfZGVmYXVsdF9zaGlwbWVudF9hY2NvdW50c192YWxpZGF0aW9uIjoiVW5nw7xsdGlnZXIgQWNjb3VudCIsImNvbW1vbl9lcnJvcl9jb250YWN0LWRobCI6IlNvcnJ5IFx1MjAxMyB1bnNlciBTeXN0ZW0gaXN0IGRlcnplaXQgbmljaHQgdmVyZsO8Z2Jhci4gQml0dGUgdmVyc3VjaGVuIFNpZSBlcyBzcMOkdGVyIG5vY2ggZWlubWFsIG9kZXIga29udGFrdGllcmVuIFNpZSB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUgKDIwIGN0IGplIEFucnVmIGF1cyBkZW4gZGV1dHNjaGVuIEZlc3RuZXR6ZW4sIG1heC4gNjAgY3QgYXVzIGRlbiBkZXV0c2NoZW4gTW9iaWxmdW5rbmV0emVuKS4iLCJhbGVydC1hY3Rpb25fYmFja2VuZC1lcnJvcl9wbHQtc2hpcG1lbnQtY3JlYXRpb24tYXR0ZW1wdCwtd2hlbi1wbHQtY2ktZGlzYWJsZWQiOiJFcyBpc3QgbmljaHQgbcO2Z2xpY2ggZGllc2UgU2VuZHVuZyBhYnp1c2NobGllw59lbi4gRGlnaXRhbGUgUmVjaG51bmdzZWluc3RlbGx1bmdlbiB3dXJkZW4gd8OkaHJlbmQgSWhyZXIgU2VuZHVuZ3NlcnN0ZWxsdW5nIGdlw6RuZGVydC4gQml0dGUgZXJzdGVsbGxlbiBTaWUgZGllc2UgU2VuZHVuZyBlcm5ldXQgb2huZSBkaWdpdGFsZSBSZWNobnVuZy4iLCJjb21tb25fbXNnX2ludmFsaWQtY29tYmluYXRpb24tcG9zdGFsLXppcC1jaXR5IjoiUG9zdGxlaXR6YWhsIHVuZCBTdGFkdCBzdGltbXQgbmljaHQgw7xiZXJlaW4iLCJjb21tb25fZXJyb3JfZGN0LWlzc3VlLXdpdGgtbmV0d29yay1zZWdtZW50IjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+PGRpdiBjbGFzcz0ibWVzc2FnZS13cmFwcGVyIj48cD5FcyB0dXQgdW5zIGxlaWQsIGVzIGJlc3RlaHQgYWt0dWVsbCBlaW4gdGVjaG5pc2NoZXMgUHJvYmxlbSB1bmQgd2lyIGvDtm5uZW4gSWhyZSBTZW5kdW5nIG5pY2h0IGZlcnRpZyBzdGVsbGVuLiA8XC9wPjx1bD48bGk+QmVpIE15REhMKyByZWdpc3RyaWVydCAtIElocmUgU2VuZHVuZyB3aXJkIHVudGVyIFwiU2VuZHVuZ2VuIFZlcndhbHRlblwiIGdlc3BlaWNoZXJ0LiBCaXR0ZSBsb2dnZW4gU2llIHNpY2ggZXJuZXV0IGVpbiwgdW0gc2llIHp1IHZlcnZvbGxzdMOkbmRpZ2VuLjxcL2xpPjxsaT5XZW5uIHNpZSBOSUNIVCBiZWkgTXlESEwrIGFuZ2VtZWxkZXQgc2luZCB3ZXJkZW4gd2lyIElobmVucGVyIEUtTWFpbCBlaW5lbiBMaW5rIHp1c2VuZGVuIHVtIGZvcnNldHplbnp1IGvDtm5uZW4uIFdlbm4gSWhyZSBTZW5kdW5nIGRyaW5nZW5kIGlzdCwga29udGFrdGllcmVuIFNpZSBiaXR0ZSB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuPFwvbGk+PFwvdWw+PFwvZGl2PjxcL2Rpdj4iLCJjb21tb25fYmFja2VuZC1lcnJvcl91cGxvYWRlZC1maWxlLXR5cGUtaXMtbm90LXN1cHBvcnRlZCI6IlVudGVyc3TDvHR6dGUgRGF0ZWlmb3JtYXRlIHNpbmQge2Zvcm1hdHN9IiwiY29tbW9uX2JhY2tlbmQtZXJyb3JfYnJhemlsX3NoaXBtZW50X2RhbmZlX2tleXNfcXVhbnRpdHlfZXhjZWVkZWQiOiJFeGNlZWRzIG1heGltdW0gREFORmUga2V5cyBhbGxvd2VkIiwiYWxlcnQtYWN0aW9uX2JhY2tlbmQtZXJyb3JfcGFja2FnaW5nLXZhbGlkYXRpb24td2lkdGgtaXMtbW9yZS10aGFuLWFsbG93ZWQiOiJNYcOfZSBncsO2w59lciBhbHMgZXJsYXVidCIsImFsZXJ0LWFjdGlvbl9iYWNrZW5kLWVycm9yX3BhY2thZ2luZy12YWxpZGF0aW9uLWhlaWdodC1pcy1tb3JlLXRoYW4tYWxsb3dlZCI6Ik1hw59lIGdyw7bDn2VyIGFscyBlcmxhdWJ0IiwiY29tbW9uX2JhY2tlbmQtZXJyb3JfYnJhemlsLXNoaXBtZW50LW11c3Qtbm90LWJlLW51bGwiOiJCcmF6aWwgc2hpcG1lbnQgbXVzdCBub3QgYmUgbnVsbCIsImNvbW1vbl9iYWNrZW5kLWVycm9yX25mZS1maWxlLW5vdC14bWwtZm9ybWF0IjoiTXVzdCBiZSBYTUwgZmlsZSBmb3JtYXQiLCJsb2dpbl9iYWNrZW5kLWVycm9yX2NvbXBhbnktbm90LWNvbmZpZ3VyZWQiOiJMb2dpbiBmZWhsZ2VzY2hsYWdlbi4gQml0dGUgd2VuZGVuIFNpZSBzaWNoIGFuIElocmVuIFVudGVybmVobWVucy1BZG1pbmlzdHJhdG9yLiIsImNvbW1vbl9lcnJvcl9kY3RfaXNzdWUtd2l0aC1yZXF1ZXN0LW1pc3Npbmctb3ItdW5rbm93bl90YWdzIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+PGRpdiBjbGFzcz0ibWVzc2FnZS13cmFwcGVyIj48cD5FcyB0dXQgdW5zIGxlaWQsIGVzIGJlc3RlaHQgYWt0dWVsbCBlaW4gdGVjaG5pc2NoZXMgUHJvYmxlbSB1bmQgd2lyIGvDtm5uZW4gSWhyZSBTZW5kdW5nIG5pY2h0IGZlcnRpZyBzdGVsbGVuLiA8XC9wPjx1bD48bGk+QmVpIE15REhMKyByZWdpc3RyaWVydCAtIElocmUgU2VuZHVuZyB3aXJkIHVudGVyIFwiU2VuZHVuZ2VuIFZlcndhbHRlblwiIGdlc3BlaWNoZXJ0LiBCaXR0ZSBsb2dnZW4gU2llIHNpY2ggZXJuZXV0IGVpbiwgdW0gc2llIHp1IHZlcnZvbGxzdMOkbmRpZ2VuLjxcL2xpPjxsaT5XZW5uIHNpZSBOSUNIVCBiZWkgTXlESEwrIGFuZ2VtZWxkZXQgc2luZCB3ZXJkZW4gd2lyIElobmVucGVyIEUtTWFpbCBlaW5lbiBMaW5rIHp1c2VuZGVuIHVtIGZvcnNldHplbnp1IGvDtm5uZW4uIFdlbm4gSWhyZSBTZW5kdW5nIGRyaW5nZW5kIGlzdCwga29udGFrdGllcmVuIFNpZSBiaXR0ZSB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuPFwvbGk+PFwvdWw+PFwvZGl2PjxcL2Rpdj4iLCJhbGVydC1hY3Rpb25fYmFja2VuZC1lcnJvcl9mcm9tLXRvLWN1c3RvbWVyLWRvbWVzdGljLXNoaXBtZW50LWlzLW5vdC1hbGxvd2VkIjoiTmF0aW9uYWxlIFNlbmR1bmdlbiBuaWNodCBlcmxhdWJ0IiwiY29tbW9uX2JhY2tlbmQtZXJyb3Jfd3JvbmctZXhwb3J0LWRhdGEiOiJFbnRzY2h1bGRpZ2VuIFNpZSBcdTIwMTMgVW5zZXIgU3lzdGVtIGlzdCBkZXJ6ZWl0IG5pY2h0IHZlcmbDvGdiYXIuIEJpdHRlIHZlcnN1Y2hlbiBTaWUgZXMgc3DDpHRlciBlcm5ldXQgb2RlciBrb250YWt0aWVyZW4gU2llIGRlbiB0ZWNobmlzY2hlbiBTdXBwb3J0IHVudGVyICs0MyAyMjM2IDIwNyAxMTEyIG9yIDExMTQiLCJtYW5hZ2UtYWNjb3VudHNfbXNnX2Nhbm5vdC1zYXZlLWR1cGxpY2F0ZS1hY2NvdW50LW51bWJlciI6IkVzIGthbm4ga2VpbiBkb3BwZWx0ZXIgQWNjb3VudCBnZXNwZWljaGVydCB3ZXJkZW4iLCJhbGVydC1hY3Rpb25fYmFja2VuZC1lcnJvcl93Y2MtZmxvdy1pcy1ub3QtYXZhaWxhYmxlIjoiU2VydmljZSBkZXplaXQgbmljaHQgdmVyZsO8Z2JhciIsImNvbW1vbl9tc2dfY2ktd3JvbmctY29uZmlndXJlZC1mb3ItYWNjb3VudC1pZCI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPjxkaXYgY2xhc3M9Im1lc3NhZ2Utd3JhcHBlciI+PHA+RsO8ciBkaWVzZXMgTGFuZDoge2NvdW50cnlDb2RlfTxcL3A+XG48cD5EaWVzZXMgS29udG8gdmVyd2VuZGVuOiB7YWNjb3VudElkfTxcL3A+XG48cD5EaWVzIGlzdCBuaWNodCB2ZXJmw7xnYmFyOiB7Y2lLZXl9IDxcL3A+XG48XC9kaXY+PFwvZGl2PiIsInNjaGVkdWxlLXBpY2t1cF9hbGVydF9waWNrdXAtbG9jYXRpb24tcGF5bWVudC1hY2NvdW50LWludmFsaWQiOiJEaWVzZSBLdW5kZW5udW1tZXIgbXVzcyB1bnRlciBcIk1laW5lIGdlc3BlaWNoZXJ0ZW4gRWluc3RlbGx1bmdlblwiIGFscyBhdXRvcmlzaWVydGVyIEFiaG9sb3J0ICBlaW5nZXJpY2h0ZXQgd2VyZGVuIiwiY29tbW9uX2Vycm9yX2NvbnRhY3QtdGVjaG5pY2FsLXN1cHBvcnQiOiJFbnRzY2h1bGRpZ2VuIFNpZSBcdTIwMTMgVW5zZXIgU3lzdGVtIGlzdCBkZXJ6ZWl0IG5pY2h0IHZlcmbDvGdiYXIuIEJpdHRlIHZlcnN1Y2hlbiBTaWUgZXMgc3DDpHRlciBlcm5ldXQgb2RlciBrb250YWt0aWVyZW4gU2llIGRlbiB0ZWNobmlzY2hlbiBTdXBwb3J0IHVudGVyICs0MyAyMjM2IDIwNyAxMTEyIG9yIDExMTQiLCJhbGVydC1hY3Rpb25fbXNnX2ludmFsaWRfc2hpcG1lbnRfY29zdF9wZXJpb2QiOiJJbnZhbGlkIHNoaXBtZW50IGNvc3QgcGVyaW9kIiwiYWxlcnQtYWN0aW9uX2JhY2tlbmQtZXJyb3JfcGlja3VwLWJvb2tpbmctaXMtbm90LWFsbG93ZWQtd2hlbi1zaGlwcGluZy1kYXRlLWlzLXVua25vd24iOiJVbSBlaW5lIEFiaG9sdW5nIHp1IGJ1Y2hlbiwgaXN0IGRhcyBWZXJzYW5kZGF0dW0gZXJmb3JkZXJsaWNoIiwiY29tbW9uX2JhY2tlbmQtZXJyb3JfYnJhemlsLXBhY2thZ2Utc2hpcG1lbnQtbm90LWFsbG93ZWQiOiJQYWNrYWdlcyBTaGlwcGluZyB0byBCcmF6aWwgaXMgbm90IGFsbG93ZWQgZm9yIHRoaXMgYWNjb3VudC4iLCJjb21tb25fYmFja2VuZC1lcnJvcl9lc2Itc2VydmljZS11bmF2YWlsYWJsZSI6IlNvcnJ5IFx1MjAxMyB1bnNlciBTeXN0ZW0gaXN0IGRlcnplaXQgbmljaHQgdmVyZsO8Z2Jhci4gQml0dGUgdmVyc3VjaGVuIFNpZSBlcyBzcMOkdGVyIG5vY2ggZWlubWFsIG9kZXIga29udGFrdGllcmVuIFNpZSB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUgKDIwIGN0IGplIEFucnVmIGF1cyBkZW4gZGV1dHNjaGVuIEZlc3RuZXR6ZW4sIG1heC4gNjAgY3QgYXVzIGRlbiBkZXV0c2NoZW4gTW9iaWxmdW5rbmV0emVuKS4iLCJjb21tb25fYmFja2VuZC1lcnJvcl92YWx1ZS1pcy1ub3QtdW5pcXVlIjoiTmFtZSBiZXJlaXRzIHZlcmdlYmVuIiwiY29tbW9uX2Vycm9yX2RjdC1nZW5lcmljLWlzc3VlIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+PGRpdiBjbGFzcz0ibWVzc2FnZS13cmFwcGVyIj48cD5FcyB0dXQgdW5zIGxlaWQsIGVzIGJlc3RlaHQgYWt0dWVsbCBlaW4gdGVjaG5pc2NoZXMgUHJvYmxlbSB1bmQgd2lyIGvDtm5uZW4gSWhyZSBTZW5kdW5nIG5pY2h0IGZlcnRpZyBzdGVsbGVuLiA8XC9wPjx1bD48bGk+QmVpIE15REhMKyByZWdpc3RyaWVydCAtIElocmUgU2VuZHVuZyB3aXJkIHVudGVyIFwiU2VuZHVuZ2VuIFZlcndhbHRlblwiIGdlc3BlaWNoZXJ0LiBCaXR0ZSBsb2dnZW4gU2llIHNpY2ggZXJuZXV0IGVpbiwgdW0gc2llIHp1IHZlcnZvbGxzdMOkbmRpZ2VuLjxcL2xpPjxsaT5XZW5uIHNpZSBOSUNIVCBiZWkgTXlESEwrIGFuZ2VtZWxkZXQgc2luZCB3ZXJkZW4gd2lyIElobmVucGVyIEUtTWFpbCBlaW5lbiBMaW5rIHp1c2VuZGVuIHVtIGZvcnNldHplbnp1IGvDtm5uZW4uIFdlbm4gSWhyZSBTZW5kdW5nIGRyaW5nZW5kIGlzdCwga29udGFrdGllcmVuIFNpZSBiaXR0ZSB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuPFwvbGk+PFwvdWw+PFwvZGl2PjxcL2Rpdj4iLCJjb21tb25fYmFja2VuZC1lcnJvcl9maWxlLXNpemUtbGltaXQtZXhjZWVkZWQiOiJtYXhpbWFsZSBEYXRlaWdyw7bDn2Uge2ZpbGVTaXplfSIsImFsZXJ0LWFjdGlvbl9tc2dfaW52YWxpZF9zaGlwbWVudF9jb3VudF9wZXJpb2QiOiJJbnZhbGlkIHNoaXBtZW50IGNvdW50IHBlcmlvZCIsImNvbW1vbl9tc2dfZW1haWwtZXJyb3ItbWVzc2FnZSI6IlZvcmdlZ2ViZW5lcyBGb3JtYXQ6IG5hbWVAZW1haWwuY29tIiwibG9naW4tZm9yZ290LXJlc2V0LXBhc3N3b3JkX2Vycm9yX2NhcHRjaGEtbm90LXZhbGlkIjoiVW5nw7xsdGlnIiwiYWxlcnQtYWN0aW9uX2JhY2tlbmQtZXJyb3JfbWF4aW1hbF9jb3N0X2V4Y2VlZGVkIjoiRXMgaXN0IG5pY2h0IG3DtmdsaWNoIGRpZXNlIFNlbmR1bmcgYWJ6dXNjaGxpZcOfZW4uIEdlc2FtdCBrb3N0ZW4gdm9uIHNlbmR1bmdlbiwgZGllIFNpZSBpbiBkaWVzZXIgUGVyaW9kZSBlcnN0ZWxsdCBoYWJlbiB2b24ge3N0YXJ0RGF0ZX0gYW4ge2VuZERhdGV9IMO8YmVyc2NocmVpdGV0IGRhcyB6dWzDpHNzaWdlIE1heGltdW06IHtyZXN0cmljdGVkVmFsdWV9IHt2YWx1ZVR5cGV9LiIsImFsZXJ0LWFjdGlvbl9iYWNrZW5kLWVycm9yX3BhY2thZ2luZy12YWxpZGF0aW9uLXdlaWdodC1zaG91bGQtYmUtbW9yZS10aGFuLW1pbmltdW0iOiJHZXdpY2h0IHdlbmlnZXIgYWxzIG1pbWltdW0gZXJsYXVidCIsImNvbW1vbl9lcnJvcl9lbWFpbC1hZGRyZXNzLWZpZWxkLWlzLXJlcXVpcmVkIjoiRS1NYWlsIEFkcmVzc2UgYmVuw7Z0aWd0IiwiY29tbW9uX2JhY2tlbmQtZXJyb3Jfc2hpcG1lbnQtZ3N0LWludi1udW0tc2hvdWxkX2JlX3Byb3ZpZGVkIjoiSW52b2ljZSBOdW1iZXIgUmVxdWlyZWQiLCJjb21tb25fbXNnX2ludmFsaWQtcG9zdGFsLWNvZGUtZm9ybWF0IjoiVW5nw7xsdGlnZSBQTFoiLCJjb21tb25fYmFja2VuZC1lcnJvcl9kZWNsYXJlZC12YWx1ZS1leGNlc3MtbWF4LXZhbHVlIjoiw5xiZXJzY2hyZWl0ZXQgZGVuIHp1bMOkc3NpZ2VuIE1heGltYWx3ZXJ0IiwiY29tbW9uX21zZ19jb3JyZWN0LXBvc3RhbC1jb2RlLWZvcm1hdHMiOiJGb2xnZW5kZXMgRm9ybWF0IGVyZm9yZGVybGljaDoge2Zvcm1hdH0iLCJjb21tb25fbXNnX3NpZ25lci1uYW1lLXNob3VsZC1iZS1maWxsZWQiOiJOYW1lIGVyZm9yZGVybGljaCIsImNvbW1vbl9iYWNrZW5kLWVycm9yX2J0bC1taXNzaW5nLXNoaXBwZXItZGV0YWlscyI6IlNoaXBwZXIgZGV0YWlsc8KgRXJmb3JkZXJsaWNoIiwiY29tbW9uX2JhY2tlbmQtZXJyb3JfYnJhemlsX3NoaXBtZW50X25vdGFfZmlzY2FsX2l0ZW1fbXVzdF9ub3RfYmVfbnVsbCI6Ik5vdGEgZmlzY2FsIGZvciBCcmF6aWwgc2hpcG1lbnQgcmVxdWlyZWQiLCJhbGVydC1hY3Rpb25fYmFja2VuZC1lcnJvcl9lbWFpbF9hbmRfcGhvbmVfbWFuZGF0b3J5IjoiUHJpdmF0YWRyZXNzZTogYml0dGUgRS1NYWlsIEFkcmVzc2UgdW5kIE1vYmlsZnVua251bW1lciBhbmdlYmVuIiwiY29tbW9uX21zZ19mb3JtLWZpZWxkLWlzLWludmFsaWQiOiJFcmZvcmRlcmxpY2giLCJhbGVydC1hY3Rpb25fYmFja2VuZC1lcnJvcl9jYXJkcy10b2tlbml6YXRpb24taXMtbm90LXN1cHBvcnRlZCI6IkRpZSBLcmVkaXRrYXJ0ZSB3dXJkZSBuaWNodCBha3plcHRpZXJ0IiwiYWxlcnQtYWN0aW9uX21zZ191bmtub3duLXNoaXBtZW50LWNvc3QiOiJWZXJzYW5ka29zdGVuIHVua25vd24iLCJhY2NvdW50X2VzZWN1cmVfcmVqZWN0ZWQiOiJTaWUgc2luZCBuaWNodCBiZXJlY2h0aWd0LCBkaWVzZW4gQWNjb3VudCB6dSBudXR6ZW4uIEtvbnRha3RpZXJlbiBzaWUgZGVuIEluaGFiZXIgdW0gZWluZSBBdXRob3Jpc2llcnVuZyB6dSBlcmhhbHRlbi4iLCJhbGVydC1hY3Rpb25fYmFja2VuZC1lcnJvcl9jdXN0b21zLW5hZnRhLWRlY2xhcmF0aW9uLWlzLW5vdC1hbGxvd2VkIjoiTkFGVEEgZXJrbMOkcnVuZyBuaWNodCBlcmxhdWJ0IiwiY29tbW9uX21zZ19jaS1ub3QtZm91bmQtZm9yLWFjY291bnQtaWQiOiI8ZGl2IGNsYXNzPVwiZXdmX2RpY3Rpb25hcnlfdmFsdWVcIj48ZGl2IGNsYXNzPSJtZXNzYWdlLXdyYXBwZXIiPjxwPkbDvHIgZGllc2VzIExhbmQ6IHtjb3VudHJ5Q29kZX08XC9wPlxuPHA+RGllc2VzIEtvbnRvIHZlcndlbmRlbjoge2FjY291bnRJZH08XC9wPlxuPHA+RGllcyBpc3QgbmljaHQgdmVyZsO8Z2Jhcjoge2NpS2V5fSA8XC9wPlxuPFwvZGl2PjxcL2Rpdj4iLCJhbGVydC1hY3Rpb25fYmFja2VuZC1lcnJvcl9zaGlwbWVudC1pbnN1cmFuY2UtdmFsdWUtaXMtemVybyI6IkdlYmVuIFNpZSBlaW5lbiBXZXJ0IGbDvHIgZGllIFRyYW5zcG9ydHZlcnNpY2hlcnVuZyBlaW4iLCJjb21tb25fbXNnX2NpLW1pc2NvbmZpZ3VyZWQiOiI8ZGl2IGNsYXNzPVwiZXdmX2RpY3Rpb25hcnlfdmFsdWVcIj48ZGl2IGNsYXNzPSJtZXNzYWdlLXdyYXBwZXIiPjxwPkbDvHIgZGllc2VzIExhbmQ6IHtjb3VudHJ5Q29kZX08XC9wPlxuPHA+RGllcyBpc3QgbmljaHQgdmVyZsO8Z2Jhcjoge2NpS2V5fSA8XC9wPlxuPFwvZGl2PjxcL2Rpdj4iLCJhbGVydC1hY3Rpb25fbXNnX21heC1sZW5ndGgtcGVyLXNoaXBtZW50IjoiTMOkbmdlIMO8YmVyc2NocmVpdGV0IGRhcyB6dWzDpHNzaWdlIE1heGltdW0iLCJjb21tb25fYmFja2VuZC1lcnJvcl9iaWxsaW5nLXNkaS1jb2RlLWxlbmd0aC1pcy1pbmNvcnJlY3QiOiJCaWxsaW5nIFNESSBjb2RlIGxlbmd0aCBpcyBpbmNvcnJlY3QiLCJsYi1kaXNhYmxlZC1qc19wYXJhZ3JhcGhfcmVhY3RpdmF0ZS1qYXZhc2NyaXB0IjoiQml0dGUgYWt0aXZpZXJlbiBTaWUgSmF2YXNjcmlwdCB1bmQgYWt0dWFsaXNpZXJlbiBTaWUgZGllIFNlaXRlLCB1bSBmb3J0enVmYWhyZW4uIiwiY29tbW9uX21zZ19tYXgtc2l6ZS1leGNlZWRlZCI6Im1heGltYWxlIERhdGVpZ3LDtsOfZSB7ZmlsZVNpemV9IiwiY29tbW9uX2JhY2tlbmQtZXJyb3JfYnJhemlsLXNoaXBtZW50LW5vdGEtZmlzY2FsLWl0ZW1zLW11c3Qtbm90LWJlLWVtcHR5IjoiQnJhemlsIHNoaXBtZW50IG5vdGEgZmlzY2FsIGl0ZW1zIG11c3Qgbm90IGJlIGVtcHR5IiwiY29tbW9uX2JhY2tlbmQtZXJyb3JfY2FzLXNlcnZpY2UtdW5hdmFpbGFibGUiOiJTZXJ2aWNlIGRlemVpdCBuaWNodCB2ZXJmw7xnYmFyIiwiY29tbW9uX2Vycm9yX2ludmFsaWQtY29tbW9kaXR5LWNvZGUiOiJ1bmfDvGx0aWdlciBDb21tb2RpdHkgQ29kZSIsImFsZXJ0LWFjdGlvbl9iYWNrZW5kLWVycm9yX21pc3Npbmctc2VjdGlvbnMiOiJFcmZvcmRlcmxpY2g6IHswfSIsImNvbW1vbl9iYWNrZW5kLWVycm9yX2FkZHJlc3MtYm9vay1lbXB0eS1jb21wYW55LW5hbWUtZm9yLXJlc2lkZW50aWFsLWFkZHJlc3MiOiJGaXJtYSBlcmZvcmRlcmxpY2giLCJjb21tb25fbXNnX2NpLW5vdC1mb3VuZC1mb3ItYWNjb3VudC1pZC13aXRoLWN1c3RvbWVyIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+PGRpdiBjbGFzcz0ibWVzc2FnZS13cmFwcGVyIj48cD5Gw7xyIGRpZXNlcyBMYW5kOiB7Y291bnRyeUNvZGV9PFwvcD5cbjxwPkbDvHI6IHtjdXN0b21lcklkfTxcL3A+XG48cD5EaWVzZXMgS29udG8gdmVyd2VuZGVuOiB7YWNjb3VudElkfTxcL3A+XG48cD5EaWVzIGlzdCBuaWNodCB2ZXJmw7xnYmFyOiB7Y2lLZXl9IDxcL3A+XG48XC9kaXY+PFwvZGl2PiIsImFsZXJ0LWFjdGlvbl9iYWNrZW5kLWVycm9yX3VzLWl0bi1udW1iZXItZmllbGQtc2hvdWxkLWJlLXByZXNlbnQiOiJJVE4gTnVtbWVyIEVyZm9yZGVybGljaCIsInNoaXBtZW50LXBheW1lbnRfbXNnX2R1dHktYW5kLXRheC1vcHRpb25zLW5vdC12YWxpZCI6Ikthbm4gbmljaHQgZsO8ciBkYXMgQmV6YWhsZW4gdm9uIFN0ZXVlcm4gdW5kIEFiZ2FiZW4gdmVyd2VuZGV0IHdlcmRlbiIsImNvbW1vbl9tc2dfaW52YWxpZC10YXgtaWQiOiJVbmfDvGx0aWcgTWVocndlcnRzdGV1ZXIiLCJjb21tb25fbXNnX2NhcHRjaGEtbm90LXZhbGlkIjoiV8OkaGxlbiBTaWUgZWluIFN5bWJvbCBhdXMiLCJhbGVydC1hY3Rpb25fbXNnX21pbi13aWR0aC1wZXItc2hpcG1lbnQiOiJCcmVpdGUgd2VuaWdlciBhbHMgbWltaW11bSBlcmxhdWJ0IiwiY29tbW9uX2Vycm9yX3Nzby1ub3QtYXZhaWxhYmxlIjoiTG9naW4gZmVobGdlc2NobGFnZW4iLCJjb21tb25fYmFja2VuZC1lcnJvcl9icmF6aWwtc2hpcG1lbnQtY2ZvcC1tdXN0LW5vdC1iZS1lbXB0eSI6ImJyYXppbCBzaGlwbWVudCB2YWxpZCBDRk9QIGxpc3QgbXVzdCBub3QgYmUgZW1wdHkiLCJjb21tb25fbXNnX2ludmFsaWQtcmVzcG9uc2UtZ2xvYmFsLWNvbGxlY3QiOiJFcyBpc3QgenVyIFplaXQgbmljaHQgbcO2Z2xpY2ggZGllIEJlemFobHVuZyBtaXQgS3JlZGl0a2FydGUgZHVyY2h6dWbDvGhyZW4uIEJpdHRlIHfDpGhsZW4gU2llIGVpbmUgYWx0ZXJuYXRpdmUgQmV6YWhsdW5nc21ldGhvZGUsIHVtIGRpZSBTZW5kdW5nIGFienVzY2hsaWXDn2VuLiIsImNvbW1vbl9iYWNrZW5kLWVycm9yX2J0bC1taXNzaW5nLWR1dGlhYmxlLW9yLXByb2R1Y3QtY29kZSI6IlNoaXBtZW50IHR5cGUgKGRvYy9ub24gZG9jKSBhbmQgU2hpcG1lbnQgcHJvZHVjdCBFcmZvcmRlcmxpY2giLCJjb21tb25fZXJyb3JfcHJvdmlkZWQtcGFzc3dvcmRzLWRvLW5vdC1tYXRjaCI6IlBhc3N3w7ZydGVyIG5pY2h0IGlkZW50bGlzY2giLCJjb21tb25fZXJyb3JfZW1haWwtaW5hcHByb3ByaWF0ZS1mb3JtYXQtbWVzc2FnZSI6IlZvcmdlZ2ViZW5lcyBGb3JtYXQ6IG5hbWVAZW1haWwuY29tIiwiY29tbW9uX2JhY2tlbmQtZXJyb3JfaW52YWxpZC1wYXltZW50LXR5cGUiOiJVbmfDvGx0aWdlIFphaGx1bmdzbWV0aG9kZSIsImFsZXJ0LWFjdGlvbl9iYWNrZW5kLWVycm9yX25vLWRyeS1pY2Utd2VpZ2h0LXZhbHVlLWlzLXNldCI6IlRyb2NrZW5laXMgZ2V3aWNodCBlcmZvcmRlcmxpY2giLCJ1c2VyLXByb2R1Y3RzX2JhY2tlbmQtZXJyb3JfcHJvZHVjdC13YXMtZGVsZXRlZC1vci15b3UtbG9zdC1hY2Nlc3MiOiJXdXJkZSBiZXJlaXRzIGdlbMO2c2NodCIsImNvbW1vbl9lcnJvcl9kY3QtaXNzdWUtd2l0aC1tYXJrZXRlZC1zZXJ2aWNlcyI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPjxkaXYgY2xhc3M9Im1lc3NhZ2Utd3JhcHBlciI+PHA+RXMgdHV0IHVucyBsZWlkLCBlcyBiZXN0ZWh0IGFrdHVlbGwgZWluIHRlY2huaXNjaGVzIFByb2JsZW0gdW5kIHdpciBrw7ZubmVuIElocmUgU2VuZHVuZyBuaWNodCBmZXJ0aWcgc3RlbGxlbi4gPFwvcD48dWw+PGxpPkJlaSBNeURITCsgcmVnaXN0cmllcnQgLSBJaHJlIFNlbmR1bmcgd2lyZCB1bnRlciBcIlNlbmR1bmdlbiBWZXJ3YWx0ZW5cIiBnZXNwZWljaGVydC4gQml0dGUgbG9nZ2VuIFNpZSBzaWNoIGVybmV1dCBlaW4sIHVtIHNpZSB6dSB2ZXJ2b2xsc3TDpG5kaWdlbi48XC9saT48bGk+V2VubiBzaWUgTklDSFQgYmVpIE15REhMKyBhbmdlbWVsZGV0IHNpbmQgd2VyZGVuIHdpciBJaG5lbnBlciBFLU1haWwgZWluZW4gTGluayB6dXNlbmRlbiB1bSBmb3JzZXR6ZW56dSBrw7ZubmVuLiBXZW5uIElocmUgU2VuZHVuZyBkcmluZ2VuZCBpc3QsIGtvbnRha3RpZXJlbiBTaWUgYml0dGUgdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LjxcL2xpPjxcL3VsPjxcL2Rpdj48XC9kaXY+IiwiY29tbW9uX2Vycm9yX2RjdC1pc3N1ZS13aXRoLWRlbGl2ZXJ5LXNlZ21lbnQiOiI8ZGl2IGNsYXNzPVwiZXdmX2RpY3Rpb25hcnlfdmFsdWVcIj48ZGl2IGNsYXNzPSJtZXNzYWdlLXdyYXBwZXIiPjxwPkVzIHR1dCB1bnMgbGVpZCwgZXMgYmVzdGVodCBha3R1ZWxsIGVpbiB0ZWNobmlzY2hlcyBQcm9ibGVtIHVuZCB3aXIga8O2bm5lbiBJaHJlIFNlbmR1bmcgbmljaHQgZmVydGlnIHN0ZWxsZW4uIDxcL3A+PHVsPjxsaT5CZWkgTXlESEwrIHJlZ2lzdHJpZXJ0IC0gSWhyZSBTZW5kdW5nIHdpcmQgdW50ZXIgXCJTZW5kdW5nZW4gVmVyd2FsdGVuXCIgZ2VzcGVpY2hlcnQuIEJpdHRlIGxvZ2dlbiBTaWUgc2ljaCBlcm5ldXQgZWluLCB1bSBzaWUgenUgdmVydm9sbHN0w6RuZGlnZW4uPFwvbGk+PGxpPldlbm4gc2llIE5JQ0hUIGJlaSBNeURITCsgYW5nZW1lbGRldCBzaW5kIHdlcmRlbiB3aXIgSWhuZW5wZXIgRS1NYWlsIGVpbmVuIExpbmsgenVzZW5kZW4gdW0gZm9yc2V0emVuenUga8O2bm5lbi4gV2VubiBJaHJlIFNlbmR1bmcgZHJpbmdlbmQgaXN0LCBrb250YWt0aWVyZW4gU2llIGJpdHRlIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS48XC9saT48XC91bD48XC9kaXY+PFwvZGl2PiIsImFjY291bnRfZXNlY3VyZV9ub3RfZXhpc3QiOiJTaWUgc2luZCBuaWNodCBiZXJlY2h0aWd0LCBkaWVzZW4gQWNjb3VudCB6dSBudXR6ZW4uIEtvbnRha3RpZXJlbiBzaWUgZGVuIEluaGFiZXIgdW0gZWluZSBBdXRob3Jpc2llcnVuZyB6dSBlcmhhbHRlbi4iLCJhbGVydC1hY3Rpb25fYmFja2VuZC1lcnJvcl9wYWNrYWdpbmctdmFsaWRhdGlvbi1sZW5ndGgtc2hvdWxkLWJlLW1vcmUtdGhhbi1taW5pbXVtIjoiTMOkbmdlIHdlbmlnZXIgYWxzIG1pbWltdW0gZXJsYXVidCIsImFsZXJ0LWFjdGlvbl9iYWNrZW5kLWVycm9yX3BhY2thZ2luZy12YWxpZGF0aW9uLWxlbmd0aC1pcy1pbmNvcnJlY3QiOiJVbmfDvGx0aWcgTMOkbmdlIiwiYWxlcnQtYWN0aW9uX21zZ19taW4tbGVuZ3RoLXBlci1zaGlwbWVudCI6IkzDpG5nZSB3ZW5pZ2VyIGFscyBtaW1pbXVtIGVybGF1YnQiLCJjb21tb25fYmFja2VuZC1lcnJvcl9maWxlcy1udW1iZXItbGltaXQtZXhjZWVkZWQiOiJtYXhpbWFsZSBEYXRlaW1lbmdlIGhvY2hnZWxhZGVuIiwiY29tbW9uX21zZ191cGxvYWRlZC1maWxlLWZhaWxlZCI6IlVwbG9hZCBuaWNodCBlcmZvbGd0IiwiZ2xvYmFsLWNvbGxlY3Rfbm8tcGF5bWVudC1wcm9kdWN0cy1hdmFpbGFibGUiOiJFcyBpc3QgbmljaHQgbcO2Z2xpY2ggZGllc2UgU2VuZHVuZyBhYnp1c2NobGllw59lbi4gWW91IGNhbiByZWR1Y2UgcGFja2FnZSBzaXplIG9yIHF1YW50aXRpZXMgYW5kIHRyeSBhZ2Fpbi7CoCBGYWxscyBTaWUgSWhyZW4gU2VuZHVuZ3NhdWZ0cmFnIG5pY2h0IGFic2NobGllw59lbiBrw7ZubmVuLCBrb250YWt0aWVyZW4gU2llIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlcjogMDgyMC01NTA1MDUuIiwiY29tbW9uX21zZ19pbnRlcm5hbC1zZXJ2aWNlLWVycm9yIjoiRWluIEZlaGxlciBpc3QgYXVmZ2V0cmV0ZW4iLCJjc3ZfcHJvZHVjdHNfaW1wb3J0X2JhY2tlZC1lcnJvcl9maWVsZF9pc19yZXF1aXJlZCI6InswfSBFcmZvcmRlcmxpY2giLCJjb21tb25fbXNnX2ludmFsaWQtY29tYmluYXRpb24tcG9zdGFsLXppcC1zdWJ1cmItY2l0eSI6IlBvc3RsZWl0emFobCwgVm9yb3J0IHVuZCBTdGFkdCBzdGltbXQgbmljaHQgw7xiZXJlaW4iLCJjb21tb25fYmFja2VuZC1lcnJvcl9uZmUtZmlsZS1taXNzaW5nLW1hbmRhdG9yeS1maWVsZHMiOiJFcmZvcmRlcmxpY2g6IiwiY29tbW9uX2JhY2tlbmQtZXJyb3Jfc2hpcG1lbnQtZ3N0LWV3YXliaWxsLWRhdGEtc2hvdWxkLWJlLWVtcHR5IjoiSW5kaWEgR1NUIEUtV2F5YmlsbCBkZXRhaWxzIHNob3VsZCBiZSBlbXB0eSIsImNvbW1vbl9tc2dfbmZlLW1heC1maWxlcy1hbW91bnQiOiJNYXhpbXVtIE5vdGEgRmlzY2FsIGZpbGVzIGFsbG93ZWQgcGVyIHdheWJpbGw6IMKgOTkiLCJjb21tb25fYmFja2VuZC1lcnJvcl9iaWxsaW5nLXZhdC1udW1iZXItc2hvdWxkLWJlLWVtcHR5IjoiRGllc2UgU2VuZHVuZyBiZW7DtnRpZ3Qga2VpbmUgVW1zYXR6c3RldWVyIElELiBFbnRmZXJuZW4gU2llIGRpZSBVbXNhdHpzdGV1ZXIgSUQgQW5nYWJlbiB1bSBmb3J0enVmYWhyZW4uIiwiY29tbW9uX21zZ19wYXR0ZXJuLW51bWJlci1lcnJvci1tZXNzYWdlIjoiTmljaHQgRXJsYXVidDogMCIsImNvbW1vbl9iYWNrZW5kLWVycm9yX2JpbGxpbmctYm90aC1jYXNoLWFuZC1vbmxpbmUtYmlsbGluZy1jdXN0b21lci1lbXB0eSI6IlfDpGhsZW4gU2llIGVpbmUgWmFobHVuZ3NtZXRob2RlIiwiY3N2X3Byb2R1Y3RzX2ltcG9ydF9iYWNrZWQtZXJyb3JfaXNfbm90X2FfdmFsaWRfd2VpZ2h0X3VuaXQiOiJ7MX0gVW5nw7xsdGlnIiwiY29tbW9uX2JhY2tlbmQtZXJyb3Jfc2hpcG1lbnQtZ3N0LWRpc3RhbmNlLWRlY2ltYWwtbnVtYmVyIjoiVHJhbnNwb3J0IERpc3RhbmNlIE1heGltdW06IDIgZGVjaW1hbCBwb2ludHMiLCJhbGVydC1hY3Rpb25fYmFja2VuZC1lcnJvcl9jYXJkLXRva2VuaXphdGlvbi1pcy1ub3QtYWxsb3dlZCI6IkRpZSBLcmVkaXRrYXJ0ZW4gRGV0YWlscyBrb25udGVuIG5pY2h0IGdlc3BlaWNoZXJ0IHdlcmRlbiIsImNvbW1vbl9iYWNrZW5kLWVycm9yX3NoaXBtZW50LXJlZmVyZW5jZXMtY291bnQtZXhjZWVkcy1tYXgtYWxsb3dlZC1jb3VudCI6IsOcYmVyc2NocmVpdGV0IGRhcyB6dWzDpHNzaWdlIE1heGltdW06IDUwIFNlbmR1bmdzcmVmZXJlbnoiLCJhbGVydC1hY3Rpb25fYmFja2VuZC1lcnJvcl9pbnZhbGlkX3JlY2VpdmVyX2NvbnRhY3RfZGF0YSI6IkRlciBWZXJzYW5kIGFuIGRpZXNlbiBLb250YWt0L2RpZXNlIEFkcmVzc2UgaXN0IHVuZ8O8bHRpZyBvZGVyIG5pY2h0IG1laHIgZXJsYXVidC4gQml0dGUgd8OkaGxlbiBTaWUgZWluZW4gYW5kZXJlbiBLb250YWt0IGF1cyBJaHJlbSBBZGRyZXNzYnVjaCBhdXMuIiwiY29tbW9uX21zZ19jaS13cm9uZy1jb25maWd1cmVkLWZvci1hY2NvdW50LWlkLXdpdGgtY3VzdG9tZXIiOiI8ZGl2IGNsYXNzPVwiZXdmX2RpY3Rpb25hcnlfdmFsdWVcIj48ZGl2IGNsYXNzPSJtZXNzYWdlLXdyYXBwZXIiPjxwPkbDvHIgZGllc2VzIExhbmQ6IHtjb3VudHJ5Q29kZX08XC9wPlxuPHA+RsO8cjoge2N1c3RvbWVySWR9PFwvcD5cbjxwPkRpZXNlcyBLb250byB2ZXJ3ZW5kZW46IHthY2NvdW50SWR9PFwvcD5cbjxwPkRpZXMgaXN0IG5pY2h0IHZlcmbDvGdiYXI6IHtjaUtleX0gPFwvcD5cbjxcL2Rpdj48XC9kaXY+IiwiYWxlcnQtYWN0aW9uX2JhY2tlbmQtZXJyb3JfcGFja2FnaW5nLXZhbGlkYXRpb24taGVpZ2h0LXNob3VsZC1iZS1tb3JlLXRoYW4tbWluaW11bSI6IkjDtmhlIHdlbmlnZXIgYWxzIG1pbWltdW0gZXJsYXVidCIsImJ0bC1zaGlwbWVudF9iYWNrZW5kLWVycm9yX21heC1idGwtcmVmZXJlbmNlLWNsaWNrcy1leGNlZWRlZCI6IkRpZXNlciBMaW5rIGlzdCBhYmdlbGF1ZmVuLiIsIm5vLW5pY2tuYW1lLWluLXBheW1lbnQtcHJvZmlsZSI6IktlaW5lciBJaHJlciBBY2NvdW50cyBiZXNpdHp0IGVpbmVuIE5pY2tuYW1lLiBFcnN0ZWxsZW4gU2llIGVudHdlZGVyIGVpbmVuIEFjY291bnQtTmlja25hbWUgb2RlciB3w6RobGVuIFNpZSBlaW5lIGFuZGVyZSBPcHRpb24uIiwiY29tbW9uX2JhY2tlbmQtZXJyb3JfY3VzdG9tcy1pbnZvaWNlLXRlbXBsYXRlLW5hbWUtaXMtbm90LXVuaXF1ZSI6Ik5hbWUgYmVyZWl0cyB2ZXJnZWJlbiIsImNvbW1vbl9tc2dfY2ktbW9kYWwtdGl0bGUiOiJFaW4gRmVobGVyIGlzdCBhdWZnZXRyZXRlbiIsImFsZXJ0LWFjdGlvbl9iYWNrZW5kLWVycm9yX2ZvcmJpZGRlbl9yZWNlaXZlcl9jb250YWN0IjoiRGllIFZlcnNlbmRlcmFkcmVzc2UgaXN0IHVuZ8O8bHRpZyBvZGVyIG5pY2h0IG1laHIgZXJsYXVidC4gV8OkaGxlbiBTaWUgZWluZW4gYW5kZXJlbiBLb250YWt0IGF1cyBJaHJlbSBBZHJlc3NidWNoLiIsImNvbW1vbl9tc2dfaWUtdGF4LWlkLWlzZW50byI6IkEgdmFsaWQgVGF4IElEIG51bWJlciBpcyByZXF1aXJlZC4gQ2Fubm90IGJlIGV4ZW1wdC4iLCJjb21tb25fYmFja2VuZC1lcnJvcl9idGwtbWlzc2luZy1wYWNrYWdlLWRpbWVuc2lvbi1kZXRhaWxzIjoiUGFja2FnZSBkaW1lbnNpb24gRXJmb3JkZXJsaWNoIiwiY29tbW9uX2JhY2tlbmQtZXJyb3JfZmlsZS1yZWFkaW5nLWVycm9yIjoiVXBsb2FkIG5pY2h0IGVyZm9sZ3QiLCJhbGVydC1hY3Rpb25fbXNnX2ludmFsaWRfc2hpcG1lbnRfd2VpZ2h0X3BlcmlvZCI6IkludmFsaWQgc2hpcG1lbnQgd2VpZ2h0IHBlcmlvZCIsImNvbW1vbl9tc2dfcGVuZGluZy1hY3RpdmF0aW9uIjoiU2llIG3DvHNzZW4gSWhyZSBSZWdpc3RyaWVydW5nIGFrdGl2aWVyZW4iLCJjb21tb25fZXJyb3JfYWNjZXNzLWZvcmJpZGRlbi1tZXNzYWdlIjoiWnVnYW5nIHZlcndlaWdlcnQuIEtvbnRha3RpZXJlbiBTaWUgSWhyZW4gREhMIEFjY291bnRtYW5hZ2VyLiIsImNvbW1vbl9tc2dfc2Vzc2lvbi10aW1lb3V0IjoiU2l0enVuZyBhYmdlbGF1ZmVuIiwiY29tbW9uX2JhY2tlbmQtZXJyb3JfdXNlci1sb2NrZWQiOiJMb2dpbiBuaWNodCBtw7ZnbGljaC4gS29udGFrdGllcmVuIFNpZSBkZW4gREhMIEt1bmRlbnNlcnZpY2UgMDgyMC01NTA1MDUuIiwic2hpcG1lbnQtcXVvdGVfZXJyb3JfcHJvbW8tY29kZS12YWxpZGF0aW9uLWVycm9yLTIwMDAwMSI6IlJhYmF0dGNvZGUga29ubnRlIG5pY2h0IGVpbmdlbMO2c3Qgd2VyZGVuIiwiY3N2X3Byb2R1Y3RzX2ltcG9ydF9iYWNrZWQtZXJyb3JfaXNfbm90X2FfdmFsaWRfbnVtYmVyIjoiezF9IFVuZ8O8bHRpZyIsImFsZXJ0LWFjdGlvbl9iYWNrZW5kLWVycm9yX2N1c3RvbXNfaW52b2ljZS10eXBlLW9mLWV4cG9ydC1ub3QtbWF0Y2gtcHJlZGVmaW5lZC12YWx1ZXMiOiJJaHIgQWRtaW5pc3RyYXRvciBoYXQgZGllIFpvbGxyZWNobnVuZyBFeHBvcnR0eXAgT3B0aW9uZW4gZ2XDpG5kZXJ0LiBEaWUgdm9uIElobmVuIGdld8OkaGx0ZSBPcHRpb24gaXN0IG5pY2h0IGzDpG5nZXIgdmVyZsO8Z2Jhci4gw4RuZGVybiBTaWUgSWhyZSBab2xscmVjaG51bmcgRXhwb3J0dHlwIEF1c3dhaGwgdW0gZm9ydHp1ZmFocmVuLiIsInNoaXBtZW50LXF1b3RlX2Vycm9yX3Byb21vLWNvZGUtdmFsaWRhdGlvbi1lcnJvci0yMDAwMDQiOiJSYWJhdHRjb2RlIGthbm4gZsO8ciBkYXMgQWJzZW5kZXJsYW5kIG5pY2h0IHZlcndlbmRldCB3ZXJkZW4iLCJjb25maXJtYXRpb25fYWxlcnRfZHVwbGljYXRlZC1mYXZvcml0ZS1uYW1lIjoiTmFtZSBiZXJlaXRzIHZlcmdlYmVuIiwic2hpcG1lbnQtcXVvdGVfZXJyb3JfcHJvbW8tY29kZS12YWxpZGF0aW9uLWVycm9yLTIwMDAwNSI6IlJhYmF0dGNvZGUga2FubiBmw7xyIGRhcyBBYnNlbmRlcmxhbmQgbmljaHQgdmVyd2VuZGV0IHdlcmRlbiIsImFjY291bnRfaW52YWxpZF9mb3Jfc2hpcG1lbnQiOiJVbmfDvGx0aWdlciBBY2NvdW50IiwiY29tbW9uX2JhY2tlbmQtZXJyb3JfcGFwZXJsZXNzLXRyYWRlLXNldHRpbmdzLWNvdWxkLW5vdC1iZS1udWxsIjoiRWluIEZlaGxlciBpc3QgYXVmZ2V0cmV0ZW4uIEJpdHRlIGtvbnRha3RpZXJlbiBTaWUgZGVuIHRlY2huaXNjaGVuIFN1cHBvcnQgdW50ZXIgKzQzIDIyMzYgMjA3IDExMTIgb3IgMTExNC4iLCJzaGlwbWVudC1xdW90ZV9lcnJvcl9wcm9tby1jb2RlLXZhbGlkYXRpb24tZXJyb3ItMjAwMDAyIjoiUHJvbW8gQ29kZSBhYmdlbGF1ZmVuIiwic2hpcG1lbnQtcXVvdGVfZXJyb3JfcHJvbW8tY29kZS12YWxpZGF0aW9uLWVycm9yLTIwMDAwMyI6IlJhYmF0dGNvZGUga29ubnRlIG5pY2h0IGVpbmdlbMO2c3Qgd2VyZGVuIiwiY29tbW9uX2JhY2tlbmQtZXJyb3JfYmlsbGluZy1zZGktY29kZS1pbnZhbGlkIjoiVW5nw7xsdGlnIiwic2hpcG1lbnQtcXVvdGVfZXJyb3JfcHJvbW8tY29kZS12YWxpZGF0aW9uLWVycm9yLTIwMDAwOCI6IlJhYmF0dGNvZGUga29ubnRlIG5pY2h0IGVpbmdlbMO2c3Qgd2VyZGVuIiwiY29tbW9uX2JhY2tlbmQtZXJyb3JfdHJ1c3QtZXYtdmFsaWRhdGlvbi1mYWlsZWQiOiJXaXIgaGFiZW4gZWluIFByb2JsZW0gYmVpIElocmVyIFNlbmR1bmcgZmVzdGdlc3RlbGx0LiIsInNoaXBtZW50LXF1b3RlX2Vycm9yX3Byb21vLWNvZGUtdmFsaWRhdGlvbi1lcnJvci0yMDAwMDYiOiJSYWJhdHRjb2RlIGtvbm50ZSBuaWNodCBlaW5nZWzDtnN0IHdlcmRlbiIsImNvbW1vbl9iYWNrZW5kLWVycm9yX3Nzby10b2tlbi1wcm9jZXNzaW5nLWVycm9yIjoiTG9naW4gZmVobGdlc2NobGFnZW4uIEJpdHRlIHdlbmRlbiBTaWUgc2ljaCBhbiBJaHJlbiBVbnRlcm5laG1lbnMtQWRtaW5pc3RyYXRvci4iLCJzaGlwbWVudC1xdW90ZV9lcnJvcl9wcm9tby1jb2RlLXZhbGlkYXRpb24tZXJyb3ItMjAwMDA3IjoiUmFiYXR0Y29kZSBrb25udGUgbmljaHQgZWluZ2Vsw7ZzdCB3ZXJkZW4iLCJhbGVydC1hY3Rpb25fYmFja2VuZC1lcnJvcl9jYXJkLWRldGFpbHMtaXMtbm90LWZvdW5kIjoiRGllIEtyZWRpdGthcnRlbiBEZXRhaWxzIGtvbm50ZW4gbmljaHQgZ2VmdW5kZW4gd2VyZGVuIiwiY29tbW9uX2JhY2tlbmQtZXJyb3JfaW5zdXJhbmNlLWN1cnJlbmN5LWludmFsaWQiOiJVbmfDvGx0aWcgU2VuZHVuZ3N2ZXJzaWNoZXJ1bmcgV8OkaHJ1bmciLCJjb21tb25fYmFja2VuZC1lcnJvcl9zaGlwbWVudC1nc3Qtc3VwcGxpZWQtZm9yLWV4cG9ydC1hbmQtYWdhaW5zdC1ib25kLWZpZWxkcy1pbnZhbGlkLWNvbWJpbmF0aW9uIjoiSW52YWxpZCBjb21iaW5hdGlvbiBvZiBmb2xsb3dpbmcgSW5kaWEgR1NUIGZpZWxkczogQWdhaW5zdCBCb25kIGFuZCBVVCBvciBTdXBwbHkgZm9yIEV4cG9ydCIsImNvbW1vbl9tc2dfc2VydmVyLWVycm9yIjoiRWluIEZlaGxlciBpc3QgYXVmZ2V0cmV0ZW4iLCJhbGVydC1hY3Rpb25fYmFja2VuZC1lcnJvcl9waWNrdXAtYm9va2luZy1pcy1ub3QtYWxsb3dlZC1mb3ItdGhpcy1zaGlwbWVudCI6Ikt1cmllcmFiaG9sdW5nIG5pY2h0IGVybGF1YnQiLCJhbGVydC1hY3Rpb25fYmFja2VuZC1lcnJvcl9pbnZhbGlkLXZhbHVlcy1pbi1lbGVjdHJvbmljLWV4cG9ydC1maWxpbmctc2VjdGlvbiI6IkludmFsaWQgdmFsdWVzIGluIEVsZWN0cm9uaWMgRXhwb3J0IEZpbGluZyBzZWN0aW9uIiwiY29tbW9uX2JhY2tlbmQtZXJyb3Jfbm9uX2ZheF9waG9uZV90eXBlX21pc3NpbmciOiJEaWUgRmF4bnVtbWVyIGthbm4gbmljaHQgZGllIGVpbnppZ2UgYW5nZWdlYmVuZSBOdW1tZXIgc2Vpbi4iLCJjb21tb25fYmFja2VuZC1lcnJvcl9zaGlwbWVudC1nc3QtbWF4LWRpc3RhbmNlIjoiTWF4aW1hbCBUcmFuc3BvcnQgRGlzdGFuY2U6IDMwMDAiLCJjb21tb25fZXJyb3JfaW52YWxpZC11cmwiOiJ1bmfDvGx0aWdlIFVSTCIsImNvbW1vbl9iYWNrZW5kLWVycm9yX3VuYXBwcm9wcmlhdGUtdXNlci1zdGF0dXMiOiJBY2NvdW50IGdlc3BlcnJ0LiBLb250YWt0aWVyZW4gU2llIElocmVuIEFjY291bnRhZG1pbmlzdHJhdG9yIG9kZXIgdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LiIsImNvbW1vbl9lcnJvcl9jb250YWN0LWhlbHAtZGVzayI6IkVpbiBGZWhsZXIgaXN0IGF1ZmdldHJldGVuIiwiY29tbW9uX21zZ19pbnZhbGlkLWNvbWJpbmF0aW9uLXBvc3RhbC16aXAtc3RhdGUtY2l0eSI6IlBvc3RsZWl0emFobCwgU3RhdGUgdW5kIFN0YWR0IHN0aW1tdCBuaWNodCDDvGJlcmVpbiIsImNvbW1vbl9tc2dfc2VydmljZS1jdXJyZW50bHktdW5hdmFpbGFibGUiOiJTb3JyeSBcdTIwMTMgdW5zZXIgU3lzdGVtIGlzdCBkZXJ6ZWl0IG5pY2h0IHZlcmbDvGdiYXIuIEJpdHRlIHZlcnN1Y2hlbiBTaWUgZXMgc3DDpHRlciBub2NoIGVpbm1hbCBvZGVyIGtvbnRha3RpZXJlbiBTaWUgdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1ICgyMCBjdCBqZSBBbnJ1ZiBhdXMgZGVuIGRldXRzY2hlbiBGZXN0bmV0emVuLCBtYXguIDYwIGN0IGF1cyBkZW4gZGV1dHNjaGVuIE1vYmlsZnVua25ldHplbikuIiwic2hpcG1lbnQtb3B0aW9uYWwtc2VydmljZXNfZXJyb3ItbWVzc2FnZV9zZWxlY3RlZC1vcHRpb25hbC1zZXJ2aWNlcy1hcmUtbm90LWF2YWlsYWJsZSI6Ik5pY2h0IHZlcmbDvGdiYXIgezB9IiwiYWxlcnQtYWN0aW9uX2JhY2tlbmQtZXJyb3JfY3VzdG9tc19pbnZvaWNlLW51bWJlci1vZi1kaWdpdHMtZm9yLXdlaWdodC1pcy1pbnZhbGlkIjoiVW5nw7xsdGlnIEdld2ljaHQiLCJhbGVydC1hY3Rpb25fYmFja2VuZC1lcnJvcl9jdXN0b21zX2ludm9pY2UtY2l0aWVzLWRlY2xhcmF0aW9uLWlzLW5vdC1hbGxvd2VkIjoiQ0lUSUVTIGVya2zDpHJ1bmcgbmljaHQgZXJsYXVidCIsImFsZXJ0LWFjdGlvbl9iYWNrZW5kLWVycm9yX3NoaXBtZW50LWluc3VyYW5jZS1jdXJyZW5jeS1pcy1udWxsIjoiR2ViZW4gU2llIGVpbmUgV8OkaHJ1bmcgZsO8ciBkaWUgVHJhbnNwb3J0dmVyc2ljaGVydW5nIGFuIiwiYWxlcnQtYWN0aW9uX2JhY2tlbmQtZXJyb3JfZnJvbS1jdXN0b21lci1lbWFpbC1pcy1tYW5kYXRvcnkiOiJTaGlwIEZST00gZW1haWwgYWRkcmVzcyByZXF1aXJlZCIsImFsZXJ0LWFjdGlvbl9iYWNrZW5kLWVycm9yX3BpY2t1cC1ib29raW5nLWRhdGEtaW5jb25zaXN0ZW50IjoiUGlja3VwIHNob3VsZCBiZSBwcmVzZW50IGZvciBtYW5kYXRvcnkgaW5kaWNhdG9yIG9ubHkiLCJjb21tb25fYmFja2VuZC1lcnJvcl9lbXB0eS1jb21wYW55LW5vbi1yZXNpZGVudGlhbC1hZGRyZXNzIjoiRmlybWEgZXJmb3JkZXJsaWNoIiwiYWxlcnQtYWN0aW9uX2JhY2tlbmQtZXJyb3JfZm9yYmlkZGVuX3NlbmRlcl9jb250YWN0IjoiRGllIEVtcGbDpG5nZXJhZHJlc3NlIGlzdCB1bmfDvGx0aWcgb2RlciBuaWNodCBtZWhyIGVybGF1YnQuIFfDpGhsZW4gU2llIGVpbmVuIGFuZGVyZW4gS29udGFrdCBhdXMgSWhyZW0gQWRyZXNzYnVjaC4iLCJjb21tb25fZXJyb3JfZGF0ZS1yYW5nZS13cm9uZy1mb3JtYXQiOiJVbmfDvGx0aWdlcyBGb3JtYXQiLCJjb21tb25fYmFja2VuZC1lcnJvcl9maWxlLXR5cGUtd3JvbmciOiJVbnRlcnN0w7x0enRlIERhdGVpZm9ybWF0ZSBzaW5kIHtmb3JtYXRzfSIsImNvbW1vbl9iYWNrZW5kLWVycm9yX2JpbGxpbmctc2RpLWNvZGUtc2hvdWxkLWJlLWVtcHR5IjoiU2hpcG1lbnQgZG9lcyBub3QgcmVxdWlyZSBTREkgQ29kZS4gUmVtb3ZlIFNESSBDb2RlIGRldGFpbHMgdG8gY29udGludWUuIiwiYWxlcnQtYWN0aW9uX21zZ19tYXgtd2lkdGgtcGVyLXNoaXBtZW50IjoiQnJlaXRlIMO8YmVyc2NocmVpdGV0IGRhcyB6dWzDpHNzaWdlIE1heGltdW0iLCJhY2NvdW50X25vdF9zdXBwb3J0c19wYWxsZXQiOiJVbmfDvGx0aWdlciBBY2NvdW50IiwiYWNjb3VudF9pbnZhbGlkX3dlaWdodF9vcl9kaW1lbnNpb24iOiJHZXdpY2h0IG9kZXIgTWHDn2UgaMO2aGVyIGFscyBtYXhpbWFsIHp1Z2VsYXNzZW4iLCJjb21tb25fZXJyb3JfZGN0LWlzc3VlLXdpdGgtcHJpY2UtZW5naW5lIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+PGRpdiBjbGFzcz0ibWVzc2FnZS13cmFwcGVyIj48cD5FcyB0dXQgdW5zIGxlaWQsIGVzIGJlc3RlaHQgYWt0dWVsbCBlaW4gdGVjaG5pc2NoZXMgUHJvYmxlbSB1bmQgd2lyIGvDtm5uZW4gSWhyZSBTZW5kdW5nIG5pY2h0IGZlcnRpZyBzdGVsbGVuLiA8XC9wPjx1bD48bGk+QmVpIE15REhMKyByZWdpc3RyaWVydCAtIElocmUgU2VuZHVuZyB3aXJkIHVudGVyIFwiU2VuZHVuZ2VuIFZlcndhbHRlblwiIGdlc3BlaWNoZXJ0LiBCaXR0ZSBsb2dnZW4gU2llIHNpY2ggZXJuZXV0IGVpbiwgdW0gc2llIHp1IHZlcnZvbGxzdMOkbmRpZ2VuLjxcL2xpPjxsaT5XZW5uIHNpZSBOSUNIVCBiZWkgTXlESEwrIGFuZ2VtZWxkZXQgc2luZCB3ZXJkZW4gd2lyIElobmVucGVyIEUtTWFpbCBlaW5lbiBMaW5rIHp1c2VuZGVuIHVtIGZvcnNldHplbnp1IGvDtm5uZW4uIFdlbm4gSWhyZSBTZW5kdW5nIGRyaW5nZW5kIGlzdCwga29udGFrdGllcmVuIFNpZSBiaXR0ZSB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUuPFwvbGk+PFwvdWw+PFwvZGl2PjxcL2Rpdj4iLCJjb21tb25fYmFja2VuZC1lcnJvcl9iaWxsaW5nLWNvbXBhbnktc2hvdWxkLW5vdC1iZS1wcmVzZW50IjoiQmlsbGluZyBjb21wYW55IHNob3VsZCBub3QgYmUgcHJlc2VudCIsImNvbW1vbl9lcnJvcl9kY3Qtd2FybmluZy13aXRoLXBvc3RhbC1sb2NhdGlvbi1sb29rdXAiOiI8ZGl2IGNsYXNzPVwiZXdmX2RpY3Rpb25hcnlfdmFsdWVcIj48ZGl2IGNsYXNzPSJtZXNzYWdlLXdyYXBwZXIiPjxwPkVzIHR1dCB1bnMgbGVpZCwgZXMgYmVzdGVodCBha3R1ZWxsIGVpbiB0ZWNobmlzY2hlcyBQcm9ibGVtIHVuZCB3aXIga8O2bm5lbiBJaHJlIFNlbmR1bmcgbmljaHQgZmVydGlnIHN0ZWxsZW4uIDxcL3A+PHVsPjxsaT5CZWkgTXlESEwrIHJlZ2lzdHJpZXJ0IC0gSWhyZSBTZW5kdW5nIHdpcmQgdW50ZXIgXCJTZW5kdW5nZW4gVmVyd2FsdGVuXCIgZ2VzcGVpY2hlcnQuIEJpdHRlIGxvZ2dlbiBTaWUgc2ljaCBlcm5ldXQgZWluLCB1bSBzaWUgenUgdmVydm9sbHN0w6RuZGlnZW4uPFwvbGk+PGxpPldlbm4gc2llIE5JQ0hUIGJlaSBNeURITCsgYW5nZW1lbGRldCBzaW5kIHdlcmRlbiB3aXIgSWhuZW5wZXIgRS1NYWlsIGVpbmVuIExpbmsgenVzZW5kZW4gdW0gZm9yc2V0emVuenUga8O2bm5lbi4gV2VubiBJaHJlIFNlbmR1bmcgZHJpbmdlbmQgaXN0LCBrb250YWt0aWVyZW4gU2llIGJpdHRlIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS48XC9saT48XC91bD48XC9kaXY+PFwvZGl2PiIsImFsZXJ0LWFjdGlvbl9iYWNrZW5kLWVycm9yX3BpY2t1cC1ib29raW5nLWlzLW5vdC1hbGxvd2VkLWZvci10aGlzLXVzZXIiOiJLdXJpZXJhYmhvbHVuZyBuaWNodCBlcmxhdWJ0IiwiYWxlcnQtYWN0aW9uX2JhY2tlbmQtZXJyb3JfZWRpdF9sb2NrZWRfcGx0IjoiRGllc2VyIFNlbmR1bmdzYXVmdHJhZyBrYW5uIG5pY2h0IGdlw6RuZGVydCB3ZXJkZW4gLSBab2xscmVjaG51bmcgd3VyZGUgYmVyZWl0cyBkaWdpdGFsIMO8YmVybWl0dGVsdC4iLCJhbGVydC1hY3Rpb25fYmFja2VuZC1lcnJvcl9wYWNrYWdpbmctdmFsaWRhdGlvbi13ZWlnaHQtaXMtbW9yZS10aGFuLWFsbG93ZWQiOiJHZXdpY2h0IGjDtmhlciBhbHMgbWF4aW1hbCB6dWdlbGFzc2VuIiwiY29tbW9uX2JhY2tlbmQtZXJyb3Jfc2hpcG1lbnQtY3VycmVuY3ktaW52YWxpZCI6IlVuZ8O8bHRpZyBEZWtsYXJpZXJ0ZXIgV2VydCBXw6RocnVuZyIsImNvbW1vbl9hbGVydF9wcm92aWV3LWZhaWxlZCI6IlNvcnJ5IFx1MjAxMyB1bnNlciBTeXN0ZW0gaXN0IGRlcnplaXQgbmljaHQgdmVyZsO8Z2Jhci4gQml0dGUgdmVyc3VjaGVuIFNpZSBlcyBzcMOkdGVyIG5vY2ggZWlubWFsIG9kZXIga29udGFrdGllcmVuIFNpZSB1bnNlcmVuIEt1bmRlbnNlcnZpY2UgdW50ZXIgMDgyMC01NTA1MDUgKDIwIGN0IGplIEFucnVmIGF1cyBkZW4gZGV1dHNjaGVuIEZlc3RuZXR6ZW4sIG1heC4gNjAgY3QgYXVzIGRlbiBkZXV0c2NoZW4gTW9iaWxmdW5rbmV0emVuKS4iLCJjb21tb25fYmFja2VuZC1lcnJvcl9pdGVtLWZpZWxkcy1ub3QtbnVsbC1mb3ItZG9jdW1lbnQiOiJEb2t1bWVudGVuLVNlbmR1bmdlbiBzb2xsdGVuIGtlaW5lIEFydGlrZWxkZXRhaWxzIGJlaW5oYWx0ZW4iLCJjb21tb25fYmFja2VuZC1lcnJvcl9uby1pbWFnZS1kYXRhLXdhcy1wcm92aWRlZCI6IkxvZ28gZXJmb3JkZXJsaWNoIiwiY29tbW9uX2JhY2tlbmQtZXJyb3JfYnJhemlsX3NoaXBtZW50X2Nmb3BfbXVzdF9ub3RfYmVfZW1wdHkiOiJDRk9QIEVyZm9yZGVybGljaCIsImFsZXJ0LWFjdGlvbl9iYWNrZW5kLWVycm9yX25vLXNoYXJlLW9wdGlvbi1oYXMtYmVlbi1zZWxlY3RlZCI6IkVpbmUgT3B0aW9uIHp1bSBmb3J0ZmFocmVuIGF1c3fDpGhsZW4iLCJjb21tb25fbXNnX2ZpbGUtdHlwZS13cm9uZyI6IlVudGVyc3TDvHR6dGUgRGF0ZWlmb3JtYXRlIHNpbmQge2Zvcm1hdHN9IiwiaG9tZV9iYWNrZW5kLWVycm9yX2Nhbm5vdC1hcmNoaXZlLWRvY3VtZW50cyI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPjxkaXYgY2xhc3M9Im1lc3NhZ2Utd3JhcHBlciI+PHA+PGI+V0lDSFRJRzxcL2I+PFwvcD5cbjxwPjxiPkJpdHRlIERva3VtZW50ZSBhdXNkcnVja2VuITxcL2I+PFwvcD5cbjxwPsKgPFwvcD5cbjxwPkVudHNjaHVsZGlndW5nIC0gZWluIEZlaGxlciBpc3QgYXVmZ2V0cmV0ZW4gdW5kIHdpciBrw7ZubmVuIGRlcnplaXQga2VpbmUgWm9sbGRva3VtZW50ZSBkaWdpdGFsIHZvcmxlZ2VuLiBCaXR0ZSBkcnVja2VuIFNpZSBLb3BpZW4gSWhyZXIgWm9sbHJlY2hudW5nZW4gYXVzLCB1bSBTaWUgenVyIFpvbGxyZWNobnVuZyBoaW56dXp1ZsO8Z2VuLjxcL3A+XG48XC9kaXY+PFwvZGl2PiIsImNvbW1vbl9tc2dfcGF0dGVybi1saWNlbnNlLWVycm9yLW1lc3NhZ2UiOiJFcmxhdWJ0ZSBaZWljaGVuOiBBbHBoYWJldGlzY2gsIE51bWVyaXNjaCwgTGVlcnplaWNoZW4gdW5kIFB1bmt0IiwiYWxlcnQtYWN0aW9uX2JhY2tlbmQtZXJyb3JfY3VzdG9tc19pbnZvaWNlLWNvbWJpbmVkLWludm9pY2UtbGluZS1pdGVtLWV4Y2Vzcy1tYXgtdmFsdWUtZm9yLWZ0ciI6IkNvbWJpbmVkIGludm9pY2UgbGluZSBpdGVtIGV4Y2VzcyBtYXggdmFsdWUgZm9yIEZUUiIsImNvbW1vbl9tc2dfZmlsZW5hbWUtY2hhcmFjdGVyLWVycm9yLW1lc3NhZ2UiOiJEYXRlaW5hbWUgZGFyZiBuaWNodCBlbnRoYWx0ZW46IHtpbnZhbGlkQ2hhcmFjdGVyc30iLCJhbGVydC1hY3Rpb25fYmFja2VuZC1lcnJvcl9jdXN0b21zLWludm9pY2UtZXVyMS1kZWNsYXJhdGlvbi1pcy1ub3QtYWxsb3dlZCI6IkVVUi0xIGVya2zDpHJ1bmcgbmljaHQgZXJsYXVidCIsImNvbW1vbl9iYWNrZW5kLWVycm9yX2JyYXppbF9wYWNrYWdlX3NoaXBtZW50X25vdF9hbGxvd2VkIjoiU2hpcHBpbmcgcGFja2FnZXMgdG8gQnJhemlsIGlzIG5vdCBhbGxvd2VkIGZvciB0aGlzIGFjY291bnQuIiwiY29tbW9uX2JhY2tlbmQtZXJyb3JfZW1wdHktZGVjbGFyZWQtdmFsdWUiOiJCaXR0ZSBnZWJlbiBTaWUgZGVuIGRla2xhcmllcnRlbiBXYXJlbndlcnQgYW4iLCJhbGVydC1hY3Rpb25fYmFja2VuZC1lcnJvcl9wYXBlcmxlc3MtdHJhZGluZy1zZXJ2aWNlLXN0YXR1cy1pcy1pbnZhbGlkLWZvci10aGlzLXNoaXBtZW50IjoiS2FubiBkaWUgWm9sbHJlY2hudW5nIGbDvHIgZGllc2UgU2VuZHVuZyBuaWNodCBkaWdpdGFsIHZlcnNlbmRlbiIsImNvbW1vbl9tc2dfaW52YWxpZC1waG9uZS1udW1iZXIiOiJ1bmfDvGx0aWdlIFRlbGVmb25udW1tZXIiLCJjb21tb25fYmFja2VuZC1lcnJvcl9iaWxsaW5nLW5hbWUtc2hvdWxkLW5vdC1iZS1wcmVzZW50IjoiQmlsbGluZyBuYW1lIHNob3VsZCBub3QgYmUgcHJlc2VudCIsImFsZXJ0LWFjdGlvbl9iYWNrZW5kLWVycm9yX2ZvcmJpZGRlbi1mb3ItdXNlci13aXRoLWxvZ2luLW9uLWJlaGFsZiI6IkFjdGlvbiBub3QgYWxsb3dlZCBieSBESEwgQWRtaW4iLCJzaGlwbWVudC1pdGFyX25vdC1hcHByb3ZlZCI6IklUQVIgbm90IGFwcHJvdmVkIiwiYWNjb3VudF9jcmVkaXRfaXNfc3RvcHBlZCI6IkRpZXNlciBBY2NvdW50IGlzdCBnZXNwZXJydCB1bmQga2FubiBha3R1ZWxsIG5pY2h0IGbDvHIgWmFobHVuZ2VuIHZlcndlbmRldCB3ZXJkZW4iLCJhbGVydC1hY3Rpb25fYmFja2VuZC1lcnJvcl9pbnZhbGlkX2luc3VyYW5jZSI6IkludmFsaWQgbWF4aW11bSBpbnN1cmFuY2UgdmFsdWUiLCJjb21tb25fYmFja2VuZC1lcnJvcl9zaGlwbWVudC1jdXJyZW5jeS1lbXB0eSI6IkJpdHRlIGdlYmVuIFNpZSBkZW4gZGVrbGFyaWVydGVuIFdhcmVud2VydCBhbiBXw6RocnVuZy4gRmFsbHMgU2llIGRlbm5vY2ggUHJvYmxlbWUgaGFiZW4gdW5kIElocmVuIFNlbmR1bmdzYXVmdHJhZyBuaWNodCB2ZXJ2b2xsc3TDpG5kaWdlbiBrw7ZubmVuLCBrb250YWt0aWVyZW4gU2llIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNS4gICIsImFsZXJ0LWFjdGlvbl9iYWNrZW5kLWVycm9yX2ludmFsaWQtbWFuaWZlc3RpbmctdHlwZS1mb3ItcGx0LXNoaXBtZW50IjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+PGRpdiBjbGFzcz0ibWVzc2FnZS13cmFwcGVyIj48cD5EaWUgZGlnaXRhbGUgWm9sbHJlY2hudW5nIGthbm4gbmljaHQgw7xiZXJ0cmFnZW4gd2VyZGVuLiBVbSBmb3J0enVmYWhyZW4gZW50ZmVybmVuIFNpZSBiaXR0ZSBkaWUgZGlnaXRhbGUgWm9sbHJlY2hudW5nIHZvbiBJaHJlbiBTZW5kdW5nZW4gdW5kIHZlcnN1Y2hlbiBTaWUgZXMgZXJuZXV0LjxcL3A+XG48cD7CoDxcL3A+XG48cD5PZGVyIFNpZSBrw7ZubmVuIEJpdHRlIGtvbnRha3RpZXJlbiBTaWUgZGVuIHRlY2huaXNjaGVuIFN1cHBvcnQgdW50ZXIgKzQzIDIyMzYgMjA3IDExMTIgb3IgMTExNCB1bSDDhG5kZXJ1bmdlbiBpbiBJaHJlbiBNYW5pZmVzdCBPcHRpb25lbiBhbnp1Zm9yZGVybi48XC9wPlxuPFwvZGl2PjxcL2Rpdj4iLCJhbGVydC1hY3Rpb25fYmFja2VuZC1lcnJvcl9zaGlwbWVudC1pbnN1cmFuY2Utbm90LWF2YWlsYWJsZS1mb3ItZG9jdW1lbnQtc2hpcG1lbnQiOiJTZW5kdW5nc3ZlcnNpY2hlcnVuZyBuaWNodCBhbmdlYm90ZW4iLCJhbGVydC1hY3Rpb25fYmFja2VuZC1lcnJvcl9lZGl0X2xvY2tlZF9uZmUiOiJTZW5kdW5nIGthbm4gbmljaHQgYmVhcmJlaXRldCB3ZXJkZW4iLCJhbGVydC1hY3Rpb25fYmFja2VuZC1lcnJvcl9wYWNrYWdpbmctdmFsaWRhdGlvbi13ZWlnaHQtc2hvdWxkLWJlLW1vcmUtdGhhbi0wIjoiR2V3aWNodCBTb2xsdGUgbWVociBzZWluIGFscyAwIiwiY29tbW9uX21zZ19jaS1taXNjb25maWd1cmVkLWZvci1hY2NvdW50LWlkIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+PGRpdiBjbGFzcz0ibWVzc2FnZS13cmFwcGVyIj48cD5Gw7xyIGRpZXNlcyBMYW5kOiB7Y291bnRyeUNvZGV9PFwvcD5cbjxwPkRpZXNlcyBLb250byB2ZXJ3ZW5kZW46IHthY2NvdW50SWR9PFwvcD5cbjxwPkRpZXMgaXN0IG5pY2h0IHZlcmbDvGdiYXI6IHtjaUtleX0gPFwvcD5cbjxcL2Rpdj48XC9kaXY+IiwiY29tbW9uX21zZ193cm9uZy1zdGF0dXMtY29kZS1lcnJvciI6IiIsImJ0bC1zaGlwbWVudF9iYWNrZW5kLWVycm9yX3dyb25nLWJ0bC1waWNrdXAtZGF0ZSI6IkVpbmUgQWJob2x1bmcga2FubiBmw7xyIGRlbiB2b24gSWhuZW4gYXVzZ2V3w6RobHRlbiBUYWcgbmljaHQgZ2VidWNodCB3ZXJkZW4uIFfDpGhsZW4gU2llIGVpbiBhbmRlcmVzIERhdHVtLiIsImNvbW1vbl9lcnJvcl9yZXF1aXJlZC1maWVsZC1lcnJvci1wYXNzd29yZC1pcy1lbXB0eSI6IkVyZm9yZGVybGljaCIsImNvbW1vbl9iYWNrZW5kLWVycm9yX2FkZHJlc3MtYm9vay1mb3JtYXQtaWUtdGF4LWlkIjoidW5nw7xsdGlnZSBTdGV1ZXIgSUQiLCJjb21tb25fbXNnX3VzZXItc2hvdWxkLW5vdC1iZS1hbm9ueW1vdXMiOiJadWdhbmcgdmVyd2VpZ2VydC4gQml0dGUga29udGFrdGllcmVuIFNpZSBlaW5lbiBESEwgQWRtaW5pc3RyYXRvciB6dXIgVW50ZXJzdMO8dHp1bmcuIiwiY29tbW9uX2JhY2tlbmQtZXJyb3JfdXNlci1ub3QtdmFsaWQiOiJVbmfDvGx0aWdlIEUtTWFpbCBBZHJlc3NlIiwiY29tbW9uX2JhY2tlbmQtZXJyb3Jfd3JvbmctcG9zdC1jb2RlLWZvcm1hdCI6IlVuZ8O8bHRpZ2UgUExaIiwiY29tbW9uX2JhY2tlbmQtZXJyb3JfYmlsbGluZy1ib3RoLWNhc2gtYW5kLW9ubGluZS1iaWxsaW5nLWN1c3RvbWVyLXByZXNlbnQiOiJXw6RobGVuIFNpZSBlaW5lIFphaGx1bmdzbWV0aG9kZSIsImNvbW1vbl9iYWNrZW5kLWVycm9yX3Bob25lLW51bWJlci1pcy13cm9uZyI6InVuZ8O8bHRpZ2UgVGVsZWZvbm51bW1lciIsImFsZXJ0LWFjdGlvbl9iYWNrZW5kLWVycm9yX3NoaXBtZW50LWV4dGVuZGVkLWxpYWJpbGl0eS1ub3QtYXZhaWxhYmxlLWZvci1wYWNrYWdlLXNoaXBtZW50IjoiU2VuZHVuZ3N2ZXJzaWNoZXJ1bmcgbmljaHQgYW5nZWJvdGVuIiwiY29tbW9uX21zZ19jb3VudHJ5LWlzLW5vdC1hY3RpdmF0ZWQiOiJMYW5kICIsImNvbW1vbl9tc2dfdXBsb2FkZWQtZmlsZS1oYXMtd3JvbmctZGltZW5zaW9ucyI6Im1heGltYWxlIERhdGVpZ3LDtsOfZSB7ZmlsZVNpemV9IiwiYWxlcnQtYWN0aW9uX2JhY2tlbmQtZXJyb3JfbWlzc2luZy1pbnZvaWNlLWJpbGxpbmctY3VzdG9tZXItZmllbGRzIjoiWm9sbHJlY2hudW5nIFJlY2hudW5nc2FkcmVzc2UgRXJmb3JkZXJsaWNoOiB7MH0iLCJhbGVydC1hY3Rpb25fYmFja2VuZC1lcnJvcl9wYWNrYWdpbmctdmFsaWRhdGlvbi13aWR0aC1pcy1pbmNvcnJlY3QiOiJVbmfDvGx0aWcgQnJlaXRlIiwiY29tbW9uX21zZ19jaS13cm9uZy1jb25maWd1cmVkIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+PGRpdiBjbGFzcz0ibWVzc2FnZS13cmFwcGVyIj48cD5Gw7xyIGRpZXNlcyBMYW5kOiB7Y291bnRyeUNvZGV9PFwvcD5cbjxwPkRpZXMgaXN0IG5pY2h0IHZlcmbDvGdiYXI6IHtjaUtleX0gPFwvcD5cbjxcL2Rpdj48XC9kaXY+IiwiY29tbW9uX2JhY2tlbmQtZXJyb3JfYnJhemlsX3NoaXBtZW50X2RhbmZlX2tleXNfcmVxdWlyZWQiOiJEQU5GZSBrZXkgRXJmb3JkZXJsaWNoIiwidmFsdWVfaXNfdW5rbm93biI6IkVpbiBGZWhsZXIgaXN0IGF1ZmdldHJldGVuIiwiY29tbW9uX21zZ192YWxpZGF0aW9uLXByb2hpYml0aW9uIjoiSWhyZSBTZW5kdW5nIGthbm4gSW5oYWx0c3N0b2ZmZSBlbnRoYWx0ZW4sIGRpZSB2ZXJib3RlbiBzaW5kLiBCaXR0ZSDDvGJlcnByw7xmZW4gU2llIGRpZSBMaXN0ZSB2ZXJib3RlbmVyIFN0b2ZmZSBmw7xyIGRhcyBFbXBmw6RuZ2VybGFuZC4iLCJjb21tb25fYmFja2VuZC1lcnJvcl9wbHQtc2hpcG1lbnQtd3JvbmctcGF5bWVudC10eXBlIjoiRGllc2UgWmFobHVuZ3NtZXRob2RlIGVybGF1YnQga2VpbmUgZGlnaXRhbGUgWm9sbHJlY2hudW5nIiwibWFuYWdlLWFjY291bnRzX21zZ19uby1zaGlwcGVyLWFjY291bnRzX3Byb3ZpZGVkIjoiQWNjb3VudG51bW1lciBkZXMgVmVyc2VuZGVycyBlcmZvcmRlcmxpY2giLCJjb21tb25fYmFja2VuZC1lcnJvcl9hZGRyZXNzLWJvb2stZm9ybWF0LWNucGotb3ItY3BmIjoiVW5nw7xsdGlnZXMgRm9ybWF0IiwiYWxlcnQtYWN0aW9uX2JhY2tlbmQtZXJyb3Jfc2hpcG1lbnQtZm9yYmlkZGVuIjoiRGllIFNlbmR1bmcga2FubiBuaWNodCB6dXIgQmVzdMOkdGlndW5nIMO8YmVydHJhZ2VuIHdlcmRlbi4gU2VuZHVuZ3NzdGFydGRhdHVtIGlzdCBuaWNodCBkZWZpbmllcnQuIEtvbnRha3RpZXJlbiBTaWUgSWhyZW4gQWRtaW5pc3RyYXRvci4iLCJjc3ZfcGFyc2luZ19leGNlcHRpb24tY291bnRyeV9jb2RlX2ludmFsaWQiOiJUd28gQ2hhcmFjdGVyIENvdW50cnkgY29kZSB7Y291bnRyeUNvZGV9IGlzIG5vdCB2YWxpZCIsImNvbW1vbl9iYWNrZW5kLWVycm9yX2JpbGxpbmctc2RpLWNvZGUtbGVuZ3RoLWV4Y2VlZHMtbWF4IjoiU0RJIENvZGUgOiB7bWF4TGVuZ3RofSIsImFsZXJ0LWFjdGlvbl9tc2dfbWF4LWhlaWdodC1wZXItc2hpcG1lbnQiOiJIw7ZoZSDDvGJlcnNjaHJlaXRldCBkYXMgenVsw6Rzc2lnZSBNYXhpbXVtIiwidXNlci1wcm9kdWN0c19iYWNrZW5kLWVycm9yX3Byb2R1Y3Qtd2FzLW1vZGlmaWVkLWJ5LWFub3RoZXItdXNlciI6Ikthbm4gbmljaHQgYmVhcmJlaXRldCB3ZXJkZW4iLCJjb21tb25fYmFja2VuZC1lcnJvcl9icmF6aWwtc2hpcG1lbnQtZGFuZmUta2V5cy1xdWFudGl0eS1leGNlZWRlZCI6IkV4Y2VlZGVkIHRoZSBtYXhpbXVtIGFtb3VudCBvZiBEQU5GZSBrZXlzIiwiYWxlcnQtYWN0aW9uX21zZ19tYXgtc2hpcG1lbnQtY29zdCI6IlZlcnNhbmRrb3N0ZW4gw7xiZXJzY2hyZWl0ZXQgZGFzIHp1bMOkc3NpZ2UgTWF4aW11bSIsImFsZXJ0LWFjdGlvbl9iYWNrZW5kLWVycm9yX3BhY2thZ2luZy12YWxpZGF0aW9uLWhlaWdodC13aWR0aC1sZW5ndGgtc2hvdWxkLWJlLWZpbGxlZCI6IkJpdHRlIGdlYmVuIFNpZSBlaW4gZ8O8bHRpZ2VzIEdld2ljaHQgdW5kIE1hw58gYW4iLCJjb21tb25fYmFja2VuZC1lcnJvcl9tYWlsaW5nLWxpc3QtaW52YWxpZC1jb250YWN0cyI6IktvbnRha3RlIGtvbm50ZW4gbmljaHQgenVyIE1haWxpbmdsaXN0ZSBoaW56dWdlZsO8Z3Qgd2VyZGVuLiBBZHJlc3NlbiBmZWhsZW4gb2RlciBlcmZvcmRlcm4gS29ycmVrdHVyZW4uIMOEbmRlcm4gb2RlciBmw7xnZW4gU2llIGRpZSBrb3JyZWt0ZW4gQWRyZXNzZW4gaGluenUgZsO8cjoiLCJjb21tb25fYmFja2VuZC1lcnJvcl9iaWxsaW5nLW5hbWUtc2hvdWxkLWJlLXByZXNlbnQiOiJCaWxsaW5nIG5hbWUgc2hvdWxkIGJlIHByZXNlbnQiLCJhbGVydC1hY3Rpb25fYmFja2VuZC1lcnJvcl9yZW1vdGUtcGlja3VwLWJvb2tpbmctaXMtbm90LWFsbG93ZWQtZm9yLWltcG9ydC1zaGlwbWVudCI6IkRlciBJbXBvcnQgQWNjb3VudCBpc3QgbmljaHQgZ2VlaWduZXQgZsO8ciBlaW5lIEFiaG9sdW5nIiwiY29tbW9uX21zZ19jaS1taXNjb25maWd1cmVkLWZvci1hY2NvdW50LWlkLXdpdGgtY3VzdG9tZXIiOiI8ZGl2IGNsYXNzPVwiZXdmX2RpY3Rpb25hcnlfdmFsdWVcIj48ZGl2IGNsYXNzPSJtZXNzYWdlLXdyYXBwZXIiPjxwPkbDvHIgZGllc2VzIExhbmQ6IHtjb3VudHJ5Q29kZX08XC9wPlxuPHA+RsO8cjoge2N1c3RvbWVySWR9PFwvcD5cbjxwPkRpZXNlcyBLb250byB2ZXJ3ZW5kZW46IHthY2NvdW50SWR9PFwvcD5cbjxwPkRpZXMgaXN0IG5pY2h0IHZlcmbDvGdiYXI6IHtjaUtleX0gPFwvcD5cbjxcL2Rpdj48XC9kaXY+IiwiYWxlcnQtYWN0aW9uX2JhY2tlbmQtZXJyb3JfdXMtaXRhci1mb2xsb3dpbmctZmllbGRzLWFyZS1ub3Qtc3BlY2lmaWVkIjoiezB9IEVyZm9yZGVybGljaCIsImFsZXJ0LWFjdGlvbl9iYWNrZW5kLWVycm9yX3VzLWl0bi1vci1mdHItYm90aC1maWVsZHMtYXJlLW5vdC1hbGxvd2VkIjoiU2VsZWN0IGVpdGhlciBJVE4gb3IgRlRSIG51bWJlciIsImFsZXJ0LWFjdGlvbl9iYWNrZW5kLWVycm9yX3BhY2thZ2luZy12YWxpZGF0aW9uLXRvdGFsLXBhY2thZ2UtcXVhbnRpdHktaXMtbW9yZS10aGFuLWFsbG93ZWQiOiJBbnphaGwgw7xiZXJzY2hyZWl0ZXQgbWF4aW1hbCBlcmxhdWJ0ZSBNZW5nZSIsImNvbW1vbl9iYWNrZW5kLWVycm9yX3NoaXBtZW50X3BheW1lbnRfY291bnRyaWVzX2ludmFsaWRfY29tYmluYXRpb24iOiJVbmfDvGx0aWcgTGFuZCIsImNvbW1vbl9iYWNrZW5kLWVycm9yX2JpbGxpbmctdmF0LW51bWJlci1pcy1yZXF1aXJlZCI6IkVyZm9yZGVybGljaCIsImNvbW1vbl9iYWNrZW5kLWVycm9yX3JlcXVlc3RlZC1maWxlLWRvZXMtbm90LWV4aXN0IjoiRGF0ZWkgbmljaHQgZ2VmdW5kZW4iLCJhbGVydC1hY3Rpb25fYmFja2VuZC1lcnJvcl91cy1pdGFyLWJpcy1zZWN0aW9uLWlzLW1hbmRhdG9yeSI6IklUQVIvQklTIEVyZm9yZGVybGljaCIsIm5vLXBpY2t1cC1yZXF1ZXN0LWZvdW5kIjoiS2VpbmVuIEFiaG9sYXVmdHJhZyBnZWZ1bmRlbiIsImNvbW1vbl9iYWNrZW5kLWVycm9yX2FkZHJlc3MtYm9vay1kZXRhaWwtaXMtZW1wdHkiOiJQZmxpY2h0ZmVsZGVyIG3DvHNzZW4gYXVzZ2Vmw7xsbHQgd2VyZGVuIiwiYWxlcnQtYWN0aW9uX2JhY2tlbmQtZXJyb3JfY3VzdG9tcy1pbnZvaWNlLWNlcnRpZmljYXRlLW9mLW9yaWdpbi1kZWNsYXJhdGlvbi1pcy1ub3QtYWxsb3dlZCI6IlVyc3BydW5nc3N6ZXJ0aWZpa2F0IEVya2zDpHJ1bmcgbmljaHQgZXJsYXVidCIsImNvbW1vbl9iYWNrZW5kLWVycm9yX2JyYXppbF9zaGlwbWVudF9tdXN0X25vdF9iZV9udWxsIjoiQnJhemlsIHNoaXBtZW50IHJlcXVpcmVkIiwiY29tbW9uX2JhY2tlbmQtZXJyb3JfYnJhemlsLXNoaXBtZW50LWNucGotbXVzdC1ub3QtYmUtZW1wdHkiOiJCcmF6aWwgc2hpcG1lbnQgdmFsaWRhdGlvbiAtIEJyYXppbCBzaGlwbWVudCBDTlBKL0NQRiBmaWVsZCBtdXN0IG5vdCBiZSBlbXB0eSIsImNvbW1vbl9tc2dfZ2F0ZXdheS10aW1lb3V0IjoiU29ycnkgXHUyMDEzIHVuc2VyIFN5c3RlbSBpc3QgZGVyemVpdCBuaWNodCB2ZXJmw7xnYmFyLiBCaXR0ZSB2ZXJzdWNoZW4gU2llIGVzIHNww6R0ZXIgbm9jaCBlaW5tYWwgb2RlciBrb250YWt0aWVyZW4gU2llIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNSAoMjAgY3QgamUgQW5ydWYgYXVzIGRlbiBkZXV0c2NoZW4gRmVzdG5ldHplbiwgbWF4LiA2MCBjdCBhdXMgZGVuIGRldXRzY2hlbiBNb2JpbGZ1bmtuZXR6ZW4pLiIsImNvbW1vbl9iYWNrZW5kLWVycm9yX2JpbGxpbmctZW1haWwtc2hvdWxkLWJlLXByZXNlbnQiOiJFLU1haWwgQWRyZXNzZSBiZW7DtnRpZ3QiLCJjb21tb25fbXNnX2ludmFsaWQtcmVzcG9uc2UtYmlsbC1kZXNrIjoiRXMgaXN0IHp1ciBaZWl0IG5pY2h0IG3DtmdsaWNoIGRpZSBCZXphaGx1bmcgbWl0IEtyZWRpdGthcnRlIGR1cmNoenVmw7xocmVuLiBCaXR0ZSB3w6RobGVuIFNpZSBlaW5lIGFsdGVybmF0aXZlIEJlemFobHVuZ3NtZXRob2RlLCB1bSBkaWUgU2VuZHVuZyBhYnp1c2NobGllw59lbi4iLCJjb21tb25fbXNnX3NpZ25lci10aXRsZS1zaG91bGQtYmUtZmlsbGVkIjoiVGl0ZWwgZXJmb3JkZXJsaWNoIiwiYWxlcnQtYWN0aW9uX2JhY2tlbmQtZXJyb3JfcGFja2FnaW5nLXZhbGlkYXRpb24taGVpZ2h0LWlzLWluY29ycmVjdCI6IlVuZ8O8bHRpZyBIw7ZoZSIsImNvbW1vbl9iYWNrZW5kLWVycm9yX2JyYXppbF9zaGlwbWVudF9ub3RhX2Zpc2NhbF9pdGVtc19tdXN0X25vdF9iZV9lbXB0eSI6Ik5vdGEgZmlzY2FsIGZvciBCcmF6aWwgc2hpcG1lbnQgcmVxdWlyZWQiLCJjb21tb25fbXNnX3BhdHRlcm4tZXJyb3ItbWVzc2FnZSI6IkVybGF1YnQ6IFphaGxlbiwgUHVua3QgdW5kIEtvbW1hIiwiYWxlcnQtYWN0aW9uX2JhY2tlbmQtZXJyb3JfaW52YWxpZF9zZW5kZXJfY29udGFjdF9kYXRhIjoiRGVyIFZlcnNhbmQgdm9uIGRpZXNlbSBLb250YWt0L2RpZXNlciBBZHJlc3NlIGlzdCB1bmfDvGx0aWcgb2RlciBuaWNodCBtZWhyIGVybGF1YnQuIEJpdHRlIHfDpGhsZW4gU2llIGVpbmVuIGFuZGVyZW4gS29udGFrdCBhdXMgSWhyZW0gQWRkcmVzc2J1Y2ggYXVzLiIsImNvbW1vbl9lcnJvcl9kY3QtaXNzdWUtd2l0aC1waWNrdXAtY2FwYWJpbGl0eSI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPjxkaXYgY2xhc3M9Im1lc3NhZ2Utd3JhcHBlciI+PHA+RXMgdHV0IHVucyBsZWlkLCBlcyBiZXN0ZWh0IGFrdHVlbGwgZWluIHRlY2huaXNjaGVzIFByb2JsZW0gdW5kIHdpciBrw7ZubmVuIElocmUgU2VuZHVuZyBuaWNodCBmZXJ0aWcgc3RlbGxlbi4gPFwvcD48dWw+PGxpPkJlaSBNeURITCsgcmVnaXN0cmllcnQgLSBJaHJlIFNlbmR1bmcgd2lyZCB1bnRlciBcIlNlbmR1bmdlbiBWZXJ3YWx0ZW5cIiBnZXNwZWljaGVydC4gQml0dGUgbG9nZ2VuIFNpZSBzaWNoIGVybmV1dCBlaW4sIHVtIHNpZSB6dSB2ZXJ2b2xsc3TDpG5kaWdlbi48XC9saT48bGk+V2VubiBzaWUgTklDSFQgYmVpIE15REhMKyBhbmdlbWVsZGV0IHNpbmQgd2VyZGVuIHdpciBJaG5lbnBlciBFLU1haWwgZWluZW4gTGluayB6dXNlbmRlbiB1bSBmb3JzZXR6ZW56dSBrw7ZubmVuLiBXZW5uIElocmUgU2VuZHVuZyBkcmluZ2VuZCBpc3QsIGtvbnRha3RpZXJlbiBTaWUgYml0dGUgdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LjxcL2xpPjxcL3VsPjxcL2Rpdj48XC9kaXY+IiwiY29tbW9uX2JhY2tlbmQtZXJyb3Jfc2hpcG1lbnQtZ3N0LWRhdGEtZW1wdHkiOiJHU1QvUEFOL0FhZGhhYXIgTnVtbWVyIEVyZm9yZGVybGljaCIsImNvbW1vbl9tc2dfcGFzc3dvcmQtaW5hcHByb3ByaWF0ZS1mb3JtYXQtbWVzc2FnZSI6IlVuZ8O8bHRpZ2VzIEZvcm1hdCIsImNvbW1vbl9tc2dfaW52YWxpZC1jb21iaW5hdGlvbi1zdWJ1cmItY2l0eSI6IlZvcm9ydCB1bmQgU3RhZHQgc3RpbW10IG5pY2h0IMO8YmVyZWluIiwiY29tbW9uX21zZ19sZW5ndGgtZXJyb3ItbWVzc2FnZSI6IsKgVGhlIGxlbmd0aCBvZiB0aGUgY2hhcmFjdGVycyBpcyBpbmNvcnJlY3QgaW4gdGhpcyBmaWVsZCIsImFjY291bnRfZG9lc19ub3Rfc3VwcG9ydF9vdXRib3VuZF9wcm9jZXNzaW5nIjoiVW5nw7xsdGlnZXIgQWNjb3VudCIsImNvbW1vbl9tc2dfY2FuLW5vdC1iZS1ibGFuayI6IlBmbGljaHRmZWxkZXIgbcO8c3NlbiBhdXNnZWbDvGxsdCB3ZXJkZW4iLCJhbGVydC1hY3Rpb25fYmFja2VuZC1lcnJvcl9jdXN0b21zLWludm9pY2UtcHJpbnQtcHJlZmVyZW50aWFsLW9yaWdpbi1kZWNsYXJhdGlvbi1pcy1ub3QtYWxsb3dlZCI6IkRydWNrZW4gQmV2b3J6dWd0ZSBIZXJrdW5mdCBFcmtsw6RydW5nIG5pY2h0IGVybGF1YnQiLCJhbGVydC1iYWNrZW5kLWVycm9yX3Byb2R1Y3Rfb3ZlcmR1ZV9yZWNvdmVyX2ZhaWxlZCI6IkJpdHRlIHfDpGhsZW4gU2llIGVpbmVuIGFuZGVyZXMgVmVyc2FuZGRhdHVtLiIsImFjY291bnRfaXNfaW5jb3JyZWN0X2Vycm9yIjoiVW5nw7xsdGlnZXIgQWNjb3VudCIsImNvbW1vbl9iYWNrZW5kLWVycm9yX2JyYXppbF9zaGlwbWVudF9tdXN0X2JlX251bGwiOiJCcmF6aWwgc2hpcG1lbnQgbXVzdCBiZSBudWxsIiwiYWxlcnQtYWN0aW9uX2JhY2tlbmQtZXJyb3JfZG9jdW1lbnQtZGVzY3JpcHRpb24taW52YWxpZCI6IkRva3VtZW50ZW5iZXNjaHJlaWJ1bmcgYXVzd8OkaGxlbiIsImNvbW1vbl9tc2dfbmZlLW1heC1rZXlzLWFtb3VudCI6Ik1heGltdW0gOTkga2V5cyBwZXIgc2hpcG1lbnQiLCJlcnJvcl9ub3QtYS1zaGlwcGVyLWFjY291bnQiOiJLZWluIFNoaXBwZXItQWNjb3VudCIsInNoaXBtZW50c19udW1iZXJfZXhjZWVkc19tYXhfdmFsdWUiOiJBbnphaGwgZGVyIFNlbmR1bmdlbiDDnGJlcnNjaHJlaXRldCBkYXMgenVsw6Rzc2lnZSBNYXhpbXVtIiwiYWxlcnQtYWN0aW9uX2JhY2tlbmQtZXJyb3JfaW52YWxpZC1wcm9kdWN0LWNvZGUiOiJVbmfDvGx0aWcgUHJvZHVrdGNvZGUgKDMgQnJpZWYpOiB7MH0iLCJhbGVydC1hY3Rpb25fYmFja2VuZC1lcnJvcl9wYWNrYWdpbmctdmFsaWRhdGlvbi10aGVyZS1pcy1uby1wYWNrYWdlLWZvci10aGUtcGllY2UiOiJBdXN3YWhsIFZlcnBhY2t1bmciLCJhbGVydC1hY3Rpb25fYmFja2VuZC1lcnJvcl9zaGlwbWVudC1pbnN1cmFuY2UtdmFsdWUtaXMtbW9yZS10aGFuLWNvbmZpZ3VyZWQtcGVyY2VudGFnZSI6IkRpZSBUcmFuc3BvcnR2ZXJzaWNoZXJ1bmcgw7xiZXJzdGVpZ3QgZGVuIG1heGltYWxlbiBXZXJ0IiwiY29tbW9uX2Vycm9yX2FjY291bnQtbm90LXVuaXF1ZSI6IkFjY291bnQgd2lyZCBiZXJlaXRzIGJlbnV0enQiLCJjb21tb25fbXNnX2ludmFsaWQtY2l0eSI6IlVuZ8O8bHRpZyBTdGFkdCIsImNvbW1vbl9lcnJvcl9kY3QtaXNzdWUtd2l0aC1yZXF1ZXN0LWZvcm1hdCI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPjxkaXYgY2xhc3M9Im1lc3NhZ2Utd3JhcHBlciI+PHA+RXMgdHV0IHVucyBsZWlkLCBlcyBiZXN0ZWh0IGFrdHVlbGwgZWluIHRlY2huaXNjaGVzIFByb2JsZW0gdW5kIHdpciBrw7ZubmVuIElocmUgU2VuZHVuZyBuaWNodCBmZXJ0aWcgc3RlbGxlbi4gPFwvcD48dWw+PGxpPkJlaSBNeURITCsgcmVnaXN0cmllcnQgLSBJaHJlIFNlbmR1bmcgd2lyZCB1bnRlciBcIlNlbmR1bmdlbiBWZXJ3YWx0ZW5cIiBnZXNwZWljaGVydC4gQml0dGUgbG9nZ2VuIFNpZSBzaWNoIGVybmV1dCBlaW4sIHVtIHNpZSB6dSB2ZXJ2b2xsc3TDpG5kaWdlbi48XC9saT48bGk+V2VubiBzaWUgTklDSFQgYmVpIE15REhMKyBhbmdlbWVsZGV0IHNpbmQgd2VyZGVuIHdpciBJaG5lbnBlciBFLU1haWwgZWluZW4gTGluayB6dXNlbmRlbiB1bSBmb3JzZXR6ZW56dSBrw7ZubmVuLiBXZW5uIElocmUgU2VuZHVuZyBkcmluZ2VuZCBpc3QsIGtvbnRha3RpZXJlbiBTaWUgYml0dGUgdW5zZXJlbiBLdW5kZW5zZXJ2aWNlIHVudGVyIDA4MjAtNTUwNTA1LjxcL2xpPjxcL3VsPjxcL2Rpdj48XC9kaXY+IiwiYWxlcnQtYWN0aW9uX2JhY2tlbmQtZXJyb3JfaW5zdXJhbmNlX25vdF9lbmFibGVkIjoiU2llIGTDvHJmZW4ga2VpbmUgVHJhbnNwb3J0dmVyc2ljaGVydW5nIHp1IGRlbiBTZW5kdW5nZW4gaGluenVmw7xnZW4uIEJpdHRlIGVudGZlcm5lbiBzaWUgZGllIFRyYW5zcG9ydHZlcnNpY2hlcnVuZyB1bSBkZW4gU2VuZHVuZ3NhdWZ0cmFnIGFienVzY2hsaWXDn2VuLiIsImFsZXJ0LWFjdGlvbl9tc2dfbWF4LXBhcnRzLXBlci1zaGlwbWVudCI6IkFuemFobCBTZW5kdW5nZW4vUGFja3N0w7xja2Ugw7xiZXJzY2hyZWl0ZXQgZGFzIHp1bMOkc3NpZ2UgTWF4aW11bSIsImNvbW1vbl9iYWNrZW5kLWNhbGxfcmF0ZV92YWxpZGF0aW9uX2Vycm9yIjoiQ2FsbCByYXRlIHZhbGlkYXRpb24gZmFpbHVyZSIsImFsZXJ0LWFjdGlvbl9iYWNrZW5kLWVycm9yX3BhY2thZ2luZy12YWxpZGF0aW9uLXF1YW50aXR5LW1vcmUtdGhhbi1hbGxvd2VkIjoiQW56YWhsIMO8YmVyc2NocmVpdGV0IG1heGltYWwgZXJsYXVidGUgTWVuZ2UiLCJsb2dpbl9iYWNrZW5kLWVycm9yX3Bhc3N3b3JkLWxvZ2luLW5vdC1hbGxvd2VkIjoiTG9naW4gZmVobGdlc2NobGFnZW4uIEJpdHRlIHdlbmRlbiBTaWUgc2ljaCBhbiBJaHJlbiBVbnRlcm5laG1lbnMtQWRtaW5pc3RyYXRvci4iLCJjb21tb25fYmFja2VuZC1lcnJvcl91bnN1cHBvcnRlZC1waG9uZS10eXBlIjoiVW5nw7xsdGlnIFRlbGVmb25hcnQiLCJsZW5ndGhfZXJyb3JfbWVzc2FnZSI6IkzDpG5nZSDDvGJlcnNjaHJlaXRldCBkYXMgenVsw6Rzc2lnZSBNYXhpbXVtIiwiYWxlcnQtYWN0aW9uX2JhY2tlbmQtZXJyb3JfY3VzdG9tcy1pbnZvaWNlLWNpdGllcy1kZWNsYXJhdGlvbi1pcy1ub3QtYWxsb3dlZCI6IkNJVElFUyBlcmtsw6RydW5nIG5pY2h0IGVybGF1YnQiLCJjb21tb25fYmFja2VuZC1lcnJvcl9waG9uZS1udW1iZXJzLWhhcy1iZWVuLWltcG9ydGVkLXdpdGgtYW4taW5jb3JyZWN0LWZvcm1hdCI6IntwaG9uZU51bWJlcnN9OiBGYWxzY2hlcyBGb3JtYXQgZGVyIFRlbGVmb25udW1tZXIuIERpZSBUZWxlZm9ubnVtbWVyIHdpcmQgbmljaHQgYW5nZXplaWd0IHVuZCBtdXNzIG1hbnVlbGwgYWt0dWFsaXNpZXJ0IHdlcmRlbi4iLCJzaGlwbWVudC1pdGFyX2FjY291bnQtaXMtbm90LWFwcHJvdmVkLWZvci1iaXMtc2hpcG1lbnQiOiJBY2NvdW50IGlzIG5vdCBhcHByb3ZlZCBmb3IgQmlzIHNoaXBtZW50IiwiYWxlcnQtYWN0aW9uX2JhY2tlbmQtZXJyb3JfbWF4aW1hbF93ZWlnaHRfZXhjZWVkZWQiOiJFcyBpc3QgbmljaHQgbcO2Z2xpY2ggZGllc2UgU2VuZHVuZyBhYnp1c2NobGllw59lbi4gR2VzYW10IGdld2ljaHQgdm9uIHNlbmR1bmdlbiwgZGllIFNpZSBpbiBkaWVzZXIgUGVyaW9kZSBlcnN0ZWxsdCBoYWJlbiB2b24ge3N0YXJ0RGF0ZX0gYW4ge2VuZERhdGV9IMO8YmVyc2NocmVpdGV0IGRhcyB6dWzDpHNzaWdlIE1heGltdW06IHtyZXN0cmljdGVkVmFsdWV9IHt2YWx1ZVR5cGV9LiIsImNvbW1vbl9iYWNrZW5kLWVycm9yX2JyYXppbC1zaGlwbWVudC1kYW5mZS1rZXlzLWNoZWNrc3VtIjoiREFORmUga2V5cyBjaGVja3N1bSBlcnJvciIsImNvbW1vbl9iYWNrZW5kLWVycm9yX2JyYXppbC1zaGlwbWVudC1kYW5mZS1rZXlzLXVuaXF1ZSI6IkRBTkZlIGtleXMgc2hvdWxkIG5vdCBoYXZlIGR1cGxpY2F0ZXMiLCJmaWVsZF9pc19yZXF1aXJlZCI6IkVyZm9yZGVybGljaCIsImNvbW1vbl9iYWNrZW5kLWVycm9yX2JyYXppbC1zaGlwbWVudC1kYW5mZS1rZXlzLXJlcXVpcmVkIjoiQXQgbGVhc3Qgb25lIERBTkZlIGtleSByZXF1aXJlZCIsImFsZXJ0LWFjdGlvbl9iYWNrZW5kLWVycm9yX3BpY2t1cC11b20tZG9lc24idC1tYXRjaC10by10aGUtZGVmYXVsdC1zb20iOiJVbml0IG9mIG1lYXN1cmUgc2VsZWN0ZWQgZHVyaW5nIHBpY2t1cCBkb2VzIG5vdCBtYXRjaCB0aGUgZGVmYXVsdCB1bml0IG9mIG1lYXN1cmUiLCJhbGVydC1hY3Rpb25fYmFja2VuZC1lcnJvcl9waWNrdXAtYm9va2luZy1kYXRhLW5vdC1hbGxvd2VkLWluZGljYXRvciI6Ik5vdCBhbGxvd2VkIGluZGljYXRvciBmb3IgY29tcGxldGVkIHNoaXBtZW50IiwiY29tbW9uX2JhY2tlbmQtZXJyb3JfdXBsb2FkZWQtZmlsZS1uYW1lLWlzLW5vdC1zdXBwb3J0ZWQiOiJaZWljaGVuIG5pY2h0IGVybGF1YnQiLCJjb21tb25fbXNnX3NpZ25hdHVyZS1tdXN0LXByZXNlbnQiOiJVbnRlcnNjaHJpZnQgZXJmb3JkZXJsaWNoIiwiY29tbW9uX2Vycm9yX3JlamVjdC1yZWFzb24tZXJyb3ItbWVzc2FnZSI6IkJlZ3LDvG5kdW5nIG5vdHdlbmRpZyIsImNvbW1vbl9tc2dfbm90LXZhbGlkLWV3Zi1vcmlnaW4tY291bnRyeSI6IlVuZ8O8bHRpZyBBYnNlbmRlciBMYW5kIiwib3B0aW9uYWwtc2VydmljZXNfYWxlcnRfbWlzc2luZy1vcHRpb25hbC1zZXJ2aWNlcyI6IkRlciBPcHRpb25hbGUgU2VydmljZSwgZGVuIFNpZSBhdXNnZXfDpGhsdCBoYWJlbiBpc3QgbmljaHQgbMOkbmdlciB2ZXJmw7xnYmFyLiBTaWUga8O2bm5lbiBkZW4gU2VuZHVuZ3NhdWZ0cmFnIG9obmUgZGVuIFNlcnZpY2UgZmVydGlnc3RlbGxlbi4iLCJzaGlwbWVudC1xdW90ZV9lcnJvcl9wcm9tby1jb2RlLXZhbGlkYXRpb24tZXJyb3ItMTAwMTAxIjoiUmFiYXR0Y29kZSBrb25udGUgbmljaHQgZWluZ2Vsw7ZzdCB3ZXJkZW4iLCJwYXltZW50LXNlbGVjdGlvbl9tc2dfZHV0aWVzX3RheGVzX2ludmFsaWRfYWNjb3VudCI6Ikthbm4gbmljaHQgZGF6dSBiZW51dHp0IHdlcmRlbiB1bSBaw7ZsbGUgdW5kIFN0ZXVlcm4genUgYmV6YWhsZW4iLCJjb21tb25fYmFja2VuZC1lcnJvcl9maWxlLWZpbGVzX2NvdW50LWxpbWl0LWV4Y2VlZGVkIjoibWF4aW1hbGUgRGF0ZWltZW5nZSBob2NoZ2VsYWRlbiIsImFsZXJ0LWFjdGlvbl9iYWNrZW5kLWVycm9yX3BhY2thZ2luZy12YWxpZGF0aW9uLXdpZHRoLXNob3VsZC1iZS1tb3JlLXRoYW4tbWluaW11bSI6IkJyZWl0ZSB3ZW5pZ2VyIGFscyBtaW1pbXVtIGVybGF1YnQiLCJhbGVydC1hY3Rpb25fYmFja2VuZC1lcnJvcl9vc3ItZ3N0LW51bWJlci1pcy1ub3QtYWxsb3dlZCI6IkRpZSBHU1QtTnVtbWVyIGRlcyB0cmFuc2F0bGFudGlzY2ggcmVnaXN0cmllcnRlbiBMaWVmZXJhbnRlbiBpc3QgbmljaHQgZXJsYXVidCIsImFsZXJ0LWFjdGlvbl9iYWNrZW5kLWVycm9yX3JlY2VpdmVyLWllLXRheC1pZC1pcy1tYW5kYXRvcnkiOiJFbXBmw6RuZ2VyIElFIFRheCBJRCBFcmZvcmRlcmxpY2gifSwicGF5bWVudF9vcHRpb25zLXBheW1lbnRfY2F0ZWdvcmllcyI6eyJkYi1jYXRlZ29yeSI6IkRlYml0IENhcmQiLCJpYi1jb2RlIjoiSUIiLCJpYi1jYXRlZ29yeSI6Ik9ubGluZSBCYW5raW5nIiwiY2MtY2F0ZWdvcnkiOiJDcmVkaXQgQ2FyZCIsInUtY29kZSI6IiIsImRjLWNhdGVnb3J5IjoiRGlyZWN0IERlYml0IiwiY2MtY29kZSI6IkNDIiwib3QtY29kZSI6Ik9UIiwidS1jYXRlZ29yeSI6IiIsImRjLWNvZGUiOiJEQyIsIm90LWNhdGVnb3J5IjoiUGF5UGFsIiwiZGItY29kZSI6IkRCIn0sIm9wdGlvbmFsLXNlcnZpY2VzIjp7InNoaXBtZW50LW9wdGlvbmFsLXNlcnZpY2VfYmFja2VuZC1lcnJvcl9kY3Qtbm90LXJldHVybmVkLXByaWNlIjoiUHJlaXNlIG5pY2h0IHZlcmbDvGdiYXIiLCJvcHRpb25hbC1zZXJ2aWNlc19wYXJhZ3JhcGhfaW5jb21wYXRpYmxlLXNlcnZpY2VzIjoia2FubiBuaWNodCBnZW51dHp0IHdlcmRlbiIsIm9wdGlvbmFsLXNlcnZpY2VzX2FsZXJ0X21pc3Npbmctb3B0aW9uYWwtc2VydmljZXMiOiJEZXIgT3B0aW9uYWxlIFNlcnZpY2UsIGRlbiBTaWUgYXVzZ2V3w6RobHQgaGFiZW4gaXN0IG5pY2h0IGzDpG5nZXIgdmVyZsO8Z2Jhci4gU2llIGvDtm5uZW4gZGVuIFNlbmR1bmdzYXVmdHJhZyBvaG5lIGRlbiBTZXJ2aWNlIGZlcnRpZ3N0ZWxsZW4uIn0sInJ1bGVzX3JlZ3VsYXRpb24tdW5fc2FuY3Rpb24tdW5fc2FuY3Rpb24iOnsiZ3JvdXBfMDA1LWRlc2NyaXB0aW9uIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+PGRpdiBjbGFzcz0ibWVzc2FnZS13cmFwcGVyIj48cD48Yj5XSUNIVElHIDxcL2I+PFwvcD5cbjxwPlNlbmR1bmdlbiBpbiBkYXMgYXVzZ2V3w6RobHRlIEVtcGZhbmdzbGFuZCwga8O2bm5lbiBtdWx0aWxhdGVyYWxlbiB1bmQvb2RlciBlaW5zZWl0aWdlbiBTYW5rdGlvbmVuIHVuZCBBdXNmdWhya29udHJvbGxlbiB1bnRlcmxpZWdlbi48XC9wPlxuPHA+QWxsZSBTZW5kdW5nZW4gZsO8ciBzw6RtdGxpY2hlIFByb2R1a3RlLCBkaWUgYW4gZGllc2UgRGVzdGluYXRpb24gZ2VoZW4sIG3DvHNzZW4gZWluZW4gdW50ZXJzY2hyaWViZW5lbiBJZGVtbml0eSBMZXR0ZXIgYmVpbGllZ2VuZCBoYWJlbiB1bmQgd2VyZGVuIHp1IDEwMCUgZWluZXIgSW5zcGVrdGlvbiB1bnRlcnpvZ2VuLjxcL3A+XG48cD5ESEwgRXhwcmVzcyB2ZXJwZmxpY2h0ZXQgc2ljaCBkYXp1IGRpZSBnw7xsdGlnZW4gSW50ZXJuYXRpb25hbGVuIEhhbmRlbHNnZXNldHplIGlua2x1c2l2ZSByZWxldmFudGVyIEV4cG9ydGtvbnRyb2xsZW4gdW5kIFNhbmt0aW9uc3Jlc3RyaWt0aW9uZW4gZWluenVoYWx0ZW4uPFwvcD5cbjxwPlBhcmFsbGVsIHp1IHVuc2VyZW4gRWluaGFsdHVuZ3NtYXNzbmFobWVuIHZvbiBIYW5kZWxzYmVzdGltbXVuZ2VuLCBha3plcHRpZXJ0IERITCBnZW5lcmVsbCBrZWluZSBaYWhsdW5nZW4gZsO8ciBTZW5kdW5nZW4gKG9kZXIgYW5kZXJlIFRyYW5zYWt0aW9uZW4pIGF1w59lcmhhbGIgZGVyIFVTQSBpbiBVUy1Eb2xsYXIgZsO8ciB2b24gZGVuIFVTQSBzYW5rdGlvbmllcnRlbiBMw6RuZGVybi48XC9wPlxuPFwvZGl2PjxcL2Rpdj4iLCJjdWJhX2hpZ2hfcmlzay1kZXNjcmlwdGlvbiI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPjxkaXYgY2xhc3M9Im1lc3NhZ2Utd3JhcHBlciI+PHA+PGI+V0lDSFRJRzxcL2I+PFwvcD5cbjxwPkRITCBFeHByZXNzIHZlcnBmbGljaHRldCBzaWNoIGRhenUgZGllIGfDvGx0aWdlbiBJbnRlcm5hdGlvbmFsZW4gSGFuZGVsc2dlc2V0emUgaW5rbHVzaXZlIHJlbGV2YW50ZXIgRXhwb3J0a29udHJvbGxlbiB1bmQgU2Fua3Rpb25zcmVzdHJpa3Rpb25lbiBlaW56dWhhbHRlbi48XC9wPlxuPHA+UGFyYWxsZWwgenUgdW5zZXJlbiBFaW5oYWx0dW5nc21hc3NuYWhtZW4gdm9uIEhhbmRlbHNiZXN0aW1tdW5nZW4sIGFremVwdGllcnQgREhMIGdlbmVyZWxsIGtlaW5lIFphaGx1bmdlbiBmw7xyIFNlbmR1bmdlbiAob2RlciBhbmRlcmUgVHJhbnNha3Rpb25lbikgYXXDn2VyaGFsYiBkZXIgVVNBIGluIFVTLURvbGxhciBmw7xyIHZvbiBkZW4gVVNBIHNhbmt0aW9uaWVydGVuIEzDpG5kZXJuLjxcL3A+XG48cD5BbGxlIFNlbmR1bmdlbiBmw7xyIHPDpG10bGljaGUgUHJvZHVrdGUsIGRpZSBhbiBkaWVzZSBEZXN0aW5hdGlvbiBnZWhlbiwgbcO8c3NlbiBlaW5lbiB1bnRlcnNjaHJpZWJlbmVuIElkZW1uaXR5IExldHRlciBiZWlsaWVnZW5kIGhhYmVuIHVuZCB3ZXJkZW4genUgMTAwJSBlaW5lciBJbnNwZWt0aW9uIHVudGVyem9nZW4uPFwvcD5cbjxcL2Rpdj48XC9kaXY+IiwiZGVubWFyay1kZXNjcmlwdGlvbiI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPjxkaXYgY2xhc3M9Im1lc3NhZ2Utd3JhcHBlciI+PHA+PGI+V0lDSFRJRzxcL2I+PFwvcD5cbjxwPlNlbmR1bmdlbiBpbiBkYXMgYXVzZ2V3w6RobHRlIEVtcGZhbmdzbGFuZCwga8O2bm5lbiBtdWx0aWxhdGVyYWxlbiB1bmQvb2RlciBlaW5zZWl0aWdlbiBTYW5rdGlvbmVuIHVuZCBBdXNmdWhya29udHJvbGxlbiB1bnRlcmxpZWdlbi4gPFwvcD5cbjxwPkFsbGUgU2VuZHVuZ2VuIGbDvHIgc8OkbXRsaWNoZSBQcm9kdWt0ZSwgZGllIGFuIGRpZXNlIERlc3RpbmF0aW9uIGdlaGVuLCBtw7xzc2VuIGVpbmVuIHVudGVyc2NocmllYmVuZW4gSWRlbW5pdHkgTGV0dGVyIGJlaWxpZWdlbmQgaGFiZW4gdW5kIHdlcmRlbiB6dSAxMDAlIGVpbmVyIEluc3Bla3Rpb24gdW50ZXJ6b2dlbi48XC9wPlxuPHA+REhMIEV4cHJlc3MgdmVycGZsaWNodGV0IHNpY2ggZGF6dSBkaWUgZ8O8bHRpZ2VuIEludGVybmF0aW9uYWxlbiBIYW5kZWxzZ2VzZXR6ZSBpbmtsdXNpdmUgcmVsZXZhbnRlciBFeHBvcnRrb250cm9sbGVuIHVuZCBTYW5rdGlvbnNyZXN0cmlrdGlvbmVuIGVpbnp1aGFsdGVuLjxcL3A+XG48cD5QYXJhbGxlbCB6dSB1bnNlcmVuIEVpbmhhbHR1bmdzbWFzc25haG1lbiB2b24gSGFuZGVsc2Jlc3RpbW11bmdlbiwgYWt6ZXB0aWVydCBESEwgZ2VuZXJlbGwga2VpbmUgWmFobHVuZ2VuIGbDvHIgU2VuZHVuZ2VuIChvZGVyIGFuZGVyZSBUcmFuc2FrdGlvbmVuKSBhdcOfZXJoYWxiIGRlciBVU0EgaW4gVVMtRG9sbGFyIGbDvHIgdm9uIGRlbiBVU0Egc2Fua3Rpb25pZXJ0ZW4gTMOkbmRlcm4uPFwvcD5cbjxcL2Rpdj48XC9kaXY+IiwiaXJhbi1kZXNjcmlwdGlvbiI6IkF1cyB3aXJ0c2NoYWZ0bGljaGVuIHVuZCBvcGVyYXRpdmVuIEdyw7xuZGVuIGhhYmVuIHdpciBkZW4gVHJhbnNwb3J0IGluIHVuZCBhdXMgZGVtIElyYW4gZWluZ2VzdGVsbHQuIERlcnplaXQgaXN0IG5pY2h0IGJla2FubnQgd2FubiB1bmQgb2Igd2llZGVyIFNlbmR1bmdlbiBmw7xyIGRpZXNlIERlc3RpbmF0aW9uIHRyYW5zcG9ydGllcnQgd2VyZGVuIGvDtm5uZW4uIiwibm9uX2hpZ2hfcmlzay1kZXNjcmlwdGlvbiI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPjxkaXYgY2xhc3M9Im1lc3NhZ2Utd3JhcHBlciI+PHA+PGI+V0lDSFRJRzxcL2I+PFwvcD5cbjxwPlNlbmR1bmdlbiBpbiBkYXMgYXVzZ2V3w6RobHRlIEVtcGZhbmdzbGFuZCwga8O2bm5lbiBtdWx0aWxhdGVyYWxlbiB1bmQvb2RlciBlaW5zZWl0aWdlbiBTYW5rdGlvbmVuIHVuZCBBdXNmdWhya29udHJvbGxlbiB1bnRlcmxpZWdlbi48XC9wPlxuPHA+REhMIEV4cHJlc3MgdmVycGZsaWNodGV0IHNpY2ggZGF6dSBkaWUgZ8O8bHRpZ2VuIEludGVybmF0aW9uYWxlbiBIYW5kZWxzZ2VzZXR6ZSBpbmtsdXNpdmUgcmVsZXZhbnRlciBFeHBvcnRrb250cm9sbGVuIHVuZCBTYW5rdGlvbnNyZXN0cmlrdGlvbmVuIGVpbnp1aGFsdGVuLjxcL3A+XG48XC9kaXY+PFwvZGl2PiIsImhpZ2hfcmlzay1kZXNjcmlwdGlvbiI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPjxkaXYgY2xhc3M9Im1lc3NhZ2Utd3JhcHBlciI+PHA+PGI+V0lDSFRJRzxcL2I+PFwvcD5cbjxwPlNlbmR1bmdlbiBpbiBkYXMgYXVzZ2V3w6RobHRlIEVtcGZhbmdzbGFuZCwga8O2bm5lbiBtdWx0aWxhdGVyYWxlbiB1bmQvb2RlciBlaW5zZWl0aWdlbiBTYW5rdGlvbmVuIHVuZCBBdXNmdWhya29udHJvbGxlbiB1bnRlcmxpZWdlbi48XC9wPlxuPHA+REhMIEV4cHJlc3MgdmVycGZsaWNodGV0IHNpY2ggZGF6dSBkaWUgZ8O8bHRpZ2VuIEludGVybmF0aW9uYWxlbiBIYW5kZWxzZ2VzZXR6ZSBpbmtsdXNpdmUgcmVsZXZhbnRlciBFeHBvcnRrb250cm9sbGVuIHVuZCBTYW5rdGlvbnNyZXN0cmlrdGlvbmVuIGVpbnp1aGFsdGVuLjxcL3A+XG48cD5QYXJhbGxlbCB6dSB1bnNlcmVuIEVpbmhhbHR1bmdzbWFzc25haG1lbiB2b24gSGFuZGVsc2Jlc3RpbW11bmdlbiwgYWt6ZXB0aWVydCBESEwgZ2VuZXJlbGwga2VpbmUgWmFobHVuZ2VuIGbDvHIgU2VuZHVuZ2VuIChvZGVyIGFuZGVyZSBUcmFuc2FrdGlvbmVuKSBhdcOfZXJoYWxiIGRlciBVU0EgaW4gVVMtRG9sbGFyIGbDvHIgdm9uIGRlbiBVU0Egc2Fua3Rpb25pZXJ0ZW4gTMOkbmRlcm4uPFwvcD5cbjxwPkFsbGUgU2VuZHVuZ2VuIGbDvHIgc8OkbXRsaWNoZSBQcm9kdWt0ZSwgZGllIGFuIGRpZXNlIERlc3RpbmF0aW9uIGdlaGVuLCBtw7xzc2VuIGVpbmVuIHVudGVyc2NocmllYmVuZW4gSWRlbW5pdHkgTGV0dGVyIGJlaWxpZWdlbmQgaGFiZW4gdW5kIHdlcmRlbiB6dSAxMDAlIGVpbmVyIEluc3Bla3Rpb24gdW50ZXJ6b2dlbi48XC9wPlxuPFwvZGl2PjxcL2Rpdj4iLCJjcmltZWFfcnVzc2lhXy1kZXNjcmlwdGlvbiI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPjxkaXYgY2xhc3M9Im1lc3NhZ2Utd3JhcHBlciI+PHA+PGI+V0lDSFRJRzxcL2I+PFwvcD5cbjxwPkdlbcOkw58gZGVyIFVOIFJlc29sdXRpb24gZGFyZiBESEwgRXhwcmVzcyBrZWluZSBzYW5rdGlvbmllcnRlbiB1bmQvb2RlciBnZWbDpGhybGljaGVuIFdhcmVuIGluIGRpZSBTcGVycmdlYmlldGUgZGVyIDxiPktyaW08XC9iPiB2ZXJzZW5kZW4uPFwvcD5cbjxwPkRITCBFeHByZXNzIHZlcnBmbGljaHRldCBzaWNoIGRhenUgZGllIGfDvGx0aWdlbiBJbnRlcm5hdGlvbmFsZW4gSGFuZGVsc2dlc2V0emUgaW5rbHVzaXZlIHJlbGV2YW50ZXIgRXhwb3J0a29udHJvbGxlbiB1bmQgU2Fua3Rpb25zcmVzdHJpa3Rpb25lbiBlaW56dWhhbHRlbi48XC9wPlxuPHA+QWxsZSBTZW5kdW5nZW4sIGRpZSBpbiBkaWUgS3JpbSBnZWhlbiwgbcO8c3NlbiBlaW5lbiB1bnRlcnNjaHJpZWJlbmVuIEluZGVtaW5pdHkgTGV0dGVyIGVudGhhbHRlbiB1bmQgd2VyZGVuIGVpbmVyIHZvbGxzdMOkbmRpZ2VuIEluc3Bla3Rpb24gdW50ZXJ6b2dlbi48XC9wPlxuPHA+wqA8XC9wPlxuPHA+RGllIGZvbGdlbmRlbiBHZWdlbnN0w6RuZGUgc2luZCB2ZXJib3RlbjxcL3A+XG48dWw+XG48bGk+TWlsaXTDpHJmYWhyemV1Z2U8XC9saT5cbjxsaT5XYWZmZW4gdW5kIFdhZmZlbnRlaWxlLCBpbmtsdXNpdmUgVmlzaWVyZTxcL2xpPlxuPGxpPk5hY2h0c2ljaHRnZXLDpHRlLCBXw6RybWViaWxkLUF1c3LDvHN0dW5nPFwvbGk+XG48bGk+R2VnZW5zdMOkbmRlIGbDvHIgZGVuIEJhdSB1bmQgVG91cmlzbXVzPFwvbGk+XG48XC91bD5cbjxcL2Rpdj48XC9kaXY+In0sImRhdGEtdHJhY2tpbmciOnsibWFuYWdlLXJlZmVyZW5jZS1kaWFsb2dfYnV0dG9uX29rIjoiT2sgcmVmZXJlbmNlIGRpYWxvZyIsImRobC10b3AtbmF2LW1lbnVfbGlua19lc2VjdXJlIjoiRXNlY3VyZSIsImRlbGl2ZXJ5LW9wdGlvbnMtaGVhZGVyX2J1dHRvbl9zdGFydC1uZXctcXVvdGUiOiJTdGFydCBuZXcgcXVvdGUiLCJkaGwtdG9wLW5hdi1tZW51X2J1dHRvbl9sb2dvdXQiOiJMb2dvdXQgYnV0dG9uIiwiYnJhemlsLW5vdGEtZmlzY2FsLWluZm8tcm93X2J1dHRvbl9yZW1vdmUtZmlzY2FsIjoiUmVtb3ZlIGZpc2NhbCIsImRpZ2l0YWwtZW5yb2xsbWVudF9idXR0b25fZW5yb2xsIjoiRW5yb2xsIiwicHJvZHVjdC11cGxvYWQtbGlzdF9idXR0b25fcmVtb3ZlIjoiUmVtb3ZlIiwid2VsY29tZS1tYWluX2xpbmtfdmlldy1hbGwiOiJWaWV3IGFsbCBsaW5rIiwicHJvZmlsZS1xdWljay1saW5rc19idXR0b25fYWRkLWxpbmsiOiJBZGQgbGluayIsImFkZGl0aW9uYWwtZG9jdW1lbnQtZWxlbWVudF9idXR0b25fZG9jdW1lbnQiOiJEb2N1bWVudCIsIm1vYmlsZS1wYWNrYWdlLWxpc3QtaXRlbV9idXR0b25faW5jcmVhc2UiOiJJbmNyZWFzZSIsImNyZWF0ZS1mYXZvcml0ZV9idXR0b25fY3JlYXRlLWZhdm9yaXRlIjoiQ3JlYXRlIGZhdm9yaXRlIiwicGFwZXJsZXNzLWN1c3RvbXNfYnV0dG9uX2FjY2VwdCI6IlNhdmUgc2hpcG1lbnQgcmVmZXJlbmNlIiwic2hhcmUtc2hpcG1lbnQtZGV0YWlsc19idXR0b25fY2FuY2VsIjoiQ2FuY2VsIHNoYXJpbmciLCJ0b3AtbmF2LW1lbnVfbGlua19tYW5hZ2UtcmV3YXJkcy1jYXJkcyI6Ik1hbmFnZSByZXdhcmRzIGNhcmRzIiwiZ3JvdXAtc3dpdGNoZXItbGluay1zZWN0aW9uX2J1dHRvbl9zaG93LXNldHRpbmdzIjoiU2hvdyBzZXR0aW5ncyIsImJpbGxpbmctY29udHJvbGxlcl9idXR0b25fcmVtb3ZlIjoiUmVtb3ZlIGNvbnRyb2xsZXIiLCJhc3NpZ24tc2hpcG1lbnQtcGF5bWVudF9idXR0b25fc2VsZWN0LXBheW1lbnQtb3B0aW9ucyI6IlNlbGVjdCBwYXltZW50IG9wdGlvbnMiLCJkaWdpdGFsLWN1c3RvbXMtaW52b2ljZS1sYXlvdXRfYnV0dG9uX2RlbGV0ZS1jdXN0b21zLWludm9pY2UiOiJEZWxldGUgY3VzdG9tcyBpbnZvaWNlIiwiZGhsLWFjdGlvbi1oYW5kbGVyX2J1dHRvbl9oYW5kbGUiOiJIYW5kbGUiLCJkYXNoYm9hcmQtZW9kLXJlcG9ydF9idXR0b25fcHJpbnQtcmVwb3J0IjoiUHJpbnQgcmVwb3J0IiwiZGhsLXRvcC1uYXYtbWVudV9saW5rX2N1c3RvbXMtY2xlYXJlbmNlIjoiQ3VzdG9tcyBjbGVhcmVuY2UiLCJmb3Jnb3QtcGFzc3dvcmQtc2VjdGlvbl9idXR0b25fY2xvc2UiOiJDbG9zZSBzZWN0aW9uIiwibWFuYWdlLXNoaXBtZW50X2J1dHRvbl9zZWFyY2giOiJTZWFyY2ggc2hpcG1lbnQiLCJncm91cC1zd2l0Y2hlci1saW5rX2J1dHRvbl9zaG93LXN3aXRjaGVyIjoiU2hvdyBzd2l0Y2hlciIsInNoaXBtZW50LXNldHRpbmdzLWRobF9idXR0b25fYXV0aG9yaXplZC1waWNrdXAiOiJBdXRob3JpemVkIHBpY2t1cCAiLCJzY2hlZHVsZS1waWNrdXBfYnV0dG9uX3JlcXVlc3QtcGlja3VwIjoiUmVxdWVzdCBwaWNrdXAiLCJyZXR1cm4tc2hpcG1lbnRzLWVsZW1lbnRfbGlua19wcmV2aWV3IjoiUHJldmlldyBlbGVtZW50IiwiY29udGFjdC1kZXRhaWxzX2J1dHRvbl9yZW1vdmUiOiJSZW1vdmUgcmVmZXJlbmNlIiwiY29ycG9yYXRlLWdyb3VwLW1vZGFsX2J1dHRvbl9jcmVhdGUtbmV3IjoiQ3JlYXRlIG5ldyBncm91cCIsIm1vYmlsZS10cmFja2luZy1yZXN1bHRzLWhlYWRlcl9idXR0b25fZ28tdG8tdHJhY2tpbmciOiJHbyB0byB0cmFja2luZyIsInVzZXItbWFuYWdlbWVudC1kZXRhaWxzX2J1dHRvbl9iYWNrLXRvLWxpc3QiOiJCYWNrIHRvIGxpc3QgYnV0dG9uIiwibG9naW4tbW9kYWxfYnV0dG9uX2Rpc21pc3MiOiJEaXNtaXNzIG1vZGFsIiwiYWN0aW9uLWNvbmZpcm1hdGlvbl9idXR0b25fcmVtb3ZlLXVzZXJzIjoiUmVtb3ZlIFVzZXJzIiwiZ3JvdXBzLXNpZGViYXJfYnV0dG9uX3NlbGVjdCI6IlNlbGVjdCIsImV3Zi1tb2RhbF9idXR0b25fY2hhbmdlLWNvdW50cnktbW9kYWwtY2xvc2UiOiJDbG9zZSB3aXRob3V0IHNhdmluZyIsIm1hbmFnZS1zaGlwbWVudF9saW5rX2JhY2siOiJTaGlwbWVudCBCYWNrIiwicmVxdWlyaW5nLWFjdGlvbnMtdGVtcGxhdGVzX2xpbmtfcXVpY2stdmlldyI6IlF1aWNrIHZpZXciLCJyZXNvbHZlLWNvbmZsaWN0X2J1dHRvbl9jYW5jZWwiOiJDYW5jZWwgcmVzb2x2aW5nIGNvbmZsaWN0IiwiZXhpc3RpbmctZW1haWxzLW1vZGFsX2J1dHRvbl9jYW5jZWwiOiJDYW5jZWwgZW1haWxzIiwicmVmZXJlbmNlLWZvcm1hdF9idXR0b25fbWFuYWdlLWZvcm1hdCI6Ik1hbmFnZSBmb3JtYXQiLCJld2YtZ3JpZC1hY3Rpb25fbGlua19oYW5kbGUiOiJIYW5kbGUiLCJkZWxldGUtdXNlcnNfYnV0dG9uX2NhbmNlbCI6IkNhbmNlbCBkZWxldGluZyB1c2VycyIsInJlcG9ydC1lcnJvci1tb2RhbF9idXR0b25fY2xvc2UiOiJDbG9zZSBlcnJvciBtb2RhbCIsImNxLXBvcHVwLWNvbnRyb2xsZXJfYnV0dG9uX3NsaWRlLW51bWJlciI6IlNsaWRlIG51bWJlciIsIm5vdGlmaWNhdGlvbi1zaGFyaW5nLXNlY3Rpb25fYnV0dG9uX3NhdmUiOiJTYXZlIG5vdGlmaWNhdGlvbiIsIm1haWxpbmctbGlzdC1kZXRhaWxzX2J1dHRvbl9zYXZlIjoiU2F2ZSBtYWlsaW5nIGxpc3QiLCJub3RpZmljYXRpb24tc2hhcmluZy10ZW1wbGF0ZV9idXR0b25fYWN0aXZlIjoiQWN0aXZlIiwiZGhsLXNoaXBtZW50LXR5cGVfYnV0dG9uX2hhbmRsZSI6IkhhbmRsZSIsIm1ha2UtZmF2b3JpdGVfYnV0dG9uX21ha2Utbm90LWZhdm9yaXRlIjoiTWFrZSBub3QgZmF2b3JpdGUiLCJwcmludC1hY3Rpb25zLWZvb3Rlcl9idXR0b25fcHJpbnQtc2VsZWN0ZWQtZG9jdW1lbnRzIjoiUHJpbnQgc2VsZWN0ZWQgZG9jdW1lbnRzIiwiZGV0YWlscy1tb2RhbF9saW5rX2JhY2siOiJCYWNrIHRvIGRldGFpbHMiLCJjb3Jwb3JhdGUtZ3JvdXAtZGV0YWlsc19idXR0b25fc2F2ZS1jaGFuZ2VzIjoiU2F2ZSBkZXRhaWxzIGNoYW5nZXMiLCJyZXBvcnRpbmctZGV0YWlscy1lZGl0LWZpZWxkcy1wb3B1cF9idXR0b25fbW92ZS1zZWxlY3RlZC10by1lbmQiOiJNb3ZlIHNlbGVjdGVkIHRvIGVuZCIsInNoaXBtZW50LWZpbHRlcmVkLXZpZXdfbGlua190cmFjayI6IlRyYWNrIGEgc2hpcG1lbnQiLCJtYW5hZ2Utc2hpcG1lbnQtZGV0YWlscy1nZW5lcmFsX2J1dHRvbl9ib29raW5nLXJlZmVyZW5jZS1udW1iZXIiOiJCb29raW5nIHJlZmVyZW5jZSBudW1iZXIiLCJ0cmFja2luZy1yZXN1bHQtaXRlbV9idXR0b25fc2hvdy1kZXRhaWxzIjoiU2hvdyBkZXRhaWxzIiwiY29tcGFueS1pbmZvX2J1dHRvbl9jYW5jZWwtY2hhbmdlcyI6IkNhbmNlbCBpbmZvIGNoYW5nZXMiLCJtb2JpbGUtYWRkcmVzcy1kZXRhaWxzX2J1dHRvbl9zaG93LWV4dGVuZGVkLWZpZWxkcyI6IlNob3cgZXh0ZW5kZWQgZmllbGRzIiwicmVnaXN0cmF0aW9uLW1vZGFsX2J1dHRvbl9sb2dpbiI6IkdvIHRvIGxvZ2luIiwiZXdmLW1vZGFsX2J1dHRvbl9jYW5jZWwtZWRpdC1hY2NvdW50IjoiQ2FuY2VsIGVkaXQgYWNjb3VudCIsImRlbGl2ZXJ5LW9wdGlvbnMtc3dpdGNoZXJfYnV0dG9uX3NlbGVjdGVkIjoiU2VsZWN0ZWQiLCJwcm9tby1jb3N0X2J1dHRvbl9lZGl0IjoiRWRpdCBwcm9tbyIsImNxLXBvcHVwLWNvbnRyb2xsZXJfYnV0dG9uX3NldC1wb3B1cCI6IlNldCBwb3B1cCIsImFkZC1tZW1iZXJzLW1vZGFsX2J1dHRvbl9hZGQtbWVtYmVycyI6IkFkZCBtZW1iZXJzIiwiY29uZmlybS1sZWF2aW5nX2J1dHRvbl9jb25maXJtLXllcyI6IlllcyIsImNvcnBvcmF0ZS1ncm91cC1kZXRhaWxzLXNlY3Rvcl9idXR0b25fdHJhbnNmZXItdXNlcnMiOiJUcmFuc2ZlciB1c2VycyIsIm1hbmFnZS1zaGlwbWVudF9idXR0b25fcGVuZGluZy1hZG1pbiI6IlBlbmRpbmcgYWRtaW4iLCJzaGlwbWVudC1zZXR0aW5ncy1kaGxfYnV0dG9uX25vdGlmaWNhdGlvbiI6Ik5vdGlmaWNhdGlvbiIsIm1hbmFnZS1waWNrdXBzLW1lbnVfbGlua19kb3dubG9hZCI6IkRvd25sb2FkIGJ1dHRvbiIsInNoaXBtZW50LWltcG9ydC11cGxvYWRlcl9idXR0b25fZmlsZSI6IkZpbGVuYW1lIiwidXNlcnMtZmlsdGVyX2J1dHRvbl9yZXNldC1maWx0ZXIiOiJSZXNldCBmaWx0ZXIiLCJwcmV2aWV3LWNvbnJvbGxlcl9idXR0b25fcHJldmlldy1yZWNlaXB0IjoiUHJldmlldyByZWNlaXB0Iiwibm90aWZpY2F0aW9uLXNoYXJpbmdfYnV0dG9uX2NhbmNlbC1jaGFuZ2VzIjoiQ2FuY2VsIENoYW5nZXMiLCJtb2JpbGVfZmllbGQtcGxhY2Vob2xkZXJfY2hvb3NlLWNvdW50cnktbmFtZSI6IkVudGVyIGNvdW50cnkgbmFtZSIsInJlcG9ydGluZy1kZXRhaWxzLWVkaXQtZmllbGRzLXBvcHVwX2J1dHRvbl9tb3ZlLXNlbGVjdGVkLXVwIjoiTW92ZSBzZWxlY3RlZCB1cCIsIm1hc3Rlci1yZWZlcmVuY2UtbnVtYmVyLWFjdGlvbnNfYnV0dG9uX2FkZC1hbm90aGVyLW1ybi1yb3ciOiJBZGQgYW5vdGhlciBNYXN0ZXIgUmVmZXJlbmNlIE51bWJlciByb3ciLCJsb2dpbl9idXR0b25fbG9naW4tZm9ybSI6IkxvZ2luIGZvcm0iLCJvbmxpbmUtYmlsbGluZy1lbnJvbGxtZW50X2J1dHRvbl9zdWJtaXQiOiJTdWJtaXQgZm9ybSIsIm1hbmFnZS1jb250YWN0c19idXR0b25fc2F2ZS1jaGFuZ2VzIjoiU2F2ZSBjaGFuZ2VzIiwiZGFzaGJvYXJkLW15LXNoaXBtZW50c19saW5rX3ZpZXctYWxsIjoiVmlldyBzaGlwbWVudHMiLCJld2YtbW9kYWxfYnV0dG9uX3llcy1wcm9jZWVkIjoiWWVzIHByb2NlZWQgZXdmIG1vZGFsIiwidHlwZWFoZWFkLWl0ZW0tc3R5bGVzX2xpbmtfZ2V0LXN0eWxlcyI6IkdldCBzdHlsZXMgdHlwZWFoZWFkIiwidW5hdmFpbGFibGUtZHRwLXNoaXBtZW50LW1vZGFsX2J1dHRvbl9jb250aW51ZSI6IkNvbnRpbnVlIG1vZGFsIiwiYmlsbGluZy1jb250cm9sbGVyX2J1dHRvbl9yZW1vdmUtZGlzY291bnQiOiJSZW1vdmUgZGlzY291bnQiLCJkZWZhdWx0LWdyb3VwX2J1dHRvbl9lZGl0IjoiRWRpdCIsInJldHVybi1sYWJlbC1yZWxvYWRlcl9idXR0b25fcmVsb2FkIjoiUmVsb2FkIiwiY29ycC1maWxlLXVwbG9hZGVyX2J1dHRvbl91cGxvYWQiOiJVcGxvYWQiLCJtYW5hZ2Utc2hpcG1lbnRzLWNvbXBvbmVudF9idXR0b25fcmV2aWV3LW5vdC1haXItc2hpcG1lbnQiOiJSZXZpZXcgbm90IGFpciBzaGlwbWVudCIsImZpbGUtdXBsb2FkZXItZWxlbWVudF9idXR0b25fY2xlYXItZmlsZXMtbGlzdCI6IkNsZWFyIGxpc3QiLCJwYWdpbmF0aW9uX2Jsb2NrX2l0ZW0tbW92ZS10by1uZXh0LXBhZ2UiOiJOZXh0IHBhZ2UiLCJzaGlwbWVudC1kZXRhaWxzLWVtYWlsX2J1dHRvbl9vcGVuLXNoYXJlLWRpYWxvZyI6IlNoYXJlIGRpYWxvZyIsInZpZXctZGNpLWltYWdlc19idXR0b25fc2hvdy1kaWFsb2ciOiJTaG93IGEgZGlhbG9nIiwic2hpcG1lbnQtZmlsdGVyZWQtdmlld19saW5rX3ZpZXctdGFiIjoiVmlldyB0YWIiLCJxdW90ZS1tb2RhbF9idXR0b25fY2FsYyI6IkNhbGMiLCJtZXNzYWdlLXRvLWFzc2lnbmVlX2J1dHRvbl9jYW5jZWwtdGV4dCI6IkNhbmNlbCB0ZXh0IiwiYWRkcmVzcy1ib29rLWltcG9ydC1tYW5hZ2VfYnV0dG9uX2NhbmNlbCI6IkNhbmNlbCBtYW5hZ2luZyIsImFjY291bnQtdmVyaWZpY2F0aW9uLW1vZGFsX2xpbmtfY29udGludWUiOiJDb250aW51ZSB2ZXJpZmljYXRpb24iLCJmb3Jnb3QtcGFzc3dvcmQtc2VjdGlvbl9idXR0b25fY2FuY2VsIjoiQ2FuY2VsIHNlY3Rpb24iLCJ3Y2MtcHJvZHVjdF9idXR0b25fdG9nZ2xlIjoiVG9nZ2xlIGEgcHJvZHVjdCIsInBhcGVybGVzcy1jdXN0b21zX2J1dHRvbl91cGRhdGUtc2V0dGluZ3MiOiJVcGRhdGUgU2V0dGluZ3MiLCJld2YtbW9kYWxfYnV0dG9uX2Rpc21pc3MiOiJEaXNtaXNzcyIsImRhbmZlLWtleXNfbGlua19kYW5mZS1hZGQiOiJBZGQgZGFuZmUiLCJyZXR1cm4tbGFiZWwtcGFja2FnZXNfYnV0dG9uX2VkaXQiOiJFZGl0IHBhY2thZ2VzIiwibXktcHJvZHVjdC1saXN0LW1vZGFsX2J1dHRvbl9lZGl0LXByb2R1Y3QiOiJFZGl0IHByb2R1Y3QiLCJjb3VudHJ5LW1vZGFsX2J1dHRvbl9jbG9zZSI6IkNsb3NlIGNvdW50cnkgbW9kYWwiLCJjb21wbGV0ZS1ub3RpZmljYXRpb25zLXNoYXJpbmdfYnV0dG9uX3Nob3ctbm90aWZpY2F0aW9ucyI6IlNob3cgbm90aWZpY2F0aW9ucyIsInJlcXVpcmluZy1hY3Rpb25zLXRlbXBsYXRlc19saW5rX2dldC10cmFjay1wYWdlIjoiR2V0IHRyYWNrIHBhZ2UiLCJncmFudC1mb3JtX2J1dHRvbl9jbGVhci10by1hZGRyZXNzLWRldGFpbHMiOiJDbGVhciBhZGRyZXNzIGRldGFpbHMiLCJwYW5kaW5nLWFjdGlvbnNfYnV0dG9uX29wZW4tcmVwb3J0aW5nIjoiT3BlbiByZXBvcnRpbmciLCJ0b3AtbmF2LW1lbnVfbGlua19sb2dvdXQiOiJMb2cgb3V0IiwiYWRkaXRpb25hbC1kb2N1bWVudHNfYnV0dG9uX2hpZGUtZG9jdW1lbnQiOiJIaWRlIGRvY3VtZW50Iiwib25saW5lLXBheW1lbnRfYnV0dG9uX3JlbW92ZSI6IlJlbW92ZSIsInJlZy1mb3JtX2J1dHRvbl9jaGFuZ2UtY291bnRyeSI6IkNoYW5nZSBjb3VudHJ5IiwiZWRpdC1wb3B1cC10ZW1wbGF0ZV9idXR0b25fcHJvY2VlZCI6IlByb2NlZWQgcG9wdXAiLCJ0b3AtbmF2LW1lbnVfbGlua19jaGFuZ2UtcGFzc3dvcmQiOiJDaGFuZ2UgcGFzc3dvcmQiLCJhY3Rpb24tY29uZmlybWF0aW9uX2J1dHRvbl9zYXZlIjoiU2F2ZSBhY3Rpb24iLCJhY2NvdW50LW1hbmFnZW1lbnQtc2VjdG9yX2J1dHRvbl9vcGVuLXJlcXVlc3QtZGhsLWFjY291bnQiOiJPcGVuIHJlcXVlc3QgZGhsIGFjY291bnQiLCJhY2NvdW50LW1hbmFnZW1lbnRfYnV0dG9uX2RlbGV0ZS1hY2NvdW50cyI6IkRlbGV0ZSBBY2NvdW50cyIsImV3Zi1tb2RhbF9idXR0b25fY29udGludWUiOiJDb250aW51ZSBld2YgbW9kYWwiLCJld2YtbW9kYWxfYnV0dG9uX2Rpc21pc3Mtc2hpcG1lbnQiOiJEaXNtaXNzIiwic2NoZWR1bGVkX3BpY2t1cHNfY3RybF9idXR0b25fdmlldy1hbGwiOiJWaWV3IGFsbCIsInJlcG9ydGluZy1kZXRhaWxzLWVkaXQtZmllbGRzLXBvcHVwX2J1dHRvbl9tb3ZlLWFsbCI6Ik1vdmUgYWxsIiwibWFwLWluZm9ib3hfYnV0dG9uX2Nsb3NlIjoiQ2xvc2UgbWFwIiwiaW50ZXJjZXB0b3ItYWxlcnRfbGlua19jbG9zZS1pbnRlcmNlcHRvci1lcnJvcnMiOiJDbG9zZSBpbnRlcmNlcHRvciBhbGVydCIsInNoaXBtZW50LWZpbHRlcmVkLXZpZXdfbGlua190cmFjay1zaGlwbWVudCI6IlRyYWNrIHNoaXBtZW50IiwibWFpbGluZy1saXN0LWRldGFpbHNfYnV0dG9uX3NoaXAtdG8iOiJTaGlwIHRvIiwibXktZGhsLWFjY291bnRzLWRlZmF1bHRzX2J1dHRvbl9leHBhbmQiOiJFeHBhbmQgZGVmYXVsdHMiLCJ0b2dnbGUtc3dpdGNoLXNlY3Rpb25fYnV0dG9uX3RvZ2dsZSI6IlRvZ2dsZSBzZWN0aW9uIiwiYXR0YWNoLXNpZ25hdHVyZS1tb2RhbF9saW5rX2ZpbGVuYW1lIjoiQXR0YWNoIGZpbGVuYW1lIiwicmVwb3J0cy1jb2x1bW5zLWxpc3RfYnV0dG9uX3Nob3ciOiJTaG93IHJlcG9ydHMiLCJuZmUtZW50cnktb25seS1jb21wbGV0ZV9idXR0b25fc3VibWl0IjoiQ29tcGxldGUgZW50cnkiLCJleHRlcm5hbC1tb2R1bGVzX2J1dHRvbl9yZXF1ZXN0IjoiUmVxdWVzdCBleHRlcm5hbCBtb2R1bGVzIiwibWFuYWdlLXNoaXBtZW50LWRldGFpbHMtY3VzdG9tc19idXR0b25fdmlldy1kb2N1bWVudHMiOiJWaWV3IGRvY3VtZW50cyIsImRhc2hib2FyZC1mcm9tLXRvLXRlbXBsYXRlX2xpbmtfb3BlbiI6Ik9wZW4gZGFzaGJvYXJkIiwiaXRlbS1hdHRyaWJ1dGVzLXByb2R1Y3RfYnV0dG9uX2RlbGV0ZSI6IkRlbGV0ZSBpdGVtIiwiYWRkcmVzcy1mdWxsbmFtZS1mYWtlX2J1dHRvbl9hZGRyZXMtYm9vayI6IkFkZHJlc3MgYm9vayBmdWxsbmFtZSIsImFkZHJlc3MtZGV0YWlscy1lcnJvcl9idXR0b25fb2siOiJPayBlcnJvciIsInVzZXJzLXNlYXJjaC1iYXJfYnV0dG9uX3NlYXJjaCI6IlNlYXJjaCB1c2VycyIsInByaW50LWFjdGlvbnMtZm9vdGVyX2J1dHRvbl9zZW5kLXNlbGVjdGVkLWRvY3VtZW50cyI6IlNlbmQgc2VsZWN0ZWQgZG9jdW1lbnRzIiwibWFpbGluZy1saXN0LWRldGFpbHNfYnV0dG9uX2R1cGxpY2F0ZS1tYWlsaW5nLWxpc3QiOiJEdXBsaWNhdGUgbWFpbGluZyBsaXN0IiwibWVzc2FnZS10by1hc3NpZ25lZV9idXR0b25fZGVsZXRlLWRvY3VtZW50IjoiRGVsZXRlIGRvY3VtZW50IiwicmVxdWlyaW5nLWFjdGlvbnMtdGVtcGxhdGVzX2xpbmtfdmlldy1kZXRhaWxzIjoiVmlldyBkZXRhaWxzIiwiY29udGFjdC1tb2RpZmljYXRpb24tYWN0aW9uc19idXR0b25fc2F2ZS1jb250YWN0IjoiU2F2ZSBjb250YWN0IiwiY29ycG9yYXRlLWdyb3VwLWRldGFpbHNfYnV0dG9uX2RlbGV0ZS1ncm91cCI6IkRlbGV0ZSBncm91cCIsIm1hbmFnZS1waWNrdXBzLWZpbHRlcnMtY3RybF9idXR0b25fcmVzZXQtc2hpcG1lbnQiOiJSZXNldCBzaGlwbWVudCIsInBpY2t1cC1jb25maXJtYXRpb24tY3RybF9idXR0b25fb3Blbi1ub3RpZmljYXRpb24iOiJPcGVuIG5vdGlmaWNhdGlvbiIsImV4aXN0aW5nLWVtYWlscy1tb2RhbF9idXR0b25fY2xvc2UiOiJDbG9zZSBlbWFpbHMiLCJkaGwtdG9wLW5hdi1tZW51X2xpbmtfdmlldy1hbGwiOiJWaWV3IGFsbCBpdGVtcyIsInNoaXBtZW50LXR5cGUtaGVscGVyX2J1dHRvbl9zZWxlY3QtaGVscGVyIjoiU2VsZWN0IGhlbHBlciIsIm1vYmlsZS1jdXJyZW5jeS1waWNrZXJfYnV0dG9uX3NlbGVjdCI6IlNlbGVjdCIsIm1haWxpbmctbGlzdC1kZXRhaWxzX2J1dHRvbl9yZW1vdmUtc2VsZWN0ZWQtY29udGFjdHMiOiJSZW1vdmUgc2VsZWN0ZWQgY29udGFjdHMiLCJob21lX2J1dHRvbl9yYXRlLWFuZC1xdW90ZSI6IkdldCBSYXRlIGFuZCBUaW1lIFF1b3RlIiwiZGFzaGJvYXJkLXRhYnNfbGlua190YWIiOiJUYWIiLCJkaGwtdG9wLW5hdi1tZW51X2xpbmtfc3RhdHVzIjoiU3RhdHVzIiwibXktcHJvZHVjdC1mb3JtX2J1dHRvbl9jYW5jZWwtZm9ybSI6IkNhbmNlbCBmb3JtIiwic3RhdHVzLW5vdGlmaWNhdGlvbnMtY29tcG9uZW50X2J1dHRvbl9jYW5jZWwtY2hhbmdlcyI6IkNhbmNlbCB0aGUgY2hhbmdlcyIsImNvcHktdXNlcnMtbW9kYWxfYnV0dG9uX2NhbmNlbCI6IkNhbmNlbCBjb3B5aW5nIHVzZXJzIiwibXktcHJvZHVjdC1saXN0LW1vZGFsX2J1dHRvbl91cGxvYWQtbGlzdCI6IlVwbG9hZCBsaXN0IiwiZGFzaGJvYXJkLXJucV9idXR0b25fbmV4dCI6Ik5leHQgZGFzaGJvYXJkIiwicmV0dXJuLWxhYmVsX2J1dHRvbl9zYXZlIjoiU2F2ZSBsYWJlbCIsIm9ubGluZS1iaWxsaW5nLWVucm9sbG1lbnRfYnV0dG9uX2Nsb3NlIjoiQ2xvc2UgZW5yb2xsbWVudCIsImRhc2hib2FyZC1xdWljay1saW5rc19saW5rX2xpbmsiOiJMaW5rIiwiZGlnaXRhbC1jdXN0b21zLWludm9pY2UtbGF5b3V0X2J1dHRvbl9kZWxldGUtYWRkaXRpb25hbC1kb2N1bWVudCI6IkRlbGV0ZSIsIm1hbmFnZS1zaGlwbWVudHMtY29tcG9uZW50X2J1dHRvbl9tYWtlLW5vdC1mYXZvcml0ZSI6Ik1ha2Ugbm90IGZhdm9yaXRlIHNoaXBtZW50IiwibWFuYWdlLXBpY2t1cHMtZmlsdGVycy1rZXl3b3JkX2J1dHRvbl9yZXNldCI6IlJlc2V0IiwiZ3JhbnRlZC1hdXRob3JpemF0aW9ucy1kaGxfYnV0dG9uX2dyYW50IjoiR3JhbnQiLCJzaGlwbWVudC1ub3RpZmljYXRpb25fYnV0dG9uX3NhdmUtYW5kLWNvbnRpbnVlIjoiQ29udGludWUgYW5kIHNhdmUiLCJjb3Jwb3JhdGUtbm9kZS1zd2l0Y2hlcl9idXR0b25fcmVzdG9yZS1kZWZhdWx0cyI6IlJlc3RvcmUgZGVmYXVsdHMiLCJkaGwtdG9wLW5hdi1tZW51X2xpbmtfcGFja2FnaW5nLXNldGluZ3MiOiJQYWNrYWdpbmcgc2V0dGluZ3MiLCJsb2dpbl9idXR0b25fbG9naW4iOiJMb2dpbiIsImVkaXQtYWNjb3VudC1mb3JtX2J1dHRvbl9zYXZlIjoiU2F2ZSBlZGl0aW5nIGFjY291bnQiLCJzZXR0aW5ncy1tYW5hZ2VtZW50X2J1dHRvbl9saXN0LWVkaXQtcm93IjoiRWRpdCByb3ciLCJ0cmFja2luZy1pbmZvX2J1dHRvbl9tYW5hZ2UtcGlja3VwcyI6Ik1hbmFnZSBwaWNrdXBzIiwiZmlsZS11cGxvYWRlci1lbGVtZW50X2J1dHRvbl9kZWxldGUiOiJEZWxldGUgZmlsZSBlbGVtZW50IiwicmVnLWZvcm1fYnV0dG9uX25leHQiOiJOZXh0IGZvcm0iLCJtb2JpbGUtdHJhY2stYnktbnVtYmVyX2J1dHRvbl9zdWJtaXQtdHJhY2tpbmctbnVtYmVycyI6IlN1Ym1pdCB0cmFja2luZyBudW1iZXJzIiwic2NoZWR1bGUtcGlja3VwLWN0cmxfYnV0dG9uX25hdmlnYXRlIjoiTmF2aWdhdGUgdG8gbWFuYWdlIHBpY2t1cHMiLCJjb3Jwb3JhdGUtZ3JvdXAtZGV0YWlsc19idXR0b25fY3JlYXRlLWdyb3VwIjoiQ3JlYXRlIGdyb3VwIiwibW9iaWxlLXBhY2thZ2UtbGlzdC1pdGVtX2J1dHRvbl9yZW1vdmUtcGFja2FnZSI6IlJlbW92ZSBwYWNrYWdlIiwiZGhsLW1haWxpbmctbGlzdF9saW5rX3NlYXJjaCI6IlNlYXJjaCBtYWlsaW5nIGxpc3QiLCJtb2JpbGUtdHJhY2tpbmctcGllY2VzX2J1dHRvbl90b2dnbGUtcGllY2VzIjoiVG9nZ2xlIHBpZWNlcyIsImNvdW50cnktbGFuZ3VhZ2UtcGlja2VyX2J1dHRvbl9nZXQtY3VycmVudCI6IkdldCBjdXJyZW50Iiwic2hpcG1lbnQtZmlsdGVyZWQtdmlld19idXR0b25fcmV2aWV3LXNoaXBtZW50IjoiUmV2aWV3IHRoZSBzaGlwbWVudCIsInJlZ2lzdHJhdGlvbi1yZXN1bHRfbGlua19jb250aW51ZSI6IkNvbnRpbnVlIHJlZ2lzdHJhdGlvbiIsIm1ha2UtZmF2b3JpdGVfYnV0dG9uX2dvLXRvLWVkaXQtbW9kZSI6IkdvIHRvIGVkaXQgbW9kZSIsIm9ubGluZS1iaWxsaW5nLWVucm9sbG1lbnRfYnV0dG9uX3N1Ym1pdC1lbnJvbGxtZW50IjoiU3VibWl0IGVucm9sbG1lbnQiLCJld2YtZ3JpZF9saW5rX3RvZ2dsZS1zb3J0LW9yZGVyLWZvciI6IlRvZ2dsZSBzb3J0IG9yZGVyIGZvciIsIm1hcC1pbmZvYm94X2J1dHRvbl9nZXQtZGlyZWN0aW9ucyI6IkdldCBtYXAgZGlyZWN0aW9ucyIsInJlZmVyZW5jZS1vcHRpb25zX2J1dHRvbl9kZWxldGUtc2VsZWN0ZWQiOiJEZWxldGUgc2VsZWN0ZWQiLCJhZGRyZXNzLWRldGFpbHMtY291bnRyeV9idXR0b25fY2xvc2UiOiJDbG9zZSBjb3VudHJ5IiwiYWRkLXBpY2t1cC1sb2NhdGlvbnNfYnV0dG9uX3VwZGF0ZS1waWNrdXAiOiJVcGRhdGUgcGlja3VwIiwicGlja3VwLXBhY2thZ2luZ3NfYnV0dG9uX3JlbW92ZS1wYWNrYWdpbmciOiJSZW1vdmUgcGFja2FnaW5nIiwiYXNzaWduLXNoaXBtZW50LWR1dGllcy1hbmQtdGF4ZXNfYnV0dG9uX3RvZ2dsZS1lZGl0IjoiVG9nZ2xlIGR1dGllcyBlZGl0IiwiY29tbW9kaXR5LWNvZGUtc2VhcmNoX2xpbmtfb3Blbi1zZWFyY2giOiJPcGVuIHNlYXJjaCIsInBhcGVybGVzcy1jdXN0b21zLXNlY3Rpb25fYnV0dG9uX3JlbW92ZS1pbWFnZSI6IlJlbW92ZSBpbWFnZSIsImRpZ2l0YWwtY3VzdG9tcy1pbnZvaWNlLWxheW91dF9idXR0b25fZGVsZXRlLWVhZC1kb2N1bWVudCI6IkRlbGV0ZSIsIm15LXByb2R1Y3QtbGlzdC1tb2RhbF9idXR0b25fZGVsZXRlLXNlbGVjdGVkIjoiRGVsZXRlIHNlbGVjdGVkIGl0ZW1zIiwibG9jYXRvci1vcHRpb25zX2J1dHRvbl9jYW5jZWwiOiJDYW5jZWwgb3B0aW9ucyIsIm9ubGluZS1iaWxsaW5nLWVucm9sbG1lbnRfYnV0dG9uX2dvLXRvLWxvZ2luIjoiR28gdG8gbG9naW4gcGFnZSIsIm1hbmFnZS1waWNrdXBzLW1lbnVfbGlua19nZXQtcmF0ZSI6IkdldCByYXRlIiwicHJpbnQtYWN0aW9ucy1kaXZfYnV0dG9uX2ZldGNoLW90aGVyIjoiUHJpbnQgb3RoZXIiLCJhZGRyZXNzLWJvb2staW1wb3J0LW1hbmFnZV9idXR0b25fc2F2ZS1hcy1uZXciOiJTYXZlIGFzIG5ldyIsInBhY2thZ2luZy1zZXR0aW5nc19idXR0b25fc2F2ZSI6IlNhdmUgcGFja2FnaW5nIiwibW9iaWxlLXBob25lLWNvZGVfbGlua190eXBlIjoiVHlwZSIsInZlcmlmaWNhdGlvbl9idXR0b25fcmVuZXctZW1haWwtdmVyaWZpY2F0aW9uIjoiUmVuZXcgdmVyaWZpY2F0aW9uIGVtYWlsIiwicGFja2FnaW5nLXJvdy1hY3Rpb25zX2J1dHRvbl9kZWxldGUtcGFja2FnZS1yb3ciOiJEZWxldGUgcGFja2FnZSByb3ciLCJld2YtbW9kYWxfYnV0dG9uX3N0YXktb24tcGFnZSI6IlN0YXkgb24gdGhpcyBQYWdlIiwibW9iaWxlLXF1b3Rlcy1wcm9kdWN0X2J1dHRvbl9zaG93LWRpc2NsYWltZXIiOiJTaG93IGRpc2NsYWltZXIiLCJjYW5jZWwtYXNzaWdubWVudC10ZW1wbGF0ZV9idXR0b25fZGVjbGluZSI6IkRlY2xpbmUgYnV0dG9uIiwiaGVscGVycy1zZWN0aW9uX2J1dHRvbl9oZWxwLWRlY2lkZS1kb2N1bWVudCI6IkhlbHAgZGVjaWRlIGRvY3VtZW50IiwicmVxdWlyaW5nLWFjdGlvbnMtdGVtcGxhdGVzX2xpbmtfZWRpdCI6IkVkaXQgcmVxdWlyaW5nIiwiY29tcGxldGUtc2hpcG1lbnRfYnV0dG9uX2Rvd25sb2FkLXJldHVybi1wcmludC1kb2N1bWVudHMiOiJEb3dubG9hZCByZXR1cm4gcHJpbnQgZG9jdW1lbnRzIiwicmVmZXJlbmNlLWZvcm1hdF9idXR0b25fZGVsZXRlLXNlbGVjdGVkIjoiRGVsZXRlIHNlbGVjdGVkIHJlZmVyZW5jZSIsImV3Zi1tb2RhbF9idXR0b25fZG8tbm90LWNhbmNlbCI6IkRvIG5vdCBjYW5jZWwgZXdmIG1vZGFsIiwiY29tbW9uLWF1dG9jb21wbGV0ZS1tb2RhbF9idXR0b25fY2xvc2UiOiJDbG9zZSBhdXRvY29tcGxldGUiLCJkYXRlLXJhbmdlLXBpY2tlcl9idXR0b25fdG9nZ2xlLXRvLWRhdGVwaWNrZXIiOiJUb2dnbGUgdG8gZGF0ZXBpY2tlciIsIm1hbmFnZS1zaGlwbWVudHMtY29tcG9uZW50X2J1dHRvbl9yZXZpZXctc2hpcG1lbnQiOiJSZXZpZXcgYSBzaGlwbWVudCIsInJlcG9ydGluZy1kZXRhaWxzLWVkaXQtZmllbGRzX2J1dHRvbl9kZWxldGUiOiJEZWxldGUgZGV0YWlscyBlZGl0Iiwic2hpcG1lbnQtZmlsdGVyZWQtdmlld19idXR0b25fcmVqZWN0LXNoaXBtZW50IjoiUmVqZWN0ICBzaGlwbWVudCB2aWV3IiwiYWRkcmVzcy1ib29rX2J1dHRvbl9tYW5hZ2UtY29udGFjdHMiOiJNYW5hZ2UgY29udGFjdHMiLCJkaWdpdGFsLWN1c3RvbXMtaW52b2ljZS1sYXlvdXRfYnV0dG9uX2NsZWFyLWN1c3RvbXMtdXBsb2FkIjoiQ2xlYXIgY3VzdG9tcyB1cGxvYWQgZm9ybSIsInBhY2thZ2Utc3VwcGxpZXNfbGlua19jb250aW51ZSI6IkNvbnRpbnVlIHBhY2thZ2Ugc3VwcGxpZXMiLCJjb3Jwb3JhdGUtdXNlcnNfYnV0dG9uX2hhbmRsZSI6IkhhbmRsZSIsInNhdmUtYnV0dG9uX2J1dHRvbl9zYXZlLWNoYW5nZXMiOiJTYXZlIHRoZSBjaGFuZ2VzIGJ1dHRvbiIsInRvcC1uYXYtbWFpbl9saW5rX3NoaXAiOiJTdWIgc2hpcCIsImNoYXQtbGF1bmNoZXItaXRlbV9idXR0b25fbGF1bmNoLWNoYXQiOiJMYXVuY2ggY2hhdCBpdGVtIiwiZGF0ZS1waWNrZXItc3dpdGNoZXJfYmxvY2tfc2hvdy1kYXRlIjoiU2hvdyBkYXRlIiwicHJvdmlldy1saW5rX2xpbmtfY2xpY2siOiJDbGljayBwcmV2aWV3IiwiZGVsaXZlcnktb3B0aW9ucy1pdGVtX2J1dHRvbl90b2dnbGUiOiJUb2dnbGUgb3B0aW9ucyIsImNhbmNlbC1hc3NpZ25tZW50LXRlbXBsYXRlX2J1dHRvbl9wcm9jZWVkIjoiUHJvY2VlZCBidXR0b24iLCJpbnN1cmFuY2UtdmFsdWVfYnV0dG9uX3ZpZXcta2V5LWZhY3RzIjoiVmlldyBrZXkgZmFjdHMiLCJyZXdhcmQtY2FyZF9idXR0b25fZWRpdCI6IkVkaXQgcmV3YXJkIiwicGFja2FnaW5nLXJvdy1hY3Rpb25zX2J1dHRvbl9oYW5kbGUiOiJIYW5kbGUgcGFja2FnaW5nIiwic2F2ZWQtY3VzdG9tcy1wb3B1cF9idXR0b25fcG9wdXAiOiJQb3B1cCIsImRlbGV0ZS1ncm91cHMtY29uZmlybWF0aW9uX2J1dHRvbl9kZWxldGUtZ3JvdXBzIjoiRGVsZXRlIGdyb3VwcyBjb25maXJtYXRpb24iLCJhZGRyZXNzLXJlZ2lvbi1maWVsZF9saW5rX3R5cGUiOiJBZGRyZXNzIHJlZ2lvbiB0eXBlIiwidG9vbGJhci1zZWN0aW9uX2J1dHRvbl9kZWNsaW5lLWFzc2lnbmVkLXNoaXBtZW50IjoiRGVjbGluZSBhc3NpZ25lZCBzaGlwbWVudCIsImFjY291bnQtbWFuYWdlbWVudF9idXR0b25fY2FuY2VsIjoiQ2FuY2VsIG1hbmFnZW1lbnQiLCJ1bmF2YWlsYWJsZS1wcm9kdWN0LWZvci1zaGlwbWVudC1tb2RhbF9idXR0b25fbm8iOiJObyBtb2RhbCIsInByb3ZpZXctbGluay1pdGVtX2xpbmtfY2xpY2siOiJDbGljayBwcmV2aWV3IGl0ZW0iLCJtb2JpbGUtbmF2aWdhdGlvbl9saW5rX29wZW4tZ3JvdXAtbG9naW4iOiJPcGVuIGdyb3VwIGxvZ2luIiwiZWRpdC1wb3B1cC10ZW1wbGF0ZV9idXR0b25fZGVjbGluZSI6IkRlY2xpbmUgcG9wdXAiLCJkaWdpdGFsLWN1c3RvbXMtaW52b2ljZS1sYXlvdXRfYnV0dG9uX2NsZWFyIjoiQ2xlYXIgY3VzdG9tcyBpbnZvaWNlIiwiZGhsLXNoaXBtZW50LWNvc3Qtc2NyaXB0c19idXR0b25fZnVsbGFkZHJlc3MiOiJGdWxsIGFkZHJlc3MiLCJjb3JwLWNvbnRhY3QtaW5mb19idXR0b25fc2F2ZSI6IlNhdmUgY29ycCBjb250YWN0IGluZm8iLCJkaGwtbGluay1tb2RhbF9idXR0b25fbGluay10byI6IkxpbmsgdG8iLCJtYWlsaW5nLWxpc3RzX2J1dHRvbl9hZGQtbWFpbGluZy1saXN0IjoiQWRkIG1haWxpbmcgbGlzdCIsImFkZHJlc3MtYm9va19saW5rX2Rvd25sb2FkLXNlbGVjdGVkIjoiRG93bmxvYWQgc2VsZWN0ZWQiLCJzaGFyZS1xdW90ZS1tb2RhbF9saW5rX2Nsb3NlIjoiQ2xvc2UgbW9kYWwiLCJzaGlwbWVudC1zZXR0aW5ncy1maWVsZC1wcm9jZXNzaW5nX2xpbmtfdHlwZSI6IlR5cGUgZmllbGQgcHJvY2VzcyIsInVzZXItcHJvZmlsZS10YWJzX2xpbmtfbWFuYWdlLWNyZWRpdC1jYXJkcyI6Ik1hbmFnZSBjcmVkaXQgY2FyZHMiLCJzaGlwbWVudC1yZWZlcmVuY2UtbW9kYWxfYnV0dG9uX2RlbGV0ZSI6IkRlbGV0ZSBtb2RhbCIsImxvY2F0b3Itc2VhcmNoX2J1dHRvbl9zZWFyY2giOiJTZWFyY2ggbG9jYXRvciIsImFkZHJlc3MtYm9vay1pbXBvcnQtYnVpbGRfYnV0dG9uX3Byb2Nlc3MtY29udGFjdHMiOiJQcm9jZXNzIGNvbnRhY3RzIGJvb2siLCJkZWxpdmVyeS1kYXRlLXRhYnNfYnV0dG9uX3NlbGVjdC1kYXRlIjoiU2VsZWN0IGRhdGUiLCJxdWljay12aWV3X2xpbmtfc2hvdy1xdWljay12aWV3IjoiU2hvdyBxdWljayB2aWV3IiwiZGFzaGJvYXJkLXRhYnNfbGlua19kaXNhYmxlZC10YWIiOiJEaXNhYmxlZCB0YWIiLCJwYWNrYWdpbmctcm93LWFjdGlvbnNfYnV0dG9uX2NvcHktcGFja2FnZS1yb3ciOiJDb3B5IHBhY2thZ2Ugcm93IiwiZGVjbGluZS1zaGlwbWVudF9idXR0b25fZGVjbGluZSI6IkRlY2xpbmUiLCJzaGlwbWVudC1vdmVyZHVlX2J1dHRvbl9jYW5jZWwiOiJDYW5jZWwgb3ZlcmR1ZSBjb21wb25lbnQiLCJkaGwtY2l0eS1maWVsZF9saW5rX2F1dG9jb21wbGV0ZSI6IkF1dG9jb21wbGV0ZSIsImdyb3VwLXN3aXRjaGVyLXNlY3Rpb25fYnV0dG9uX3NldCI6IlNldCIsImxlYXZlLWNvbmZpcm1hdGlvbi1kaWFsb2dfYnV0dG9uX3llcyI6IlllcywgbGVhdmUiLCJhZGRyZXNzLWJvb2stYWN0aW9uc19idXR0b25fZGVsZXRlLWNvbnRhY3RzIjoiRGVsZXRlIGNvbnRhY3RzIiwiYWRkaXRpb25hbC1hZ3JlZW1lbnRzX2J1dHRvbl9hZ3JlZSI6IkFncmVlIGFkZGl0aW9uYWwiLCJ3Y2MtZGVsaXZlcnktb3B0aW9uc19idXR0b25fc2hhcmUtc2VuZCI6IlNoYXJlIHF1b3RlIGFuZCBzZW5kIiwicHJpbnQtYWN0aW9ucy1kaXZfYnV0dG9uX2ZldGNoLWFuZC1wcmludCI6IkZldGNoIGFuZCBwcmludCBzZWxlY3RlZCBkb2N1bWVudHMiLCJyZXR1cm4tbGFiZWwtcGFja2FnZXNfYnV0dG9uX3VuZG8tY2hhbmdlcyI6IlVuZG8gY2hhbmdlcyIsInJlc2V0LXBhc3N3b3JkX2J1dHRvbl9zdWJtaXQtcGFzc3dvcmQiOiJTdWJtaXQgcGFzc3dvcmQiLCJzaGlwbWVudC1jb3N0X2J1dHRvbl9hZ3JlZSI6IkFncmVlIiwidHJhY2stYnktbnVtYmVyc19idXR0b25fc3VibWl0IjoiU3VibWl0IHRyYWNrIGJ5IG51bWJlcnMiLCJzaGlwbWVudC1jYW5ub3QtYmUtcmVzdW1lZF9idXR0b25fb2siOiJPayBjbG9zZSIsImRhc2hib2FyZC1yZXBvcnRpbmctbGlzdF9saW5rX3NoaXBtZW50LXJlcG9ydGluZyI6IlNoaXBtZW50IHJlcG9ydGluZyIsImZvcmdvdC1wYXNzd29yZF9idXR0b25fc2VuZC1yZXNldCI6IlNlbmQgcmVzZXQiLCJzY2hlZHVsZWQtcGlja3Vwcy1jdHJsX2J1dHRvbl9jYW5jZWwiOiJDYW5jZWwgc2NoZWR1bGVkIHBpY2t1cCIsImZpbGUtdXBsb2FkZXItbW9kYWxfYnV0dG9uX3VwbG9hZC1maWxlcyI6IlVwbG9hZCB0aGUgZmlsZXMiLCJhZGRyZXNzLWRldGFpbHMtb2ZhY19idXR0b25fY29udGludWUiOiJDb250aW51ZSBvZmFjIiwiY29udGFjdC1pbmZvX2J1dHRvbl9zYXZlIjoiU2F2ZSBpbmZvIiwiZGFzaGJvYXJkLWZyb20tdG9fYnV0dG9uX29wZW4tYWRkcmVzcy1ib29rIjoiT3BlbiBhZGRyZXNzIGJvb2siLCJzZXJ2aWNlLWFsZXJ0cy1jb250YWluZXJfbGlua19saW5rIjoiU2VydmljZSBsaW5rIiwicmV0dXJuLWxhYmVsLXNoaXBtZW50X2J1dHRvbl9vcGVuIjoiT3BlbiBzaGlwbWVudCIsIm1vYmlsZS13ZWxjb21lX2J1dHRvbl9jb250aW51ZSI6IkNvbnRpbnVlIG1vYmlsZSIsIm9wdGlvbmFsLXNlcnZpY2VzX2J1dHRvbl9kYW5nZXJvdXMtZ29vZHMtYWRkLWFub3RoZXIiOiJBZGQgZGFuZ2Vyb3VzIGdvb2QiLCJyZXBvcnRzLXRvb2xiYXJfYnV0dG9uX3NhdmUiOiJTYXZlIHJlcG9ydHMiLCJjcmVhdGUtc2hpcG1lbnQtZWxlbWVudF9saW5rX2NyZWF0ZSI6IkNyZWF0ZSBzaGlwbWVudCIsIm9wdGlvbmFsLXNldHRpbmdzLXNlY3Rpb25fYnV0dG9uX2VudGVyLWVkaXQtbW9kZSI6IkVudGVyIGVkaXQgbW9kZSIsImRobC10b3AtbmF2LW1lbnVfbGlua191bml0LW9mLW1lYXN1cmUiOiJVbml0IG9mIG1lYXN1cmUiLCJpbnN1cmUtc2hpcG1lbnQtcG9wdXBfYnV0dG9uX3NoaXBtZW50LWRlY2xpbmUiOiJEZWNsaW5lIGluc3VyZSBwb3B1cCIsInNzYi1jb21wbGV0aW9uX2J1dHRvbl9wcmludCI6IlByaW50IGNvbXBsZXRpb24gZG9jdW1lbnQiLCJhZGRyZXNzLWNvbnRhY3RfbGlua19yZW1vdmUtZm9ybSI6IlJlbW92ZSBmb3JtIiwiZm9yZ290LXBhc3N3b3JkX2J1dHRvbl9jb250aW51ZSI6IkNvbnRpbnVlIGZvcmdvdCBwYXNzd29yZCBmb3JtIiwiZ3JvdXAtc3dpdGNoZXItbGluay1zZWN0aW9uX2J1dHRvbl9sb2FkLW1vcmUtc2hpcG1lbnRzIjoiTG9hZCBtb3JlIHNoaXBtZW50cyIsImV3Zi1tb2RhbF9idXR0b25fY2xvc2Utc2hpcG1lbnQiOiJDbG9zZSBzaGlwbWVudCIsIm5vdGlmaWNhdGlvbi1zaGFyaW5nLXNlY3Rpb25fYnV0dG9uX3NlbmQiOiJTZW5kIGJ1dHRvbiIsImJhcmNvZGVfbGlua19tYW5pZmVzdC1zaGlwbWVudHMiOiJNYW5pZmVzdCBzaGlwbWVudHMiLCJld2YtbW9kYWxfYnV0dG9uX3llcyI6IlllcyBld2YgbW9kYWwiLCJhdXRoLXBpY2t1cC1sb2NhdGlvbnMtc2VjdGlvbl9idXR0b25fc2hvdyI6IlNob3cgYXV0aCBwaWNrdXAiLCJkZWxpdmVyeS1kYXRlLXRhYnNfYnV0dG9uX3NlbGVjdC1kZWxpdmVyeS1kYXRlIjoiU2VsZWN0IGRlbGl2ZXJ5IGRhdGUiLCJjb3Jwb3JhdGUtdXNlcnNfYnV0dG9uX2ltcG9ydC11c2VycyI6IkltcG9ydCB1c2VycyIsIm1hbmFnZS1yZWZlcmVuY2UtY29sbGVjdGlvbl9idXR0b25fYWRkIjoiQWRkIiwic3RhdHVzLWZpbHRlcl9idXR0b25fcmVzZXQtZmlsdGVyIjoiUmVzZXQgc3RhdHVzIGZpbHRlciIsInN0YXR1cy1ub3RpZmljYXRpb25zLWNvbXBvbmVudF9idXR0b25fZXhwYW5kIjoiRXhwYW5kIGNvbXBvbmVudCIsImFkZC1waWNrdXAtbGF5b3V0X2xpbmtfaW5mbyI6IkluZm8iLCJkZWxpdmVyeS1vcHRpb25zLWRldGFpbHNfYnV0dG9uX3RvZ2dsZSI6IlRvZ2dsZSBkZWxpdmVyeSBkZXRhaWxzIiwibm90aWZpY2F0aW9uLXNoYXJpbmctbW9kYWxfYnV0dG9uX2FkZCI6IkFkZCBidXR0b24iLCJzaGlwbWVudC1pbXBvcnQtcHJvY2Vzc2luZy1yZXN1bHRfYnV0dG9uX3N1Y2Nlc3MtYnV0dG9uIjoiU3VjY2VzcyBidXR0b24iLCJpdGVtLWF0dHJpYnV0ZXMtcHJvZHVjdF9idXR0b25fY29weSI6IkNvcHkgaXRlbSIsImRobC1mb290ZXJfYnV0dG9uX2xpbmsiOiJMaW5rIGZvb3RlciIsInByb2ZpbGUtY29udGFjdF9idXR0b25fdXBkYXRlLWNvbnRhY3QiOiJVcGRhdGUgYSBjb250YWN0IiwiZGFzaGJvYXJkLXNoaXBtZW50LXF1aWNrLXZpZXdfYnV0dG9uX2VkaXQiOiJFZGl0IGRhc2hib2FyZCIsImdyYW50LWZvcm1fYnV0dG9uX3NhdmUiOiJTYXZlIGdyYW50IGZvcm0iLCJtZXNzYWdlLXRvLWFzc2lnbmVlX2J1dHRvbl9hcHBseS10ZXh0IjoiQXBwbHkgdGV4dCIsImludml0ZS11c2Vyc19idXR0b25fdXBsb2FkIjoiSW52aXRlIiwibXktcHJvZHVjdC1mb3JtX2J1dHRvbl9hZGQtcHJvZHVjdCI6IkFkZCBwcm9kdWN0IiwiY29ycG9yYXRlLWdyb3VwLXNlYXJjaF9idXR0b25fYXBwbHkiOiJBcHBseSBzZWFyY2giLCJjYXJvdXNlbC1zZWN0aW9uX2xpbmtfbGVmdCI6IkxlZnQiLCJvbmxpbmUtYmlsbGluZy1lbnJvbGxtZW50X2J1dHRvbl92aWV3LXBheS1iaWxsIjoiVmlldyBwYXkgYmlsbCIsImV3Zi1ncmlkX2xpbmtfc2hvdy1jb2x1bW4tY3VzdG9taXphdGlvbi1kaWFsb2ciOiJTaG93IGNvbHVtbiBjdXN0b21pemF0aW9uIGRpYWxvZyIsInRyYWNrLW1vZGFsX2J1dHRvbl90cmFjayI6IlRyYWNrIGJ1dHRvbiIsImFzc2lnbi1zaGlwbWVudC1zYXZlX2J1dHRvbl9zYXZlIjoiU2F2ZSBhc3NpZ24iLCJwaWNrdXAtY2FuY2VsbGF0aW9uX2J1dHRvbl9jYW5jZWwtcGlja3VwIjoiQ2FuY2VsIHRoZSBwaWNrdXAiLCJzaGlwbWVudC1yZWZlcmVuY2VfYnV0dG9uX3NhdmUiOiJTYXZlIHNoaXBtZW50IHJlZmVyZW5jZSIsImxvZ2luX2xpbmtfcmVzZW5kLWFjdGl2YXRpb24tZW1haWwiOiJTZW5kIG5ldyBhY3RpdmF0aW9uIGVtYWlsIiwic2VsZWN0LWxhbmd1YWdlLW1vZGFsX2J1dHRvbl9jbG9zZSI6IkNsb3NlIGxhbmd1YWdlIiwiaW52aXRlLXVzZXJzX2J1dHRvbl9jYW5jZWwiOiJDYW5jZWwgaW52aXRpbmciLCJzZXR0aW5ncy1zZWN0aW9uX2xpbmtfY2xlYXItZGVmYXVsdC1zZWxlY3Rpb24iOiJDbGVhciBkZWZhdWx0IHNlbGVjdGlvbiIsInNoaXBtZW50LXNldHRpbmdzLWRobF9idXR0b25fc2hpcG1lbnQtcmVmZXJlbmNlcyI6IlNoaXBtZW50IHJlZmVyZW5jZXMiLCJkaGwtdG9wLW5hdi1tZW51X2xpbmtfYXV0aG9yaXplZC1waWNrdXAtbG9jYXRpb25zIjoiQXV0aG9yaXplZCBwaWNrdXAgbG9jYXRpb25zIiwic2hpcG1lbnQtcmVmZXJlbmNlLW1vZGFsX2J1dHRvbl9zaG93IjoiU2hvdyBtb2RhbCIsImNvcnBvcmF0ZS11c2VyLWRldGFpbHMtc2VjdGlvbl9idXR0b25fYWRkIjoiQWRkIGRldGFpbHMiLCJtZXNzYWdlLXRvLWFzc2lnbmVlLWNvbXBvbmVudF9idXR0b25fZG93bmxvYWQtZG9jdW1lbnQiOiJEb3dubG9hZCIsIm1hbmFnZS1zaGlwbWVudHMtY29tcG9uZW50X2J1dHRvbl9yZXZpZXctYWlyLXNoaXBtZW50IjoiUmV2aWV3IGFpciBzaGlwbWVudCIsInJldHVybi1zaGlwbWVudHMtZWxlbWVudF9saW5rX2NyZWF0ZSI6IkNyZWF0ZSBlbGVtZW50IiwibWFuYWdlLXBpY2t1cHMtbWVudV9idXR0b25fZG93bmxvYWQiOiJEb3dubG9hZCIsImNvcnBvcmF0ZS1ncm91cC1kZXRhaWxzLXNlY3Rvcl9idXR0b25fc2hvdyI6IlNob3ciLCJjb3Jwb3JhdGUtdXNlcnMtbW9kYWxfYnV0dG9uX2FkZC11c2VyIjoiQWRkIHVzZXIiLCJyZXNvbHZlLW9wZW4tc2hpcG1lbnRzLW1vZGFsX2J1dHRvbl9yZXNvbHZlLWNvbmZsaWN0IjoiUmVzb2x2ZSBhIGNvbmZsaWN0IiwiY3VzdG9tcy1zbnZvaWNlLXRlbXBsYXRlLWZvcm1fYnV0dG9uX3NlbGVjdCI6IlNlbGVjdCIsImRlZmF1bHQtZ3JvdXAtc2VjdGlvbl9idXR0b25fY2FuY2VsIjoiQ2FuY2VsIiwiZGlnaXRhbC1lbnJvbGxtZW50X2J1dHRvbl9kaWdpdGFsLWN1c3RvbXMiOiJEaWdpdGFsIGN1c3RvbXMiLCJncmFudC1mb3JtX2J1dHRvbl9jbG9zZSI6IkNsb3NlIGdyYW50IGZvcm0iLCJ1c2VyLXByb2ZpbGUtdGFic19saW5rX21hbmFnZS1yZXdhcmRzLWNhcmRzIjoiTWFuYWdlIHVzZXIgcmV3YXJkcyBjYXJkcyIsInN1Yi1uYXYtbWVudXNfbGlua190ZXh0IjoiVGV4dCIsImZpbHRlci1zZWxlY3Rpb24tcG9wdXBfbGlua19jbG9zZSI6IkNsb3NlIGZpbHRlciBwb3B1cCIsInNhdmUtZm9yLWxhdGVyX2J1dHRvbl9zYXZlIjoiU2F2ZSBmb3IgbGF0ZXIgYnV0dG9uIiwiZGhsLXRvcC1uYXYtbWVudV9saW5rX215LXByb2R1Y3QtbGlzdCI6Ik15IHByb2R1Y3QgbGlzdCIsImxvY2F0aW9uLXNlbGVjdG9yX2J1dHRvbl9zYXZlLWxvY2F0aW9uIjoiU2F2ZSBsb2NhdGlvbiIsIml0YXItZWVpLXdhcm5pbmdzX2J1dHRvbl9oaWRlIjoiSGlkZSIsIm1vYmlsZS1waWNrdXAtY29uZmlybWF0aW9uX2xpbmtfY2FuY2VsLXBpY2t1cCI6IkNhbmNlbCBhIHBpY2t1cCIsImNvcnBvcmF0ZS11c2Vyc19idXR0b25fdG9nZ2xlIjoiVG9nZ2xlIGNvcnBvcmF0ZSB1c2VyIiwic2hpcG1lbnQtaW1wb3J0LXByb2Nlc3NpbmctcmVzdWx0X2J1dHRvbl90b2dnbGUiOiJUb2dnbGUgYnV0dG9uIiwiZGhsLW1haWxpbmctbGlzdF9saW5rX3VwbG9hZCI6IlVwbG9hZCBtYWlsaW5nIGxpc3QiLCJuaWNrbmFtZS1jb2x1bW4tdGVtcGxhdGVfbGlua19lZGl0LWNvbnRhY3QiOiJFZGl0IGNvbnRhY3QiLCJzaGlwbWVudC1yZWZlcmVuY2UtbW9kYWxfYnV0dG9uX2NhbmNlbCI6IkNhbmNlbCBtb2RhbCIsIm1vYmlsZS1zaGlwbWVudC1hcHByb3ZhbF9idXR0b25fcmVqZWN0LXNoaXBtZW50IjoiUmVqZWN0IHNoaXBtZW50IGFwcHJvdmFsIiwicGFja2FnaW5nLWRlZmF1bHRzLW1vZGFsX2J1dHRvbl9hcHBseS1jaGFuZ2VzIjoiQXBwbHkgY2hhbmdlcyIsImNhbmNlbC10ZW1wbGF0ZV9idXR0b25fY2FuY2VsIjoiQ2FuY2VsIHRlbXBsYXRlIiwibW9iaWxlLXNoaXBtZW50LWFwcHJvdmFsX2J1dHRvbl9nby1zaGlwbWVudCI6IkdvIHNoaXBtZW50IiwicGlja3VwLW1vZGFsX2J1dHRvbl9pbml0LWFiaWxpdHkiOiJJbml0IGFiaWxpdHkiLCJwaWNrdXAtbW9kYWxfYnV0dG9uX2RlbGl2ZXJ5LWRhdGUiOiJEZWxpdmVyeSBkYXRlIiwiZGVmYXVsdC1ncm91cC1zZWN0aW9uX2J1dHRvbl9zYXZlIjoiU2F2ZSIsInRvcC1uYXYtbWVudS1ndWVzdF9saW5rX3NoaXAiOiJTaGlwIGxpbmsiLCJmaWxlLXVwbG9hZGVyLWVsZW1lbnRfYnV0dG9uX3VwbG9hZC1maWxlcy1saXN0IjoiVXBsb2FkIGZpbGVzIGxpc3QiLCJub3RpZmljYXRpb24tc2hhcmluZ19idXR0b25fc2F2ZS1jaGFuZ2VzIjoiU2F2ZSBDaGFuZ2VzIGJ1dHRvbiIsInRyYWNraW5nLXJlY2VudC1zaGlwbWVudHMtbW9kYWxfYnV0dG9uX2Fib3V0LXRyYWNraW5nIjoiQWJvdXQgdHJhY2tpbmciLCJob3Jpem9udGFsLWNhcm91c2VsX2J1dHRvbl9zZWxlY3QtaW52b2ljZSI6IlNlbGVjdCBpbnZvaWNlIiwiYWRkcmVzcy1jb250YWN0X2J1dHRvbl9jbGVhci1hZGRyZXNzIjoiQ2xlYXIgYWRkcmVzcyBmb3JtIiwic2hpcG1lbnQtb3ZlcmR1ZS1jb21wb25lbnRfYnV0dG9uX2VkaXQiOiJFZGl0IHNoaXBtZW50IiwibGFiZWwtcmVmZXJlbmNlX2J1dHRvbl9uZXh0IjoiTmV4dCBsYWJlbCIsImZpbGUtdXBsb2FkZXItd3JhcHBlcl9saW5rX2NhbmNlbCI6IkNhbmNlbCIsImFkZHJlc3MtZGV0YWlscy1jb250YWN0X2J1dHRvbl95ZXMiOiJZZXMgYnRuIiwidHJhY2stc2hpcG1lbnRfYnV0dG9uX3RyYWNrIjoiVHJhY2siLCJtYW5hZ2UtcGlja3Vwcy1maWx0ZXJzLXNlY3Rvcl9idXR0b25fcmVtb3ZlIjoiUmVtb3ZlIGZpbHRlcnMgc2VjdG9yIiwiYWRkcmVzcy1kZXRhaWxzLXNlY3Rpb25fYnV0dG9uX2VkaXQiOiJFZGl0IGFkZHJlc3MiLCJld2YtZ3JpZF9saW5rX3NlbGVjdC1hbGwtYWRkcmVzc2VzIjoiU2VsZWN0IGFsbCBhZGRyZXNzZXMiLCJkaGwtdG9wLW5hdi1tZW51X2xpbmtfc2hpcG1lbnQtc2V0dGluZ3MiOiJTaGlwbWVudCBzZXR0aW5ncyIsImFkZHJlc3MtYm9vay1ncmlkX2J1dHRvbl9jb250YWN0IjoiQ29udGFjdCIsInByZXZpZXctY29ucm9sbGVyX2J1dHRvbl9wcmV2aWV3LWxhYmVsIjoiUHJldmlldyBsYWJlbCIsImRobC1yZWdpb24tZmllbGRfbGlua19maWxsIjoiRmlsbCByZWdpb24iLCJhY2NvdW50LW1hbmFnZW1lbnQtZmlsdGVyX2J1dHRvbl9hcHBseSI6IkFwcGx5IG1hbmFnZW1lbnQiLCJhZGRyZXNzLWJvb2staW1wb3J0LWV4aXN0aW5nX2J1dHRvbl9wcm9jZXNzLWNvbnRhY3RzIjoiUHJvY2VzcyBjb250YWN0cyIsInJlc29sdmUtbW9kYWxfYnV0dG9uX2NhbmNlbCI6IkNhbmNlbCByZXNvbHZpbmcgbW9kYWwiLCJzaGlwbWVudC1jb3N0X2J1dHRvbl91cGdyYWRlLW5vdyI6IlVwZ3JhZGUgbm93IiwibWFuYWdlLXNoaXBtZW50X2xpbmtfbWFuYWdlIjoiTWFuYWdlIGEgc2hpcG1lbnQiLCJtYW5hZ2UtcGlja3Vwcy1zZWN0aW9uX2J1dHRvbl9zaG93LWJ1bGsiOiJTaG93IGJ1bGsgc2VjdGlvbiIsImFkZHJlc3MtYm9vay1pbXBvcnRfYnV0dG9uX3Byb2Nlc3MtY29udGFjdHMiOiJQcm9jZXNzIGNvbnRhY3RzIGltcG9ydCIsImV4cGFuZGFibGUtbGlua19oZWFkZXJfdG9nZ2xlLWV4cGFuZGFibGUtbGluayI6IlRvZ2dsZSBleHBhbmRhYmxlIGxpbmsiLCJld2YtbW9kYWxfYnV0dG9uX2NvbmZpcm1hdGlvbi1jbG9zZSI6IkNsb3NlIGNvbmZpcm1hdGlvbiIsInBpY2t1cC1ub3RpZmljYXRpb25zX2J1dHRvbl9zZW5kIjoiU2VuZCBub3RpZmljYXRpb24iLCJld2YtbW9kYWxfYnV0dG9uX2R1cGxpY2F0ZSI6IkR1cGxpY2F0ZSBtb2RhbCIsImRlbGV0ZS1zY2hlbWUtY29uZmlybWF0aW9uX2J1dHRvbl95ZXMiOiJZZXMgZGVsZXRlIiwicGllY2VzLWl0ZW1fYnV0dG9uX3RvZ2dsZS1waWVjZXMiOiJUb2dnbGUgdGhlIHBpZWNlcyIsImdyb3VwLXN3aXRjaGVyLXNlY3Rpb25fYnV0dG9uX3N1Ym1pdC1ncm91cC1zd2l0Y2hlciI6IlN1Ym1pdCIsImRobC10b3AtbmF2LWF1dGhfbGlua19zaGlwIjoiU2hpcCIsImFzc2lnbi1zaGlwbWVudC1kdXRpZXMtYW5kLXRheGVzX2J1dHRvbl90b2dnbGUiOiJUb2dnbGUgZHV0aWVzIiwiZ3JvdXAtcmVtaW5kZXJfbGlua19zd2l0Y2gtZ3JvdXAiOiJTd2l0Y2ggZ3JvdXAgbGluayIsImNvcnBvcmF0ZS1ncm91cF9idXR0b25faW52aXRlLXVzZXJzIjoiSW52aXRlIHVzZXJzIiwicmV0dXJuLWxhYmVsLWNyZWF0ZV9idXR0b25fY3JlYXRlIjoiQ3JlYXRlIiwibG9naW5fYnV0dG9uX2Rpc21pc3MiOiJMb2dpbiBkaXNtaXNzIiwibW9iaWxlLXNoaXBtZW50LXJlamVjdGlvbl9idXR0b25fcmVqZWN0IjoiUmVqZWN0IGEgc2hpcG1lbnQiLCJub3RpZmljYXRpb24tc2hhcmluZy1tb2RhbF9idXR0b25fcmVtb3ZlIjoiUmVtb3ZlIiwibWVzc2FnZS10by1hc3NpZ25lZV9idXR0b25fdXBsb2FkLWZpbGVzIjoiVXBsb2FkIGZpbGVzIiwidHJhY2tpbmctcmVzdWx0LWl0ZW1fYnV0dG9uX2hpZGUtZGV0YWlscyI6IkhpZGUgZGV0YWlscyIsInBhY2thZ2luZy1kZWZhdWx0cy1tb2RhbF9idXR0b25fY2FuY2VsLWNoYW5nZXMiOiJDYW5jZWwgY2hhbmdlcyBtb2RhbCIsImNvdW50cnktd2FybmluZ3NfYnV0dG9uX2hpZGUiOiJIaWRlIGEgbm90aWZpY2F0aW9uIiwicmVnaXN0cmF0aW9uLW1vZGFsX2J1dHRvbl9yZWdpc3RlciI6IkdvIHRvIHJlZ2lzdHJhdGlvbiIsImdyb3VwLXN3aXRjaGVyLXNlY3Rpb25fYnV0dG9uX3NldC1ncm91cCI6IlNldCBncm91cCIsInRyYWNraW5nLXJlc3VsdC1zdW1tYXJ5X2xpbmtfbGluayI6IkxpbmsgdHJhY2tpbmciLCJjb25zb2xpZGF0ZS1hY3Rpb25fYnV0dG9uX3J1bi1jb25zb2xpZGF0aW9uIjoiUnVuIGNvbnNvbGlkYXRpb24iLCJzZWxlY3Rvci1tb2RhbF9idXR0b25fY291bnRyeSI6IkNvdW50cnkiLCJ0b3AtbmF2LW1lbnVfbGlua191cGRhdGUtY29udGFjdC1pbmZvIjoiVXBkYXRlIGNvbnRhY3QgaW5mbyIsImRpZ2l0YWwtY3VzdG9tcy1pbnZvaWNlLWxheW91dF9idXR0b25fdXBsb2FkLWZvcm0tZGVsZXRlIjoiVXBsb2FkIGZvcm0gZGVsZXRlIiwiYWRkcmVzcy1kZXRhaWxzLWRvbWVzdGljX2J1dHRvbl9jbG9zZSI6IkNsb3NlIGRvbWVzdGljIiwiYWNjb3VudC1tYW5hZ2VtZW50LXNlY3Rpb25fYnV0dG9uX2hhbmRsZSI6IkhhbmRsZSIsImxvZ2luX2xpbmtfb3Blbi1sZWFybi1tb3JlIjoiTGVhcm4gbW9yZSIsImRpZ2l0YWwtY3VzdG9tcy1pbnZvaWNlLWxheW91dF9idXR0b25fY2xlYXItYWRkaXRpb25hbC1kb2N1bWVudHMiOiJDbGVhciBhZGRpdGlvbmFsIGRvY3VtZW50cyIsInNoaXBtZW50LWltcG9ydC1zY2hlbWUtZ3JpZF9idXR0b25fcmVtb3ZlLWNvbHVtbiI6IlJlbW92ZSBjb2x1bW4iLCJncmFudC1mb3JtX2J1dHRvbl9jbG9zZS1oaWRlLXJhdGVzIjoiQ2xvc2UgaGlkZSByYXRlcyIsImRhdGUtcmFuZ2UtcGlja2VyX2J1dHRvbl90b2dnbGUtZnJvbS1kYXRlcGlja2VyIjoiVG9nZ2xlIGZyb20gZGF0ZXBpY2tlciIsIm11bHRpLXBob25lX2J1dHRvbl9hZGQtcGhvbmUiOiJBZGQgcGhvbmUiLCJjdXN0b20taW52b2ljZS10ZW1wbGF0ZXNfYnV0dG9uX2J1bGsiOiJCdWxrIiwicGFnaW5hdGlvbl9ibG9ja19pdGVtLW1vdmUtdG8tcHJldi1wYWdlIjoiUHJldmlvdXMgcGFnZSIsInRyYWNraW5nLWluZm9fYnV0dG9uX3NjaGVkdWxlLXBpY2t1cCI6IlNjaGVkdWxlIHBpY2t1cCBpbmZvIiwiYWNjb3VudC1udW1iZXJzX2J1dHRvbl9hZGQtYWNjb3VudCI6IkFkZCBhY2NvdW50IiwiY3EtcG9wdXAtY29udHJvbGxlcl9idXR0b25fbmV4dCI6Ik5leHQiLCJjb25zb2xpZGF0aW9uLXJlc3VsdF9idXR0b25fYmFjay10by1saXN0IjoiQmFjayB0byB0aGUgbGlzdCIsImRobC10b3AtbmF2LW1lbnVfbGlua19jdXN0b21zLWludm9pY2UtdGVtcGxhdGVzIjoiQ3VzdG9tcyBpbnZvaWNlIHRlbXBsYXRlcyIsImNyaXRpY2FsLWFsZXJ0cy1jb250YWluZXJfbGlua19vayI6Ik9rIGNyaXRpY2FsIGFsZXJ0cyIsImN1c3RvbXMtaW52b2ljZS10ZW1wbGF0ZS1mb3JtLWFjdGlvbnNfYnV0dG9uX3NhdmUtaW52b2ljZS10ZW1wbGF0ZSI6IlNhdmUgaW52b2ljZSIsImRlbGl2ZXJ5LW9wdGlvbnMtc3dpdGNoZXJfYnV0dG9uX3NlbGVjdCI6IlNlbGVjdCBvcHRpb25zIiwicmVtb3ZlLXVzZXJzX2J1dHRvbl9jYW5jZWwiOiJDYW5jZWwgcmVtb3ZpbmcgdXNlcnMiLCJ3Y2MtZGVsaXZlcnktb3B0aW9uc19idXR0b25fc3RhcnQtbmV3LXF1b3RlIjoiU3RhcnQgcXVvdGUiLCJzaGlwbWVudC1zZXR0aW5ncy1kaGxfYnV0dG9uX3RpdGxlIjoiVGl0bGUiLCJ0cmFja2luZy1yZXN1bHRzX2J1dHRvbl9wcmludCI6IlByaW50IHRyYWNraW5nIHJlc3VsdHMiLCJkZWNsaW5lLWFzc2lnbm1lbnRfYnV0dG9uX2NhbmNlbCI6IkNhbmNlbCBhc3NpZ25tZW50IiwibWFpbGluZy1saXN0LWRldGFpbHNfYnV0dG9uX2FkZC1tYWlsaW5nLWxpc3QtY29udGFjdHMiOiJBZGQgbWFpbGluZyBsaXN0IGNvbnRhY3RzIiwiYWRkaXRpb25hbC1kb2N1bWVudHNfYnV0dG9uX2Rvd25sb2FkLWRvY3VtZW50IjoiRG93bmxvYWQgZG9jdW1lbnQiLCJzaGlwbWVudC1maWx0ZXJlZC12aWV3LWxlZnRfYnV0dG9uX3JlamVjdC1zaGlwbWVudCI6IlJlamVjdCBzaGlwbWVudCIsImdyYW50LWZvcm1fYnV0dG9uX3Jldm9rZS1hdXRob3JpemF0aW9uIjoiUmV2b2tlIGF1dGhvcml6YXRpb24iLCJ1cGRhdGUtdXNlcnNfYnV0dG9uX2NhbmNlbCI6IkNhbmNlbCB1cGRhdGluZyB1c2VycyIsImRobC10b3AtbmF2LWxpbmtzX2J1dHRvbl9sb2dvdXQiOiJMb2dvdXQgbGluayIsInN1bW1hcnktZGhsX2J1dHRvbl9wcmV2aWV3LWRvY3VtZW50IjoiUHJldmlldyBhIGRvY3VtZW50IiwiZ3JhbnRlZC1hdXRob3JpemF0aW9uc19idXR0b25fZW50ZXIiOiJFbnRlciIsIm15LXByb2R1Y3QtbGlzdC1tb2RhbF9idXR0b25fZG93bmxvYWQtbGlzdCI6IkRvd25sb2FkIGxpc3QiLCJtb2JpbGUtbmF2aWdhdGlvbl9saW5rX3NoaXBtZW50LWFwcHJvdmFsIjoiU2hpcG1lbnQgQXBwcm92YWwiLCJpdGVtX2J1dHRvbl9leHBhbmQiOiJFeHBhbmQiLCJtYW5pZmVzdGluZy1hY3Rpb25fYnV0dG9uX29wZW4tbWFudWFsIjoiT3BlbiBtYW51YWwiLCJjb21tb24tc2VhcmNoX2J1dHRvbl9wbGFpbi1zZWFyY2giOiJDb21tb24gc2VhcmNoIiwiZ2V0LXNlbmQtbm90aWZpY2F0aW9uc19idXR0b25fbm90aWZ5IjoiTm90aWZ5IiwiZ3JhbnQtZm9ybV9idXR0b25fY2hhbmdlLWhpZGUtcmF0ZXMiOiJDaGFuZ2UgaGlkZSByYXRlcyIsImNvdW50cnktd2FybmluZ3NfYnV0dG9uX2hpZGUtaW5saW5lLWFsZXJ0IjoiSGlkZSBpbmxpbmUgYWxlcnQiLCJsb2NhdG9yLW9wdGlvbnNfYnV0dG9uX2FwcGx5IjoiQXBwbHkgbG9jYXRvciIsInN1bW1hcnktZGhsX2J1dHRvbl9uYXZpZ2F0ZS10by1pbnZvaWNlIjoiTmF2aWdhdGUgdG8gaW52b2ljZSIsInJlZmVyZW5jZS1mb3JtYXRfYnV0dG9uX2FkZC1mb3JtYXQiOiJBZGQgZm9ybWF0IiwiZGhsLXNlcnZpY2UtbmF2X2J1dHRvbl9saW5rIjoiTGluayBzZXJ2aWNlIiwicmV0dXJuLWxhYmVsX2J1dHRvbl9hc3NpZ24tcmV0dXJuLWxhYmVsIjoiQXNzaWduIHJldHVybiBsYWJlbCIsImNvbW1vbi1hdXRvY29tcGxldGUtbW9kYWxfYnV0dG9uX3N1Z2dlc3Rpb24iOiJTdWdnZXN0aW9uIiwicXVpY2stbGlua3MtbW9kYWxfYnV0dG9uX3NhdmUiOiJTYXZlIGxpbmtzIiwiYWNjb3VudHMtZmlsdGVyLWNvbXBvbmVudF9idXR0b25fc2VsZWN0LW1vcmUtYWNjb3VudHMiOiJTZWxlY3QgbW9yZSBhY2NvdW50cyIsIm1haWxpbmctbGlzdC1kZWxpdmVyeS1vcHRpb25zX2J1dHRvbl9zZWxlY3QtcHJvZHVjdCI6IlNlbGVjdCBwcm9kdWN0IiwiY29udGFjdC1pbmZvX2J1dHRvbl9yZW1vdmUtZW1haWwiOiJSZW1vdmUgZW1haWwiLCJkaGwtdG9wLW5hdi1tZW51X2xpbmtfYmFyY29kZSI6IkJhcmNvZGUiLCJkaGwtdG9wLW5hdi1tZW51X2xpbmtfdXNlci1tYW5hZ2VtZW50IjoiVXNlciBtYW5hZ2VtZW50IHBhZ2UiLCJtZXNzYWdlLXRvLWFzc2lnbmVlX2J1dHRvbl9kb3dubG9hZC1kb2N1bWVudCI6IkRvd25sb2FkIGRvY3VtZW50IiwiZGFzaGJvYXJkLXRyYWNrLW1vZGFsX2xpbmtfdHJhY2siOiJUcmFjayBtb2RhbCIsInNoaXBtZW50LWltcG9ydC1tYW5hZ2UtY29udGFpbmVyX2J1dHRvbl9jYW5jZWwiOiJDYW5jZWwgc2hpcG1lbnQgaW1wb3J0IiwiYWRkcmVzcy1maWVsZF9idXR0b25faG91c2UtdmFsaWRhdGlvbiI6IkhvdXNlIHZhbGlkYXRpb24gZmllbGQiLCJxdWVyeS1zZWFyY2hfYnV0dG9uX3NlYXJjaCI6IlF1ZXJ5IHNlYXJjaCIsImNvcnBvcmF0ZS1kYXRlLXBpY2tlcl9idXR0b25fdG9nZ2xlLWRhdGUiOiJUb2dnbGUgZGF0ZSIsInRhYnNldF9saW5rX3NlbGVjdCI6IlNlbGVjdCIsImluY29ycmVjdC1lbWFpbHMtbW9kYWxfYnV0dG9uX2Nsb3NlIjoiQ2xvc2UgaW5jb3JyZWN0IGVtYWlscyIsImRhc2hib2FyZC1zaGlwbWVudC1xdWlja19idXR0b25fc2hvdyI6IlNob3cgZGFzaGJvYXJkIiwiaG9yaXpvbnRhbC1jYXJvdXNlbF9idXR0b25fcHJldi1zbGlkZSI6IlByZXZpb3VzIHNsaWRlIiwiZGhsLXRvcC1uYXYtbWVudV9saW5rX2RlbGl2ZXJ5LW9wdGlvbnMiOiJEZWxpdmVyeSBvcHRpb25zIiwibWFrZS1oaWRkZW5fYnV0dG9uX21ha2UtdW5oaWRkZW4iOiJNYWtlIHVuaGlkZGVuIiwidHJhbnNmZXItbWVtYmVycy1tb2RhbF9idXR0b25fdHJhbnNmZXItbWVtYmVycyI6IlRyYW5zZmVyIG1lbWJlcnMiLCJyZWctZm9ybV9idXR0b25fY2hhbmdlLWNvdW50cnktbW9kYWwtdXBkYXRlIjoiVXBkYXRlIGNvdW50cnkgbW9kYWwiLCJyZXBvcnRpbmctZGV0YWlscy1lZGl0LWZpZWxkcy1wb3B1cF9idXR0b25fcmVtb3ZlIjoiUmVtb3ZlIGRldGFpbHMiLCJmaWxlLXVwbG9hZGVyLWVsZW1lbnRfYnV0dG9uX3VwbG9hZCI6IlVwbG9hZCBmaWxlIiwiZGVsaXZlcnktZGF0ZS10YWJzX2J1dHRvbl9vcGVuLWNhbGVuZGFyIjoiT3BlbiBjYWxlbmRhciIsInNhdmUtbmV3LWNvbnRhY3RfYnV0dG9uX3NhdmUiOiJTYXZlIG5ldyBjb250YWN0IiwiZGVsaXZlcnktZGF0ZS10YWJzX2J1dHRvbl9zdG9wLXByb3BhZ2F0aW9uIjoiU3RvcCBldmVudCBwcm9wYWdhdGlvbiIsInNlbGVjdC1hZGRyZXNzLW1vZGFsX2J1dHRvbl9jbG9zZSI6IkNsb3NlIGFkZHJlc3MiLCJleHRlbmRlZC1saWFiaWxpdHktY29uZmlybWF0aW9uX2J1dHRvbl9vayI6Ik9rIGxpYWJpbGl0eSIsImRobC1tYW5hZ2Utc2hpcG1lbnRzX2J1dHRvbl9zaG93LWJ1bGsiOiJTaG93IHNoaXBtZW50cyBidWxrIiwic2hpcG1lbnQtaW1wb3J0LWJ1aWxkLWNvbnRhaW5lcl9idXR0b25fcHJvY2Vzcy1zaGlwbWVudHMiOiJQcm9jZXNzIHNoaXBtZW50cyIsInNhdmUtZm9yLWxhdGVyX2J1dHRvbl9zYXZlLW5hbWUtb3ItY29udGludWUiOiJTYXZlIHNoaXBtZW50IiwiY29uc29saWRhdGlvbi1yZXN1bHRfYnV0dG9uX3RvZ2dsZS1mYWlsdXJlIjoiVG9nZ2xlIGZhaWx1cmUiLCJzaGlwbWVudC1vdmVyZHVlLWNvbXBvbmVudF9idXR0b25fY2FuY2VsIjoiQ2FuY2VsIHNoaXBtZW50IG92ZXJkdWUiLCJtYW5hZ2UtY29sbGVjdGlvbl9saW5rX25pY2tuYW1lIjoiTmlja25hbWUiLCJzZXNzaW9uLWV4cGlyYXRpb25fYnV0dG9uX2VuZC1zZXNzaW9uIjoiRW5kIFNlc3Npb24iLCJtb2JpbGUtcXVvdGVzLXByb2R1Y3RfYnV0dG9uX3NoYXJlIjoiU2hhcmUiLCJkYXRlLXBpY2tlci1zd2l0Y2hlcl9idXR0b25fb3Blbi1jYWxlbmRhciI6Ik9wZW4gdGhlIGNhbGVuZGFyIiwiY29ycG9yYXRlLXVzZXItZGV0YWlscy1pdGVtX2J1dHRvbl9lZGl0LWJ1dHRvbiI6IkVkaXQgdXNlciBkZXRhaWxzIiwibW9iaWxlLWFkZHJlc3MtZGV0YWlsc19idXR0b25fZ28tdG8tZm9ybSI6IkdvIHRvIGZvcm0iLCJyZXNvbHZlLWNvbmZsaWN0X2J1dHRvbl9yZW1vdmUtZ3JvdXAiOiJSZW1vdmUgYSBncm91cCIsInF1b3RlX2J1dHRvbl9hZ3JlZS1hbmQtY29udGludWUiOiJBZ3JlZSBhbmQgY29udGludWUiLCJpbXBvcnQtcmVzdHJpY3RlZF9idXR0b25fY29udGludWUiOiJDb250aW51ZSIsInNoaXBtZW50LWltcG9ydC11cGxvYWRlcl9idXR0b25fZGVsZXRlLWZpbGUiOiJEZWxldGUgZmlsZSIsImRobC10b3AtbmF2LWRyb3AtZG93bi1tZW51X2xpbmtfbWFuYWdlIjoiTWFuYWdlIiwiY29ycG9yYXRlLWdyb3VwX2J1dHRvbl9jcmVhdGUiOiJDcmVhdGUgY29ycG9yYXRlIGdyb3VwIiwiZ2V0LWFkZHJlc3NfYnV0dG9uX25vdC10aGlzLXRpbWUiOiJOb3QgdGhpcyB0aW1lIiwiYWRkcmVzcy1kZXRhaWxzLW9mYWNfYnV0dG9uX2VudGVyLW5ldy1kZXN0aW5hdGlvbiI6IkVudGVyIG5ldyBkZXN0aW5hdGlvbiIsImludm9pY2UtdGVtcGxhdGUtc3VjY2Vzc2Z1bGx5X2J1dHRvbl9vayI6Ik9rIHRlbXBsYXRlIiwiZXN0aW1hdGVkLWR1dGllc19idXR0b25fb3Blbi1lc3RpbWF0ZWQtZHV0aWVzIjoiT3BlbiBlc3RpbWF0ZWQgZHV0aWVzIiwic2hpcG1lbnQtZmlsdGVyZWQtdmlldy1sZWZ0X2J1dHRvbl9yZXZpZXctc2hpcG1lbnQiOiJSZXZpZXcgc2hpcG1lbnQiLCJjdXN0b21zLWNsZWFyYW5jZS1hY3Rpb25zX2xpbmtfcGFwZXJsZXNzIjoiUGFwZXJsZXNzIiwiZmlsZS11cGxvYWRlci13cmFwcGVyX2xpbmtfdXBsb2FkIjoiVXBsb2FkIiwiY29ycG9yYXRlLWV4dGVybmFsLXN5c3RlbS1jb25uZWN0X2J1dHRvbl9lc3RhYmxpc2gtY29ubmVjdGlvbiI6IkVzdGFibGlzaCBhIGNvbm5lY3Rpb24iLCJleHRlcm5hbC1tb2R1bGVzLXJldm9rZV9idXR0b25fcmV2b2tlIjoiUmV2b2tlIiwiY29tcGxldGUtc2hpcG1lbnRfYnV0dG9uX2NyZWF0ZS1hbm90aGVyLXNoaXBtZW50IjoiQ3JlYXRlIGFub3RoZXIgc2hpcG1lbnQgY29tcGxldGUiLCJwaWNrdXAtcGFja2FnZXNfbGlua19pbmNyZWFzZS1xdWFudGl0eS1ieS1vbmUiOiJJbmNyZWFzZSBxdWFudGl0eSIsImRhc2hib2FyZC1ub3RpZmljYXRpb25fYnV0dG9uX2Nsb3NlLW5vdGlmaWNhdGlvbiI6IkNsb3NlIG5vdGlmaWNhdGlvbiIsInRvcC1uYXYtbWVudS1ndWVzdF9saW5rX3RyYWNrIjoiVHJhY2sgZWxlbWVudCIsIm15LWRobC1hY2NvdW50c19idXR0b25fc2hvdy1yZXF1ZXN0LWRpYWxvZyI6IlNob3cgcmVxdWVzdCBkaWFsb2ciLCJhc3NpZ24tc2hpcG1lbnQtcGF5bWVudC1zZWN0aW9uX2J1dHRvbl9vayI6Ik9rIGFzc2lnbiIsInBpY2t1cC1hZGRyZXNzX2J1dHRvbl91cGRhdGUiOiJVcGRhdGUiLCJkYXRlLXRpbWVfYnV0dG9uX3RvZ2dsZSI6IlRvZ2dsZSBkYXRlIHRpbWUiLCJhZGRyZXNzLXN1YnVyYi1maWVsZF9saW5rX3R5cGUiOiJBZGRyZXNzIHN1YnVyYiB0eXBlIiwic2VuZC1mb3ItYXBwcm92YWxfYnV0dG9uX2Nsb3NlLXNoaXBtZW50IjoiQ2xvc2UgYXBwcm92YWwiLCJwcm9kdWN0LXVwbG9hZC1lbGVtZW50X2J1dHRvbl9kb3dubG9hZC10ZW1wbGF0ZSI6IkRvd25sb2FkIHRlbXBsYXRlIiwiZGhsLXRvcC1uYXYtbWVudV9saW5rX215LXNoaXBtZW50LXNldHRpbmdzIjoiTXkgc2hpcG1lbnQgc2V0dGluZ3MiLCJkaGwtdG9wLW5hdi1saW5rc19idXR0b25fdXNlci1tYW5hZ2VtZW50IjoiVXNlciBtYW5hZ2VtZW50IiwiYmFyY29kZV9saW5rX3NjYW4tYW5vdGhlci1vci1lbnRlci1tYW51YWxseSI6IlNjYW4gYW5vdGhlciBiYXJjb2RlIG9yIGVudGVyIG1hbnVhbGx5IiwibW9kYWwtY29uZmlybS1hZGRfYnV0dG9uX29rIjoiT2sgY29uZmlybSIsInBheW1lbnQtdHlwZS1lbGVtZW50X2J1dHRvbl9lZGl0IjoiRWRpdCBwYXltZW50IHR5cGUiLCJyZXBvcnRpbmctcG9wdXBfYnV0dG9uX2NhbmNlbCI6IkNhbmNlbCByZXBvcnRpbmciLCJjb250YWN0LWRldGFpbHMtc2V0dGluZ3NfYnV0dG9uX2NhbmNlbC1lZGl0LWNvbnRhY3QiOiJDYW5jZWwgc2V0dGluZ3MiLCJvbmxpbmUtYmlsbGluZy1lbnJvbGxtZW50X2J1dHRvbl9hY2NvdW50LWVkaXQiOiJBY2NvdW50IGVkaXQiLCJpbnN1cmFuY2Utbm90LXN1cHBvcnRlZF9idXR0b25fY2xvc2UiOiJDbG9zZSBpbnN1cmFuY2UiLCJhY2NvdW50LW1hbmFnZW1lbnQtc2VjdG9yX2J1dHRvbl9vcGVuLWFkZC1kaGwtYWNjb3VudCI6Ik9wZW4gYWRkIGRobCBhY2NvdW50IiwiY29udGFjdC1kZXRhaWxzLXNldHRpbmdzLXNlY3Rpb25fYnV0dG9uX2FkZCI6IkFkZCBzZXR0aW5ncyIsImFjdGlvbi1jb25maXJtYXRpb25fYnV0dG9uX2RlbGV0ZS11c2VycyI6IkRlbGV0ZSBVc2VycyIsImNvcnAtY29udGFjdC1pbmZvX2J1dHRvbl9kaXNtaXNzLWNoYW5nZXMiOiJEaXNtaXNzIGNvbnRhY3QgY2hhbmdlcyIsInNoaXBtZW50LXJlZmVyZW5jZS1tb2RhbF9idXR0b25fc2F2ZSI6IlNhdmUgbW9kYWwiLCJjb250YWN0LWRldGFpbHNfYnV0dG9uX3NhdmUiOiJTYXZlIGRldGFpbHMiLCJkaGwtdG9wLW5hdi1tZW51X2xpbmtfY3JlYXRlIjoiQ3JlYXRlIGEgc2hpcG1lbnQiLCJtYWlsaW5nLWxpc3QtZGV0YWlsc19idXR0b25fb3Blbi1wb3B1cCI6ImJlYXJiZWl0ZW4iLCJwYWNrYWdlLXN1cHBsaWVzX2xpbmtfc2tpcC1zdGVwIjoiU2tpcCBzdGVwIiwic3ViLW5hdi1tZW51c19saW5rX3NldHVwLWxhYmVsIjoiU2V0dXAgbGFiZWxzIiwiY3EtcG9wdXAtY29udHJvbGxlcl9idXR0b25fcHJldiI6IlByZXZpb3VzIiwic2hpcG1lbnQtbW9kYWxfbGlua19zaGlwbWVudCI6IlNoaXBtZW50IiwibWFrZS1mYXZvcml0ZV9idXR0b25fZ28tdG8tdmlldy1tb2RlIjoiR28gdG8gdmlldyBtb2RlIiwibW9iaWxlLXNoaXBtZW50LXJlamVjdGlvbl9idXR0b25fY2FuY2VsIjoiQ2FuY2VsIHRoZSByZWplY3Rpb24iLCJvcHRpb25hbC1zZXR0aW5ncy1zZWN0aW9uX2xpbmtfbGVhdmUtZWRpdC1tb2RlIjoiTGVhdmUgZWRpdCBtb2RlIiwiYWRkcmVzcy1ib29rLWFjdGlvbnNfYnV0dG9uX3RvZ2dsZS1hY3Rpb25zIjoiVG9nZ2xlIGFjdGlvbnMiLCJjb3Jwb3JhdGUtdXNlci1kZXRhaWxzLXNlY3Rpb25fYnV0dG9uX3Byb2Nlc3MtaW1wb3J0LXVzZXIiOiJJbXBvcnQgdXNlciIsInVzZXItcm9sZXMtbW9kYWxfYnV0dG9uX2NhbmNlbCI6IkNhbmNlbCB1c2VyIHJvbGVzIG1vZGFsIiwibWFuYWdlLWNvbnRhY3RzX2J1dHRvbl9kaXNtaXNzLWNoYW5nZXMiOiJEaXNtaXNzIGNoYW5nZXMiLCJtYW5hZ2UtcGlja3Vwcy1maWx0ZXJzLXNlY3Rpb25fYnV0dG9uX2FwcGx5LWFuZC1jbG9zZSI6IkFwcGx5IGFuZCBjbG9zZSIsImZpbHRlci1zZWxlY3Rpb25fYnV0dG9uX2FwcGx5IjoiQXBwbHkgcG9wdXAiLCJ0b2dnbGUtc3dpdGNoZXJfYnV0dG9uX3RvZ2dsZSI6IlRvZ2dsZSIsInRyYWNrLXNoaXBtZW50LWF1dGhfbGlua190cmFjay1ieS1yZWZlcmVuY2UiOiJUcmFjayBieSByZWZlcmVuY2UiLCJyZXBvcnRzLXRvb2xiYXItbW9kYWxfYnV0dG9uX2JhY2stdG8tbGlzdCI6IkJhY2sgdG8gbGlzdCIsImNvbXBhbnktaW5mb19idXR0b25fdXBkYXRlLWNoYW5nZXMiOiJVcGRhdGUgY2hhbmdlcyIsImNyaXRpY2FsLWFsZXJ0X2J1dHRvbl9jbG9zZS1hbGVydCI6IkNsb3NlIGFsZXJ0IiwibXktZGhsLWFjY291bnRzLWRlZmF1bHRzX2J1dHRvbl9jYW5jZWwtZGVmYXVsdHMiOiJDYW5jZWwgZGVmYXVsdHMiLCJzaGlwbWVudC1zZXR0aW5ncy1kaGxfbGlua19jdXN0b21zLWludm9pY2UiOiJDdXN0b20gaW52b2ljZSIsImFkZHJlc3MtYm9va19idXR0b25fY2FuY2VsLW1haWxpbmctbGlzdCI6IkNhbmNlbCBtYWlsaW5nIGxpc3QiLCJzdGF0dXMtbm90aWZpY2F0aW9uc19idXR0b25fcmVtb3ZlLW5vdGlmaWNhdGlvbiI6IlJlbW92ZSBub3RpZmljYXRpb24iLCJkYXNoYm9hcmQtdGFiLWNyZWF0ZS1mcm9tLXBhc3RfbGlua192aWV3LWFsbCI6IlZpZXcgYWxsIGVsZW1lbnRzIiwiZGhsLW1hbmFnZS1zaGlwbWVudHNfYnV0dG9uX3JlbW92ZS1zZWFyY2giOiJSZW1vdmUgc2VhcmNoIiwic2hpcG1lbnQtZmlsdGVyZWQtdmlldy1sZWZ0X2J1dHRvbl9hcHByb3ZlLXNoaXBtZW50IjoiQXBwcm92ZSBzaGlwbWVudCB2aWV3Iiwic3BlZWR1cC1jdXN0b21fYnV0dG9uX2N1c3RvbS1jbGVhcmVuY2UiOiJDdXN0b20gY2xlYXJlbmNlIiwic2hhcmUtc2hpcG1lbnQtZGV0YWlsc19idXR0b25fY29sbGFwc2UiOiJDb2xsYXBzZSIsInRvcC1uYXYtY29udHJvbGxlcl9saW5rX29yZGVyLXN1cHBsaWVzIjoiT3JkZXIgc3VwcGxpZXMiLCJwcm9maWxlLWNyZWRpdC1jYXJkc19idXR0b25fc2F2ZSI6IlNhdmUgY3JlZGl0IGNhcmRzIiwiY29ycG9yYXRlLXVzZXItZGV0YWlsc19idXR0b25faGFuZGxlIjoiSGFuZGxlIiwibXktcHJvZHVjdC1mb3JtX2J1dHRvbl9jYW5jZWwiOiJDYW5jZWwgcHJvZHVjdCBmb3JtIiwidG9wLW5hdi1tZW51X2xpbmtfY29tcGFueS1vdmVydmlldyI6IkNvbXBhbnkgb3ZlcnZpZXciLCJyZWplY3Qtc2hpcG1lbnQtYXBwcm92YWxfYnV0dG9uX3Byb2NlZWQtcmVqZWN0aW9uIjoiUHJvY2VlZCBzaGlwbWVudCByZWplY3Rpb24iLCJjb25maXJtYXRpb24tbW9kYWxfYnV0dG9uX2NhbmNlbCI6IkNhbmNlbCBjb25maXJtYXRpb24gbW9kYWwiLCJwYWdpbmF0aW9uX2xpbmtfbW92ZS10by1wYWdlIjoiTW92ZSB0byIsImF1dGgtcGlja3VwLWxvY2F0aW9ucy1zZWN0aW9uX2J1dHRvbl9kZWxldGUtbG9jYXRpb25zIjoiRGVsZXRlIGxvY2F0aW9ucyIsInBhY2thZ2luZy1zZXR0aW5ncy1zZWN0aW9uX2J1dHRvbl9idWxrLWRlbGV0ZSI6IkJ1bGsgZGVsZXRlIHNlY3Rpb24iLCJ0b29sYmFyLXNlY3Rpb25fYnV0dG9uX2NhbmNlbC1zaGlwbWVudCI6IkNhbmNlbCB0aGUgc2hpcG1lbnQiLCJzZWxlY3QtcHJpbnRlci1tb2RhbF9idXR0b25fcHJpbnQiOiJQcmludCBpdGVtIiwicm5xLXRvb2xiYXJfYnV0dG9uX2NhbmNlbCI6IkNhbmNlbCB0b29sYmFyIiwicGlja3VwLW5vdGlmaWNhdGlvbnMtc2VjdGlvbl9idXR0b25fYWRkLW5vdGlmaWNhdGlvbiI6IkFkZCBub3RpZmljYXRpb24iLCJyZWZlcmVuY2Utb3B0aW9uc19idXR0b25fbWFuYWdlLXJlZmVyZW5jZSI6Ik1hbmFnZSByZWZlcmVuY2UiLCJ0b3AtbmF2LW1lbnVfbGlua19wcm9maWxlLWNyZWRpdC1jYXJkcyI6IlByb2ZpbGUgY3JlZGl0IGNhcmRzIiwiZmlsZS11cGxvYWRlci1tb2RhbF9idXR0b25fY2xlYXItZmlsZXMtbGlzdCI6IkNsZWFyIGZpbGVzIGxpc3QiLCJwcmludF9idXR0b25fbWFuaWZlc3Qtd2l0aG91dC1wcmludCI6Ik1hbmlmZXN0IHdpdGhvdXQgcHJpbnQiLCJwcmV2aWV3LWNvbnJvbGxlcl9idXR0b25fcHJldmlldy1pbnZvaWNlIjoiUHJldmlldyBpbnZvaWNlIiwiZGhsLXBhY2thZ2UtZGV0YWlsc19idXR0b25fYWRkLWFub3RoZXItcGFja2FnZSI6IkFkZCBhbm90aGVyIHBhY2thZ2UiLCJzaGlwbWVudC1pbXBvcnQtc2NoZW1lLWdyaWRfYnV0dG9uX2luc2VydC1jb2x1bW4tYmVsb3ciOiJJbnNlcnQgY29sdW1uIGJlbG93IiwiZXdmLW1vZGFsX2J1dHRvbl9sZWFybi1tb3JlLXBvcHVwLWNvbnRpbnVlIjoiQ29udGludWUgcG9wdXAiLCJhY2NvdW50LWZpbHRlcl9saW5rX251bWJlciI6Ik51bWJlciIsImZvcmdvdC1wYXNzd29yZC1tb2RhbF9saW5rX2ZvcmdvdC1wYXNzd29yZCI6IkZvcmdvdCBwYXNzd29yZCIsIm1hbmFnZS1zaGlwbWVudC1kZXRhaWxzLWN1c3RvbXNfYnV0dG9uX3Nob3ctaW52b2ljZSI6IlNob3cgaW52b2ljZSIsInNoaXBtZW50LWltcG9ydC1zY2hlbWUtZ3JpZF9idXR0b25fbW92ZS11cCI6Ik1vdmUgdXAiLCJvbmxpbmUtYmlsbGluZy1lbnJvbGxtZW50X2J1dHRvbl9yZXF1ZXN0IjoiUmVxdWVzdCIsIm1vYmlsZS1zdGF0ZV9idXR0b25fY29udGludWUiOiJDb250aW51ZSBzdGF0ZSIsImNyZWF0ZS1zaGlwbWVudC1jb3B5X2J1dHRvbl9jcmVhdGUtbmV3IjoiQ3JlYXRlIG5ldyIsIndjYy1kZWxpdmVyeS1vcHRpb25zX2J1dHRvbl9zaGFyZS1xdW90ZSI6IlNoYXJlIGEgcXVvdGUiLCJhZGRyZXNzLWRldGFpbHMtaXRlbV9idXR0b25fYWRkcmVzcy1ib29rIjoiQWRkcmVzcyBib29rIiwiZGhsLXRvcC1uYXYtbWVudV9saW5rX3VwbG9hZCI6IlVwbG9hZCBpdGVtIiwic2VsZWN0LWFkZHJlc3MtbW9kYWxfYnV0dG9uX3NlbGVjdCI6IlNlbGVjdCBhZGRyZXNzIiwiYmlsbGluZy1hZGRyZXNzX2J1dHRvbl9vayI6Ik9rIGJpbGxpbmciLCJjb3Jwb3JhdGUtZ3JvdXAtZGV0YWlscy1zZWN0b3JfYnV0dG9uX2hhbmRsZSI6IkhhbmRsZSIsImZpbGUtdXBsb2FkZXItZWxlbWVudF9idXR0b25fcmVtb3ZlIjoiUmVtb3ZlIGZpbGUiLCJjb3Jwb3JhdGUtZ3JvdXAtZGV0YWlscy1zZWN0b3JfYnV0dG9uX2ludml0ZS11c2VycyI6Ikludml0ZSB1c2VycyBzZWN0b3IiLCJ0b3AtbmF2LW1haW5fbGlua19ob21lIjoiTWFpbiIsImN1c3RvbS1pbnZvaWNlLXRlbXBsYXRlLWZvcm1fYnV0dG9uX2NhbmNlbC1mb3JtIjoiQ2FuY2VsIGEgZm9ybSIsIm1hbnVhbC1tYW5pZmVzdGluZy1hY3Rpb25fYnV0dG9uX2Nsb3NlLXdpbmRvdyI6IkNsb3NlIHdpbmRvdyIsImZpbmQtbG9jYXRpb25zLWZvcm1fYnV0dG9uX2NvbnRpbnVlIjoiQ29udGludWUgZmluZGluZyIsInNoYXJlLXNoaXBtZW50LWRldGFpbHNfYnV0dG9uX2VudGVyLXNoYXJpbmctbW9kZSI6IkVudGVyIHNoYXJpbmcgbW9kZSIsImFkZHJlc3MtYm9va19idXR0b25fYWRkLW5ldy1hZGRyZXNzIjoiQWRkIG5ldyBhZGRyZXNzIiwicHJpbnRfYnV0dG9uX2NvbXBsZXRlLXNoaXBtZW50IjoiQ29tcGxldGUgc2hpcG1lbnQiLCJub3RhLWZpc2NhbC1pbmZvX2xpbmtfYWRkLWZpc2NhbC1pbmZvIjoiQWRkIGZpc2NhbCBpbmZvIiwibW9iaWxlLW5hdmlnYXRpb25fbGlua19maW5kLXNlcnZpY2UtcG9pbnQiOiJGaW5kIGEgc2VydmljZSBwb2ludCIsImJhcmNvZGUtc2hpcG1lbnQtcmVmZXJlbmNlX2J1dHRvbl9wcmludCI6IlByaW50IGJhcmNvZGUiLCJyZXBvcnRpbmctZGV0YWlscy1lZGl0LWZpZWxkcy1wb3B1cF9idXR0b25fbW92ZS1zZWxlY3RlZCI6Ik1vdmUgc2VsZWN0ZWQiLCJjb21wbGV0ZS1zaGlwbWVudF9idXR0b25fc2F2ZS1hcy1mYXZvcml0ZSI6IlNhdmUgYXMgZmF2b3JpdGUiLCJkaGwtZGVsaXZlcnktb3B0aW9ucy1pdGVtX2J1dHRvbl9zZWxlY3QtcHJvZHVjdCI6IlNlbGVjdCBwcm9kdWN0Iiwid2NjLXByb2R1Y3RfYnV0dG9uX3NlbGVjdCI6IlNlbGVjdCBhIHByb2R1Y3QiLCJhZGRyZXNzLWJvb2tfYnV0dG9uX2FjdGlvbnMiOiJBY3Rpb25zIGJvb2siLCJ0b3AtbmF2LW1lbnUtZ3Vlc3RfbGlua19sb2dpbiI6IkxvZ2luIGd1ZXN0IiwibXktZGhsLWFjY291bnRzX2J1dHRvbl9zaG93LWFkZC1kaWFsb2ciOiJTaG93IGFkZCBkaWFsb2ciLCJteS1kaGwtYWNjb3VudHMtbW9kYWxfbGlua19tYW5hZ2UiOiJNYW5hZ2UgYWNjb3VudCIsImZpbGUtdXBsb2FkZXItZWxlbWVudF9idXR0b25fY2xlYXIiOiJDbGVhciB1cGxvYWRlciIsInNlcnZpY2UtYWxlcnRzLWNvbnRhaW5lcl9saW5rX29rIjoiT2sgc2VydmljZSIsInJlcG9ydGluZy1saXN0aW5nLW5hbWVfbGlua19yZXBvcnQiOiJSZXBvcnQiLCJwaWNrdXAtZGF0ZV9idXR0b25fY2hhbmdlLXBpY2t1cC1kYXRlIjoiQ2hhbmdlIHBpY2t1cCBkYXRlIiwidHlwZS1haGVhZC1oaWdobGlnaHRfYnV0dG9uX3NlYXJjaCI6IlNlYXJjaCB0eXBlIiwiZGVjbGluZS1hc3NpZ25lZC1zaGlwbWVudC1tb2RhbF9idXR0b25fZGVjbGluZS1zaGlwbWVudCI6IkRlY2xpbmUgc2hpcG1lbnQiLCJjb3Jwb3JhdGUtdXNlci1kZXRhaWxzLXNlY3Rpb25fYnV0dG9uX3JlbW92ZS11c2VyLWdyb3VwLWJ5LWluZGV4IjoiUmVtb3ZlIHVzZXIgZ3JvdXAgYnkgaW5kZXgiLCJtb2JpbGUtbmF2aWdhdGlvbl9saW5rX2xvZ291dCI6IkxvZ291dCIsImRobC10b3AtbmF2LWRyb3AtZG93bi1tZW51X2xpbmtfbWFuYWdlLXNoaXBtZW50LWxpbmsiOiJNYW5hZ2Ugc2hpcG1lbnQiLCJzaGlwbWVudC1zZXR0aW5ncy1kaGwtcHJvY2Vzc2luZ19saW5rX2Rvd25sb2FkLWVycm9yIjoiRG93bmxvYWQgZXJyb3IiLCJwcm9oaWJpdGVkLWl0ZW1zX2J1dHRvbl9zaG93IjoiU2hvdyBwcm9oaWJpdGVkIGl0ZW1zIiwiY29ycG9yYXRlLWdyb3VwLWRldGFpbHNfYnV0dG9uX2R1cGxpY2F0ZSI6IkR1cGxpY2F0ZSBkZXRhaWxzIiwicmVnLWZvcm1fYnV0dG9uX3JlZ2lzdGVyLW5ldy11c2VyIjoiUmVnaXN0ZXIiLCJld2YtbW9kYWxfYnV0dG9uX2NhbmNlbC1yZWplY3Rpb24iOiJDYW5jZWwgcmVqZWN0aW9uIiwiY29uZmlybWF0aW9uLWluc3VyYW5jZS1kaWFsb2dfYnV0dG9uX2NvbmZpcm1hdGlvbi1vayI6Ik9rIGRpYWxvZyIsImNvcnBvcmF0ZS11c2VyLWRldGFpbHNfYnV0dG9uX3NhdmUtdXNlciI6IlNhdmUgdXNlciIsInd3Yy1zaGFyZS1xdW90ZS1tb2RhbF9saW5rX2Nsb3NlIjoiQ2xvc2Ugc2hhcmUgcXVvdGUgbW9kYWwiLCJtYW51YWwtbWFuaWZlc3RpbmctYWN0aW9uX2J1dHRvbl9vcGVuLXJlcG9ydGluZyI6Ik9wZW4gdGhlIHJlcG9ydGluZyIsImRpZ2l0YWwtY3VzdG9tcy1pbnZvaWNlLWxheW91dF9idXR0b25fY2xlYXItY3VzdG9tcyI6IkNsZWFyIGN1c3RvbXMiLCJ0ZXJtcy1hbmQtcHJpdmFjeS1hY2NlcHRhbmNlX2J1dHRvbl9hY2NlcHQiOiJBY2NlcHQgdGVybXMgYW5kIHByaXZhY3kiLCJtb2JpbGUtc3lub3BzaXMtdG9nZ2xlX2J1dHRvbl90b2dnbGUtc3lub3BzaXMiOiJUb2dnbGUgc3lub3BzaXMiLCJkaGwtZm9vdGVyX2J1dHRvbl9sb2dvIjoiTG9nbyIsInN0YXR1cy1maWx0ZXJfYnV0dG9uX2V4cGFuZC1wcmVzZXQiOiJFeHBhbmQgcHJlc2V0IiwibWFuYWdlLWNvbGxlY3Rpb24taW5mb19idXR0b25fYWRkLWNvbnRhY3QiOiJBZGQgY29udGFjdCIsInRvcC1uYXYtbWFpbl9saW5rX3RyYWNrIjoiVHJhY2sgbGluayIsImRobC10b3AtbmF2LW1lbnVfbGlua19hZGRyZXNzLWVudHJ5IjoiQWRkcmVzcyBlbnRyeSIsImxvZ2luX2xpbmtfbGVhcm4tbW9yZSI6IkxlYXJuIG1vcmUgbGluayIsImRobC10b3AtbmF2LWRyb3AtZG93bi1tZW51X2xpbmtfdHJhY2siOiJEcm9wIGRvd24gdHJhY2siLCJkaGwtbWFuYWdlLXBpY2t1cHMtZWxlbWVudF9saW5rX3NlYXJjaCI6IlNlYXJjaCBwaWNrdXBzIiwiZXdmLXNlYXJjaF9idXR0b25fc2VhcmNoIjoiU2VhcmNoIiwicXVlcnktY29ubmVjdC10by1leHRlcm5hbC1zeXN0ZW1fYnV0dG9uX2Nvbm5lY3QiOiJDb25uZWN0IiwiZGFuZmUta2V5c19saW5rX2RhbmZlLXJlbW92ZSI6IlJlbW92ZSBkYW5mZSIsInBpY2t1cC1hZGRyZXNzX2J1dHRvbl9yZXZlcnQiOiJSZXZlcnQiLCJwaG9uZS1jb2RlX2xpbmtfcGhvbmUiOiJQaG9uZSIsImNvbW1vZGl0eS1jb2RlLXNlYXJjaF9idXR0b25fb3Blbi1zZWFyY2giOiJPcGVuIHNlYXJjaCBidXR0b24iLCJpbnZpdGUtdXNlcnNfYnV0dG9uX3N1Ym1pdCI6IlN1Ym1pdCBpbnZpdGluZyIsImNxLXBvcHVwLWN0cmxfYnV0dG9uX3NldC1wb3B1cC12aXNpYmxlIjoiU2V0IHBvcHVwIHZpc2libGUiLCJhY3Rpb24tY29uZmlybWF0aW9uX2J1dHRvbl9kZWxldGUtZ3JvdXBzIjoiRGVsZXRlIGdyb3VwcyIsInJlcG9ydGluZy1kZXRhaWxzLWVkaXQtZmllbGRzLXBvcHVwX2J1dHRvbl9yZW1vdmUtYWxsIjoiUmVtb3ZlIGFsbCIsImFjY291bnQtbWFuYWdlbWVudF9idXR0b25fZGlzYWJsZS1hY2NvdW50cyI6IkRpc2FibGUgQWNjb3VudHMiLCJ0cmFja2luZy1wb3B1cF9idXR0b25fdHJhY2stc2hpcG1lbnRzIjoiVHJhY2sgc2hpcG1lbnRzIiwibW9iaWxlLXJhdGUtYW5kLXF1b3RlLWRpc2NsYWltZXJfYnV0dG9uX2Rpc2NsYWltZXItY2xvc2UiOiJEaXNjbGFpbWVyIGNsb3NlIiwicGlja3VwLXBhY2thZ2VzX2xpbmtfZGVjcmVhc2UtcXVhbnRpdHktYnktb25lIjoiRGVjcmVhc2UgcXVhbnRpdHkiLCJjb21wbGV0ZS1zaGlwbWVudF9idXR0b25fZG93bmxvYWQtcHJpbnQtZG9jdW1lbnRzIjoiRG93bmxvYWQgcHJpbnQgZG9jdW1lbnRzIiwiZGhsLXBhY2thZ2UtZGV0YWlsc19idXR0b25fZ2VuZXJhdGUtcm93cyI6IkdlbmVyYXRlIHJvd3MiLCJtYWlsaW5nLWxpc3RzX2J1dHRvbl9kZWxldGUtc2VsZWN0ZWQiOiJEZWxldGUgc2VsZWN0ZWQgZWxlbWVudCIsImRhc2hib2FyZC1zaGlwbWVudC1xdWljay12aWV3X2J1dHRvbl9jb3B5IjoiQ29weSIsInNlbGVjdC1hZGRyZXNzLW1vZGFsX2J1dHRvbl9jYW50LWZpbmQtYWRkcmVzcyI6IkNhbiJ0IGZpbmQgYWRkcmVzcyIsIm1hbmFnZS1zaGlwbWVudF9idXR0b25faGFuZGxlIjoiSGFuZGxlIiwicmVmZXJlbmNlcy1zZWN0aW9uX2J1dHRvbl9hZGQtcmVmZXJlbmNlIjoiQWRkIHJlZmVyZW5jZSBzZWN0aW9uIiwicmVmZXJlbmNlLWRldGFpbHNfYnV0dG9uX3NhdmUiOiJTYXZlIGNvbnRhY3QgZGV0YWlscyIsInRhYi1jb250cm9sX2J1dHRvbl9jaGFuZ2UtdGFiLWNvbnRyb2wiOiJDaGFuZ2UiLCJkZWxldGUtZ3JvdXBzLWNvbmZpcm1hdGlvbl9idXR0b25fY2FuY2VsIjoiQ2FuY2VsIGRlbGV0aW5nIiwic3ViLW5hdi1tZW51c19saW5rX2Ryb3Bkb3duIjoiRHJvcGRvd24iLCJzdWItbmF2LW1lbnVzX2xpbmtfbGluayI6IlN1YiBsaW5rIiwiYWN0aW9uLWVsZW1lbnRfbGlua19iYWNrLXRvLWxpc3QiOiJCYWNrIHRvIGFjdGlvbiBsaXN0IiwiY291bnRyeS1sYW5ndWFnZS1waWNrZXItbW9kYWxfYnV0dG9uX2Nsb3NlIjoiQ2xvc2UgcGlja2VyIiwiZ3JhbnQtZm9ybV9idXR0b25fY2hhbmdlLWR1dGllcyI6IkNoYW5nZSBkdXRpZXMiLCJjb250YWN0LWRldGFpbHMtc2V0dGluZ3NfYnV0dG9uX2FkZC1zaGlwcGluZy1yZWZlcmVuY2UiOiJBZGQgc2hpcHBpbmcgcmVmZXJlbmNlIiwiZXdmLW1vZGFsX2J1dHRvbl9vayI6Ik9rIiwiZGhsLXRvcC1uYXYtbWVudV9saW5rX2Fzc2lnbmluZy1zaGlwbWVudHMiOiJBc3NpZ25pbmcgc2hpcG1lbnRzIiwicGlja3VwLWFkZHJlc3NfYnV0dG9uX3NhdmUtZGVmYXVsdCI6IlNhdmUgYXMgZGVmYXVsdCIsInByb2R1Y3QtbGlzdC1tb2RhbF9saW5rX2F1dG9jb21wbGV0ZSI6IkF1dG9jb21wbGV0ZSBmb3JtIiwibWFuYWdlLXJlZmVyZW5jZS1kaWFsb2dfYnV0dG9uX2NhbmNlbCI6IkNhbmNlbCBkaWFsb2ciLCJhdHRhY2gtc2lnbmF0dXJlLW1vZGFsX2xpbmtfdGFyZ2V0IjoiVGFyZ2V0IiwibWFrZS1mYXZvcml0ZV9idXR0b25fZWRpdC1mYXZvcml0ZS1uYW1lIjoiRWRpdCBmYXZvcml0ZSBuYW1lIiwiZW5oYW5jZWQtaW52b2ljZV9idXR0b25fc2F2ZSI6IlNhdmUgZW5oYW5jZWQgaW52b2ljZSIsIm1vYmlsZS1uYXZpZ2F0aW9uX2xpbmtfaG9tZSI6IkhvbWUiLCJyZXNldC1wYXNzd29yZF9idXR0b25fcmVzZW5kLWNyZWF0ZS1wYXNzd29yZC1lbWFpbCI6IlNlbmQgbmV3IHBhc3N3b3JkIGNyZWF0ZSBlbWFpbCIsInRyYWNraW5nLXJlc3VsdC1zdW1tYXJ5X2xpbmtfdXJsIjoiVXJsIiwic2NoZWR1bGUtcGlja3VwLW1vZGFsX2J1dHRvbl9kby1ub3QtY2FuY2VsIjoiRG8gbm90IGNhbmNlbCBtb2RhbCIsInNoaXBtZW50LWltcG9ydC1hZGQtY29sdW1uX2J1dHRvbl9hZGQtY29sdW1ucyI6IkFkZCBjb2x1bW5zIiwicGlja3VwLW5vdGlmaWNhdGlvbnMtc2VjdGlvbl9idXR0b25fcmVtb3ZlLW5vdGlmaWNhdGlvbiI6IlJlbW92ZSBhIG5vdGlmaWNhdGlvbiIsImV3Zi1tb2RhbF9idXR0b25fbm8iOiJObyBld2YgbW9kYWwiLCJkaWdpdGFsLWN1c3RvbXMtaW52b2ljZS1sYXlvdXRfYnV0dG9uX2dlbmVyYXRlLWVhZC10YWQtbGluayI6IkdlbmVyYXRlIGxpbmsgZm9yIiwibW9iaWxlLXNoaXBtZW50LXJlamVjdGlvbl9idXR0b25fY2FuY2VsLXNoaXBtZW50IjoiQ2FuY2VsIHNoaXBtZW50IiwiZGhsLW1hbmFnZS1waWNrdXBzLWZpbHRlcnNfbGlua19tYW5hZ2UiOiJNYW5hZ2UgcGlja3VwcyBmaWx0ZXJzIiwiY3VzdG9tcy1jbGVhcmFuY2UtYWN0aW9uc19saW5rX2ludm9pY2VzIjoiSW52b2ljZXMiLCJtYW5pZmVzdGluZy1tb2RhbF9idXR0b25fc2VhcmNoIjoiU2VhcmNoIG1vZGFsIiwiZXdmLW1vZGFsX2J1dHRvbl9nby10by1sb2dpbiI6IkdvIHRvIHRoZSBMb2dpbiIsIml0ZW0tYXR0cmlidXRlcy1wcm9kdWN0LWNhdGFsb2dfYnV0dG9uX25hbWUiOiJOYW1lIiwiZGFzaGJvYXJkLWVuZ2FnZW1lbnRfYnV0dG9uX2Nsb3NlIjoiQ2xvc2UgZGFzaGJvYXJkIiwiY3VzdG9tLWludm9pY2UtdGVtcGxhdGVzX2J1dHRvbl9hZGQiOiJBZGQgaW52b2ljZSIsInNlbmQtaW1wb3J0LXNoaXBtZW50X2J1dHRvbl9zZW5kIjoiU2VuZCIsInJlcXVpcmluZy1hY3Rpb25zLXRlbXBsYXRlc19saW5rX3ZpZXciOiJWaWV3IHJlcXVpcmluZyIsImV4dGVybmFsLWFjY2Vzc19idXR0b25fY29udGludWUtYXMtZ3Vlc3QiOiJDb250aW51ZSBhcyBhIGd1ZXN0IiwibW9iaWxlLXF1b3Rlcy1wcm9kdWN0X2J1dHRvbl9xdW90ZS1kZXRhaWxzIjoiUXVvdGUgZGV0YWlscyIsImNvcnBvcmF0ZS11c2Vyc19idXR0b25fc2hvdy1idWxrIjoiU2hvdyBidWxrIiwiaW5kdXN0cmlhbC1kYXNoYm9hcmRfYnV0dG9uX3RvZ2dsZSI6IlRvZ2dsZSBpbmR1c3RyaWFsIGRhc2hib2FyZCIsImltcG9ydC1yZWZlcmVuY2UtZGlhbG9nX2J1dHRvbl9pbXBvcnQtcmVmZXJlbmNlLWFjdGlvbiI6IkltcG9ydCByZWZlcmVuY2UgYWN0aW9uIiwiZW5oYW5jZWQtaW52b2ljZV9idXR0b25fZW5oYW5jZWQtY3VzdG9tcy1pbnZvaWNlIjoiRW5oYW5jZWQgY3VzdG9tcyBpbnZvaWNlIiwiYWRkLW1lbWJlcnMtbW9kYWxfYnV0dG9uX2NhbmNlbCI6IkNhbmNlbCBhZGRpbmcgbWVtYmVycyIsIm1vYmlsZS1zeW5vcHNpc19idXR0b25fZ28tdG8tc2hpcG1lbnQtdHlwZSI6IkdvIHRvIHNoaXBtZW50IHR5cGUiLCJtYWtlLWZhdm9yaXRlX2J1dHRvbl9tYWtlLWZhdm9yaXRlIjoiTWFrZSBmYXZvcml0ZSIsImRlbGl2ZXJ5LW9wdGlvbnMtaGVhZGVyX2J1dHRvbl9zaGFyZS1xdW90ZSI6IlNoYXJlIHRoZSBxdW90ZSIsInVuYXZhaWxhYmxlLXByb2R1Y3QtZm9yLXNoaXBtZW50LW1vZGFsX2J1dHRvbl95ZXMiOiJZZXMgbW9kYWwiLCJjb3Jwb3JhdGUtZXh0ZXJuYWwtc3lzdGVtc19idXR0b25fZXN0YWJsaXNoLWNvbm5lY3Rpb24iOiJFc3RhYmxpc2ggY29ubmVjdGlvbiIsInByb2ZpbGUtcXVpY2stbGluay1wb3B1cF9idXR0b25fc3VibWl0IjoiU3VibWl0IHF1aWNrIiwidG9nZ2xlLXN3aXRjaC1zZWN0aW9uX2J1dHRvbl9jbG9zZSI6IkNsb3NlIiwib25saW5lLWJpbGxpbmctZW5yb2xsbWVudF9idXR0b25fdXBkYXRlIjoiVXBkYXRlIGVucm9sbG1lbnQiLCJhZGRyZXNzLWJvb2stc2VjdGlvbl9idXR0b25fYWRkIjoiQWRkIHNlY3Rpb24iLCJld2YtbW9kYWxfYnV0dG9uX3ByaW50IjoiUHJpbnQiLCJzc2ItYWRkcmVzc19idXR0b25fY2xlYXItYWRkcmVzcyI6IkNsZWFyIGFkZHJlc3MiLCJkYXNoYm9hcmQtdGFiLWNyZWF0ZV9saW5rX2dldC1mYXZvcml0ZS1zaGlwbWVudHMiOiJHZXQgZmF2b3JpdGUgc2hpcG1lbnRzIiwiZW5oYW5jZWQtaW52b2ljZS10eXBlX2J1dHRvbl9zaG93LWN1c3RvbXMiOiJTaG93IGN1c3RvbXMiLCJpdGFyLWl0bi1maWVsZF9idXR0b25fbG9naW4iOiJMb2dpbiBmaWVsZCIsImFkZHJlc3MtYm9va19idXR0b25fc2VhcmNoIjoiU2VhcmNoIGJvb2siLCJyZXNvbHZlLWNvbmZsaWN0LW1vZGFsX2J1dHRvbl9yZW1vdmUtZ3JvdXAiOiJSZW1vdmUgZ3JvdXAiLCJsaW5rLWVycm9yX2J1dHRvbl9yZXNlbmQtdmVyaWZpY2F0aW9uLWVtYWlsIjoiUmVzZW5kIHZlcmlmaWNhdGlvbiBlbWFpbCIsImNvbmZpcm1hdGlvbi1wb3B1cF9idXR0b25fcG9wdXAtc3VibWl0IjoiUG9wdXAgc3VibWl0IiwiZXh0ZXJuYWwtbW9kdWxlcy1yZXZva2VfYnV0dG9uX2NhbmNlbCI6IkNhbmNlbCByZXZva2UiLCJtYW5hZ2Utc2hpcG1lbnRzLWNvbXBvbmVudF9idXR0b25fbWFrZS11bmhpZGRlbiI6Ik1ha2UgdW5oaWRkZW4gc2hpcG1lbnQiLCJyZW1vdmUtZmF2b3JpdGVzLWNvbmZpcm1hdGlvbl9idXR0b25fbm8iOiJOb3QgcmVtb3ZlIiwiZnJvbS10by1jb250YWN0X2xpbmtfc2hvdy1hZGRpdGlvbmFsLW5vdGVzIjoiU2hvdyBhZGRpdGlvbmFsIG5vdGVzIiwiZXdmLWdyaWRfYnV0dG9uX2hpZGUtY29sdW1uLWN1c3RvbWl6YXRpb24tZGlhbG9nIjoiSGlkZSBjb2x1bW4gY3VzdG9taXphdGlvbiBkaWFsb2ciLCJjb25maXJtYXRpb24tcG9wdXBfYnV0dG9uX3BvcHVwLXJldmlldyI6IlBvcHVwIHJldmlldyIsInNlbGVjdC1wcmludGVyLW1vZGFsX2J1dHRvbl9jYW5jZWwiOiJDYW5jZWwgc2VsZWN0aW9uIiwiZXh0ZW5kZWQtbGlhYmlsaXR5X2J1dHRvbl9jbG9zZSI6IkNsb3NlIGxpYWJpbGl0eSIsIm9uZS1jbGljay1zaGlwbWVudF9idXR0b25fZGlzbWlzcy13YXJuaW5nIjoiRGlzbWlzcyB3YXJuaW5nIiwib25saW5lLWJpbGxpbmctZW5yb2xsbWVudF9idXR0b25fcmVxdWVzdC1hY2Nlc3MiOiJSZXF1ZXN0IGFjY2VzcyIsImJ1bGstcHJpbnRfYnV0dG9uX3ByaW50LXNlbGVjdGVkLWRvY3VtZW50cyI6IlByaW50IHNlbGVjdGVkIGRvY3VtZW50cyBidWxrIiwibW9iaWxlLW5hdmlnYXRpb25fbGlua190cmFja2luZyI6IlRyYWNraW5nIiwic3RhdHVzLW5vdGlmaWNhdGlvbnMtY29tcG9uZW50X2J1dHRvbl9hZGQtbmV3LW5vdGlmaWNhdGlvbiI6IkFkZCBuZXcgbm90aWZpY2F0aW9uIiwiZW5oYW5jZWQtaW52b2ljZV9idXR0b25fY29tcGxldGUiOiJDb21wbGV0ZSIsImJpbGxpbmctcGF5bWVudC10eXBlc19idXR0b25fcmVtb3ZlLWNhcmQiOiJSZW1vdmUgY2FyZCIsImNvbnRhY3QtbW9kaWZpY2F0aW9uLWFjdGlvbnNfYnV0dG9uX3VwZGF0ZS1jb250YWN0IjoiVXBkYXRlIGNvbnRhY3QiLCJld2YtZ3JpZF9idXR0b25fdXBkYXRlIjoiVXBkYXRlIGdyaWQiLCJjb3JwLWZpbGUtdXBsb2FkZXJfYnV0dG9uX2RlbGV0ZSI6IkRlbGV0ZSBhbiBJdGVtIiwic2hpcG1lbnQtaW1wb3J0LWZpbGUtdXBsb2FkZXJfYnV0dG9uX3ZpZXctZ3VpZGVsaW5lcyI6IlZpZXcgZ3VpZGVsaW5lcyIsImFkZHJlc3MtYm9vay1pdGVtX2J1dHRvbl9hZGQtY29udGFjdCI6IkFkZCBhIGNvbnRhY3QiLCJtb2JpbGUtc3lub3BzaXNfYnV0dG9uX2dldC1xdW90ZXMiOiJHZXQgcXVvdGVzIiwibW9iaWxlLXRyYWNraW5nLXJlc3VsdHMtaXRlbV9idXR0b25fdG9nZ2xlLWRldGFpbHMiOiJUb2dnbGUgZGV0YWlscyIsImFkZC1kaGwtYWNjb3VudF9idXR0b25fY3JlYXRlLWFjY291bnQiOiJDcmVhdGUgQWNjb3VudCIsIm1vYmlsZS1sb2NhdG9yLWRldGFpbHNfYnV0dG9uX2dldC1kaXJlY3Rpb25zIjoiR2V0IGRpcmVjdGlvbnMiLCJjaGF0LWxhdW5jaGVyX2J1dHRvbl9sYXVuY2gtY2hhdCI6IkxhdW5jaCBjaGF0IiwiYWRkcmVzcy1ib29rX2xpbmtfbWFpbGluZy1saXN0cy1icmVhZGNydW1iIjoiTWFpbGluZyBsaXN0cyIsIndjYy1kcm9wLW9mZl9idXR0b25fY3JlYXRlIjoiQ3JlYXRlIGRyb3Agb2ZmIiwibWFuYWdlLXBpY2t1cHMtZmlsdGVycy1rZXl3b3JkX2J1dHRvbl9yZW1vdmUiOiJSZW1vdmUgZmlsdGVycyIsImRlbGV0ZS1zY2hlbWUtY29uZmlybWF0aW9uX2J1dHRvbl9ubyI6Ik5vdCBkZWxldGUiLCJzaGlwbWVudC1vdmVyZHVlX2J1dHRvbl9lZGl0IjoiRWRpdCBzaGlwbWVudCBvdmVyZHVlIiwiZGhsLWNvbnRhY3QtaGVhZGVyX2xpbmtfY2FuY2VsIjoiQ2FuY2VsIGNvbnRhY3QgaGVhZGVyIiwibWFzdGVyLXJlZmVyZW5jZS1udW1iZXItcm93LWFjdGlvbnNfYnV0dG9uX3JlbW92ZS1tcm4tcm93IjoiUmVtb3ZlIE1hc3RlciBSZWZlcmVuY2UgTnVtYmVyIHJvdyIsImNvcnBvcmF0ZS1leHRlcm5hbC1zeXN0ZW1zX2J1dHRvbl9yZXF1ZXN0LWNvbm5lY3Rpb24iOiJSZXF1ZXN0IGNvbm5lY3Rpb24iLCJzaGlwbWVudC1yZWZlcmVuY2UtbW9kYWxfYnV0dG9uX3VwZGF0ZSI6IlVwZGF0ZSBtb2RhbCIsInRyYWNraW5nLXJlc3VsdC1zdW1tYXJ5LWl0ZW1fYnV0dG9uX2JhY2siOiJCYWNrIiwicHJvZHVjdC1kZXNjcmlwdGlvbl9idXR0b25fcHJvZHVjdC1jYXRhbG9nIjoiUHJvZHVjdCBjYXRhbG9nIiwicmVwb3J0aW5nLWRldGFpbHMtZWRpdC1maWVsZHMtcG9wdXBfYnV0dG9uX21vdmUtc2VsZWN0ZWQtZG93biI6Ik1vdmUgc2VsZWN0ZWQgZG93biIsInNoaXBtZW50LWltcG9ydC1maWxlLXVwbG9hZGVyX2J1dHRvbl91cGxvYWQiOiJVcGxvYWQgc2hpcG1lbnQiLCJld2YtbW9kYWxfYnV0dG9uX2NvbmZpcm1hdGlvbi1kaXNtaXNzIjoiRGlzbWlzc3MgY29uZmlybWF0aW9uIiwib25saW5lLWJpbGxpbmctZW5yb2xsbWVudF9idXR0b25fZ28tdG8tcmVnaXN0ZXIiOiJHbyB0byByZWdpc3RlciIsImRlbGl2ZXJ5LW9wdGlvbnNfYnV0dG9uX3NoYXJlLXF1b3RlIjoiU2hhcmUgcXVvdGUiLCJjYW5jZWwtYXNzaWdubWVudC1jb21wb25lbnRfYnV0dG9uX3llcyI6IlllcyBidXR0b24iLCJzaGlwbWVudC1maWx0ZXJlZC1jdHJsX2J1dHRvbl9yZXZpZXctc2hpcG1lbnQiOiJSZXZpZXcgc2hpcG1lbnQgYnRuIiwicmV0dXJuLWxhYmVsX2J1dHRvbl91cGRhdGUtZGV0YWlscyI6IlVwZGF0ZSBkZXRhaWxzIiwiY29weS11c2Vycy1tb2RhbF9idXR0b25fZHVwbGljYXRlIjoiRHVwbGljYXRlIiwiaW5zdXJlLXNoaXBtZW50LXBvcHVwX2J1dHRvbl9zaGlwbWVudC1hY2NlcHQiOiJBY2NlcHQgcG9wdXAiLCJzdGF0dXMtbm90aWZpY2F0aW9ucy1jb21wb25lbnRfYnV0dG9uX3NldC1tb3JlLW5vdGlmaWNhdGlvbiI6IlNldCBtb3JlIG5vdGlmaWNhdGlvbiIsImNvbmZpcm0tbGVhdmluZ19idXR0b25fY29uZmlybS1ubyI6Ik5vIiwidmlldy1kY2ktaW1hZ2VzX2J1dHRvbl9zaG93IjoiU2hvdyBpbWFnZXMiLCJzaGlwbWVudC1zZXR0aW5ncy1kaGxfbGlua19kaWdpdGFsLWN1c3RvbXMiOiJEaWdpdGFsIGN1c3RvbXMgc2V0dGluZ3MiLCJmb3Jnb3QtcGFzc3dvcmRfYnV0dG9uX2NhbmNlbCI6IkNhbmNlbCBmb3Jnb3QgcGFzc3dvcmQgZm9ybSIsImdyb3VwLXJlbWluZGVyX2J1dHRvbl9zd2l0Y2gtZ3JvdXAiOiJTd2l0Y2ggZ3JvdXAgYnV0dG9uIiwiZGFzaGJvYXJkLWNhcmQtdHJhbnNpdF9saW5rX2Fpci13YXktYmlsbCI6IkFpciB3YXkgYmlsbCIsImluY29ycmVjdC1lbWFpbHMtbW9kYWxfYnV0dG9uX2NhbmNlbCI6IkNhbmNlbCBpbmNvcnJlY3QgZW1haWxzIiwiYWRkcmVzcy1ib29rLWVsZW1lbnRfYnV0dG9uX2FkZC1jb250YWN0IjoiQWRkIGNvbnRhY3RzIiwibGVhdmUtY29uZmlybWF0aW9uLWRpYWxvZ19idXR0b25fbm8iOiJOb3QgbGVhdmUiLCJzZWxlY3QtY291bnRyeS1tb2RhbF9idXR0b25fY291bnRyeSI6IkNvdW50cnkiLCJpdGFyLWVlaV9idXR0b25fYWRkLW5ldyI6IkFkZCBuZXciLCJwcmludC1hY3Rpb25zX2J1dHRvbl9kb3dubG9hZC1kb2N1bWVudHMiOiJEb3dubG9hZCBkb2N1bWVudHMiLCJtb2JpbGUtcGFja2FnZS1saXN0LWl0ZW1fYnV0dG9uX2VkaXQiOiJFZGl0IGJ1dHRvbiIsIm9ubGluZS1iaWxsaW5nLWVucm9sbG1lbnRfYnV0dG9uX3NlbnQiOiJTZW50IiwiZGhsLXBvc3RhbC1jb2RlX2xpbmtfdHlwZWhlYWQiOiJUeXBlYWhlYWQgbGluayIsInN1bW1hcnktZGhsX2J1dHRvbl9yZXNldC1lbmhhbmNlZC1pbnZvaWNlIjoiUmVzZXQgZW5oYW5jZWQgaW52b2ljZSIsImFkZHJlc3MtZGV0YWlsc19idXR0b25fYWRkcmVzcy1ib29rIjoiQWRkcmVzcyBib29rIGRldGFpbHMiLCJzZWxlY3QtY291bnRyeS1tb2RhbF9idXR0b25fY2xvc2UiOiJDbG9zZSBzZWxlY3Rpb24gY291bnRyeSIsInNoaXBtZW50LXNlYXJjaF9saW5rX3F1ZXJ5IjoiUXVlcnkiLCJ0cmFja2luZy1yZWNlbnQtc2hpcG1lbnRzX2J1dHRvbl9nby10by1yZXN1bHRzIjoiR28gdG8gcmVzdWx0cyIsImV3Zi1tb2RhbF9idXR0b25fcHJvY2VlZC1yZWplY3Rpb24iOiJQcm9jZWVkIHJlamVjdGlvbiIsInZpZXctZGNpLWltYWdlc19idXR0b25fdmlldyI6IlZpZXciLCJxdWljay12aWV3X2xpbmtfaGlkZS1xdWljay12aWV3IjoiSGlkZSBxdWljayB2aWV3IiwiZ3JhbnRlZC1hdXRob3JpemF0aW9uc19idXR0b25fZWRpdCI6IkVkaXQgYXV0aG9yaXphdGlvbiIsInJlbW92ZS1mYXZvcml0ZXMtY29uZmlybWF0aW9uX2J1dHRvbl95ZXMiOiJZZXMsIHJlbW92ZSIsInBpY2t1cC1jb21wb25lbnRfYnV0dG9uX2Nsb3NlLXNjaGVkdWxlIjoiQ2xvc2Ugc2NoZWR1bGUiLCJkYXNoYm9hcmQtbXktc2hpcG1lbnRzX2xpbmtfdmlldyI6IlZpZXciLCJ0cmFja2luZy1yZWNlbnQtc2hpcG1lbnRzLW1vZGFsX2J1dHRvbl92aWV3LWFsbCI6IlZpZXcgYWxsIGVsZW1zIiwiZGhsLXRvcC1uYXYtbWVudV9saW5rX3ByaW50ZXItc2V0dGluZ3MiOiJQcmludGVyIHNldHRpbmdzIiwiZGVsZXRlLWdyb3Vwcy1tb2RhbF9idXR0b25fY2FuY2VsIjoiQ2FuY2VsIGRlbGV0aW5nIGdyb3VwcyIsInByb2ZpbGUtcGFzc3dvcmRfYnV0dG9uX3VwZGF0ZS1wYXNzd29yZCI6IlVwZGF0ZSBQYXNzd29yZCIsInN1bW1hcnktc2VjdGlvbl9idXR0b25fZWRpdCI6IkVkaXQgc3VtbWFyeSIsInNhdmUtc2hpcG1lbnQtZGVmYXVsdHNfYnV0dG9uX3NhdmUtZGVmYXVsdHMiOiJTYXZlIGRlZmF1bHRzIiwicGlja3Vwcy1lbGVtZW50X2J1dHRvbl91cGRhdGUtcGlja3VwcyI6IlVwZGF0ZSBwaWNrdXBzIiwiZ3JvdXAtc3dpdGNoZXItbGluay1zZWN0aW9uX2J1dHRvbl9zaG93LXN3aXRjaGVyIjoiU2hvdyBzd2l0Y2hlciBzZWN0aW9uIiwicHJpbnQtYWN0aW9ucy1kaXZfYnV0dG9uX2ZldGNoLXdheWJpbGwiOiJQcmludCB3YXliaWxsIiwiYXV0aG9yaXphdGlvbi1kZXRhaWxzX2J1dHRvbl9kZWxldGUiOiJEZWxldGUgYnV0dG9uIiwicGF5bWVudC10eXBlLWZvb3Rlcl9idXR0b25fbmV4dCI6Ik5leHQgdHlwZSBmb290ZXIiLCJtYW5hZ2UtcGlja3Vwcy1maWx0ZXJzLXNlY3Rvcl9idXR0b25fdmlldy1tb3JlIjoiVmlldyBtb3JlIiwic3VtbWFyeS1zZWN0aW9uX2J1dHRvbl9wcmV2aWV3LWRvY3VtZW50IjoiUHJldmlldyBkb2N1bWVudCIsInJhdGUtYW5kLXF1b3RlLWVsZW1lbnRfbGlua19nZXQtcmF0ZS1hbmQtcXVvdGUiOiJHZXQgcmF0ZSBhbmQgcXVvdGUiLCJhY3Rpb24tZWxlbWVudF9idXR0b25faGFuZGxlIjoiSGFuZGxlIiwiZW1haWwtZm9vdGVyX2J1dHRvbl9lbWFpbCI6IkVtYWlsIiwiZmlsZS11cGxvYWRlci13cmFwcGVyX2xpbmtfZGVsZXRlIjoiRGVsZXRlIiwic2hhcmUtc2hpcG1lbnQtZGV0YWlsc19idXR0b25fZXhwYW5kIjoiRXhwYW5kIGRldGFpbHMiLCJncmlkLXBhZ2luYXRpb24tbW9kYWxfbGlua19uZXh0IjoiTmV4dCBpdGVtIiwiY29ycG9yYXRlLW5vZGUtc3dpdGNoZXJfYnV0dG9uX2FwcGx5LW1hbmFnZW1lbnQtbGV2ZWwiOiJBcHBseSIsImFkZHJlc3MtYm9vay1tZW51X2J1dHRvbl91cGxvYWQtY29udGFjdHMiOiJVcGxvYWQgY29udGFjdHMiLCJjb3VudHJ5LXdhcm5pbmdzX2J1dHRvbl9oaWRlLW5vdGlmaWNhdGlvbiI6IkhpZGUgbm90aWZpY2F0aW9uIiwibmF2aWdhdGlvbi10b2dnbGUtbW9kYWxfYnV0dG9uX3RvZ2dsZSI6IlRvZ2dsZSBuYXZpZ2F0aW9uIiwiZW1haWwtaGVhZGVyX2J1dHRvbl9lbWFpbCI6IkVtYWlsIGhlYWRlciIsImV4dGVuZGVkLWxpYWJpbGl0eS1jb25maXJtYXRpb25fYnV0dG9uX2NhbmNlbCI6IkNhbmNlbCBleHRlbmRlZCBsaWFiaWxpdHkiLCJwbGFpbi1zZWFyY2gtYnV0dG9uX2J1dHRvbl9zZWFyY2giOiJQbGFpbiBzZWFyY2giLCJzaGlwbWVudC1pbXBvcnQtZGVsZXRlLXNjaGVtZV9idXR0b25fZGVsZXRlLXNjaGVtZSI6IkRlbGV0ZSBzY2hlbWUiLCJtYW5hZ2Utc2hpcG1lbnRfYnV0dG9uX3Nob3ctYmlsbGluZy1hZGRyZXNzIjoiU2hvdyBiaWxsaW5nIGFkZHJlc3MiLCJkaGwtdG9wLW5hdi1tZW51X2xpbmtfZGlnaXRhbC1jdXN0b20taW52b2ljZSI6IkRpZ2l0YWwtY3VzdG9tLWludm9pY2UiLCJkaGwtdG9wLW5hdi1tZW51X2xpbmtfcmVwb3J0cyI6IlJlcG9ydHMiLCJwYXBlcmxlc3MtY3VzdG9tcy1zZWN0aW9uX2J1dHRvbl9hdHRhY2gtbmV3IjoiQXR0YWNoIG5ldyIsIm1vYmlsZS1sb2NhdG9yLWZ1bGwtbGlzdF9idXR0b25fZ28tdG8tbWFwIjoiR28gdG8gbWFwIiwidHJhY2tpbmctcmVzdWx0cy1zdGF0ZV9idXR0b25fdHJ5LW5ldy1zZWFyY2giOiJUcnkgbmV3IHNlYXJjaCIsImFkZHJlc3MtYm9va19idXR0b25fYWRkLWNvbnRhY3QiOiJBZGQgY29udGFjdCB0byBhZGRyZXNzIGJvb2siLCJkYXNoYm9hcmQtY2FyZC10ZW1wbGF0ZV9saW5rX3NlYXJjaCI6IlNlYXJjaCBkYXNoYm9hcmQiLCJkb2N1bWVudC1kZXNjcmlwdGlvbi1pbnB1dF9idXR0b25fdHlwZWFoZWFkIjoiVHlwZWFoZWFkIiwicmV0dXJuLWxhYmVsX2J1dHRvbl9jYW5jZWwiOiJDYW5jZWwgbGFiZWwiLCJzaGlwbWVudC1yZWZlcmVuY2UtbW9kYWxfYnV0dG9uX2FkZCI6IkFkZCBtb2RhbCIsImVuaGFuY2VkLWludm9pY2UtdHlwZV9idXR0b25fc2V0LWludm9pY2UtdHlwZSI6IlNldCBpbnZvaWNlIHR5cGUiLCJhY3Rpb24tY29uZmlybWF0aW9uX2J1dHRvbl9jYW5jZWwiOiJDYW5jZWwgYWN0aW9uIiwiZGhsLXRvcC1uYXYtbWVudV9saW5rX25vdGlmaWNhdGlvbnMiOiJOb3RpZmljYXRpb25zIiwibW9iaWxlLXN5bm9wc2lzX2J1dHRvbl9nby10by1wYWNrYWdpbmciOiJHbyB0byBwYWNrYWdpbmciLCJyZXBvcnRpbmctZGV0YWlscy1lZGl0LWZpZWxkcy1wb3B1cF9idXR0b25fbW92ZSI6Ik1vdmUiLCJkaGwtdG9wLW5hdi1tZW51X2xpbmtfcGlja3VwcyI6IlBpY2t1cHMiLCJzZXR0aW5ncy1zZWN0aW9uX2J1dHRvbl9zYXZlIjoiU2F2ZSBzZWN0aW9uIiwicmVtb3ZlLXNpbmdsZS1mYXZvcml0ZS1jb25maXJtYXRpb25fYnV0dG9uX2NhbmNlbCI6IkNhbmNlbCByZW1vdmFsIiwiYmlsbGluZy1jb250cm9sbGVyX2J1dHRvbl9zZWxlY3QiOiJTZWxlY3QgY29udHJvbGxlciIsInRvcC1uYXYtbWVudS1ndWVzdF9saW5rX3JlZ2lzdGVyIjoiUmVnaXN0ZXIgdXNlciIsInJlcG9ydGluZy1wb3B1cF9idXR0b25fcHJpbnQiOiJQcmludCByZXBvcnRpbmciLCJzc2Itc2hpcG1lbnQtdHlwZS1jb250ZW50X2J1dHRvbl9uZXh0IjoiTmV4dCB0eXBlIiwibXVsdGktcGhvbmVfYnV0dG9uX3JlbW92ZS1waG9uZSI6IlJlbW92ZSBwaG9uZSIsInRvcC1uYXZfYnV0dG9uX21vbml0b3JpbmctYW5kLW5vdGlmaWNhdGlvbnMiOiJNb25pdG9yaW5nIiwiaG9tZV9idXR0b25fc2VydmljZS1wb2ludCI6IkZpbmQgbmVhcmVzdCBESEwgU2VydmljZSBQb2ludCIsInJldHVybi1sYWJlbF9idXR0b25fY29udGludWUiOiJDb250aW51ZSByZXR1cm4iLCJ1c2VyLXByb2ZpbGUtdGFic19saW5rX2NoYW5nZS1wYXNzd29yZCI6IkNoYW5nZSBwYXNzd29yZCBzZWN0aW9uIiwiY29uZmlybWF0aW9uLWluc3VyYW5jZS1kaWFsb2dfYnV0dG9uX2NvbmZpcm1hdGlvbi1jYW5jZWwiOiJDYW5jZWwgY29uZmlybWF0aW9uIGRpYWxvZyIsImV3Zi1ncmlkX2xpbmtfY2xlYXItc2VsZWN0aW9uIjoiQ2xlYXIgc2VsZWN0aW9uIiwiZGhsLXRvcC1uYXYtbWVudV9saW5rX215LXBpY2t1cHMiOiJNeSBwaWNrdXBzIiwiY3VycmVuY3ktcGlja2VyLW1vZGFsX2J1dHRvbl9kaXNtaXNzIjoiRGlzbWlzcyBwaWNrZXIiLCJpbmNvbXBsZXRlLWVuaGFuY2VkLWludm9pY2VfYnV0dG9uX29rIjoiT2sgaW52b2ljZSIsInBpY2t1cHMtZWxlbWVudF9idXR0b25fZWRpdC1waWNrdXBzIjoiRWRpdCBwaWNrdXBzIiwic2hpcG1lbnQtY29zdC1hcHByb3ZhbF9idXR0b25fYXBwcm92ZSI6IkFwcHJvdmUgc2hpcG1lbnQiLCJtYWlsaW5nLWxpc3RzX2J1dHRvbl9hZGQtbWFpbGluZy1saXN0cy1pbi1hZGRyZXNzLWJvb2siOiJBZGQgbWFpbGluZyBsaXN0IGluIGFkZHJlc3MgYm9vayIsImRlZmF1bHQtZ3JvdXBfYnV0dG9uX2NhbmNlbCI6IkNhbmNlbCBkZWZhdWx0IGdyb3VwIiwib25saW5lLWJpbGxpbmctZW5yb2xsbWVudF9idXR0b25fcmVxdWVzdC1zZW50IjoiUmVxdWVzdCBzZW50IiwiY29ycC1yZWZlcmVuY2UtZm9ybWF0LW1vZGlmeS1tb2RhbF9idXR0b25fdGVzdCI6IlRlc3QiLCJjb250YWN0LWRldGFpbHMtc2V0dGluZ3NfYnV0dG9uX3NhdmUtYW5kLWFkZC1jb250YWN0IjoiU2F2ZSBhbmQgYWRkIGNvbnRhY3QiLCJtb2JpbGUtc3lub3BzaXNfYnV0dG9uX2dvLXRvIjoiR28gdG8iLCJyZXF1ZXN0LWRobC1hY2NvdW50X2J1dHRvbl9zdWJtaXQiOiJTdWJtaXQgcmVxdWVzdCIsImJpbGxpbmctYWRkcmVzcy1sYXlvdXRfYnV0dG9uX2FkZHJlc3MtZGV0YWlscyI6IkFkZHJlc3MgZGV0YWlscyIsImF1dGgtcGlja3VwLWxvY2F0aW9uc19idXR0b25fY2xlYXIiOiJDbGVhciBwaWNrdXAiLCJld2YtZ3JpZF9ibG9ja19zZWxlY3Qtcm93IjoiU2VsZWN0IHJvdyIsIm1haWxpbmctbGlzdC1zaGlwbWVudF9idXR0b25fY3JlYXRlLWFub3RoZXItc2hpcG1lbnQiOiJDcmVhdGUgYW5vdGhlciBzaGlwbWVudCIsImNvb2tpZXMtcG9saWN5X2J1dHRvbl9jbG9zZS1jb29raWVzLXBvbGljeSI6IkNsb3NlIGNvb2tpZXMgcG9saWN5IiwiY29udGFjdC1kZXRhaWxzLXNldHRpbmdzX2J1dHRvbl9yZW1vdmUiOiJSZW1vdmUgbGlzdCBpdGVtIiwic2VydmljZS1wb2ludHMtbGlzdF9idXR0b25fY29sbGVjdCI6IkNvbGxlY3Qgc2VydmljZSBwb2ludCIsImR1cGxpY2F0ZXMtcmVzb2x2ZXJfYnV0dG9uX3Jlc29sdmUiOiJSZXNvbHZlIiwibWVzc2FnZS1teS11c2Vyc19idXR0b25fc2F2ZSI6IlNhdmUgbWVzc2FnZSIsInJlcG9ydGluZy1saXN0aW5nLWFjdGlvbl9idXR0b25fYWN0aW9ucyI6IkFjdGlvbnMgcmVwb3J0aW5nIiwib25saW5lLWJpbGxpbmctZW5yb2xsbWVudF9idXR0b25fY2FuY2VsIjoiQ2FuY2VsIG9ubGluZSIsInBheW1lbnQtdHlwZV9idXR0b25fbmV4dCI6Ik5leHQgYnV0dG9uIiwiZGlnaXRhbC1jdXN0b21zLWludm9pY2UtbGF5b3V0X2J1dHRvbl9nZW5lcmF0ZS1hZGRpdGlvbmFsLWxpbmsiOiJHZW5lcmF0ZSBsaW5rIGZvciIsInF1aWNrLWxpbmtzX2xpbmtfZ3JpZC1saW5rIjoiUXVpY2sgbGluayIsInNlbGVjdC1sYW5ndWFnZS1tb2RhbF9idXR0b25fc2VsZWN0LWxhbmd1YWdlIjoiU2VsZWN0IGxhbmd1YWdlIiwic2V0dGluZ3Mtc2VjdGlvbl9saW5rX2NhbmNlbC1jaGFuZ2VzIjoiQ2FuY2VsIHNldHRpbmdzIGNoYW5nZXMiLCJjb250YWN0LWluZm9fYnV0dG9uX2FkZC1lbWFpbCI6IkFkZCBlbWFpbCIsImRhc2hib2FyZC1lbmdhZ2VtZW50X2J1dHRvbl9tYXJrLXZpc2l0ZWQiOiJNYXJrIHZpc2l0ZWQiLCJjb250YWN0LWhlYWRlcl9saW5rX2NhbmNlbCI6IkNhbmNlbCBjb250YWN0IiwibG9naW4tZm9ybS1tb2RhbF9idXR0b25fbG9naW4iOiJMb2dpbiBidXR0b24iLCJtb2JpbGUtbmF2aWdhdGlvbl9saW5rX3NjaGVkdWxlLXBpY2t1cCI6IlNjaGVkdWxlIFBpY2t1cCIsIm1vYmlsZS1zeW5vcHNpc19idXR0b25fZ28tdG8tYWRyZXNzZXMiOiJHbyB0byBhZGRyZXNzZXMiLCJvbmxpbmUtYmlsbGluZy1lbnJvbGxtZW50X2J1dHRvbl9uYXZpZ2F0ZSI6Ik5hdmlnYXRlIiwibm90aWZpY2F0aW9uLXNoYXJpbmdfYnV0dG9uX3RhZyI6IlRhZyIsInRlcm1zLWFuZC1wcml2YWN5LWFjY2VwdGFuY2VfYnV0dG9uX2RlY2xpbmUiOiJEZWNsaW5lIHRlcm1zIGFuZCBwcml2YWN5IiwicmVwb3J0aW5nLWRldGFpbHMtZWRpdC1maWVsZHMtcG9wdXBfYnV0dG9uX3NhdmUiOiJTYXZlIGVkaXRpbmciLCJkYXNoYm9hcmQtbW9uaXRvcmluZ19saW5rX3RyYWNrIjoiTW9uaXRvcmluZyBUcmFjayIsInN0ZXBfYnV0dG9uX3N1Ym1pdC1vcHRpb25zIjoiU3VibWl0IHRoZSBmb3JtIiwiZGhsLXBpY2t1cC1jb25maXJtYXRpb25fYnV0dG9uX2NyZWF0ZS1uZXctc2hpcG1lbnQiOiJDcmVhdGUgbmV3IHNoaXBtZW50IiwicGFja2FnZS10eXBlX2J1dHRvbl9kaXNtaXNzIjoiRGlzbWlzcyBwYWNrYWdlIiwiY29uc29saWRhdGlvbi1yZXN1bHRfYnV0dG9uX3ByaW50LXNlbGVjdGVkLXNoaXBtZW50cyI6IlByaW50IHNlbGVjdGVkIHNoaXBtZW50cyIsIm1hcmtldGluZy10ZWFzZXItaXRlbV9saW5rX2xpbmsiOiJNYXJrZXRpbmcgdGVhc2VyIGxpbmsiLCJsb2NhdG9yLW9wdGlvbnNfYnV0dG9uX2ZpbmQtbmVhciI6IkZpbmQgbmVhciIsInByaW50ZXItc2V0dGluZ3NfYnV0dG9uX3NhdmUtY2hhbmdlcyI6IlNhdmUgY2hhbmdlcyBpbiBzZXR0aW5ncyIsImNvbXBsZXRlLW5vdGlmaWNhdGlvbnMtYW5kLXNoYXJpbmdfYnV0dG9uX25vdGlmaWNhdGlvbnMtY29udGFjdHMiOiJOb3RpZmljYXRpb25zIGNvbnRhY3RzIiwic2hpcG1lbnQtaW1wb3J0LWV4aXN0aW5nLWNvbnRhaW5lcl9idXR0b25fcHJvY2Vzcy1zaGlwbWVudHMiOiJQcm9jZXNzIHNoaXBtZW50cyBpbXBvcnRpbmciLCJkYXNoYm9hcmQtc2hpcG1lbnQtcXVpY2stdmlld19idXR0b25fbWFrZS1mYXZvdXJpdGUiOiJNYWtlIGZhdm91cml0ZSIsIm1haWxpbmctbGlzdC1kZXRhaWxzX2J1dHRvbl9kZWxldGUtbWFpbGluZy1saXN0IjoiRGVsZXRlIG1haWxpbmcgbGlzdCIsImFjdGlvbi1jb25maXJtYXRpb25fYnV0dG9uX2FjdGl2YXRlLXVzZXJzIjoiQWN0aXZhdGUgVXNlcnMiLCJ0b3AtbmF2LW1lbnUtZ3Vlc3RfbGlua19teS1kaGwtaG9tZSI6Ik15IGRobCBob21lIiwidG9wLW5hdi1tZW51X2xpbmtfbWFuYWdlLW15LWRobCI6Ik1hbmFnZSBteSBkaGwiLCJzaGlwbWVudC1jb3N0X2J1dHRvbl91cGdyYWRlLXByb2R1Y3QiOiJVcGdyYWRlIHByb2R1Y3QiLCJzaGlwbWVudC1ub3RpZmljYXRpb25zX2J1dHRvbl9kZWxldGUiOiJEZWxldGUgbm90aWZpY2F0aW9uIiwiY29udGFjdC1kZXRhaWxzLXNldHRpbmdzX2J1dHRvbl9hZGQiOiJBZGQgY29udGFjdCBkZXRhaWxzIiwic2Vzc2lvbi1leHBpcmF0aW9uX2J1dHRvbl9jb250aW51ZS1zZXNzaW9uIjoiQ29udGludWUgc2Vzc2lvbiIsInNoaXBtZW50LWltcG9ydC1zY2hlbWUtZ3JpZF9idXR0b25fbW92ZS1kb3duIjoiTW92ZSBkb3duIiwibW9iaWxlLW5hdmlnYXRpb25fbGlua19yYXRlLWFuZC1xdW90ZSI6IlJhdGUgYW5kIHF1b3RlIiwicGFwZXJsZXNzLWN1c3RvbXNfYnV0dG9uX3ZpZXctdGVybXMtY29uZGl0aW9ucyI6IlZpZXcgdGVybXMgY29uZGl0aW9ucyIsImdyb3VwLXN3aXRjaGVyLXNlY3Rpb25fYnV0dG9uX3NldC1kZWZhdWx0IjoiU2V0IGRlZmF1bHQiLCJzZXR0aW5ncy1tYW5hZ2VtZW50X2J1dHRvbl9saXN0LWNhbmNlbC1yb3ctZWRpdGluZyI6IkNhbmNlbCByb3cgZWRpdGluZyIsImRobC10b3AtbmF2LW1lbnVfbGlua19pbnN1cmFuY2UiOiJJbnN1cmFuY2UiLCJtYWlsaW5nLWxpc3Qtc2hpcG1lbnRfYnV0dG9uX21hbmFnZS1teS1zaGlwbWVudHMiOiJNYW5hZ2UgbXkgc2hpcG1lbnRzIiwib25saW5lLWJpbGxpbmctbmF2X2J1dHRvbl9saW5rLW5hbWUiOiJMaW5rIG5hbWUiLCJhc3NpZ24tc2hpcG1lbnQtcGF5bWVudC1zZWN0aW9uX2J1dHRvbl9lZGl0IjoiRWRpdCBhc3NpZ24iLCJwYWNrYWdpbmctc2V0dGluZ3Mtc2VjdGlvbl9idXR0b25fYWRkLXBhY2thZ2luZyI6IkFkZCBwYWNrYWdpbmciLCJzaGFyZS1zaGlwbWVudC1kZXRhaWxzX2J1dHRvbl9zaG93LXNoaXBtZW50IjoiU2hvdyBhIHNoaXBtZW50Iiwic2hpcG1lbnQtaW1wb3J0LXNoaXBwZXJfYnV0dG9uX29wZW4tYWRkcmVzcy1ib29rLXBvcHVwIjoiT3BlbiBhZGRyZXNzIGJvb2sgcG9wdXAiLCJtYWlsaW5nLWxpc3QtZGV0YWlsc19idXR0b25fZG93bmxvYWQtbWFpbGluZy1saXN0IjoiRG93bmxvYWQgbWFpbGluZyBsaXN0IiwibWVzc2FnZS10by1hc3NpZ25lZV9idXR0b25fc2VuZC11cGRhdGVzIjoiU2VuZCB1cGRhdGVzIiwiaXRhci1lZWktaXRlbV9idXR0b25fcmVtb3ZlIjoiUmVtb3ZlIGl0YXIiLCJhZGRyZXNzLXN3aXRjaF9idXR0b25fc3dpdGNoIjoiU3dpdGNoIiwiZGFzaGJvYXJkLWd1ZXN0LXRhYnNfYmxvY2tfbGlzdC10YWIiOiJUYWI6IiwicmVmZXJlbmNlcy1zZWN0aW9uX2J1dHRvbl9yZW1vdmUtcmVmZXJlbmNlIjoiUmVtb3ZlIHJlZmVyZW5jZSIsImFjY291bnQtbWFuYWdlbWVudC1pdGVtX2J1dHRvbl9lZGl0LWFjY291bnQiOiJFZGl0IGFjY291bnQgbWFuYWdlbWVudCIsInF1aWNrLXJlZ19idXR0b25fc3VibWl0IjoiU3VibWl0IHJlZyBmb3JtIiwiYWRkcmVzcy1ib29rX2J1dHRvbl91cGxvYWQtY29udGFjdHMiOiJVcGxvYWQgYWRkcmVzcyBjb250YWN0cyIsImFkZHJlc3MtYm9vay1pbXBvcnQtdG9vbGJhcl9idXR0b25fZ28tYmFjayI6IkdvIGJhY2siLCJtb2JpbGUtbW9kYWxfbGlua19ob21lIjoiSG9tZSBtb2JpbGUiLCJoZWxwZXJzLXNlY3Rpb25fYnV0dG9uX2hlbHAtZGVjaWRlIjoiSGVscCBkZWNpZGUiLCJ0b29sYmFyLXNlY3Rpb25fYnV0dG9uX2Rpc3BsYXktc2hpcG1lbnQtd2l6YXJkIjoiRGlzcGxheSBzaGlwbWVudCB3aXphcmQiLCJjYXJvdXNlbC1zZWN0aW9uX2xpbmtfcmlnaHQiOiJSaWdodCIsImJpbGxpbmctYWRkcmVzc19idXR0b25fZGlzbWlzcyI6IkRpc21pc3MgYmlsbGluZyIsImF1dGgtcGlja3VwLWxvY2F0aW9uc19idXR0b25fc2V0LWRhZmV1bHQiOiJTZXQgZGVmYXVsdCIsInJlZmVyZW5jZS1vcHRpb25zX2J1dHRvbl9pbXBvcnQtcmVmZXJlbmNlIjoiSW1wb3J0IHJlZmVyZW5jZSIsImV3Zi1tb2RhbF9ibG9ja19jbGljay1oYW5kbGVyIjoiSGFuZGxlIGNsaWNrIiwiZGhsLWJ1dHRvbl9saW5rX2xpbmsiOiJMaW5rIGRobCIsInNlbGVjdC1hZGRyZXNzLW1vZGFsX2J1dHRvbl9zZWxlY3QtYWRkcmVzcy1xdWVyeSI6IlNlbGVjdCBhZGRyZXNzIHF1ZXJ5IiwiZGlnaXRhbC1jdXN0b21zLWludm9pY2UtbGF5b3V0X2J1dHRvbl9jbGVhci1lYWQtdGFkLWRvY3VtZW50cyI6IkNsZWFyIEVBRC9UQUQgZG9jdW1lbnRzIiwic2hpcG1lbnQtc2V0dGluZ3MtZGhsX2J1dHRvbl91c2FnZSI6IlVzYWdlIiwicmVzb2x2ZS1jb25mbGljdC1tb2RhbF9idXR0b25fcmVzb2x2ZS1jb25mbGljdCI6IlJlc29sdmUgY29uZmxpY3QiLCJyZXF1aXJpbmctYWN0aW9ucy10ZW1wbGF0ZXNfbGlua19tYW5hZ2Utc2hpcG1lbnQiOiJNYW5hZ2UgcmVxdWlyaW5nIHNoaXBtZW50IiwibmF2aWdhdGlvbl9saW5rX2xpbmstZWxlbWVudCI6IkxpbmsiLCJhdXRob3JpemF0aW9uLWRldGFpbHNfYnV0dG9uX3JldHVybi10by1saXN0IjoiUmV0dXJuIHRvIGxpc3QiLCJzYXZlLXNoaXBtZW50LXNldHRpbmdzX2J1dHRvbl9zYXZlLWFuZC1jb250aW51ZSI6IlNhdmUgYW5kIGNvbnRpbnVlIiwibW9iaWxlLXBhY2thZ2UtbGlzdC1pdGVtX2J1dHRvbl9lZGl0LXBhY2thZ2UiOiJFZGl0IHBhY2thZ2UiLCJzdWItbmF2LW1lbnVzX2xpbmtfZW1wdHktbGluayI6IkVtcHR5IGxpbmsiLCJld2YtbW9kYWxfYnV0dG9uX2Nsb3NlLXBheW1lbnQiOiJDbG9zZSBwYXltZW50IiwiY2hhdC1pbnZpdGUtbGF1bmNoZXJfYnV0dG9uX2hpZGUtaW52aXRlIjoiSGlkZSBpbnZpdGUiLCJtb2JpbGUtY3VycmVuY3ktaW5wdXRfYnV0dG9uX29wZW4tY3VycmVuY3kiOiJPcGVuIGN1cnJlbmN5IiwidXNlci1wcm9maWxlLXRhYnNfbGlua191cGRhdGUtY29udGFjdC1pbmZvIjoiVXBkYXRlIHVzZXIgY29udGFjdCBpbmZvIiwicmVzb2x2ZS1vcGVuLXNoaXBtZW50cy1tb2RhbF9idXR0b25fY2FuY2VsIjoiQ2FuY2VsIHNoaXBtZW50cyBtb2RhbCIsInRyYWNrLXNoaXBtZW50LWF1dGhfbGlua190cmFjay1ieS1udW1iZXIiOiJUcmFjayBieSBudW1iZXIiLCJhZGRyZXNzLWJvb2tfYnV0dG9uX2NyZWF0ZS1tYWlsaW5nLWxpc3QiOiJDcmVhdGUgYSBtYWlsaW5nIGxpc3QiLCJwYW5kaW5nLWFjdGlvbnNfYnV0dG9uX3RvZ2dsZS1wZW5kaW5nLWFjdGlvbiI6IlRvZ2dsZSBwZW5kaW5nIGFjdGlvbiIsImxiLWV4dGVybmFsLW1vZHVsZXMtcmV2b2tlX2J1dHRvbl9yZXZva2UiOiJSZXZva2UgbW9kdWxlcyIsImNvbXBsZXRlLW5vdGlmaWNhdGlvbnMtYW5kLXNoYXJpbmdfYnV0dG9uX3ZpZXctYWxsIjoiVmlldyBhbGwgbm90aWZpY2F0aW9ucyIsIml0ZW0tYXR0cmlidXRlcy1wcm9kdWN0X2J1dHRvbl9zaG93IjoiU2hvdyBpdGVtIiwicGFwZXJsZXNzLWN1c3RvbXMtZGhsX2J1dHRvbl9lbmFibGUiOiJFbmFibGUiLCJwcmludC1hY3Rpb25zLW1vZGFsX2J1dHRvbl9kb3dubG9hZCI6IkRvd25sb2FkIGFjdGlvbnMiLCJwaWNrdXAtbm90aWZpY2F0aW9ucy1zZWN0aW9uX2J1dHRvbl9jYW5jZWwtbm90aWZpY2F0aW9uIjoiQ2FuY2VsIG5vdGlmaWNhdGlvbiIsInBhY2thZ2luZy1zZXR0aW5ncy1tb2RhbF9idXR0b25fY2xvc2UiOiJDbG9zZSBzZXR0aW5ncyBtb2RhbCIsIm1hbmFnZS1zaGlwbWVudC1kZXRhaWxzLXRvX2J1dHRvbl9zaG93LWRpYWxvZyI6IlNob3cgZGlhbG9nIiwic2hpcG1lbnQtZmlsdGVyZWQtdmlld19idXR0b25fYXBwcm92ZS1zaGlwbWVudCI6IkFwcHJvdmUgYSBzaGlwbWVudCIsIm1hbmFnZS1zaGlwbWVudF9idXR0b25fY29udGFjdC1teS1hZG1pbiI6IkNvbnRhY3QgbXkgYWRtaW4iLCJwcm9kdWN0LXVwbG9hZC1saXN0X2J1dHRvbl9hZGQtbGlzdCI6IkFkZCBsaXN0IiwibWFuYWdlLXNoaXBtZW50LWRldGFpbHMtZGhsX2J1dHRvbl9zaG93LWxpc3QiOiJTaG93IGxpc3QiLCJhZGRyZXNzLWRldGFpbHNfYnV0dG9uX25leHQiOiJOZXh0IHN0ZXAiLCJsb2NhdGlvbi1pdGVtX2J1dHRvbl9jaGFuZ2UtbGFuZ3VhZ2UiOiJDaGFuZ2UgbGFuZ3VhZ2UiLCJvbmxpbmUtYmlsbGluZy1lbnJvbGxtZW50X2J1dHRvbl91cGRhdGUtYWNjZXNzIjoiVXBkYXRlIGFjY2VzcyIsIm1hbmFnZS1zaGlwbWVudHMtY29tcG9uZW50X2J1dHRvbl9tYWtlLWZhdm9yaXRlIjoiTWFrZSBmYXZvdXJpdGUgc2hpcG1lbnQiLCJzY2hlZHVsZWQtcGlja3Vwcy1jdHJsX2J1dHRvbl9lZGl0IjoiRWRpdCBzY2hlZHVsZWQgcGlja3VwIiwic2VuZC1mb3ItYXBwcm92YWxfYnV0dG9uX2Rpc21pc3Mtc2hpcG1lbnQiOiJEaXNtaXNzIGFwcHJvdmFsIiwiY2FuY2VsLWFzc2lnbm1lbnQtY29tcG9uZW50X2J1dHRvbl9ubyI6Ik5vIGJ1dHRvbiIsImZpbGUtdXBsb2FkZXItd3JhcHBlcl9saW5rX2dlbmVyYXRlLXVybC1mb3IiOiJHZW5lcmF0ZSB1cmwgZm9yIiwibW9iaWxlLXBhY2thZ2UtbGlzdC1pdGVtX2J1dHRvbl9kZWNyZWFzZSI6IkRlY3JlYXNlIiwiY29ycG9yYXRlLWdyb3VwLWRldGFpbHMtc2VjdG9yX2J1dHRvbl9hZGQtdXNlcnMiOiJBZGQgdXNlcnMiLCJkYXNoYm9hcmQtdGFiLWNyZWF0ZS1mcm9tLXBhc3RfbGlua19pbnN0cnVjdGlvbnMiOiJJbnN0cnVjdGlvbnMiLCJpdGVtLWF0dHJfYnV0dG9uX2FkZC1hbm90aGVyLWl0ZW0iOiJBZGQgaXRlbSIsImFkZHJlc3MtYm9va19saW5rX2RlbGV0ZS1zZWxlY3RlZCI6IkRlbGV0ZSBzZWxlY3RlZCBpdGVtIiwiZWRpdC1hY2NvdW50LXBvcHVwX2J1dHRvbl9zYXZlLWFjY291bnQiOiJTYXZlIEFjY291bnQiLCJhZGRyZXNzLWRldGFpbHMtaW1wb3J0LW1vZGFsX2J1dHRvbl9jb250aW51ZS13aXRoLWNhcmQiOiJDb250aW51ZSB3aXRoIGNhcmQiLCJzaGlwbWVudC1ub3RpZmljYXRpb25zX2J1dHRvbl9hZGQtYW5vdGhlciI6IkFkZCBhbm90aGVyIiwiaG9yaXpvbnRhbC1jYXJvdXNlbF9idXR0b25fbmV4dC1zbGlkZSI6Ik5leHQgc2xpZGUiLCJzaGlwbWVudC1maWx0ZXJlZC1jdHJsX2J1dHRvbl9yZXZpZXciOiJSZXZpZXcgc2hpcG1lbnQgYnV0dG9uIiwic2F2ZS1mb3ItbGF0ZXJfYnV0dG9uX3JlamVjdC1zYXZlIjoiUmVqZWN0IHNhdmUiLCJlbmhhbmNlZC1pbnZvaWNlX2J1dHRvbl9jbGVhciI6IkNsZWFyIiwiZW5oYW5jZWQtaW52b2ljZS10eXBlX2J1dHRvbl9zZXQiOiJTZXQiLCJyZWZlcmVuY2Utb3B0aW9uc19idXR0b25fYWRkLXJlZmVyZW5jZSI6IkFkZCByZWZlcmVuY2UiLCJhZGRpdGlvbmFsLWRvY3VtZW50c19idXR0b25fY2xvc2UtZG9jdW1lbnQiOiJDbG9zZSBkb2N1bWVudCIsInNjaGVkdWxlLXBpY2t1cF9saW5rX3NjaGVkdWxlLXBpY2t1cCI6IlNjaGVkdWxlIGEgcGlja3VwIiwicHJvdmlldy1tb2RhbF9idXR0b25fc2VsZWN0IjoiU2VsZWN0IiwiY3VzdG9tcy1pbnZvaWNlLXRlbXBsYXRlLWZvcm0tYWN0aW9uc19idXR0b25fdXBkYXRlLWludm9pY2UtdGVtcGxhdGUiOiJVcGRhdGUgaW52b2ljZSIsInNhdmUtc2hpcG1lbnQtZGVmYXVsdHNfYnV0dG9uX2VkaXQtZGVmYXVsdHMiOiJFZGl0IGRlZmF1bHRzIiwiY29ycG9yYXRlLWV4dGVybmFsLXN5c3RlbS1jb25uZWN0X2J1dHRvbl9zdWJtaXQiOiJTdWJtaXQgY29ycG9yYXRlIiwic2NoZWR1bGUtcGlja3VwX2J1dHRvbl9jYW5jZWwtcGlja3VwIjoiQ2FuY2VsIFBpY2t1cCIsIm1hbmFnZS1zaGlwbWVudHMtY29tcG9uZW50X2J1dHRvbl9tYWtlLWhpZGRlbiI6Ik1ha2UgaGlkZGVuIHNoaXBtZW50IiwibWFuYWdlLXBpY2t1cHMtZmlsdGVyc19idXR0b25fYXBwbHktcXVlcnkiOiJBcHBseSBxdWVyeSIsInNoaXBtZW50LWZpbHRlcmVkLWN0cmxfbGlua19xdWljay1zZWFyY2giOiJRdWljayBzZWFyY2giLCJjb3JwLXJlZmVyZW5jZS1mb3JtYXQtbW9kaWZ5LW1vZGFsX2J1dHRvbl9tb2RpZnkiOiJNb2RpZnkiLCJwaWNrdXAtYWRkcmVzc19idXR0b25fZWRpdCI6IkVkaXQgcGlja3VwIGFkZHJlc3MiLCJld2YtZ3JpZC1hY3Rpb25fbGlua19leHBhbmQtYWN0aW9ucyI6IkV4cGFuZCBhY3Rpb25zIiwibXktcHJvZHVjdC1mb3JtX2J1dHRvbl91cGRhdGUtcHJvZHVjdCI6IlVwZGF0ZSBwcm9kdWN0IiwiY29udGFjdC1kZXRhaWxzLXNldHRpbmdzLXNlY3Rpb25fYnV0dG9uX3JlbW92ZSI6IlJlbW92ZSBub3RpZmljYXRpb24iLCJtYW5hZ2UtcGlja3Vwcy1maWx0ZXJzX2ZpZWxkLXBsYWNlaG9sZGVyX2NoZWNrYm94LW51bWJlciI6Ik51bWJlciIsInBhcGVybGVzcy1jdXN0b21zLWRobF9idXR0b25fcGF1c2UiOiJQYXVzZSIsImVuaGFuY2VkLWludm9pY2VfYnV0dG9uX3ByZXZpZXciOiJQcmV2aWV3Iiwic2hpcG1lbnQtc2hpcHBlcl9saW5rX3R5cGUiOiJUeXBlIHNoaXBwZXIiLCJjb3Jwb3JhdGUtZGF0ZS1waWNrZXJfYnV0dG9uX3RvZ2dsZSI6IlRvZ2dsZSBwaWNrZXIiLCJleHBvcnQtY29udGFjdHNfbGlua19kb3dubG9hZCI6IkRvd25sb2FkIGNvbnRhY3RzIiwibWFpbGluZy1saXN0LWRldGFpbHNfYnV0dG9uX2FjdGlvbnMiOiJBY3Rpb25zIiwidHJhY2stYnktcmVmZXJlbmNlX2J1dHRvbl9zdWJtaXQiOiJTdWJtaXQgdHJhY2siLCJkaGwtbWFuYWdlLXNoaXBtZW50c19idXR0b25faGFuZGxlIjoiSGFuZGxlIiwibm90aWZpY2F0aW9uLXNoYXJpbmctdGVtcGxhdGVfYnV0dG9uX3NoYXJlIjoiU2hhcmUgbm90aWZpY2F0aW9uIiwic2F2ZS1mb3ItbGF0ZXJfYnV0dG9uX2NvbmZpcm0tc2F2ZSI6IkNvbmZpcm0gc2F2ZSIsInNoaXBtZW50LXNldHRpbmdzLWRobF9idXR0b25fcHJpbnRlci1zZXR0aW5ncyI6IlNoaXBtZW50IHByaW50ZXIgc2V0dGluZ3MiLCJ3Y2MtcHJvZHVjdF9idXR0b25fY2xpY2siOiJDbGljayBvbiBwcm9kdWN0IiwiZ3JhbnQtZm9ybV9idXR0b25fZ3JhbnQiOiJHcmFudCBBdXRob3JpemF0aW9uIiwicmVtb3ZlLXNpbmdsZS1mYXZvcml0ZS1jb25maXJtYXRpb25fYnV0dG9uX3Byb2NlZWQiOiJQcm9jZWVkIiwicHJpbnRlci1zZXR0aW5nc19idXR0b25fcmVzZXQtdmFsdWVzIjoiUmVzZXQgdmFsdWVzIiwiZGFzaGJvYXJkLXF1aWNrLWxpbmtzX2xpbmtfZWRpdC1xdWljay1saW5rcyI6IkVkaXQgcXVpY2sgbGlua3MiLCJtb2JpbGUtcGFja2FnZS10eXBlLXNlbGVjdG9yX2J1dHRvbl9zZWxlY3QiOiJTZXJ2aWNlIHBvaW50IiwibWFuYWdlLXBpY2t1cHMtZmlsdGVycy1zZWN0aW9uX2J1dHRvbl9yZXNldC1hY2NvdW50IjoiUmVzZXQgYWNjb3VudCIsImRobC10b3AtbmF2LW1lbnVfbGlua19jcmVhdGUtZnJvbS1mYXZvcml0ZSI6IkNyZWF0ZSBzaGlwbWVudCBmcm9tIGZhdm9yaXRlIiwiZGhsLXN1YnVyYi1maWVsZF9saW5rX2ZpbGwiOiJGaWxsIHN1YnVyYiIsInByb21vLWNvZGVfYnV0dG9uX2FwcGx5LXByb21vLWNvZGUiOiJBcHBseSBwcm9tbyBjb2RlIiwibWFuYWdlLXNoaXBtZW50X2xpbmtfdGFiIjoiVGFiIiwidHJhbnNmZXItbWVtYmVycy1tb2RhbF9idXR0b25fY2FuY2VsIjoiQ2FuY2VsIHRyYW5zZmVyaW5nIiwibG9jYXRpb24tc2VhcmNoX2J1dHRvbl9zZWxlY3QtY291bnRyeSI6IlJlbW92ZSByZWZlcmVuY2UiLCJhY2NvdW50LW1hbmFnZW1lbnQtc2VjdGlvbl9idXR0b25fZWRpdC1hY2NvdW50IjoiRWRpdCBhY2NvdW50IiwiYWRkcmVzcy1jb250YWN0X2xpbmtfcmVtb3ZlLWZvcm0tZGF0YS1jaGFuZ2VkLW5vdGlmaWNhdGlvbiI6IlJlbW92ZSBmb3JtIGRhdGUiLCJkYXNoYm9hcmQtc2hpcG1lbnRzLXRhYnNfbGlua19zZWxlY3QiOiJTZWxlY3QgdGFiIiwiZGhsLXRvcC1uYXYtbWVudV9saW5rX2FkZHJlc3MtYm9vayI6IkFkZHJlc3MgYm9vayBwYWdlIiwidXNlci1yb2xlcy1tb2RhbF9idXR0b25fYXBwbHkiOiJBcHBseSB1c2VyIHJvbGVzIiwiYWRkcmVzcy1maWVsZF9pbmZvLXRleHRfaG91c2UtdmFsaWRhdGlvbiI6IkhvdXNlIHZhbGlkYXRpb24iLCJkaGwtdG9wLW5hdi1tZW51X2xpbmtfZGVjbGFyYXRpb25zIjoiRGVjbGFyYXRpb25zIiwiY29ycC1maWxlLXVwbG9hZGVyX2xpbmtfZ2V0LWxpbmsiOiJHZXQgbGluayIsInNjaGVkdWxlLXBpY2t1cF9saW5rX25hdmlnYXRlLXRvLW1hbmFnZS1waWNrdXBzIjoiR28gdG8gbWFuYWdlIHBpY2t1cHMiLCJncmFudC1mb3JtX2J1dHRvbl9jaGFuZ2UtYWNjb3VudCI6IkNoYW5nZSBhY2NvdW50Iiwibm90aWZpY2F0aW9uLXNoYXJpbmctaW5mb19saW5rX2FkZHJlc3MtYm9vayI6IkFkZHJlc3MgYm9vayBub3RpZmljYXRpb24iLCJvbmxpbmUtYmlsbGluZy1lbnJvbGxtZW50X2J1dHRvbl9jYW5jZWwtZW5yb2xsbWVudCI6IkNhbmNlbCBlbnJvbGxtZW50IiwibWFrZS1oaWRkZW5fYnV0dG9uX21ha2UtaGlkZGVuIjoiTWFrZSBoaWRkZW4iLCJsb2NhdG9yLW9wdGlvbnMtdG9nZ2xlX2J1dHRvbl90b2dnbGUiOiJUb2dnbGUgbG9jYXRvciIsIm1hbmFnZS1jb2xsZWN0aW9uX2J1dHRvbl9yZW1vdmUtY29udGFjdCI6IlJlbW92ZSBjb250YWN0Iiwic2hpcG1lbnQtaW1wb3J0LW1hbmFnZS1jb250YWluZXJfYnV0dG9uX3NhdmUiOiJTYXZlIHNoaXBtZW50IGltcG9ydCIsInVzZXItcHJvZmlsZS10YWJzX2J1dHRvbl9zd2l0Y2gtdG8tY29ycG9yYXRlIjoiU3dpdGNoIHRvIGNvcnBvcmF0ZSIsInBhbmRpbmctYWN0aW9uc19idXR0b25fZ2V0LXRvZGF5LXNoaXBtZW50cyI6IkdldCB0b2RheSBzaGlwbWVudHMiLCJyZXR1cm4tbGFiZWwtYXBwcm92ZV9idXR0b25fYXBwcm92ZS1zaGlwbWVudCI6IkFwcHJvdmUgc2hpcG1lbnQgcmV0dXJuIiwicmVnaXN0cmF0aW9uLW1vZGFsX2xpbmtfcmVnaXN0ZXItbm93IjoiUmVnaXN0ZXIgbm93IiwiZ3JhbnQtZm9ybV9idXR0b25fY2FuY2VsIjoiQ2FuY2VsIGdyYW50IGZvcm0iLCJkYXNoYm9hcmQtY2FyZC10cmFuc2l0X2xpbmtfdHJhY2siOiJUcmFjayBkYXNoYm9hcmQiLCJwcm9maWxlLWNyZWRpdC1jYXJkc19idXR0b25fY2FuY2VsIjoiQ2FuY2VsIHByb2ZpbGUiLCJhZGRyZXNzLWRldGFpbHMtZnJvbS10b19idXR0b25fb3Blbi1hZGRyZXNzLWJvb2siOiJPcGVuIHRoZSBhZGRyZXNzIGJvb2siLCJ0cmFja2luZy1yZXN1bHQtc3VtbWFyeV9saW5rX3ZhbHVlIjoiVmFsdWUiLCJ0eXBlYWhlYWQtaXRlbS1zdHlsZXNfbGlua19ib29rLXNlYXJjaCI6IkJvb2sgc2VhcmNoIiwiY3JlYXRlLW1haWxpbmctbGlzdF9idXR0b25fY2FuY2VsLW1haWxpbmctbGlzdCI6IkNhbmNlbCBjcmVhdGlvbiIsInJld2FyZC1jYXJkX2J1dHRvbl9zYXZlLXJld2FyZCI6IlNhdmUgcmV3YXJkIiwiYWRkcmVzcy1jaXR5LWZpZWxkX2xpbmtfdHlwZSI6IkFkZHJlc3MgdHlwZSIsImVkaXQtYWNjb3VudF9idXR0b25fc2F2ZS1hY2NvdW50IjoiU2F2ZSBhY2NvdW50IGVkaXRpbmciLCJzaGlwbWVudC1maWx0ZXJlZC12aWV3X2xpbmtfdmlldyI6IlZpZXcgc2hpcG1lbnQiLCJjcmVhdGUtbWFpbGluZy1saXN0X2J1dHRvbl9jcmVhdGUiOiJDcmVhdGUgbWFpbGluZyBsaXN0IiwidG9vbGJhci1zZWN0aW9uX2J1dHRvbl9yZWFzc2lnbi1zaGlwbWVudCI6IlJlYXNzaWduIHNoaXBtZW50IiwibWFuYWdlLXBpY2t1cHMtZmlsdGVyc19idXR0b25fc2VhcmNoIjoiU2VhcmNoIGZpbHRlciIsImZpbHRlci1zZWxlY3Rpb25fYnV0dG9uX3JlbW92ZS1yZWZpbmVtZW50cyI6IlJlbW92ZSByZWZpbmVtZW50cyIsImNvcnBvcmF0ZS1ncm91cF9idXR0b25faGFuZGxlIjoiSGFuZGxlIiwibXktZGhsLWFjY291bnRzX2J1dHRvbl9idWxrLWRlbGV0ZS1lbGVtZW50cyI6IkJ1bGsgZGVsZXRlIiwicGFzc3dvcmQtZXhwaXJlZC1mb3JtX2J1dHRvbl9jb250aW51ZS10by1jaGFuZ2UtcGFzc3dvcmQtZm9ybSI6IkNvbnRpbnVlIHRvIGNoYW5nZSBwYXNzd29yZCBmb3JtIiwiY29udGFjdC1kZXRhaWxzX2J1dHRvbl9jaGFuZ2UtY291bnRyeSI6IkNvbnRhY3QgZGV0YWlscyIsIm1haWxpbmctbGlzdHNfYnV0dG9uX2FjdGlvbnMiOiJBY3Rpb25zIG1haWxpbmcgbGlzdCIsInNoaXBtZW50LXR5cGUtaGVscGVyX2J1dHRvbl9jb250aW51ZS1zaGlwcGluZyI6IkNvbnRpbnVlIHNoaXBwaW5nIiwidXNlci1wcm9maWxlLXRhYnNfbGlua19tYW5hZ2UtbXktZGhsIjoiTWFuYWdlIHVzZXIgbXkgZGhsIiwic2hpcG1lbnQtcm93X2J1dHRvbl9jb21wbGV0ZS1zaGlwbWVudCI6IkNvbXBsZXRlIHNoaXBtZW50IHJvdyIsImRhc2hib2FyZC1teS1zaGlwbWVudHNfbGlua19saW5rIjoiQSBsaW5rIiwicGFuZGluZy1hY3Rpb25zX2J1dHRvbl9nZXQtcGVuZGluZy1hcHByb3ZhbC1zaGlwbWVudHMiOiJHZXQgcGVuZGluZyBhcHByb3ZhbCBzaGlwbWVudHMiLCJkb2N1bWVudHMtZm9yLWFwcHJvdmFsX2J1dHRvbl9nZW5lcmF0ZS1kb3dubG9hZC11cmwtZm9yIjoiR2VuZXJhdGUgZG93bmxvYWQgdXJsIGZvciIsImFkZHJlc3MtYm9vay1pbXBvcnQtbWFuYWdlX2J1dHRvbl9zYXZlLXNjaGVtZSI6IlNhdmUgc2NoZW1lIiwic2hpcG1lbnQtaW1wb3J0LWZpbGUtdXBsb2FkZXJfYnV0dG9uX2NhbmNlbCI6IkNhbmNlbCBzaGlwbWVudCBmaWxlIHVwbG9hZCIsInJld2FyZC1jYXJkX2J1dHRvbl9hcHBseS1yZXdhcmQiOiJBcHBseSByZXdhcmQiLCJyZXBvcnRzLXRvb2xiYXJfYnV0dG9uX2RlbGV0ZSI6IkRlbGV0ZSByZXBvcnRzIiwiYnJhemlsLW5vdGEtZmlzY2FsLWluZm8tcm93LWluZm9fYnV0dG9uX3JlbW92ZS1zdWJjYXRlZ29yeSI6IlJlbW92ZSBzdWJjYXRlZ29yeSIsImVtYWlsLWhlYWRlcl9idXR0b25fbGluayI6IkxpbmsgZW1haWwiLCJzdGF0dXMtbm90aWZpY2F0aW9ucy1jb21wb25lbnRfYnV0dG9uX3NhdmUtc3RhdHVzIjoiU2F2ZSBzdGF0dXMiLCJkaGwtdG9wLW5hdi1hdXRoX2J1dHRvbl9ob21lIjoiSG9tZSBsaW5rIiwiYWRkaXRpb25hbC1kb2N1bWVudHNfYnV0dG9uX3Nob3ctYWRkaXRpb25hbC1kb2N1bWVudHMiOiJTaG93IGFkZGl0aW9uYWwgZG9jdW1lbnRzIiwiYWN0aW9uLWNvbmZpcm1hdGlvbl9idXR0b25fZGlzYWJsZS11c2VycyI6IkRpc2FibGUgVXNlcnMiLCJtb2JpbGUtcGFja2FnaW5nX2J1dHRvbl9hZGQtcGFja2FnZSI6IkFkZCBwYWNrYWdlIiwiY29ycC1saXN0LWRhdGEtc2VhcmNoX2J1dHRvbl9ydW4tc2VhcmNoIjoiUnVuIHNlYXJjaCIsInByb2ZpbGUtcXVpY2stbGlua3NfYnV0dG9uX2RlbGV0ZS1zZWxlY3RlZCI6IkRlbGV0ZSBzZWxlY3RlZCBlbGVtZW50cyIsIm1vYmlsZS1zeW5vcHNpc19idXR0b25fZ28tdG8tdmFsdWUiOiJHbyB0byB2YWx1ZSIsIm1haWxpbmctbGlzdC1kZXRhaWxzX2J1dHRvbl9jYW5jZWwiOiJDYW5jZWwgYSBtYWlsaW5nIGxpc3QiLCJjb3Jwb3JhdGUtZ3JvdXAtZGV0YWlsc19idXR0b25fYmFjay10by1saXN0IjoiQmFjayB0byBncm91cCBsaXN0IiwicmV0dXJuLWxhYmVsLWNyZWF0ZV9idXR0b25fY2FuY2VsIjoiQ2FuY2VsIHJldHVybiIsInRvb2xiYXItc2VjdGlvbl9idXR0b25fZGlzcGxheS1hc3NpZ24tc2hpcG1lbnQiOiJEaXNwbGF5IGFzc2lnbiBzaGlwbWVudCIsIm15LWRobC1hY2NvdW50cy1kZWZhdWx0c19idXR0b25fc2F2ZS1kZWZhdWx0cyI6IlNhdmUgZGVmYXVsdCIsInNjaGVkdWxlLXBpY2t1cC1lbGVtZW50X2xpbmtfc2NoZWR1bGUtcGlja3VwIjoiU2NoZWR1bGUgdGhlIHBpY2t1cCIsImFkZHJlc3MtcG9zdGFsLWNvZGUtZmllbGRfbGlua190eXBlIjoiQWRkcmVzcyBwb3N0YWwgdHlwZSIsImFkZHJlc3MtY29udGFjdF9idXR0b25fY2xlYXItY29udGFjdCI6IkNsZWFyIGNvbnRhY3QiLCJ0eXBlYWhlYWQtaXRlbV9saW5rX2FkZHJlc3MtY291bnRyeSI6IkFkZHJlc3MgY291bnRyeSIsInNoaXBtZW50LWNvbmZpcm1hdGlvbi1kaWFsb2dfYnV0dG9uX29rIjoiT2sgY29uZmlybWF0aW9uIiwicmVzb2x2ZS1jb25mbGljdC1tb2RhbF9idXR0b25fY2FuY2VsIjoiQ2FuY2VsIGNvbmZsaWN0IiwicHJvZmlsZS1yZXdhcmRzLW1vZGFsX2J1dHRvbl91cGRhdGUtcmV3YXJkIjoiVXBkYXRlIHJld2FyZCIsImdyYW50LWZvcm1fYnV0dG9uX2Nsb3NlLWR1dGllcyI6IkNsb3NlIGR1dGllcyIsImFjY291bnQtbnVtYmVyc19idXR0b25fcmVtb3ZlLWFjY291bnQiOiJSZW1vdmUgYWNjb3VudCIsImJvZHktZm9vdGVyLW1vZGFsX2xpbmtfY2hhdCI6IkNoYXQiLCJzaGlwbWVudC1zZXR0aW5ncy1kaGxfYnV0dG9uX3BhY2thZ2luZy1zZXR0aW5ncyI6IlNoaXBtZW50IHBhY2thZ2luZyBzZXR0aW5ncyIsIm1haWxpbmctbGlzdHMtcmVzdHJpY3Rpb25zX2J1dHRvbl9pbml0LW1haWxpbmctbGlzdCI6IkluaXQgbWFpbGluZyBsaXN0IiwiYWRkcmVzcy1ib29rX2J1dHRvbl9jYW5jZWwiOiJDYW5jZWwgYWRkcmVzcyIsImNvcnAtZmlsZS11cGxvYWRlcl9idXR0b25fY2FuY2VsIjoiQ2FuY2VsIHVwbG9hZGVyIiwibW9kYWwtY29uZmlybS1hZGRfYnV0dG9uX2NhbmNlbCI6IkNhbmNlbCBjb25maXJtYXRpb24iLCJtYW5hZ2Utc2hpcG1lbnRzLWNvbXBvbmVudF9idXR0b25fcmV2aWV3IjoiUmV2aWV3IiwiZXdmLWdyaWQtYWN0aW9uX2xpbmtfY29sbGFwc2UtYWN0aW9ucyI6IkNvbGxhcHNlIGFjdGlvbnMiLCJncmFudC1mb3JtLWVsZW1lbnRfYnV0dG9uX2NhbmNlbCI6IkNhbmNlbCBlZGl0aW5nIiwiZ2V0LWFkZHJlc3NfYnV0dG9uX3VzZS1mcm9tLWFkZHJlc3MiOiJVc2UgIkZyb20gQWRkcmVzcyIiLCJjb3VudHJ5LXdhcm5pbmdzX2J1dHRvbl9oaWRlLXdhcm5pbmdzIjoiSGlkZSB3YXJuaW5ncyIsInJlamVjdC1zaGlwbWVudC1hcHByb3ZhbF9idXR0b25fY2FuY2VsIjoiQ2FuY2VsIGFwcHJvdmFsIiwidG9vbGJhci1zZWN0aW9uX2J1dHRvbl9zYXZlLWZvci1sYXRlciI6IlNhdmUgZm9yIGxhdGVyIiwiZGhsLXRvcC1uYXYtbWVudV9saW5rX2RobC1hY2NvdW50cyI6IkRobCBhY2NvdW50cyIsImRobC10b3AtbmF2LW1lbnVfbGlua19hbGwtc2hpcG1lbnRzIjoiQWxsIHNoaXBtZW50cyIsImNyZWF0ZS1zaGlwbWVudF9idXR0b25fbmV4dCI6Ik5leHQgc3RhZ2UiLCJzcGVlZHVwLWN1c3RvbV9idXR0b25fY3VzdG9tLWNsZWFyZW5jZS1lbnJvbGwiOiJDdXN0b20gY2xlYXJlbmNlIGVucm9sbCIsInNldHRpbmdzLXNlY3Rpb25fbGlua19lbnRlci1lZGl0LW1vZGUiOiJFbnRlciBlZGl0IG1vZGUgc2V0dGluZ3MiLCJtYW5hZ2Utc2hpcG1lbnQtZGV0YWlscy1kaGxfYnV0dG9uX3Nob3ctc2hpcG1lbnQiOiJTaG93IHNoaXBtZW50IiwiYnJhemlsLWltcG9ydC1tb2RhbF9idXR0b25fY29udGludWUiOiJDb250aW51ZSBidG4iLCJtZXNzYWdlLXRvLWFzc2lnbmVlX2J1dHRvbl9jYW5jZWwtdXBsb2FkZWQtZmlsZXMiOiJDYW5jZWwgdXBsb2FkZWQgZmlsZXMiLCJpdGFsaWFuLXBvcnRhbF9idXR0b25fdGFyaWZmIjoiVGFyaWZmIiwibW9iaWxlLW5hdmlnYXRpb25fbGlua19vcGVuLWdyb3VwLXN3aXRjaGVyIjoiT3BlbiBncm91cCBzd2l0Y2hlciIsImNvbmZpcm0tc3dpdGNoX2J1dHRvbl9kby1ub3QtY2FuY2VsIjoiRG8gbm90IGNhbmNlbCIsIm1hbmFnZS1yZWZlcmVuY2UtY29sbGVjdGlvbl9idXR0b25fZGVsZXRlIjoiRGVsZXRlIiwiYWRkcmVzcy1zd2l0Y2hfYnV0dG9uX3N3aXRjaC1saW5rIjoiU3dpdGNoIGxpbmsiLCJ1c2Vycy1maWx0ZXJfYnV0dG9uX3NlbGVjdC1tb3JlLWZpbHRlciI6IlNlbGVjdCBtb3JlIGZpbHRlciIsImVzZWN1cmUtaXRlbV9idXR0b25faXRlbSI6Ikl0ZW0iLCJyZXBvcnRpbmctZGV0YWlscy1lZGl0LWZpZWxkcy1wb3B1cF9idXR0b25fY2FuY2VsIjoiQ2FuY2VsIGRldGFpbHMgZWRpdCIsImVuaGFuY2VkLWludm9pY2UtdHlwZV9idXR0b25fdmlldy1hbGwiOiJWaWV3IGFsbCBpbnZvaWNlcyIsIm1lc3NhZ2UtdG8tYXNzaWduZWVfYnV0dG9uX2VkaXQtbWVzc2FnZS10ZXh0IjoiRWRpdCBtZXNzYWdlIHRleHQiLCJhZGRyZXNzLWRldGFpbHMtY29udGFjdF9idXR0b25fbm8iOiJObyBidG4iLCJjb21wbGV0ZS1zaGlwbWVudF9idXR0b25fbmF2aWdhdGUtdG8tcmV0dXJuLWxhYmVsIjoiTmF2aWdhdGUgdG8gcmV0dXJuIGxhYmVsIiwiY29ycG9yYXRlLWdyb3VwLWRldGFpbHNfYnV0dG9uX2NhbmNlbCI6IkNhbmNlbCBidXR0b24iLCJkaGwtcmV0dXJuLWxhYmVsX2J1dHRvbl9jbG9zZSI6IkNsb3NlIGxhYmVsIiwic2V0dGluZ3MtbW9kYWxfYnV0dG9uX2Rpc21pc3MiOiJEaXNtaXNzIHNldHRpbmdzIiwiZGFzaGJvYXJkLW15LXNoaXBtZW50c19saW5rX3ZpZXctYWxsLXNoaXBtZW50cyI6IlZpZXcgYWxsIHNoaXBtZW50cyIsImNvbmZpcm0tc3dpdGNoX2J1dHRvbl95ZXMtcHJvY2VlZCI6IlllcyBwcm9jZWVkIiwidHlwZWFoZWFkLWl0ZW1fbGlua19nZXQtc3R5bGVzIjoiR2V0IHN0eWxlcyIsImNvdW50cnktd2FybmluZ3NfYnV0dG9uX2hpZGUtd2FybmluZyI6IkhpZGUgd2FybmluZyIsIml0ZW0tYXR0cmlidXRlcy1zYXZlLW5ldy1kaWFsb2dfYnV0dG9uX3NhdmUiOiJTYXZlIGl0ZW0iLCJjb21wbGV0ZS1zaGlwbWVudF9idXR0b25fb3Blbi1yZXBvcnRpbmctZGlhbG9nIjoiT3BlbiByZXBvcnRpbmcgZGlhbG9nIiwibG9jYXRvci1wb3B1cC1lbGVtZW50X2J1dHRvbl9vcGVuIjoiT3BlbiBwb3B1cCIsImRobC1yZXR1cm4tbGFiZWwtYnJhemlsX2J1dHRvbl9jbG9zZSI6IkNsb3NlIGJyYXppbCBsYWJlbCIsImV4dGVybmFsLWFjY2Vzc19idXR0b25fYXNzaWduZWQtc2hpcG1lbnQtYXMtZ3Vlc3QiOiJTaGlwIGFzIGEgZ3Vlc3QiLCJld2YtbW9kYWxfYnV0dG9uX2Nsb3NlIjoiQ2xvc2UgZXdmIG1vZGFsIiwiaXRhbGlhbi1wb3J0YWxfYnV0dG9uX3VuZGVsIjoiVW5kZWwiLCJjaGF0LWludml0ZS1sYXVuY2hlcl9idXR0b25fbGF1bmNoLWNoYXQiOiJMYXVuY2ggY2hhdCBpbnZpdGUiLCJtYWlsaW5nLWxpc3QtZGV0YWlsc19idXR0b25fZWRpdC1tYWlsaW5nLWxpc3QiOiJFZGl0IG1haWxpbmcgbGlzdCIsImdldC1hZGRyZXNzX2J1dHRvbl91c2UtdG8tYWRkcmVzcyI6IlVzZSAiVG8gQWRkcmVzcyIiLCJtb2JpbGUtc2hpcG1lbnQtbGlzdF9idXR0b25fc2VsZWN0IjoiU2VsZWN0IiwibW9iaWxlLXNoaXBtZW50LWFwcHJvdmFsX2J1dHRvbl9hY2NlcHQtc2hpcG1lbnQiOiJBY2NlcHQgc2hpcG1lbnQiLCJtYW5hZ2UtcGlja3Vwcy1jb25maXJtYXRpb24tZWxlbWVudF9saW5rX3JlZ2lzdGVyLWZvci1teWRobCI6IlJlZ2lzdGVyIGZvciBteSBkaGwiLCJteS1kaGwtYWNjb3VudHMtZGVmYXVsdHNfYnV0dG9uX2RlY2xpbmUtZGVmYXVsdHMiOiJDYW5jZWwgZGVmYXVsdCIsImRpZ2l0YWwtY3VzdG9tcy1pbnZvaWNlLWxheW91dF9idXR0b25fZ2VuZXJhdGUtbGluayI6IkdlbmVyYXRlIGxpbmsiLCJkYXNoYm9hcmQtZnJvbS10b19idXR0b25fc3dpdGNoLWZyb20tdG8iOiJTd2l0Y2ggdG8gY29ycG9yYXRlIGl0ZW0ifSwic2hpcG1lbnQtcGFja2FnZSI6eyJzZWxlY3QtcGFja2FnaW5nX2JhY2tlbmQtZXJyb3Jfc2VsZWN0ZWQtcHJvZHVjdC1kb2VzLW5vdC1oYXMtcHJpY2UiOiJGw7xyIElocmUgQXVzd2FobCBzaW5kIGtlaW5lIExpZWZlcm9wdGlvbmVuIG3DtmdsaWNoLiIsInNlbGVjdC1wYWNrYWdpbmdfYmFja2VuZC1lcnJvcl9zZWxlY3RlZC1wcm9kdWN0LWRvZXMtbm90LXByb3ZpZGVkIjoiRsO8ciBJaHJlIEF1c3dhaGwgc2luZCBrZWluZSBMaWVmZXJvcHRpb25lbiBtw7ZnbGljaC4iLCJzZWxlY3QtcGFja2FnaW5nX2JhY2tlbmQtZXJyb3Jfc2VsZWN0ZWQtcHJvZHVjdC1wYXJhbWV0ZXJzLWFyZS1ub3QtdmFsaWQiOiJGw7xyIElocmUgQXVzd2FobCBzaW5kIGtlaW5lIExpZWZlcm9wdGlvbmVuIG3DtmdsaWNoLiIsInNlbGVjdC1wYWNrYWdpbmdfYmFja2VuZC1lcnJvcl9zZWxlY3RlZC1wcm9kdWN0LWRvZXMtbm90LWFsbG93ZWQtZm9yLWR0cC1zaGlwbWVudCI6IkbDvHIgSWhyZSBBdXN3YWhsIHNpbmQga2VpbmUgTGllZmVyb3B0aW9uZW4gbcO2Z2xpY2guIEJpdHRlIMO8YmVycHLDvGZlbiBTaWUgSWhyZSBBdXN3YWhsIHVuZCBWZXJzYW5kZGF0ZW4gdW5kIHZlcnN1Y2hlbiBTaWUgZXMgZXJuZXV0LiJ9LCJjci1waWNrdXAiOnsic2NoZWR1bGUtYS1waWNrdXBfc3ViLWhlYWRlciI6IiIsImdyb3VwLW5hbWVfaGVhZGVyIjoiQWJob2x1bmcgZHVyY2ggS3VyaWVyIiwic2NoZWR1bGUtYS1waWNrdXBfbGFiZWxfY3IwMDUzIjoiS2FubiBBYmhvbHVuZ2VuIHRlcm1pbmllcmVuIn0sInNoaXBtZW50X3BhcGVyd29yay1wcmludF9zZXR0aW5ncy1wcmludGVyX3R5cGVzX2xpc3QiOnsiZXBsMi10eXBlIjoiRXJ3ZWl0ZXJ0ZXIgRHJ1Y2sgKENpdGl6ZW4gRHJ1Y2tlcikiLCJwZGYtdHlwZSI6IlBERiIsInpwbDItdHlwZSI6IkVyd2VpdGVydGVyIERydWNrIChDaXRpemVuIHVuZCBaZWJyYSkiLCJ0aGVybWFsX3BkZi10eXBlIjoiU3RhbmRhcmQgVmVyc2FuZGxhYmVsZHJ1Y2sgKFplYnJhIERydWNrZXIpIn0sIkRBU0hCT0FSRCI6eyJEQVNIQk9BUkRfTU9EQUxfSEVBREVSX0VNQUlMX1ZFUklGSUVEIjoiIiwiUkVRVUlSSU5HX0FDVElPTl9TVUJfSEVBREVSX1NISVBNRU5UU19SRVFVSVJJTkdfQUNUSU9OIjoiTm9jaCBuaWNodCBhYmdlc2NobG9zc2VuZSBTZW5kdW5nZW4iLCJXRUxDT01FX01BSU5fVEFCX05BTUVfR0VUX1JBVEVfQU5EX1FVT1RFIjoiVGFyaWZlIHVuZCBMYXVmemVpdCBhYmZyYWdlbiIsIldFTENPTUVfTUFJTl9CVVRUT05fRU5HQUdFTUVOVF9BRERfREhMX0FDQ09VTlQiOiJIaW56dWbDvGdlbiAgREhMIEFjY291bnQgSmV0enQiLCJJTl9UUkFOU0lUX1JFQURZX1RPX1NISVBfTEFCRUxfQ09VTlRfT0ZfU0hPV0lOR19JVEVNUyI6IkFuemVpZ2VuIHtwYWdlU2l6ZX0gdm9uIHt0b3RhbEl0ZW1zfSIsIldFTENPTUVfTUFJTl9TVUJfSEVBREVSX0VOR0FHRU1FTlRfR1JBTlRfQVVUSE9SSVpBVElPTiI6IldvbGxlbiBTaWUsIGRhc3MgYW5kZXJlIElocmUgS3VuZGVubnVtbWVyIHp1bSBFcnN0ZWxsZW4gdm9uIFNlbmR1bmdlbiB2ZXJ3ZW5kZW4ga8O2bm5lbj8gIE15REhMKyBlcm3DtmdsaWNodCBlcyBJaG5lbiBBdXRvcmlzaWVydW5nZW4gZsO8ciBkaWUgTnV0enVuZyBJaHJlIEt1bmRlbm51bW1lciB6dSB2ZXJnZWJlbiB1bmQgdmllbGUgRWluc3RlbGx1bmdlbiB2b3J6dW5laG1lbiwgd2llIHp1bSBCZWlzcGllbCBiZWkgU2VuZHVuZ3NhcnRlbiB1bmQgQWRyZXNzZW4gb2RlciBzb2dhciwgb2IgUHJlaXNlIGFuZ2V6ZWlndCBvZGVyIHZlcnN0ZWNrdCB3ZXJkZW4gc29sbGVuLlwiIiwiV0VMQ09NRV9NQUlOX1RBQl9OQU1FX0dFVF9RVU9URSI6IlByZWlzIGFuZnJhZ2VuIiwiTVlfU0hJUE1FTlRTX1RBQl9OQU1FX0FTU0lHTkVEX1RPX01FIjoiQmVhcmJlaXR1bmcgZHVyY2ggbWljaCIsIldFTENPTUVfTUFJTl9TVUJfSEVBREVSX0VOR0FHRU1FTlRfQUREX0RITF9BQ0NPVU5UIjoiSGFiZW4gU2llIGVpbmUgREhMIEt1bmRlbnVtbWVyLCBkaWUgU2llIGbDvHIgZGllIEVyc3RlbGx1bmcgdm9uIFNlbmR1bmdlbiB2ZXJ3ZW5kZW4gd29sbGVuPyBGw7xnZW4gU2llIGRpZXNlIG51biBoaW56dSwgdW0gU2llIGJlaW0gbsOkY2hzdGVuIFZlcnNhbmQgbnV0emVuIHp1IGvDtm5uZW4hIiwiV0VMQ09NRV9NQUlOX0JVVFRPTl9FTkdBR0VNRU5UX1BBU1RfU0hJUE1FTlRTIjoiTnV0emVuIFNpZSBkaWUgQW5nYWJlbiBhdXMgZWluZXIgdm9yaGVyaWdlbiBTZW5kdW5nIHVtIGVpbmUgbmV1ZSBTZW5kdW5nIHp1IGVyc3RlbGxlbi4iLCJEQVNIQk9BUkRfTU9EQUxfTVNHX0FERFJFU1NfTk9UX1NFTEVDVEVEIjoiTcO2Y2h0ZW4gU2llIGRpZXNlIEFkcmVzc2UgdmVyd2VuZGVuPyIsIklOX1RSQU5TSVRfUkVBRFlfVE9fU0hJUF9JTkZPX1RFWFRfQ01TX0NPTlRFTlQiOiJEZXJ6ZWl0IGtlaW5lIFNlbmR1bmdlbiB2b3JoYW5kZW4iLCJXRUxDT01FX01BSU5fQlVUVE9OX0VOR0FHRU1FTlRfT05FX1BBR0VfU0hJUE1FTlQiOiJNZWluZW4gU2VuZHVuZ3Nwcm96ZXNzIMOkbmRlcm4gLSBBbGxlIFNlbmR1bmdzc2Nocml0dGUgYXVmIGVpbmVtIEJpbGRzY2hpcm0gYW56ZWlnZW4uIiwiV0VMQ09NRV9NQUlOX1RBQl9OQU1FX0NSRUFURV9ORVdfU0hJUE1FTlQiOiJOZXVlIFNlbmR1bmciLCJEQVNIQk9BUkRfTU9EQUxfQlVUVE9OX0NBTkNFTCI6Ik5laW4iLCJNWV9TSElQTUVOVFNfVEFCX05BTUVfQVNTSUdORURfQllfTUUiOiJWb24gbWlyIHp1Z2V3aWVzZW4iLCJXRUxDT01FX01BSU5fVEFCX05BTUVfQ1JFQVRFX0ZST01fUEFTVCI6IkF1cyBIaXN0b3JpZSIsIkRBU0hCT0FSRF9NT0RBTF9CVVRUT05fUFJPQ0VFRCI6IkphIiwiUkVRVUlSSU5HX0FDVElPTl9MSU5LX1ZJRVdfQUxMX1VOU1VCTUlUVEVEX1NISVBNRU5UUyI6IsOcYmVyc2ljaHQgYWxsZXIgbmljaHQgYWJnZXNjaGxvc3NlbmVuIFNlbmR1bmdlbiIsIldFTENPTUVfTUFJTl9CVVRUT05fRU5HQUdFTUVOVF9FX1NFQ1VSRSI6IktvbnRyb2xsaWVyZW4gU2llIGRpZSBOdXR6dW5nIElocmVzIEFjY291bnRzIG1pdCBESEwgZVNlY3VyZSIsIldFTENPTUVfTUFJTl9TVUJfSEVBREVSX0VOR0FHRU1FTlRfTVlfREhMX1RJTUVfU0FWSU5HX0ZFQVRVUkVTIjoiTnV0emVuIFNpZSB1bnNlcmUgemVpdHNwYXJlbmRlbiBGZWF0dXJlcyB6dXIgRXJzdGVsbHVuZyBJaHJlciBTZW5kdW5nIiwiV0VMQ09NRV9NQUlOX1RBQl9OQU1FX1NDSEVEVUxFX1BJQ0tVUCI6IkFiaG9sdW5nIGJ1Y2hlbiIsIldFTENPTUVfTUFJTl9CVVRUT05fRU5HQUdFTUVOVF9QUk9WSUVXIjoiU2VuZHVuZ3PDvGJlcndhY2h1bmcgdW5kIEJlbmFjaHJpY2h0aWd1bmdlbiBlaW5yaWNodGVuIiwiV0VMQ09NRV9NQUlOX1RBQl9OQU1FX0NSRUFURV9GUk9NX0ZBVk9SSVRFIjoiQXVzIEZhdm9yaXRlbiIsIlJFUVVJUklOR19BQ1RJT05fSU5GT19URVhUX0NNU19DT05URU5UIjoiS2VpbmUgU2VuZHVuZ2VuIHZvbiBJaG5lbiB6dSBiZWFyYmVpdGVuIiwiV0VMQ09NRV9NQUlOX0JVVFRPTl9FTkdBR0VNRU5UX0dSQU5UX0FVVEhPUklaQVRJT04iOiJKZXR6dCBBdXRvcmlzaWVydW5nIGVydGVpbGVuIiwiSU5fVFJBTlNJVF9SRUFEWV9UT19TSElQX1BBUkFHUkFQSF9TSElQTUVOVFNfU1VCTUlUVEVEX0JVVF9OT1RfWUVUX0RFTElWRVJFRCI6IkFuIERITCDDvGJlcm1pdHRlbHRlLCBhYmVyIG5vY2ggbmljaHQgYXVzZ2VsaWVmZXJ0ZSBTZW5kdW5nZW4iLCJJTl9UUkFOU0lUX1JFQURZX1RPX1NISVBfTElOS19WSUVXX0FMTF9JTl9UUkFOU0lUX1NISVBNRU5UUyI6IsOcYmVyc2ljaHQgYWxsZXIgYWt0aXZlbiBTZW5kdW5nZW4iLCJXRUxDT01FX01BSU5fQlVUVE9OX0VOR0FHRU1FTlRfQklMTElORyI6IkFubWVsZGVuIHVuZCBSZWNobnVuZ2VuIG9ubGluZSBlaW5zZWhlbiB1bmQgYmVnbGVpY2hlbi4iLCJJTl9UUkFOU0lUX1JFQURZX1RPX1NISVBfU1VCX0hFQURFUl9TSElQTUVOVFNfVFJBTlNJVF9SRUFEWV9UT19TSElQIjoiVmVyc2VuZGV0ZSB1bmQgYWJob2xiZXJlaXRlIFNlbmR1bmdlbiIsIkRBU0hCT0FSRF9NT0RBTF9NU0dfRU1BSUxfVkVSSUZJRURfU1VDQ0VTU0ZVTExZIjoiIiwiUkVRVUlSSU5HX0FDVElPTl9MQUJFTF9DT1VOVF9PRl9TSE9XSU5HX0lURU1TIjoiQW56ZWlnZW4ge3BhZ2VTaXplfSB2b24ge3RvdGFsSXRlbXN9IiwiTVlfU0hJUE1FTlRTX1RBQl9OQU1FX01ZX1NISVBNRU5UUyI6Ik1laW5lIFNlbmR1bmdlbiAiLCJXRUxDT01FX01BSU5fVEFCX05BTUVfTU9OSVRPUl9TSElQTUVOVFMiOiJTZW5kdW5nc3ZlcndhbHR1bmciLCJSRVFVSVJJTkdfQUNUSU9OX1BBUkFHUkFQSF9TSElQTUVOVFNfTk9UX1lFVF9TVUJNSVRURURfVE8iOiLDnGJlcnNpY2h0IGRlciBub2NoIG5pY2h0IGFuIERITCDDvGJlcm1pdHRlbHRlbiBTZW5kdW5nc2F1ZnRyw6RnZSIsIldFTENPTUVfTUFJTl9CVVRUT05fRU5HQUdFTUVOVF9GQVZPUklURV9TSElQTUVOVFMiOiJOdXR6ZW4gU2llIEFuZ2FiZW4gYXVzIElocmVuU2VuZHVuZ3NmYXZvcml0ZW4gdW0gZWluZSBuZXVlIFNlbmR1bmcgenUgZXJzdGVsbGVuLiIsIldFTENPTUVfTUFJTl9CVVRUT05fRU5HQUdFTUVOVF9UUkFDS0lOR19EQVNIQk9BUkQiOiJXZWNoc2VsIHp1IMOcYmVyd2FjaGVuIHVuZCBWZXJmb2xnZW4tRGFzaGJvYXJkIn0sIlVTRVJfUFJPRklMRSI6eyJRVUlDS19MSU5LU19DT0xfTkFNRV9VUkwiOiJVUkwiLCJRVUlDS19MSU5LU19NU0dfQ09ORklSTV9ERUxFVEUiOiJTaW5kIFNpZSBzaWNoZXIsIGRhc3MgU2llIGRlbiBWb3JnYW5nIGzDtnNjaGVuIG3DtmNodGVuPyIsIlFVSUNLX0xJTktTX0NPTF9OQU1FX05BTUUiOiJMaW5rbmFtZSIsIlJFV0FSRF9DQVJEX0VSUk9SX0lOVkFMSURfTkVDVEFSX0NBUkRfTlVNQkVSIjoiRW50ZXIgdmFsaWQgTmVjdGFyIGNhcmQgbnVtYmVyIn0sIlNISVBNRU5UX1BBQ0tBR0UiOnsiU0VMRUNUX1BBQ0tBR0lOR19FUlJPUl9XRUlHSFRfRVhDRUVERUQiOiJNYXhpbWFsIHt2YWx1ZX0iLCJTRUxFQ1RfUEFDS0FHSU5HX0VSUk9SX0RJTUVOU0lPTl9NT1JFX1RIQU5fTUFYIjoiTWF4aW1hbDoge3ZhbHVlfSB7dW9tfSIsIlNFTEVDVF9QQUNLQUdJTkdfRVJST1JfUVVBTlRJVFlfRVhDRUVERUQiOiJNYXhpbWFsIHt2YWx1ZX0iLCJTRUxFQ1RfUEFDS0FHSU5HX1ZBTFVFX0xBQkVMX1NPTV9JTiI6ImluIiwiU0VMRUNUX1BBQ0tBR0lOR19FUlJPUl9XSURUSF9FWENFRURFRCI6Ik1heGltYWwge3ZhbHVlfSIsIlNFTEVDVF9QQUNLQUdJTkdfVkFMVUVfTEFCRUxfU09NX0xCIjoibGIiLCJTRUxFQ1RfUEFDS0FHSU5HX1ZBTFVFX0xBQkVMX0NVU1RPTV9QQUNLQUdFX1NJWkUiOiJCZW51dHplcmRlZmluaWVydGUgVmVycGFja3VuZ3NncsO2w59lIiwiU0VMRUNUX1BBQ0tBR0lOR19WQUxVRV9MQUJFTF9TT01fQ00iOiJjbSIsIlNFTEVDVF9QQUNLQUdJTkdfVkFMVUVfTEFCRUxfU09NX0tHIjoia2ciLCJTRUxFQ1RfUEFDS0FHSU5HX0VSUk9SX0xFTkdUSF9FWENFRURFRCI6Ik1heGltYWwge3ZhbHVlfSIsIlNFTEVDVF9QQUNLQUdJTkdfRVJST1JfSEVJR0hUX0VYQ0VFREVEIjoiTWF4aW1hbCB7dmFsdWV9IiwiU0VMRUNUX1BBQ0tBR0lOR19NU0dfU0FWRV9DT05GSVJNQVRJT05fTUVTU0FHRSI6IldvbGxlbiBTaWUgZGFzIFBha2V0IGluIElocmVuIFBha2V0ZWluc3RlbGx1bmdlbiDDpG5kZXJuPyJ9LCJhZGRyZXNzLWJvb2siOnsiYWRkcmVzcy1ib29rX2JhY2tlbmQtZXJyb3JfdHJ5aW5nLWRlbGV0ZS1hbHJlYWR5LWRlbGV0ZWQtY29udGFjdCI6IktvbnRha3QgYmVyZWl0cyBnZWzDtnNjaHQiLCJhZGRyZXNzLWJvb2tfYmFja2VuZC1lcnJvcl9hY2NvdW50LWZvci10YXhlcy1ub3QtdmFsaWQiOiJVbmfDvGx0aWdlciBBY2NvdW50IiwiYWRkcmVzcy1ib29rX2JhY2tlbmQtZXJyb3JfY29udGFjdC1ub3QtZm91bmQiOiJLZWluZSBFcmdlYm5pc3NlIGdlZnVuZGVuLiIsImFkZHJlc3MtYm9va19iYWNrZW5kLWVycm9yX21heC1udW1iZXItb2YtY29udGFjdHMtcmVhY2hlZCI6IkRpZSBtYXhpbWFsZSBBbnphaGwgYW4genVsw6Rzc2lnZW4gS29udGFrdGVuIHd1cmRlIMO8YmVyc2Nocml0dGVuLiBMw7ZzY2hlbiBTaWUgYWx0ZSwgbmljaHQgdmVyd2VuZGV0ZSBvZGVyIGRvcHBlbHQgYW5nZWxlZ3RlIEtvbnRha3RlIHZvbiBJaHJlbSBBZHJlc3NidWNoLiIsImFkZHJlc3MtYm9va19iYWNrZW5kLWVycm9yX2FjY291bnQtZm9yLWR1dGllcy1ub3QtdmFsaWQiOiJVbmfDvGx0aWdlciBBY2NvdW50IiwiYWRkcmVzcy1ib29rX2JhY2tlbmQtZXJyb3JfYWNjb3VudC1mb3Itc2hpcHBpbmctY2hhcmdlcy1ub3QtdmFsaWQiOiJVbmfDvGx0aWdlciBBY2NvdW50IiwiY29tbW9uX2JhY2tlbmQtZXJyb3JfbWFpbGluZy1saXN0LW5vdC1leGlzdCI6Ik1hbGluaW5nbGlzdGUgZXhpc3RpZXJ0IG5pY2h0IiwiYWRkcmVzcy1ib29rX2JhY2tlbmQtZXJyb3JfY29udGFjdC1pcy1ub3QtdW5pcXVlLWluLW1haWxpbmctbGlzdCI6IkRvcHBlbHRlIEtvbnRha3RlIGVudGZlcm5lbiIsImFkZHJlc3MtYm9va19hZGRyZXNzLWJvb2tfcHJvZmlsZS1jb250YWN0LWRlZmF1bHQtbmFtZSI6Ik1laW5lIEluZm9ybWF0aW9uZW4iLCJhZGRyZXNzLWJvb2tfYmFja2VuZC1lcnJvcl9tYWlsaW5nLWxpc3QtaXMtbm90LXVuaXF1ZSI6Ik5hbWUgYmVyZWl0cyB2ZXJnZWJlbiIsImFkZHJlc3MtYm9va19iYWNrZW5kLWVycm9yX2NvbnRhY3QtZG9lcy1ub3QtYmVsb25ncy10by11c2VyIjoiS29udGFrdGUgaW4gZGllc2VtIEFkcmVzc2J1Y2gga8O2bm5lbiBhdXNzY2hsaWXDn2xpY2ggdm9tIEdydXBwZW5hZG1pbiBiZWFyYmVpdGVuIHdlcmRlbiJ9LCJhZHRfZ2VuZXJhbF9idXNpbmVzc19kYXRhIjp7ImFkZHJlc3NfYm9va19waG9uZV90eXBlc19hdmFpbGFibGVfcGhvbmVfdHlwZXMtbW9iaWxlIjoiSGFuZHkiLCJhZGRyZXNzX2Jvb2tfcGhvbmVfdHlwZXNfYXZhaWxhYmxlX3Bob25lX3R5cGVzLW9mZmljZSI6IkLDvHJvIiwicGF5bWVudF9vcHRpb25zX3N1cHBvcnRlZF9wYXltZW50X21vZGUtb25saW5lIjoiT25saW5lIFBheW1lbnQiLCJhZGRyZXNzX2Jvb2tfcGhvbmVfdHlwZXNfYXZhaWxhYmxlX3Bob25lX3R5cGVzLWZheCI6IkZheCIsInBheW1lbnRfb3B0aW9uc19zdXBwb3J0ZWRfcGF5bWVudF9tb2RlLWNhc2giOiJCYXIiLCJhZGRyZXNzX2Jvb2tfcGhvbmVfdHlwZXNfYXZhaWxhYmxlX3Bob25lX3R5cGVzLW90aGVyIjoiYW5kZXJlIn0sIkFERFJFU1NfQk9PSyI6eyJNQUlMSU5HX0xJU1RfQ09OVEFDVFNfQ09OVEFDVF9ERVRBSUxTIjoiS29udGFrdCBEZXRhaWxzIiwiQUREUkVTU19CT09LX0NPTExFQ1RJT05TX1NFTEVDVF9PUFRJT05fQ1JBQl9UTyI6IkZpcm1hIEVtcGbDpG5nZXI6IHtncm91cE5hbWV9IiwiQUREUkVTU19CT09LX0NPTExFQ1RJT05TX1NFTEVDVF9PUFRJT05fR1JBQl9GUk9NIjoiR3J1cHBlIEFic2VuZGVyIiwiQUREUkVTU19CT09LX0FMRVJUX01BSUxJTkdfTElTVF9DT05GSVJNX0RFTEVURSI6IlNpbmQgU2llIHNpY2hlciwgZGFzcyBTaWUge25hbWV9IGF1cyBkZXIgTWFpbGluZ2xpc3RlIGzDtnNjaGVuIHdvbGxlbj8iLCJBRERSRVNTX0JPT0tfQ09MTEVDVElPTlNfU0VMRUNUX09QVElPTl9DUkFCX0ZST00iOiJGaXJtYSBBYnNlbmRlcjoge2dyb3VwTmFtZX0iLCJBRERSRVNTX0JPT0tfQlVUVE9OX0RPV05MT0FEIjoiRG93bmxvYWQiLCJBRERSRVNTX0JPT0tfQ09MX05BTUVfQ0lUWSI6IlN0YWR0IiwiQUREUkVTU19CT09LX0NPTExFQ1RJT05TX1NFTEVDVF9PUFRJT05fUEFCIjoiTWVpbiBBZHJlc3NidWNoIiwiTUFJTElOR19MSVNUX0NPTFVNTl9OVU1CRVJfT0ZfQ09OVEFDVFMiOiJBbnphaGwgZGVyIEtvbnRha3RlIiwiQUREUkVTU19CT09LX01TR19OT19NQUlMSU5HX0xJU1RTX0ZPVU5EIjoiS2VpbmUgRXJnZWJuaXNzZSBnZWZ1bmRlbi4iLCJNQUlMSU5HX0xJU1RfREVMRVRFIjoiTMO2c2NoZW4iLCJBRERSRVNTX0JPT0tfQlVUVE9OX0RFTEVURSI6IkzDtnNjaGVuIiwiQUREUkVTU19CT09LX0JVVFRPTl9DT1BZIjoiRHVwbGl6aWVyZW4iLCJBRERSRVNTX0JPT0tfQ09MX05BTUVfRkFYIjoiRmF4IiwiQUREUkVTU19CT09LX0NPTF9OQU1FX1pJUCI6IlBvc3RsZWl0emFobCIsIkNPTlRBQ1RfREVUQUlMU19IRUFERVJfQUREX05FV19DT05UQUNUIjoiTmV1ZW4gS29udGFrdCBoaW56dWbDvGdlbiIsIkFERFJFU1NfQk9PS19CVVRUT05fRURJVCI6IkJlYXJiZWl0ZW4iLCJDT05UQUNUX0RFVEFJTFNfU0VUVElOR1NfU1VCX0hFQURFUl9QQVlNRU5UIjoiWmFobHVuZyIsIkFERFJFU1NfQk9PS19DT0xfTkFNRV9DT01QQU5ZX05BTUUiOiJGaXJtYSIsIkFERFJFU1NfQk9PS19DT0xfTkFNRV9WQVQiOiJVbXNhdHpzdGV1ZXItTnVtbWVyIiwiTEJfREVMRVRFX0lURU1fUEFSQUdSQVBIX0NPTkZJUk1BVElPTl9NRVNTQUdFIjoiU2luZCBTaWUgc2ljaGVyLCBkYXNzIFNpZSBkZW4gVm9yZ2FuZyBsw7ZzY2hlbiBtw7ZjaHRlbj8iLCJDT05UQUNUX0RFVEFJTFNfU0VUVElOR1NfU1VCX0hFQURFUl9QSUNLVVAiOiJBYmhvbHVuZ2VuIiwiQUREUkVTU19CT09LX0NPTExFQ1RJT05TX1NFTEVDVF9PUFRJT05fQ1VTVE9NX0ZST00iOiJBZHJlc3NidWNoOiBBYnNlbmRlciIsIkFERFJFU1NfQk9PS19DT0xMRUNUSU9OU19TRUxFQ1RfT1BUSU9OX0dSQUJfVE8iOiJHcnVwcGUgRW1wZsOkbmdlciIsIkNPTlRBQ1RfREVUQUlMU19TRVRUSU5HU19TVUJfSEVBREVSX0NPTlRBQ1RfSU5GT19TSElQUElORyI6IlZlcnNlbmRlbiIsIkFERFJFU1NfQk9PS19DT0xfTkFNRV9GUk9NX0FERFJFU1NfQk9PSyI6IkF1cyBkZW0gQWRyZXNzYnVjaCIsIkNPTlRBQ1RfREVUQUlMU19NU0dfQ09ORklSTV9PU1JfREVMRVRJT04iOiJTaW5kIFNpZSBzaWNoZXIsIGRhc3MgU2llIGRpZSBHU1QtTnVtbWVyIGRlcyB0cmFuc2F0bGFudGlzY2ggcmVnaXN0cmllcnRlbiBMaWVmZXJhbnRlbiBmw7xyIGRpZXNlbiBLb250YWt0IGVudGZlcm5lbiBtw7ZjaHRlbj8iLCJDT05UQUNUX0RFVEFJTFNfU0VUVElOR1NfU1VCX0hFQURFUl9TSEFSRSI6IlNlbmR1bmdzZGV0YWlscyB0ZWlsZW4iLCJBRERSRVNTX0JPT0tfQ09MX05BTUVfQURESVRJT05BTF9OT1RFUyI6Ik5vdGl6ZW4genUgZGllc2VtIEtvbnRha3QiLCJOT1RJRklDQVRJT05TX1NFTEVDVF9PUFRJT05fU01TIjoiU01TIiwiQUREUkVTU19CT09LX0NPTF9OQU1FX1NUQVRFX1BST1ZJTkNFIjoiQmV6aXJrIiwiQUREUkVTU19CT09LX0NPTF9OQU1FX1BIT05FIjoiVGVsZWZvbiIsIkFERFJFU1NfQk9PS19BTEVSVF9NQUlMSU5HX0xJU1RTX0NPTkZJUk1fREVMRVRFIjoiU2luZCBTaWUgc2ljaGVyLCBkYXNzIFNpZSB7bnVtYmVyfSBNYWlsaW5nbGlzdGUobikgbMO2c2NoZW4gd29sbGVuPyIsIkFERFJFU1NfQk9PS19DT0xfTkFNRV9FTUFJTF9BRERSRVNTIjoiRS1NYWlsIEFkcmVzc2UiLCJBRERSRVNTX0JPT0tfQ09MTEVDVElPTlNfU0VMRUNUX09QVElPTl9DQUIiOiJGaXJtYSBBZHJlc3NidWNoIiwiQUREUkVTU19CT09LX1RBQl9OQU1FX01BSUxJTkdfTElTVFMiOiJFLU1haWwgVmVydGVpbGVyIiwiQUREUkVTU19CT09LX0NPTF9OQU1FX0VPUklfTlVNQkVSIjoiRU9SSSBOdW1tZXIiLCJBRERSRVNTX0JPT0tfQ09MTEVDVElPTlNfU0VMRUNUX09QVElPTl9HUk9VUCI6IkdydXBwZSBBZHJlc3NidWNoIiwiQUREUkVTU19CT09LX0NPTExFQ1RJT05TX1NFTEVDVF9PUFRJT05fR0FCIjoiR3J1cHBlIEFkcmVzc2J1Y2g6IHtncm91cE5hbWV9IiwiQUREUkVTU19CT09LX0NPTF9OQU1FX0ZST01fRkFWT1JJVEVTIjoiPGRpdj5Wb24gRmF2b3JpdGVuPFwvZGl2PlxuIiwiQUREUkVTU19CT09LX0JVVFRPTl9DUkVBVEVfU0hJUE1FTlQiOiJTZW5kdW5nIGVyc3RlbGxlbiIsIk5PVElGSUNBVElPTlNfU0VMRUNUX09QVElPTl9FTUFJTCI6IkUtTWFpbCIsIkFERFJFU1NfQk9PS19DT0xMRUNUSU9OU19TRUxFQ1RfT1BUSU9OX0NVU1RPTV9UTyI6IkFkcmVzc2J1Y2g6IEVtcGbDpG5nZXIiLCJBRERSRVNTX0JPT0tfTVNHX1BST0ZJTEVfQ09OVEFDVF9DQU5UX0JFX1VQREFURUQiOiJJaHIgUHJvZmlsbGFuZCBrYW5uIG5pY2h0IGdlw6RuZGVydCB3ZXJkZW4iLCJBRERSRVNTX0JPT0tfQ09MX05BTUVfQ09VTlRSWSI6IkxhbmQiLCJBRERSRVNTX0JPT0tfQ09MX05BTUVfTklDS05BTUUiOiJBbGlhcyAoQmVzY2hyZWlidW5nKSIsIkFERFJFU1NfQk9PS19DT0xfTkFNRV9TVUJVUkIiOiJWb3JvcnQiLCJDT05UQUNUX0RFVEFJTFNfU0VUVElOR1NfU1VCX0hFQURFUl9NQUlMSU5HX0xJU1RTIjoiRS1NYWlsIFZlcnRlaWxlciIsIkFERFJFU1NfQk9PS19DT0xfTkFNRV9NQVRDSF9DT0RFIjoiQmV6ZWljaG51bmfCoDIiLCJBRERSRVNTX0JPT0tfQlVUVE9OX0dFVF9RVU9URSI6IlByZWlzIGFuZnJhZ2VuIiwiQUREUkVTU19CT09LX0NPTF9OQU1FX1NISVBQSU5HX1JFRkVSRU5DRSI6IlJlZmVyZW56IiwiTUFJTElOR19MSVNUX0NPTFVNTl9OQU1FIjoiTmFtZSBkZXIgTWFpbGluZ2xpc3RlIiwiQUREUkVTU19CT09LX0NPTF9OQU1FX0FERFJFU1NfMiI6ImFkcmVzc2UiLCJBRERSRVNTX0JPT0tfQ09MX05BTUVfQUREUkVTU18zIjoiQWRyZXNzZSAzIiwiTUFJTElOR19MSVNUX0NBTkNFTCI6ImFiYnJlY2hlbiIsIkFERFJFU1NfQk9PS19NU0dfTk9fQUREUkVTU19NQVRDSElOR19LRVlXT1JEIjoiS2VpbmUgRXJnZWJuaXNzZSBnZWZ1bmRlbi4iLCJBRERSRVNTX0JPT0tfTVNHX0lTX1BST0ZJTEVfQ09OVEFDVCI6IklocmUgS29udGFrdGluZm9ybWF0aW9uZW4gaW0gQWRyZXNzYnVjaCB1bmQgaW4gSWhyZW0gUHJvZmlsIHdlcmRlbiBha3R1YWxpc2llcnQuIiwiQUREUkVTU19CT09LX1BBUkFHUkFQSF9ERUxFVEVfQ09OVEFDVFNfRlJPTV9NTCI6IlNpbmQgU2llIHNpY2hlciwgZGFzcyBTaWUge2NvbnRhY3RDb3VudH0gS29udGFrdChlKSBhdXMgZGVyIE1haWxpbmdsaXN0ZSBsw7ZzY2hlbiB3b2xsZW4/IiwiQUREUkVTU19CT09LX01TR19DT05GSVJNX0xFQVZJTkdfQ09OVEFDVF9QQUdFIjoiU2luZCBTaWUgc2ljaGVyLCBkYXNzIFNpZSBkaWVzZSBTZWl0ZSB2ZXJsYXNzZW4gbcO2Y2h0ZW4/IiwiQ09OVEFDVF9ERVRBSUxTX1NFVFRJTkdTX1NVQl9IRUFERVJfTk9USUZJQ0FUSU9OUyI6IlN0YXR1c2JlbmFjaHJpY2h0aWd1bmcgc2VuZGVuIiwiQUREUkVTU19CT09LX0NPTF9OQU1FX0FERFJFU1MiOiJBZHJlc3NlIiwiQUREUkVTU19CT09LX0NPTF9OQU1FX0NPTlRBQ1RfTkFNRSI6Ik5hbWUifSwic2hpcG1lbnRfcGFwZXJ3b3JrLWludm9pY2UtbGlzdF9vZl9leHBvcnRfaWRzIjp7ImYtZGVzY3JpcHRpb24iOiJGb3JlaWduIEVudGl0eSBDb2RlIiwiZS1kZXNjcmlwdGlvbiI6IkVtcGxveWVlIElkZW50aWZpY2F0aW9uIE51bWJlciAoRUlOKSIsInMtZGVzY3JpcHRpb24iOiJTb2NpYWwgU2VjdXJpdHkgTnVtYmVyIiwiZC1kZXNjcmlwdGlvbiI6IkRVTnMgbnVtYmVyIn0sImNyMDEwOCI6eyJjci1lcnJvcnMtcmVxdWlyZWQiOiJUaGlzIGZpZWxkIGlzIHJlcXVpcmVkIiwiY3ItbmFtZSI6Ik1heGltdW0gQ29zdCBvZiBTaGlwbWVudHM6IEVmZmVjdGl2ZSBEYXRlIFN0YXJ0In0sImNyMDEwOSI6eyJjci1uYW1lIjoiTWF4aW11bSBDb3N0IG9mIFNoaXBtZW50czogQXBwcm92YWwgUmVxdWlyZWQifSwicnVsZXNfcmVndWxhdGlvbi13YXJuaW5nX2FsZXJ0cyI6eyJua29yZWFfYW5kX3N5cmlhLWRlc2NyaXB0aW9uIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+PGRpdiBjbGFzcz0ibWVzc2FnZS13cmFwcGVyIj48cD5EaWUgZm9sZ2VuZGVuIEdlZ2Vuc3TDpG5kZSBzaW5kIHZlcmJvdGVuPFwvcD5cbjxwPiA8XC9wPlxuPHVsPlxuPGxpPldhZmZlbiAoaW5rbHVzaXZlIEVyc2F0enRlaWxlKTxcL2xpPlxuPGxpPk11bml0aW9uPFwvbGk+XG48bGk+V2FyZW4gbWl0IG1laHJlcmVuIFZlcndlbmR1bmdzendlY2tlIHdpZSBNYXRlcmlhbCwgQXVzcsO8c3R1bmcsIEfDvHRlciB1bmQgVGVjaG5vbG9naWVuIGbDvHIgTnVrbGVhcnByb2dyYW1tZSwgUmFrZXRlbnByb2dyYW1tZSB1bmQgYW5kZXJlIE1hc3NlbnZlcm5pY2h0dW5nc3dhZmZlbiAtIGVpbmdlc2NobG9zc2VuIGJlc3RpbW10ZSBDb21wdXRlciB1bmQgU29mdHdhcmUuPFwvbGk+XG48bGk+THV4dXNnw7x0ZXIgKEJlaXNwaWVsZTogWmlnYXJldHRlbiwgV2VpbiwgUGVsenByb2R1a3RlIHVuZCBLbGVpZHVuZywgUGFyZsO8bSwgRmxhY2hiaWxkc2NoaXJtZSwgTVAzIFBsYXllciwgVWhyZW4gYXVzIEVkZWxtZXRhbGxlbiwgS3Vuc3R3ZXJrZSB1bmQgQW50aXF1aXTDpHRlbiBhbHMgU2FtbWxlcnN0w7xja2UsIEp1d2VsZW4gdW5kIEVkZWxzdGVpbmUgYXVzIEVkZWxtZXRhbGxlLCBTcG9ydGF1c3LDvHN0dW5nLCBNdXNpa2luc3RydW1lbnRlLCBtb3RvcmlzaWVydGUgRmFocnpldWdlKS48XC9saT5cbjxcL3VsPlxuPFwvZGl2PjxcL2Rpdj4iLCJpcmFxX2FuZF9hZmdoYW5pc3Rhbi1kZXNjcmlwdGlvbiI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPjxkaXYgY2xhc3M9Im1lc3NhZ2Utd3JhcHBlciI+PHVsPlxuPGxpPkRITCBiaWV0ZXQgVHJhbnNwb3J0dmVyc2ljaGVydW5nZW4gZsO8ciBTZW5kdW5nZW4gaW4gZGVuIDxiPklyYWsgb2RlciBBZmdoYW5pc3RhbiBvZGVyIGF1cyBkaWVzZW4gTMOkbmRlcm4gaGVyYXVzIGFuLiBadXPDpHR6bGljaGUgR2Viw7xocmVuIGvDtm5uZW4gYW5mYWxsZW4uPFwvYj48XC9saT5cbjxsaT5EaWUgVHJhbnNwb3J2ZXJzaWNoZXJ1bmcgYmVpbmhhbHRldCBuaWNodCBkZW4gU2NodXR6IGbDvHIgZGVuIFRyYW5zaXQgaW5uZXJoYWxiIGRpZXNlciBMw6RuZGVyPFwvbGk+XG48XC91bD5cbjxwPsKgPFwvcD5cbjxwPkZhbGxzIFNpZSBlaW5lIFRyYW5zcG9ydHZlcnNpY2hlcnVuZyBmw7xyIGRlbiBUcmFuc2l0IGluIGRpZXNlbiBMw6RuZGVybiBiZW7DtnRpZ2VuOjxcL3A+XG48dWw+XG48bGk+RGllIFRyYW5zcG9ydHZlcnNpY2hlcnVuZyBtdXNzIGFiZ2VzY2hsb3NzZW4gd2VyZGVuIGJldm9yIGRpZSBTZW5kdW5nIGRhcyBVcnNwcnVuZ3NsYW5kIHZlcmzDpHNzdDxcL2xpPlxuPGxpPktvbnRha3RpZXJlbiBTaWUgSWhyZW4genVzdMOkbmRpZ2VuIERITCBFeHByZXNzIFZlcnRyaWVic21pdGFyYmVpdGVyIG1pbmRlc3RlbnMgMyBXZXJrdGFnZSB2b3IgZGVyIFNlbmR1bmdzYWJob2x1bmc8XC9saT5cbjxcL3VsPlxuPFwvZGl2PjxcL2Rpdj4iLCJzb3V0aF9hZnJpY2EtZGVzY3JpcHRpb24iOiI8ZGl2IGNsYXNzPVwiZXdmX2RpY3Rpb25hcnlfdmFsdWVcIj48ZGl2IGNsYXNzPSJtZXNzYWdlLXdyYXBwZXIiPjxwPkbDvHIgU2VuZHVuZ2VuIDxiPmF1cyBTw7xkYWZyaWthOjxcL2I+PFwvcD48cD7CoDxcL3A+PHA+SW0gRmVsZCBNd1N0Li9VU3QuLUlEIGRlciBBYnNlbmRlcmFkcmVzc2UgaXN0IGVpbmUgZGVyIGZvbGdlbmRlbiBBbmdhYmVuIGVyZm9yZGVybGljaCB1bmQgbXVzcyB6dXIgWm9sbGFiZmVydGlndW5nIGF1c2dlZsO8bGx0IHdlcmRlbjo8XC9wPjx1bD48bGk+IEN1c3RvbXMgQ2xpZW50IENvZGU8XC9saT48bGk+IFNoaXBwZXIicyBJZGVudGl0eSBEb2N1bWVudDxcL2xpPjxsaT4gU2hpcHBlciJzIFBhc3Nwb3J0IE51bWJlciA8XC9saT48XC91bD48cD7CoDxcL3A+PHA+VmVyw7ZmZmVudGxpY2h0IHZvbiBkZXIgYWZyaWthbmlzY2hlbiBab2xsYmVow7ZyZGUgbWl0IFdpcmt1bmcgenVtIDEuIEp1bGkgMjAxOS48XC9wPjxcL2Rpdj48XC9kaXY+IiwibWFsYXlzaWEtZGVzY3JpcHRpb24iOiI8ZGl2IGNsYXNzPVwiZXdmX2RpY3Rpb25hcnlfdmFsdWVcIj48ZGl2IGNsYXNzPSJtZXNzYWdlLXdyYXBwZXIiPjxwPsKgPFwvcD48cD5CaXR0ZSBiZXLDvGNrc2ljaHRpZ2VuIFNpZSBmb2xnZW5kZXMgZsO8ciBkaWUgVmVyem9sbHVuZyBpbiBNYWxheXNpYTo8XC9wPjxwPsKgPFwvcD48dWw+PGxpPlpvbGxyZWNobnVuZ2VuIChDb21tZXJjaWFsIEludm9pY2UpIG3DvHNzZW4gZWluZSBSZWNobnVuZ3NudW1tZXIgYmVpbmhhbHRlbjxcL2xpPjxsaT5EYXMgUm95YWwgTWFsYXlzaWFuIEN1c3RvbXMgRGVwYXJ0bWVudCBha3plcHRpZXJ0IGtlaW5lIFByb2Zvcm1hIFJlY2hudW5nZW4gYWxzIFpvbGxyZWNobnVuZy4gQmVpIGplZGVyIFNlbmR1bmcgKEV4cG9ydC0gdW5kIEltcG9ydHNlbmR1bmcpLCBkaWUgbWl0IGVpbmVyIFByb2Zvcm1hIFJlY2hudW5nIHZlcnNlaGVuIGlzdCwgaXN0IG1pdCBlaW5lciBWZXJ6w7ZnZXJ1bmcgYmVpIGRlciBWZXJ6b2xsdW5nIHVuZCBadXN0ZWxsdW5nIHp1IHJlY2huZW4uPFwvbGk+PFwvdWw+PFwvZGl2PjxcL2Rpdj4iLCJicml0aXNoX3Zpcmdpbl9pc2xhbmRzX3RvcnRvbGFfLWRlc2NyaXB0aW9uIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+PGRpdiBjbGFzcz0ibWVzc2FnZS13cmFwcGVyIj48cD5Gw7xyIFNlbmR1bmdlbiBuYWNoIDxiPlRvcnRvbGE8XC9iPjo8XC9wPlxuPHA+wqA8XC9wPlxuPHVsPlxuPGxpPkRpZSBPcmlnaW5hbHJlY2hudW5nIGRlcyBMaWVmZXJhbnRlbiBvZGVyIGRlciBLYXVmbmFjaHdlaXMgaXN0IGbDvHIgZGllIFpvbGxhYmZlcnRpZ3VuZyBlcmZvcmRlcmxpY2guPFwvbGk+XG48bGk+RWluZSBIYW5kZWxzcmVjaG51bmcsIGRpZSBkdXJjaCBNeURITCsgZ2VuZXJpZXJ0IHd1cmRlLCB3aXJkIHZvbSBab2xsIG5pY2h0IGFremVwdGllcnQuIEVpbmUgSGFuZGVsc3JlY2hudW5nLCBkaWUgw7xiZXIgTXlESEwrIGVyc3RlbGx0IHd1cmRlLCBrYW5uIGF1ZmdydW5kIGRlciBFeHBvcnRiZXN0aW1tdW5nZW4gZGVzIFVyc3BydW5nc2xhbmRlcyBlcmZvcmRlcmxpY2ggc2Vpbi48XC9saT5cbjxcL3VsPlxuPFwvZGl2PjxcL2Rpdj4iLCJuYW1lXzItYWxlcnRuYW1lIjoiTmFtZSAyIiwiaXJhbi1kZXNjcmlwdGlvbiI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPjxkaXYgY2xhc3M9Im1lc3NhZ2Utd3JhcHBlciI+PHA+RGllIGZvbGdlbmRlbiBHZWdlbnN0w6RuZGUgc2luZCB2ZXJib3RlbjxcL3A+XG48dWw+XG48bGk+V2FmZmVuwqA8XC9saT5cbjxsaT5XYWZmZW4gVGVpbGUgaW5rbHVzaXZlIFZpc2llcnZvcnJpY2h0dW5nPFwvbGk+XG48bGk+TmFjaHRzaWNodGdlcsOkdGUgdW5kIFfDpHJtZWJpbGRhdXNyw7xzdHVuZzxcL2xpPlxuPGxpPk1pbGl0w6RyZmFocnpldWdlwqA8XC9saT5cbjxsaT5NaWxpdMOkcmF1c3LDvHN0dW5nPFwvbGk+XG48bGk+RXJzYXR6dGVpbGUgZsO8ciBlaW5lIGRlciBvYmVuIGVyd8OkaG50ZW48XC9saT5cbjxsaT5EdWFsIHVzZSBnb29kcyB0aGF0IGFyZSBtYXRlcmlhbHMsIGVxdWlwbWVudCwgZ29vZHMsIGFuZCB0ZWNobm9sb2d5IHRoYXQgY2FuIGJlIHVzZWQgZm9yIG51Y2xlYXIgcHJvZ3JhbXMsIGJhbGxpc3RpYyBtaXNzaWxlIHByb2dyYW1zIGFuZCBvdGhlciB3ZWFwb25zIG9mIG1hc3MgZGVzdHJ1Y3Rpb24uIERpZXMgYmVpbmhhbHRldDogTWl0IEFucmVpY2hlcnVuZyB6dXNhbW1lbmjDpG5nZW5kZSBUw6R0aWdrZWl0ZW4sIEhhbmRoYWJ1bmcgdm9uIFNjaHdlcmVtIFdhc3NlciBvZGVyIGFuZGVyZSBBa3Rpdml0w6R0ZW4genVyIEhlcnN0ZWxsdW5nLCBFbnR3aWNrbHVuZyB1bmQgVHJhbnNwb3J0IHZvbiBOdWtsZWFyd2FmZmVuc3lzdGVtZW4uPFwvbGk+XG48bGk+TmF0by1TdGFjaGVsZHJhaHQ8XC9saT5cbjxsaT5NdW5pdGlvbjxcL2xpPlxuPGxpPkZhaHJ6ZXVndGVpbGU8XC9saT5cbjxsaT5BdXRvbW9iaWx0ZWlsZTxcL2xpPlxuPGxpPkZsdWd6ZXVndGVpbGU8XC9saT5cbjxsaT5XYXJlbiBtaXQgVXJzcHJ1bmcvUHJvZHVrdGlvbiBpbiBJc3JhZWw8XC9saT5cbjxsaT5Qw6Rzc2UgbmFjaC92b246IElyYW48XC9saT5cbjxcL3VsPlxuPFwvZGl2PjxcL2Rpdj4iLCJiYW5nbGFkZXNoLWRlc2NyaXB0aW9uIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+PGRpdiBjbGFzcz0ibWVzc2FnZS13cmFwcGVyIj48cD5XZW5uIFNpZSBuYWNoIDxiPkJhbmdsYWRlc2NoPFwvYj4gdmVyc2VuZGVuIGlzdCBkaWUgRWluaGFsdHVuZyBkZXIgUmVndWxhcmllbiB2b24gZ3Jvw59lciBXaWNodGlna2VpdCB1bSBWZXJzcMOkdHVuZ2VuLCBwb3RlbnppZWxsZSBSZWtsYW1hdGlvbmVuIHZvbiBkZXIgWm9sbGJlaMO2cmRlLCBTdHJhZmVuIHVuZCBHZWLDvGhyZW4genUgdmVybWVpZGVuLjxcL3A+XG48cD7CoDxcL3A+XG48cD5EZWZpbml0aW9uIHZvbiA8Yj5Eb2t1bWVudGVuc2VuZHVuZ2VuPFwvYj46PFwvcD5cbjx1bD5cbjxsaT5FbnR3ZWRlciBoYW5kZ2VzY2hyaWViZW5lIG9kZXIgZ2VkcnVja3RlIERva3VtZW50ZTxcL2xpPlxuPGxpPkTDvHJmZW4gMmtnIHBybyBGcmFjaHRicmllZiBuaWNodCDDvGJlcnNjaHJlaXRlbjxcL2xpPlxuPFwvdWw+XG48cD7CoDxcL3A+XG48cD5TZW5kdW5nZW4sIGRpZSA8Yj5tZWhyIGFscyAya2c8XC9iPiB3aWVnZW46PFwvcD5cbjx1bD5cbjxsaT5XZXJkZW4gYWxzIFBha2V0ZSBiZWhhbmRlbHQ8XC9saT5cbjxsaT5VbnRlcmxpZWdlbiBab2xsZ2Viw7xocmVuIHVuZCBTdGV1ZXJuPFwvbGk+XG48XC91bD5cbjxcL2Rpdj48XC9kaXY+IiwiamFtYWljYS1kZXNjcmlwdGlvbiI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPjxkaXYgY2xhc3M9Im1lc3NhZ2Utd3JhcHBlciI+PHA+RsO8ciBTZW5kdW5nZW4gbmFjaDxiPiBKYW1haWthPFwvYj46PFwvcD5cbjxwPsKgPFwvcD5cbjx1bD5cbjxsaT5EaWUgT3JpZ2luYWxyZWNobnVuZyBkZXMgTGllZmVyYW50ZW4gb2RlciBkZXIgS2F1Zm5hY2h3ZWlzIGlzdCBmw7xyIGRpZSBab2xsYWJmZXJ0aWd1bmcgZXJmb3JkZXJsaWNoLjxcL2xpPlxuPGxpPkVpbmUgSGFuZGVsc3JlY2hudW5nLCBkaWUgZHVyY2ggTXlESEwrIGdlbmVyaWVydCB3dXJkZSwgd2lyZCB2b20gWm9sbCBuaWNodCBha3plcHRpZXJ0LiBFaW5lIEhhbmRlbHNyZWNobnVuZywgZGllIMO8YmVyIE15REhMKyBlcnN0ZWxsdCB3dXJkZSwga2FubiBhdWZncnVuZCBkZXIgRXhwb3J0YmVzdGltbXVuZ2VuIGRlcyBVcnNwcnVuZ3NsYW5kZXMgZXJmb3JkZXJsaWNoIHNlaW4uPFwvbGk+XG48XC91bD5cbjxcL2Rpdj48XC9kaXY+Iiwia29yZWEtZGVzY3JpcHRpb24iOiI8ZGl2IGNsYXNzPVwiZXdmX2RpY3Rpb25hcnlfdmFsdWVcIj48ZGl2IGNsYXNzPSJtZXNzYWdlLXdyYXBwZXIiPjxwPkbDvHIgU2VuZHVuZ2VuIDxiPm5hY2ggS29yZWE6PFwvcD48cD7CoDxcL3A+PHA+PFwvYj5Gw7xyIGRhcyBVbXNhdHpzdGV1ZXIgSUQgRmVsZCBkZXMgRW1wZsOkbmdlcnMgaXN0IGVpbmUgZGVyIGJlaWRlbiBnZW5hbm50ZW4gQW5nYWJlbiBlcmZvcmRlcmxpY2ggdW5kIHdpcmQgYmVpIGRlciBab2xsYWJmZXJ0aWd1bmcgZWluZ2VyZWljaHQ6PFwvcD48cD7CoDxcL3A+PHA+PGI+UHJpdmF0YWRyZXNzZTo8XC9wPjx1bD48bGk+IDxcL2I+QmV2b3J6dWd0OiAxMy1zdGVsbGlnZSBOdW1tZXIgbWl0IGRlbSBQZXJzb25hbCBDdXN0b21zIENsZWFyYW5jZSBDb2RlIChQQ0NDKSwgei5CLiBQMTIzNDU2Nzg5MDEyIDxcL2xpPjxsaT4gQWx0ZXJuYXRpdjogOC1zdGVsbGlnZXMgR2VidXJ0c2RhdHVtIG1pdCBkZW0gRm9ybWF0IEpKSkpNTVRULCB6LkIuIDE5OTAxMjMxPFwvbGk+PFwvdWw+PHA+wqA8XC9wPjxwPjxiPkZpcm1lbmFkcmVzc2U6PFwvcD48dWw+PGxpPiA8XC9iPjEwLXN0ZWxsaWdlIFVtc2F0enN0ZXVlcmlkZW50aWZpa2F0aW9uc251bW1lcjxcL2xpPjxcL3VsPjxwPsKgPFwvcD48cD48Yj5XSUNIVElHOiA8XC9iPkdlYmVuIFNpZSBrZWluZSBrb3JlYW5pc2NoZSBSZWdpc3RyaWVydW5nc251bW1lciAoUGVyc29uZW5rZW5uemlmZmVyKSBhbiwgZGEgZXMgc2ljaCBoaWVyYmVpIHVtIHBlcnPDtm5saWNoZSBEYXRlbiBoYW5kZWx0LCBkaWUgbmFjaCBrb3JlYW5pc2NoZW0gRGF0ZW5zY2h1dHpyZWNodCBuaWNodCBlcmhvYmVuIHdlcmRlbiBkYXJmLjxcL3A+PHA+wqA8XC9wPjxwPkVzIHdpcmQgZW1wZm9obGVuLCBkaWUgPGI+RW1wZsOkbmdlciBTdGV1ZXItSUQ8XC9iPiB6dXPDpHR6bGljaCBpbiBkZW4gcmVsZXZhbnRlbiBBYnNjaG5pdHRlbiBkZXIgWm9sbHJlY2hudW5nIGFuenVnZWJlbi48XC9wPjxwPsKgPFwvcD48cD5EYXMgZW50c3ByaWNodCBkZW4gaGVyYXVzZ2VnZWJlbmVuIFpvbGxiZXN0aW1tdW5nZW4gKE1pdHRlaWx1bmcgZsO8ciBFeHByZXNzIFpvbGxhYmZlcnRpZ3VuZywgQW5oYW5nIDMpIGRlciBrb3JlYW5pc2NoZW4gWm9sbGJlaMO2cmRlbiB6dW0gMDEuMDcuMjAxOC48XC9wPjxwPsKgPFwvcD48XC9kaXY+PFwvZGl2PiIsImluZGlhX2t5Yy1kZXNjcmlwdGlvbiI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPjxkaXYgY2xhc3M9Im1lc3NhZ2Utd3JhcHBlciI+PHA+QWxsZSA8Yj5XYXJlbnNlbmR1bmdlbjxcL2I+IChXUFgpIDxiPm5hY2ggSW5kaWVuPFwvYj4gZXJmb3JkZXJuOjxcL3A+XG48dWw+XG48bGk+RGVyIEVtcGbDpG5nZXIgbXVzcyBJaHJlIEt1bmRlbmRva3VtZW50ZSB2b3JsaWVnZW4gaGFiZW4gKEtZQzogR292ZXJubWVudCByZWNvZ25pemVkIGlkZW50aWZ5IGFuZCBhZGRyZXNzIHByb29mKSwgZGllIGRlbSBab2xsIHp1ciBBYndpY2tsdW5nIGRlciBTZW5kdW5nIGJlcmVpdGdlc3RlbGx0IHdlcmRlbi48XC9saT5cbjxsaT5JbXBvcnRhYndpY2tsdW5nIGthbm4gbmljaHQgZHVyY2hnZWbDvGhydCB3ZXJkZW4gYmlzIGRpZSBLWUMtRG9rdW1lbnRlIHVuZCBkYXMgR2VuZWhtaWd1bmdzc2NocmVpYmVuIChQT0EpIGhvY2hnZWxhZGVuIHNpbmQuPFwvbGk+XG48XC91bD5cbjxwPsKgPFwvcD5cbjxwPjxiPkbDvHIgUHJpdmF0cGVyc29uZW48XC9iPjxcL3A+XG48cD5EaWUgS1lDIERva3VtZW50ZSBkZXMgRW1wZsOkbmdlcnMgd2llOiBQYXNzLCBWb3RlciBJRCwgRsO8aHJlcnNjaGVpbiwgUGVybWFuZW50IEFjY291bnQgTnVtYmVyIChQQU4pIHVuZCBHZW5laG1pZ3VuZ3NzY2hyZWliZW4gKFBPQSkuPFwvcD5cbjxwPsKgPFwvcD5cbjxwPjxiPkbDvHIgVW50ZXJuZWhtZW48XC9iPjxcL3A+XG48cD5VbnRlcm5laG1lbnMtSW1wb3J0IHVuZCBFeHBvcnQgWmVydGlmaWthdGUgKElFQyksIEtZQyB1bmQgUE9BLjxcL3A+XG48dWw+XG48bGk+RsO8ciBJbXBvcnQtU2VuZHVuZ2VuLCBkaWUgZGVtIEVtcGbDpG5nZXIgaW4gSW5kaWVuIGluIFJlY2hudW5nIGdlc3RlbGx0IHdlcmRlbiwgd2lyZCBzaWNoIERITCBJbmRpYSBtaXQgZGVtIEVtcGbDpG5nZXIgYmV6w7xnbGljaCBkZXIgS1lDIHVuZCBQT0EgRG9rdW1lbnRlIGluIFZlcmJpbmR1bmcgc2V0emVuPFwvbGk+XG48bGk+RsO8ciBJbXBvcnQtU2VuZHVuZ2VuLCBkaWUgaW0gQWJob2xsYW5kIGluIFJlY2hudW5nIGdlc3RlbGx0IHdlcmRlbiwgc29sbHRlIGRlciBWZXJzZW5kZXIgZGVuIEVtcGbDpG5nZXIgZGFyw7xiZXIgaW5mb3JtaWVyZW4gZGllIFBPQSB1bmQgS1lDIERva3VtZW50ZSBob2NoenVsYWRlbjxcL2xpPlxuPGxpPkVtcGbDpG5nZXIgRS1NYWlsIEFkcmVzc2UgdW5kIE1vYmlsZnVua251bW1lciBzaW5kIGVyZm9yZGVybGljaCAobcO8c3NlbiBhdWYgZGVtIEZyYWNodGJyaWVmIGVyc2NoZWluZW4pPFwvbGk+XG48XC91bD5cbjxwPsKgPFwvcD5cbjxwPjxhIGhyZWY9XCJodHRwOi8vd3d3LmRobGluZGlhLWt5Yy5jb20vXCI+VXBsb2FkIEtZQyBhbmQgUE9BIGRvY3VtZW50czxcL2E+PFwvcD5cbjxwPsKgPFwvcD5cbjxwPjxhIGhyZWY9XCJodHRwOi8vd3d3LmRobC5jby5pbi9lbi9pbXBvcnRhbnRfaW5mb3JtYXRpb24vMDQwMzE0Lmh0bVwiPkRldGFpbHM8XC9hPjxcL3A+XG48XC9kaXY+PFwvZGl2PiIsInRoZV9zaGlwbWVudF9vZl9mb2xsb3dpbmdfaXRlbXNfbXVzdF9iZV9ub3RpZmllZF9pbl9hZHZhbmNlX2J5X3RoZV9tZW1iZXJfc3RhdGVzX3RvX3RoZV91bl9zZWN1cml0eV9jb3VuY2lsX3dlYXBvbnNfYW1tdW5pdGlvbl9taWxpdGFyeV92ZWhpY2xlc19taWxpdGFyeV9lcXVpcG1lbnRfbWlsaXRhcnlfYXR0YWNrX2FpcmNyYWZ0X29yX2hlbGljb3B0ZXJzX2R1YWxfdXNlX3NwYXJlX3BhcnRzX2Zvcl9hYm92ZV9pdGVtc18tYWxlcnRuYW1lIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+PGRpdiBjbGFzcz0ibWVzc2FnZS13cmFwcGVyIj48cD5EYXMgVmVyc2VuZGVuIGZvbGdlbmRlciBHZWdlbnN0w6RuZGUgbXVzcyBpbSBWb3JmZWxkIHZvbiBkZW0gTWl0Z2xpZWRzbGFuZCBhbiBkZW4gU2ljaGVyaGVpdHNyYXQgZGVyIFVOIGdlbWVsZGV0IHdlcmRlbjo6PFwvcD5cbjx1bD5cbjxsaT5XYWZmZW48XC9saT5cbjxsaT5NdW5pdGlvbjxcL2xpPlxuPGxpPk1pbGl0w6RyZmFocnpldWdlPFwvbGk+XG48bGk+TWlsaXTDpHJhdXNyw7xzdHVuZzxcL2xpPlxuPGxpPk1pbGl0w6RyaXNjaGUgRmx1Z3pldWdlIG9kZXIgSGVsaWtvcHRlcjxcL2xpPlxuPGxpPkR1YWwgdXNlIHZvbiBFcnNhdHp0ZWlsZW4gZ2lsdCBmw7xyIGRpZSBvYmVuIGdlbmFubnRlbiBHZWdlbnN0w6RuZGU8XC9saT5cbjxcL3VsPlxuPHA+IERITCBFeHByZXNzIHZlcnBmbGljaHRldCBzaWNoIGRhenUgZGllIGfDvGx0aWdlbiBJbnRlcm5hdGlvbmFsZW4gSGFuZGVsc2dlc2V0emUgaW5rbHVzaXZlIHJlbGV2YW50ZXIgRXhwb3J0a29udHJvbGxlbiB1bmQgU2Fua3Rpb25zcmVzdHJpa3Rpb25lbiBlaW56dWhhbHRlbi4gUGFyYWxsZWwgenUgdW5zZXJlbiBFaW5oYWx0dW5nc21hc3NuYWhtZW4gdm9uIEhhbmRlbHNiZXN0aW1tdW5nZW4sIGFremVwdGllcnQgREhMIGdlbmVyZWxsIGtlaW5lIFphaGx1bmdlbiBmw7xyIFNlbmR1bmdlbiAob2RlciBhbmRlcmUgVHJhbnNha3Rpb25lbikgYXXDn2VyaGFsYiBkZXIgVVNBIGluIFVTLURvbGxhciBmw7xyIHZvbiBkZW4gVVNBIHNhbmt0aW9uaWVydGVuIEzDpG5kZXJuLjxcL3A+XG48XC9kaXY+PFwvZGl2PiIsImJlbGFydXMtZGVzY3JpcHRpb24iOiIiLCJiYXJiYWRvcy1kZXNjcmlwdGlvbiI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPjxkaXYgY2xhc3M9Im1lc3NhZ2Utd3JhcHBlciI+PHA+RsO8ciBTZW5kdW5nZW4gbmFjaCA8Yj5CYXJiYWRvczxcL2I+OjxcL3A+XG48cD7CoDxcL3A+XG48dWw+XG48bGk+RGllIE9yaWdpbmFscmVjaG51bmcgZGVzIExpZWZlcmFudGVuIG9kZXIgZGVyIEthdWZuYWNod2VpcyBpc3QgZsO8ciBkaWUgWm9sbGFiZmVydGlndW5nIGVyZm9yZGVybGljaC48XC9saT5cbjxsaT5FaW5lIEhhbmRlbHNyZWNobnVuZywgZGllIGR1cmNoIE15REhMKyBnZW5lcmllcnQgd3VyZGUsIHdpcmQgdm9tIFpvbGwgbmljaHQgYWt6ZXB0aWVydC4gRWluZSBIYW5kZWxzcmVjaG51bmcsIGRpZSDDvGJlciBNeURITCsgZXJzdGVsbHQgd3VyZGUsIGthbm4gYXVmZ3J1bmQgZGVyIEV4cG9ydGJlc3RpbW11bmdlbiBkZXMgVXJzcHJ1bmdzbGFuZGVzIGVyZm9yZGVybGljaCBzZWluLjxcL2xpPlxuPFwvdWw+XG48XC9kaXY+PFwvZGl2PiIsImNoaW5hLWRlc2NyaXB0aW9uIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+QWNjb3JkaW5nIHRvIGdvdmVybm1lbnQgbWFuZGF0ZXMsIHNvbWUgcHJvdmluY2VzIGFuZCBjaXRpZXMgaGF2ZSByZXR1cm5lZCB0byB3b3JrIHN0YXJ0aW5nIGZyb20gRmVicnVhcnkgMTB0aCAyMDIwLiBESEwgRXhwcmVzcyB3b3JrcyB3aXRoIGFsbCBnb3Zlcm5tZW50YWwgcmVndWxhdGlvbnMgdG8gYWRqdXN0IG91ciBzZXJ2aWNlIGFjY29yZGluZ2x5LiBQbGVhc2UgY2xpY2sgPGEgaHJlZj1cImh0dHBzOi8vZm9ybXMub2ZmaWNlLmNvbS9QYWdlcy9SZXNwb25zZVBhZ2UuYXNweD9pZD1EUVNJa1dkc1cweXhFamFqQkxadHJRQUFBQUFBQUFBQUFBTUFBQ2lMcVU5VVJFaFhNVVZKT0ZSTlNUZEhPRXBVTjBNeVRrVkhXbEpTUkM0dVwiPmhlcmU8XC9hPiB0byBmaW5kIGRldGFpbGVkIGxvY2FsIHNlcnZpY2UgYW5kIGN1dC1vZmYgdGltZSBpbmZvcm1hdGlvbi4gQ3VycmVudGx5IGNhc2ggcGljay11cCBzZXJ2aWNlIGlzIHN1c3BlbmRlZCB1bnRpbCBmdXJ0aGVyIG5vdGljZS48XC9kaXY+IiwibnotZGVzY3JpcHRpb24iOiI8ZGl2IGNsYXNzPVwiZXdmX2RpY3Rpb25hcnlfdmFsdWVcIj48ZGl2IGNsYXNzPSJtZXNzYWdlLXdyYXBwZXIiPjxwPkFiIGRlbSAxLiBEZXplbWJlciAyMDE5IHZlcmxhbmd0IGRpZSBuZXVzZWVsw6RuZGlzY2hlIFJlZ2llcnVuZyB2b24gVW50ZXJuZWhtZW4sIGRpZSBqw6RocmxpY2ggbWVociBhbHMgNjAuMDAwIE5aRCBhbiBEaWVuc3RsZWlzdHVuZ2VuIHVuZCBnZXJpbmd3ZXJ0aWdlbiBHw7x0ZXJuIGxpZWZlcm4sIGRhc3Mgc2llIGRpZSBHb29kcyAmIFNlcnZpY2VzIFRheCAoR1NUKSBhbSBWZXJrYXVmc29ydCBlaW56aWVoZW4gdW5kIGRpcmVrdCBkZW0gRmluYW56YW10IHp1ZsO8aHJlbi4gREhMIEV4cHJlc3Mgd2lyZCBkaWUgR1NUIGbDvHIgU2VuZHVuZ2VuIG5pY2h0IG1laHIgZWluemllaGVuIHVuZCB3ZWl0ZXJsZWl0ZW4uPFwvcD5cbjxwPsKgPFwvcD5cbjx1bD5cbjxsaT5FaW5nYWJlIGRlciBSZWdpc3RyaWVydW5nc251bW1lciBkZXMgdHJhbnNhdGxhbnRpc2NoZW4gTGllZmVyYW50ZW4gaW4gZGFzIEVtcGbDpG5nZXIgTXdTdC9TdGV1ZXItSUQgRmVsZC48XC9saT5cbjxsaT5HZWJlbiBTaWUgaW0gQmVtZXJrdW5nc2ZlbGQgZGVyIFJlY2hudW5nIGFuLCBmw7xyIHdlbGNoZSBQb3NpdGlvbiBkaWUgR1NUL09TUCBiZXphaGx0IHd1cmRlLjxcL2xpPlxuPFwvdWw+XG48XC9kaXY+PFwvZGl2PiIsImNnX2VyX2xiX2x5X3NvX3NkLWRlc2NyaXB0aW9uIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+PGRpdiBjbGFzcz0ibWVzc2FnZS13cmFwcGVyIj48cD5EaWUgZm9sZ2VuZGVuIEdlZ2Vuc3TDpG5kZSBzaW5kIHZlcmJvdGVuPFwvcD5cbjxwPiA8XC9wPlxuPHVsPlxuPGxpPldhZmZlbjxcL2xpPlxuPGxpPk11bml0aW9uPFwvbGk+XG48bGk+TWlsaXTDpHJmYWhyemV1Z2U8XC9saT5cbjxsaT5NaWxpdMOkcmF1c3LDvHN0dW5nPFwvbGk+XG48bGk+TWlsaXTDpHJpc2NoZSBGbHVnemV1Z2Ugb2RlciBIZWxpa29wdGVyPFwvbGk+XG48bGk+RHVhbCB1c2Ugdm9uIEVyc2F0enRlaWxlbiBnaWx0IGbDvHIgZGllIG9iZW4gZ2VuYW5udGVuIEdlZ2Vuc3TDpG5kZTxcL2xpPlxuPFwvdWw+XG48XC9kaXY+PFwvZGl2PiIsImNvdGVfZF9pdm9pcmUtZGVzY3JpcHRpb24iOiI8ZGl2IGNsYXNzPVwiZXdmX2RpY3Rpb25hcnlfdmFsdWVcIj48ZGl2IGNsYXNzPSJtZXNzYWdlLXdyYXBwZXIiPjxwPkRpZSBmb2xnZW5kZW4gR2VnZW5zdMOkbmRlIHNpbmQgdmVyYm90ZW48XC9wPlxuPHA+wqA8XC9wPlxuPHA+RsO8ciBTZW5kdW5nZW4gPGI+aW4gZGllIEVsZmVuYmVpbmvDvHN0ZSBhdXMgTWl0Z2xpZWRzc3RhYXRlbiBkZXIgRXVyb3DDpGlzY2hlbiBVbmlvbjxcL2I+OjxcL3A+XG48dWw+XG48bGk+V2FmZmVuPFwvbGk+XG48bGk+TXVuaXRpb248XC9saT5cbjxsaT5NaWxpdMOkcmZhaHJ6ZXVnZTxcL2xpPlxuPGxpPk1pbGl0w6RyYXVzcsO8c3R1bmc8XC9saT5cbjxsaT5NaWxpdMOkcmlzY2hlIEZsdWd6ZXVnZSBvZGVyIEhlbGlrb3B0ZXI8XC9saT5cbjxsaT5EdWFsIHVzZSB2b24gRXJzYXR6dGVpbGVuIGdpbHQgZsO8ciBkaWUgb2JlbiBnZW5hbm50ZW4gR2VnZW5zdMOkbmRlPFwvbGk+XG48XC91bD5cbjxwPsKgPFwvcD5cbjxwPkbDvHIgU2VuZHVuZ2VuIDxiPmF1cyBkZXIgRWxmZW5iZWlua8O8c3RlPFwvYj46PFwvcD5cbjx1bD5cbjxsaT5EaXJla3RlciBvZGVyIGluZGlyZWt0ZXIgSW1wb3J0IHZvbiBSb2hkaWFtYW50ZW48XC9saT5cbjxcL3VsPlxuPHA+REhMIEV4cHJlc3MgdmVycGZsaWNodGV0IHNpY2ggZGF6dSBkaWUgZ8O8bHRpZ2VuIEludGVybmF0aW9uYWxlbiBIYW5kZWxzZ2VzZXR6ZSBpbmtsdXNpdmUgcmVsZXZhbnRlciBFeHBvcnRrb250cm9sbGVuIHVuZCBTYW5rdGlvbnNyZXN0cmlrdGlvbmVuIGVpbnp1aGFsdGVuLiBQYXJhbGxlbCB6dSB1bnNlcmVuIEVpbmhhbHR1bmdzbWFzc25haG1lbiB2b24gSGFuZGVsc2Jlc3RpbW11bmdlbiwgYWt6ZXB0aWVydCBESEwgZ2VuZXJlbGwga2VpbmUgWmFobHVuZ2VuIGbDvHIgU2VuZHVuZ2VuIChvZGVyIGFuZGVyZSBUcmFuc2FrdGlvbmVuKSBhdcOfZXJoYWxiIGRlciBVU0EgaW4gVVMtRG9sbGFyIGbDvHIgdm9uIGRlbiBVU0Egc2Fua3Rpb25pZXJ0ZW4gTMOkbmRlcm4uPFwvcD5cbjxcL2Rpdj48XC9kaXY+IiwidHVya2V5LWRlc2NyaXB0aW9uIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+PGRpdiBjbGFzcz0ibWVzc2FnZS13cmFwcGVyIj48cD5Gw7xyIFNlbmR1bmdlbiBpbiBkaWUgVMO8cmtlaSBtaXQgZWluZW0gV2FyZW53ZXJ0IMO8YmVyIDIyIEVVUiBvZGVyIHpvbGxwZmxpY2h0aWdlIFNlbmR1bmdlbiBtw7xzc2VuIHZvbSBFbXBmw6RuZ2VyIGZvbGdlbmRlIERldGFpbHMgYW5nZWdlYmVuIHdlcmRlbiAoVkFUL1RBWCBJRCBGZWxkKTo8XC9wPlxuPHVsPlxuPGxpPlVudGVybmVobWVuIC0gVkFUIE51bW1lcjxcL2xpPlxuPGxpPlByaXZhdHBlcnNvbiAtIFRSIElEIE51bW1lcjxcL2xpPlxuPGxpPkF1c2zDpG5kaXNjaGUgUGFzc251bW1lciAobmljaHQgVMO8cmtpc2NoKTxcL2xpPlxuPFwvdWw+XG48cD7CoDxcL3A+XG48cD5BbHMgVGVpbCBkZXIgV2FyZW5kZWtsYXJhdGlvbiBtdXNzIGRlciA0LXN0ZWxsaWdlbiBIUyBDb2RlIChIYXJtb25pemVkIFN5c3RlbSBDb2RlKSBhbmdlZ2ViZW4gd2VyZGVuICg2LXN0ZWxsaWdlIENvZGVzIGvDtm5uZW4gYXVjaCBiZW51dHp0IHdlcmRlbikuPFwvcD5cbjxwPsKgPFwvcD5cbjxwPkRlciBWZXJzZW5kZXIgbXVzcyBhbGxlIGVyZm9yZGVybGljaGVuIEluZm9ybWF0aW9uZW4gaW4gZGVuIHJlbGV2YW50ZW4gQWJzY2huaXR0ZW4gZGVzIEZyYWNodGJyaWVmcyB1bmQgZGVyIFpvbGxyZWNobnVuZyBlaW50cmFnZW4uPFwvcD5cbjxwPsKgPFwvcD5cbjxwPkRhcyB1bnRlcmxpZWd0IGRlbiBab2xscmVndWxhcmllbiAoMDcuMTAuMjAwOSB0LiAyNzM2OSBzLiBSLiBHLiAtIEVrLTEwKSAsIGRpZSB2b20gTWluaXN0ZXJpdW0gZsO8ciBab2xsIHVuZCBIYW5kZWwgYW0gMS5KdW5pIDIwMTYgdmVyYWJzY2hpZWRldCB3dXJkZW4uPFwvcD5cbjxcL2Rpdj48XC9kaXY+IiwidGhlX2ltcG9ydF9vZl9kaGxfZXhwcmVzc193b3JsZHdpZGVfbm9uLWRvY3VtZW50X2VfZ19kdXRpYWJsZV9zaGlwbWVudHNfYWRkcmVzc2VkX3RvX3ByaXZhdGVfaW5kaXZpZHVhbHNfaGFzX2JlZW5fdGVtcG9yYXJpbHlfcmVzdHJpY3RlZF90b19hbGxfZGVzdGluYXRpb25zX2luX3J1c3NpYV90aGlzX2lzX2R1ZV90b19jaGFuZ2VzX2luX2N1c3RvbXNfY2xlYXJhbmNlX3Byb2NlZHVyZXNfZm9yX2FsbF9leHByZXNzX2NhcnJpZXJzX2ltcGxlbWVudGVkX2luXzIwMTBfdGhlcmVfYXJlX25vX3Jlc3RyaWN0aW9uc19vbl90aGVfaW1wb3J0X29mX2V4cHJlc3Nfc2hpcG1lbnRzX2FkZHJlc3NlZF90b19jb3Jwb3JhdGVfZW50aXRpZXNfYW5kX29yZ2FuaXphdGlvbnNfZm9yX2Z1cnRoZXJfZGV0YWlsc19wbGVhc2VfY29udGFjdF9ydV9jdXN0b21zX2Nvb3JkaW5hdG9yc19ncm91cF9ieV9lbWFpbF9ydWNjZ19kaGxfY29tXy1hbGVydG5hbWUiOiI8ZGl2IGNsYXNzPVwiZXdmX2RpY3Rpb25hcnlfdmFsdWVcIj48ZGl2IGNsYXNzPSJtZXNzYWdlLXdyYXBwZXIiPjxwPkRlciBJbXBvcnQgdm9uIHpvbGxwZmxpY2h0aWdlbiBXYXJlbiBtaXQgREhMIEVYUFJFU1MgbmFjaCBSdXNzbGFuZCB1bnRlcmxpZWd0IGZvbGdlbmRlbiBCZWRpbmd1bmdlbiBhbiBkaWUgRW1wZsOkbmdlcjo8XC9wPlxuPHA+wqA8XC9wPlxuPHVsPlxuPGxpPlByaXZhdHBlcnNvbmVuIC0gaXN0IG5pY2h0IGVybGF1YnQqPFwvbGk+XG48bGk+S2FwaXRhbGdlc2VsbHNjaGFmdGVuIHVuZCBVbnRlcm5laG1lbiAtIGlzdCBlcmxhdWJ0PFwvbGk+XG48XC91bD5cbjxwPsKgPFwvcD5cbjxwPkZhbGxzIFNpZSB6dXPDpHR6bGljaGUgRGV0YWlscyBiZW7DtnRpZ2VuLCBrb250YWt0aWVyZW4gU2llIGJpdHRlIGRpZSBESEwgQ3VzdG9tcyBDb29yZGluYXRvcnMgR3JvdXAgdW50ZXIgZGVyIEUtTWFpbDogcnVjY2dAZGhsLmNvbTxcL3A+XG48cD7CoDxcL3A+XG48cD4qQXVmZ3J1bmQgdm9uIMOEbmRlcnVuZ2VuIGltIFpvbGxhYndpY2tsdW5nc3ZlcmZhaHJlbiBmw7xyIGFsbGUgRXhwcmVzcy1EaWVuc3RsZWlzdGVyIGF1cyBkZW0gSmFociAyMDEwPFwvcD5cbjxcL2Rpdj48XC9kaXY+IiwiaXRfaXNfZGhsX3NfcG9saWN5X3RvX2NvbXBseV93aXRoX2FwcGxpY2FibGVfaW50ZXJuYXRpb25hbF90cmFkZV9sYXdzX2luY2x1ZGluZ19yZWxldmFudF9leHBvcnRfY29udHJvbF9hbmRfc2FuY3Rpb25zX3Jlc3RyaWN0aW9uc19pbl9wYXJhbGxlbF93aXRoX291cl90cmFkZV9jb21wbGlhbmNlX21lYXN1cmVzX2RobF9kb2VzX25vdF9hY2NlcHRfcGF5bWVudF9mb3Jfc2hpcG1lbnRzX29yX290aGVyX3RyYW5zYWN0aW9uc19vdXRzaWRlX29mX3RoZV91bml0ZWRfc3RhdGVzX2luX3Vfc19kb2xsYXJzX2Zvcl91X3Nfc2FuY3Rpb25lZF9jb3VudHJpZXNfaV9lX2N1cnJlbnRseV9jdWJhX2NyaW1lYV9pcmFuX3N5cmlhX3N1ZGFuX2FuZF90aGVfZGVtb2NyYXRpY19wZW9wbGVfc19yZXB1YmxpY19vZl9rb3JlYV9kcHJfa29yZWFfb3Jfbm9ydGhfa29yZWFfLWFsZXJ0bmFtZSI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPjxkaXYgY2xhc3M9Im1lc3NhZ2Utd3JhcHBlciI+PHA+REhMIEV4cHJlc3MgdmVycGZsaWNodGV0IHNpY2ggZGF6dSBkaWUgZ8O8bHRpZ2VuIEludGVybmF0aW9uYWxlbiBIYW5kZWxzZ2VzZXR6ZSBpbmtsdXNpdmUgcmVsZXZhbnRlciBFeHBvcnRrb250cm9sbGVuIHVuZCBTYW5rdGlvbnNyZXN0cmlrdGlvbmVuIGVpbnp1aGFsdGVuLiA8XC9wPlxuPHA+IDxcL3A+XG48cD5QYXJhbGxlbCB6dSB1bnNlcmVuIEVpbmhhbHR1bmdzbWFzc25haG1lbiB2b24gSGFuZGVsc2Jlc3RpbW11bmdlbiwgYWt6ZXB0aWVydCBESEwgZ2VuZXJlbGwga2VpbmUgWmFobHVuZ2VuIGbDvHIgU2VuZHVuZ2VuIChvZGVyIGFuZGVyZSBUcmFuc2FrdGlvbmVuKSBhdcOfZXJoYWxiIGRlciBVU0EgaW4gVVMtRG9sbGFyIGbDvHIgdm9uIGRlbiBVU0Egc2Fua3Rpb25pZXJ0ZW4gTMOkbmRlcm4uPFwvcD5cbjxcL2Rpdj48XC9kaXY+IiwibXlhbm1hci1kZXNjcmlwdGlvbiI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPjxkaXYgY2xhc3M9Im1lc3NhZ2Utd3JhcHBlciI+PHA+VW52ZXJwYWNrdGUvTG9zZSBMaXRoaXVtLUlvbmVuLUJhdHRlcmllbiAoVU4zNDgwL1BJOTY1KSA8Yj53ZXJkZW4gbmljaHQgenVyIEJlZsO2cmRlcnVuZyBha3plcHRpZXJ0LjxcL2I+PFwvcD5cbjxwPkRITCBFeHByZXNzIHZlcnBmbGljaHRldCBzaWNoIGRhenUgZGllIGfDvGx0aWdlbiBJbnRlcm5hdGlvbmFsZW4gSGFuZGVsc2dlc2V0emUgaW5rbHVzaXZlIHJlbGV2YW50ZXIgRXhwb3J0a29udHJvbGxlbiB1bmQgU2Fua3Rpb25zcmVzdHJpa3Rpb25lbiBlaW56dWhhbHRlbi48XC9wPlxuPHA+PGEgZXdmLWxpZ2h0Ym94PVwiZXdmLWxpZ2h0Ym94XCIgaHJlZj1cIi9jb250ZW50L2RobC9hdC9kZS9oZWxwLWNlbnRlci9pbnRlcm5hdGlvbmFsLXNoaXBwaW5nL2xpdGhpdW0tYmF0dGVyaWVzLmh0bWxcIiB0YXJnZXQ9XCJsaWdodGJveFwiPkRldGFpbHM8XC9hPjxcL3A+XG48XC9kaXY+PFwvZGl2PiIsImtyX2N1c3RvbXNfcmVxdWlyZV9mb3JtYWxfZXhwb3J0X2Zvcl9tYXNrc190b19jbi1kZXNjcmlwdGlvbiI6IktSIGN1c3RvbXMgcmVxdWlyZSBmb3JtYWwgZXhwb3J0IGZvciBNYXNrcyB0byBDTiIsImJhaGFtYXMtZGVzY3JpcHRpb24iOiI8ZGl2IGNsYXNzPVwiZXdmX2RpY3Rpb25hcnlfdmFsdWVcIj48ZGl2IGNsYXNzPSJtZXNzYWdlLXdyYXBwZXIiPjxwPkbDvHIgU2VuZHVuZ2VuIGF1ZiBkaWUgPGI+QmFoYW1hczxcL2I+OjxcL3A+XG48cD7CoDxcL3A+XG48dWw+XG48bGk+RGllIE9yaWdpbmFscmVjaG51bmcgZGVzIExpZWZlcmFudGVuIG9kZXIgZGVyIEthdWZuYWNod2VpcyBpc3QgZsO8ciBkaWUgWm9sbGFiZmVydGlndW5nIGVyZm9yZGVybGljaC48XC9saT5cbjxsaT5FaW5lIEhhbmRlbHNyZWNobnVuZywgZGllIGR1cmNoIE15REhMKyBnZW5lcmllcnQgd3VyZGUsIHdpcmQgdm9tIFpvbGwgbmljaHQgYWt6ZXB0aWVydC4gRWluZSBIYW5kZWxzcmVjaG51bmcsIGRpZSDDvGJlciBNeURITCsgZXJzdGVsbHQgd3VyZGUsIGthbm4gYXVmZ3J1bmQgZGVyIEV4cG9ydGJlc3RpbW11bmdlbiBkZXMgVXJzcHJ1bmdzbGFuZGVzIGVyZm9yZGVybGljaCBzZWluLjxcL2xpPlxuPFwvdWw+XG48XC9kaXY+PFwvZGl2PiIsInRoZV9kZXN0aW5hdGlvbl9jb3VudHJ5X3NlbGVjdGVkX2Zvcl90aGlzX3NoaXBtZW50X2lzX2FfdW5fc2FuY3Rpb25lZF9jb3VudHJ5X2luX2NvbXBsaWFuY2VfdG9fdGhlX3VuX3Jlc29sdXRpb25fZGhsX2V4cHJlc3NfY2Fubm90X3NoaXBfdW5fc2FuY3Rpb25lZF9hbmRfb3JfY2xhc3NpZmllZF9wcm9oaWJpdGVkX2NvbW1vZGl0aWVzX3RvX3RoZV9yZXN0cmljdGVkX2NvdW50cnlfaXRfaXNfZGhsX3NfcG9saWN5X3RvX2NvbXBseV93aXRoX2FwcGxpY2FibGVfaW50ZXJuYXRpb25hbF90cmFkZV9sYXdzX2luY2x1ZGluZ19yZWxldmFudF9leHBvcnRfY29udHJvbF9hbmRfc2FuY3Rpb25zX3Jlc3RyaWN0aW9uc18tYWxlcnRuYW1lIjoiU2VuZHVuZ2VuIGluIGRhcyBhdXNnZXfDpGhsdGUgRW1wZmFuZ3NsYW5kLCBrw7ZubmVuIG11bHRpbGF0ZXJhbGVuIHVuZC9vZGVyIGVpbnNlaXRpZ2VuIFNhbmt0aW9uZW4gdW5kIEF1c2Z1aHJrb250cm9sbGVuIHVudGVybGllZ2VuLiIsInBvcnR1Z2FsLWRlc2NyaXB0aW9uIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+PGRpdiBjbGFzcz0ibWVzc2FnZS13cmFwcGVyIj48cD5XaWNodGlnISBGb3Igc2hpcG1lbnRzIHRvIFBvcnR1Z2FsIHRoYXQgbmVlZCBhIENvbW1lcmNpYWwgQ3VzdG9tcyBJbnZvaWNlLCB0aGUgaW52b2ljZSBtdXN0OjxcL3A+XG48cD5cdTIwMjIgQmUgY3JlYXRlZCB2aWEgdGhlIFBvcnR1Z2FsIFRheCBBdXRob3JpdHkgc2l0ZTxcL3A+XG48cD5cdTIwMjIgQmUgcHJpbnRlZCBvbiB5b3VyIGNvbXBhbnkgbGV0dGVyaGVhZDxcL3A+XG48cD5cdTIwMjIgQ29udGFpbiBhbiBhdXRob3JpemVkIHNpZ25hdHVyZTxcL3A+XG48cD5cdTIwMjIgSW5jbHVkZSBhIGNvbXBhbnkgc3RhbXA8XC9wPlxuPHA+wqA8XC9wPlxuPHA+U2hpcG1lbnRzIHRoYXQgZG8gbm90IGhhdmUgdGhlIHByb3BlciBjb21tZXJjaWFsIGludm9pY2UgbWF5IGJlIHJlamVjdGVkIGJ5IGN1c3RvbXMgb3IgcmVzdWx0IGluIGN1c3RvbXMgY2xlYXJhbmNlIGRlbGF5cy48XC9wPlxuPFwvZGl2PjxcL2Rpdj4iLCJiZXJtdWRhLWRlc2NyaXB0aW9uIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+PGRpdiBjbGFzcz0ibWVzc2FnZS13cmFwcGVyIj48cD5Gb3Igc2hpcG1lbnRzIHRvwqA8Yj5CZXJtdWRhPFwvYj46PFwvcD5cbjxwPsKgPFwvcD5cbjx1bD5cbjxsaT5UaGUgb3JpZ2luYWwgc3VwcGxpZXJzIGludm9pY2Ugb3IgcHJvb2Ygb2YgcHVyY2hhc2UgaXMgcmVxdWlyZWQgdG8gY2xlYXIgY3VzdG9tcy48XC9saT5cbjxsaT5UaGUgY29tbWVyY2lhbCBpbnZvaWNlIGdlbmVyYXRlZCB0aHJvdWdoIE15REhMKyB3aWxsIG5vdCBiZSBzdWZmaWNpZW50LiBBIGNvbW1lcmNpYWwgaW52b2ljZSBnZW5lcmF0ZWQgdGhyb3VnaCBNeURITCsgbWlnaHQgc3RpbGwgYmUgcmVxdWlyZWQgYnkgZXhwb3J0IHJlZ3VsYXRpb25zIGluIHRoZSBjb3VudHJ5IG9mIG9yaWdpbi48XC9saT5cbjxcL3VsPlxuPFwvZGl2PjxcL2Rpdj4iLCJydXNzaWFfLV9kdXR5X3NoaXBtZW50c190b19wcml2YXRlX2luZGl2aWR1YWxzLWRlc2NyaXB0aW9uIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+PGRpdiBjbGFzcz0ibWVzc2FnZS13cmFwcGVyIj48cD5EZXIgSW1wb3J0IHZvbiB6b2xscGZsaWNodGlnZW4gV2FyZW4gbWl0IERITCBFWFBSRVNTIG5hY2ggUnVzc2xhbmQgdW50ZXJsaWVndCBmb2xnZW5kZW4gQmVkaW5ndW5nZW4gYW4gZGllIEVtcGbDpG5nZXI6PFwvcD5cbjxwPsKgPFwvcD5cbjx1bD5cbjxsaT5Qcml2YXRwZXJzb25lbiAtIGlzdCBuaWNodCBlcmxhdWJ0KjxcL2xpPlxuPGxpPkthcGl0YWxnZXNlbGxzY2hhZnRlbiB1bmQgVW50ZXJuZWhtZW4gLSBpc3QgZXJsYXVidDxcL2xpPlxuPFwvdWw+XG48cD7CoDxcL3A+XG48cD5GYWxscyBTaWUgenVzw6R0emxpY2hlIERldGFpbHMgYmVuw7Z0aWdlbiwga29udGFrdGllcmVuIFNpZSBiaXR0ZSBkaWUgREhMIEN1c3RvbXMgQ29vcmRpbmF0b3JzIEdyb3VwIHVudGVyIGRlciBFLU1haWw6IHJ1Y2NnQGRobC5jb208XC9wPlxuPHA+wqA8XC9wPlxuPHA+KkF1ZmdydW5kIHZvbiDDhG5kZXJ1bmdlbiBpbSBab2xsYWJ3aWNrbHVuZ3N2ZXJmYWhyZW4gZsO8ciBhbGxlIEV4cHJlc3MtRGllbnN0bGVpc3RlciBhdXMgZGVtIEphaHIgMjAxMC48XC9wPlxuPFwvZGl2PjxcL2Rpdj4iLCJrcl9mb3JtYWxfZXhwb3J0X2RlY2xhcmF0aW9uX2Zvcl9tYXNrLWRlc2NyaXB0aW9uIjoiRm9ybWFsIGV4cG9ydCBkZWNsYXJhdGlvbiBmb3IgbWFza3Mgb3ZlciAxLDAwMHBjcyBwZXIgV0IgcmVnYXJkbGVzcyBvZiBpdHMgdmFsdWUuIEEgcmVhc29uIHN0YXRlbWVudCBhbmQgb25lIG9mIHRoZSBmb2xsb3dpbmcgZG9jdW1lbnRzKHB1cmNoYXNlIG9yZGVyICYgY2VydGlmaWNhdGUgb2YgbWFudWZhY3R1cmUsIHNwZWNpZmljYXRpb24gb2YgdHJhbnNhY3Rpb24gYW5kIHJlZmVyZW5jZXMgZm9yIGNvbmZpcm1hdGlvbiBvZiBvdmVyc2VhcyBicmFuY2hlcykgY291bGQgYmUgcmVxdWlyZWQuIiwiam9yZGFuLWRlc2NyaXB0aW9uIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+PGRpdiBjbGFzcz0ibWVzc2FnZS13cmFwcGVyIj48cD5CZWkgPGI+V2FyZW5zZW5kdW5nZW48XC9iPiBuYWNoIDxiPkpvcmRhbmllbjxcL2I+IGlzdCBkYXMgRmVsZCBNd1N0L1N0ZXVlci1JRCBmw7xyIGRlbiBFbXBmw6RuZ2VyIGVyZm9yZGVybGljaC4gRmFsbHMgZGllIFNlbmR1bmcgZsO8cjo8XC9wPlxuPHA+wqA8XC9wPlxuPHA+PGI+R2VzY2jDpGZ0bGljaGU8XC9iPiBad2Vja2UgXHUyMDEzIGJpdHRlIGZvbGdlbmRlcyBiZXJlaXRzdGVsbGVuOiBTdGV1ZXItSUQtTnVtbWVyPFwvcD5cbjxwPsKgPFwvcD5cbjxwPjxiPlBlcnPDtm5saWNoZTxcL2I+IChuaWNodCBnZXNjaMOkZnRsaWNoZSkgWndlY2tlIFx1MjAxMyBiaXR0ZSBmb2xnZW5kZXMgYmVyZWl0c3RlbGxlbjo8XC9wPlxuPHVsPlxuPGxpPk5hdGlvbmFsZSBJRC1OdW1tZXIgLSBmw7xyIGpvcmRhbmlzY2hlIFN0YWF0c2FuZ2Vow7ZyaWdlPFwvbGk+XG48bGk+UGFzc251bW1lciAtIGFsbGUgYW5kZXJlbjxcL2xpPlxuPFwvdWw+XG48XC9kaXY+PFwvZGl2PiIsInZpcmdpbl9pc2xhbmRzX2JyaXRpc2hfLWRlc2NyaXB0aW9uIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+PGRpdiBjbGFzcz0ibWVzc2FnZS13cmFwcGVyIj48cD5Gw7xyIFNlbmR1bmdlbiBhdWYgZGllIDxiPkJyaXRpc2NoZW4gSnVuZ2Zlcm5pbnNlbG48XC9iPjo8XC9wPlxuPHA+wqA8XC9wPlxuPHVsPlxuPGxpPkRpZSBPcmlnaW5hbHJlY2hudW5nIGRlcyBMaWVmZXJhbnRlbiBvZGVyIGRlciBLYXVmbmFjaHdlaXMgaXN0IGbDvHIgZGllIFpvbGxhYmZlcnRpZ3VuZyBlcmZvcmRlcmxpY2guPFwvbGk+XG48bGk+RWluZSBIYW5kZWxzcmVjaG51bmcsIGRpZSBkdXJjaCBNeURITCsgZ2VuZXJpZXJ0IHd1cmRlLCB3aXJkIHZvbSBab2xsIG5pY2h0IGFremVwdGllcnQuIEVpbmUgSGFuZGVsc3JlY2hudW5nLCBkaWUgw7xiZXIgTXlESEwrIGVyc3RlbGx0IHd1cmRlLCBrYW5uIGF1ZmdydW5kIGRlciBFeHBvcnRiZXN0aW1tdW5nZW4gZGVzIFVyc3BydW5nc2xhbmRlcyBlcmZvcmRlcmxpY2ggc2Vpbi48XC9saT5cbjxcL3VsPlxuPFwvZGl2PjxcL2Rpdj4iLCJuel9hbGVydC1kZXNjcmlwdGlvbiI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPjxkaXYgY2xhc3M9Im1lc3NhZ2Utd3JhcHBlciI+PHA+QWIgZGVtIDEuIERlemVtYmVyIDIwMTkgdmVybGFuZ3QgZGllIG5ldXNlZWzDpG5kaXNjaGUgUmVnaWVydW5nIHZvbiBVbnRlcm5laG1lbiwgZGllIGrDpGhybGljaCBtZWhyIGFscyA2MC4wMDAgTlpEIGFuIERpZW5zdGxlaXN0dW5nZW4gdW5kIGdlcmluZ3dlcnRpZ2VuIEfDvHRlcm4gbGllZmVybiwgZGFzcyBzaWUgZGllIEdvb2RzICYgU2VydmljZXMgVGF4IChHU1QpIGFtIFZlcmthdWZzb3J0IGVpbnppZWhlbiB1bmQgZGlyZWt0IGRlbSBGaW5hbnphbXQgenVmw7xocmVuLiBESEwgRXhwcmVzcyB3aXJkIGRpZSBHU1QgZsO8ciBTZW5kdW5nZW4gbmljaHQgbWVociBlaW56aWVoZW4gdW5kIHdlaXRlcmxlaXRlbi48XC9wPlxuPHA+wqA8XC9wPlxuPHVsPlxuPGxpPkVpbmdhYmUgZGVyIFJlZ2lzdHJpZXJ1bmdzbnVtbWVyIGRlcyB0cmFuc2F0bGFudGlzY2hlbiBMaWVmZXJhbnRlbiBpbiBkYXMgRW1wZsOkbmdlciBNd1N0L1N0ZXVlci1JRCBGZWxkLjxcL2xpPlxuPGxpPkdlYmVuIFNpZSBpbSBCZW1lcmt1bmdzZmVsZCBkZXIgUmVjaG51bmcgYW4sIGbDvHIgd2VsY2hlIFBvc2l0aW9uIGRpZSBHU1QvT1NQIGJlemFobHQgd3VyZGUuPFwvbGk+XG48XC91bD5cbjxcL2Rpdj48XC9kaXY+IiwicGFraXN0YW4tZGVzY3JpcHRpb24iOiI8ZGl2IGNsYXNzPVwiZXdmX2RpY3Rpb25hcnlfdmFsdWVcIj48ZGl2IGNsYXNzPSJtZXNzYWdlLXdyYXBwZXIiPjxwPlVudmVycGFja3RlL0xvc2UgTGl0aGl1bS1Jb25lbi1CYXR0ZXJpZW4gKFVOMzQ4MC9QSTk2NSkgPGI+d2VyZGVuIG5pY2h0IHp1ciBCZWbDtnJkZXJ1bmcgYWt6ZXB0aWVydC48XC9iPjxcL3A+XG48cD5ESEwgRXhwcmVzcyB2ZXJwZmxpY2h0ZXQgc2ljaCBkYXp1IGRpZSBnw7xsdGlnZW4gSW50ZXJuYXRpb25hbGVuIEhhbmRlbHNnZXNldHplIGlua2x1c2l2ZSByZWxldmFudGVyIEV4cG9ydGtvbnRyb2xsZW4gdW5kIFNhbmt0aW9uc3Jlc3RyaWt0aW9uZW4gZWluenVoYWx0ZW4uPFwvcD5cbjxwPjxhIGV3Zi1saWdodGJveD1cImV3Zi1saWdodGJveFwiIGhyZWY9XCIvY29udGVudC9kaGwvYXQvZGUvaGVscC1jZW50ZXIvaW50ZXJuYXRpb25hbC1zaGlwcGluZy9saXRoaXVtLWJhdHRlcmllcy5odG1sXCIgdGFyZ2V0PVwibGlnaHRib3hcIj5EZXRhaWxzPFwvYT48XC9wPlxuPFwvZGl2PjxcL2Rpdj4iLCJydXNzaWFfdG9fdWtyYWluZS1kZXNjcmlwdGlvbiI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPjxkaXYgY2xhc3M9Im1lc3NhZ2Utd3JhcHBlciI+PHA+Rm9yIHNoaXBtZW50czxiPiBUTyBVa3JhaW5lIEZST00gUnVzc2lhIDxcL2I+dGhlIGZvbGxvd2luZyBpdGVtcyBtYXkgYmUgcHJvaGliaXRlZDo8XC9wPlxuPHVsPlxuPGxpPkZvb2Q8XC9saT5cbjxsaT5BcHBhcmVsPFwvbGk+XG48bGk+Q29zbWV0aWNzPFwvbGk+XG48bGk+SG91c2Vob2xkIGNoZW1pY2FsczxcL2xpPlxuPGxpPlZhcmlvdXMgc3BhcmUgcGFydHM8XC9saT5cbjxcL3VsPlxuPHA+VG8gY2xhcmlmeSBpZiB0aGVyZSBhcmUgcmVzdHJpY3Rpb25zIHJlbGF0ZWQgdG8gZXhwb3J0IG9mIHBhcnRpY3VsYXIgZ29vZHMgY29udGFjdCA8YSBocmVmPVwiL2xpYnMvY3EvaTE4bi9SVUNDR0BESEwuUlVcIj5SVUNDR0BESEwuUlU8XC9hPjxcL3A+XG48XC9kaXY+PFwvZGl2PiIsIm5hbWVfMS1hbGVydG5hbWUiOiJOYW1lIDEiLCJjYXltYW5faXNsYW5kcy1kZXNjcmlwdGlvbiI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPjxkaXYgY2xhc3M9Im1lc3NhZ2Utd3JhcHBlciI+PHA+RsO8ciBTZW5kdW5nZW4gYXVmIGRpZSA8Yj5LYWltYW5pbnNlbG48XC9iPjo8XC9wPlxuPHA+wqA8XC9wPlxuPHVsPlxuPGxpPkRpZSBPcmlnaW5hbHJlY2hudW5nIGRlcyBMaWVmZXJhbnRlbiBvZGVyIGRlciBLYXVmbmFjaHdlaXMgaXN0IGbDvHIgZGllIFpvbGxhYmZlcnRpZ3VuZyBlcmZvcmRlcmxpY2guPFwvbGk+XG48bGk+RWluZSBIYW5kZWxzcmVjaG51bmcsIGRpZSBkdXJjaCBNeURITCsgZ2VuZXJpZXJ0IHd1cmRlLCB3aXJkIHZvbSBab2xsIG5pY2h0IGFremVwdGllcnQuIEVpbmUgSGFuZGVsc3JlY2hudW5nLCBkaWUgw7xiZXIgTXlESEwrIGVyc3RlbGx0IHd1cmRlLCBrYW5uIGF1ZmdydW5kIGRlciBFeHBvcnRiZXN0aW1tdW5nZW4gZGVzIFVyc3BydW5nc2xhbmRlcyBlcmZvcmRlcmxpY2ggc2Vpbi48XC9saT5cbjxcL3VsPlxuPFwvZGl2PjxcL2Rpdj4ifSwic2hpcG1lbnRfZGV0YWlscy1nc3RfZGF0YS1pZGVudGl0eV9kb2N1bWVudHNfb2ZfaW5kaWEiOnsiYWFkaGFyLWlkbmFtZSI6IkFBREhBUiBOdW1tZXIiLCJwYXNzcG9ydC1pZG5hbWUiOiJQYXNzcG9ydCBOdW1tZXIiLCJwYW4tc3RhbmRhcmRlcnJvciI6IiIsImFhZGhhci1oZWxwdGV4dCI6Ik1heGltYWwgMTIgZGlnaXRzLCBubyBzcGFjZXMiLCJhYWRoYXItc3RhbmRhcmRlcnJvciI6IiIsInBhc3Nwb3J0LXN0YW5kYXJkZXJyb3IiOiIiLCJwYXNzcG9ydC1oZWxwdGV4dCI6Ik1heGltYWwgOCBBbHBoYWJldGlzY2ggTnVtZXJpc2NoIiwiZ3N0aW4taGVscHRleHQiOiJNYXhpbWFsIDE1IEFscGhhYmV0aXNjaCBOdW1lcmlzY2giLCJwYW4taWRuYW1lIjoiUEFOIENhcmQiLCJwYW4taGVscHRleHQiOiJNYXhpbWFsIDEwIEFscGhhYmV0aXNjaCBOdW1lcmlzY2giLCJnc3Rpbi1pZG5hbWUiOiJHU1RJTiIsImdzdGluLXN0YW5kYXJkZXJyb3IiOiIifSwiY3IwMTA0Ijp7ImNyLWVycm9ycy1yZXF1aXJlZCI6IlRoaXMgZmllbGQgaXMgcmVxdWlyZWQiLCJjci1uYW1lIjoiTWF4aW11bSBDb3N0IG9mIFNoaXBtZW50czogVmFsdWUiLCJjci1lcnJvcnMtcmFuZ2UiOiJWYWx1ZSBpcyBvdXQgb2YgdGhlIHJhbmdlIn0sImFkbWluLXRvb2xzIjp7ImVtcGxveWVlLWltcG9ydF9lcnJvci1tZXNzYWdlX2dyb3VwLW5hbWUiOiJVbmfDvGx0aWdlciBHcnVwcGVubmFtZSIsInJlZmVyZW5jZS1vcHRpb25zX3NlbGVjdC1vcHRpb25fbWluaW11bSI6Ik1pbmltdW0gdm9uIiwicmVmZXJlbmNlLW9wdGlvbnNfY29sLW5hbWVfZGVzY3JpcHRpb24ucHJvbXB0IjoiRGV0YWlscywgZGllIHp1ciBFcmtsw6RydW5nIGRlciBSZWZlcmVueiBkaWVuZW4iLCJ1c2VyLXN0YXR1c192YWx1ZS1sYWJlbF9hY3RpdmUiOiJBS1RJViIsImVkaXQtYWNjb3VudF9sYWJlbF9lbmFibGUtc2VsZi1yZWdpc3RyYXRpb24iOiJHcnVwcGVubWl0Z2xpZWQga2FubiBzaWNoIGbDvHIgTXlESEwrIG1pdCBkaWVzZW0gQWNjb3VudCByZWdpc3RyaWVyZW4iLCJ1c2VyLXN0YXR1c192YWx1ZS1sYWJlbF9kZWxldGVkIjoiZ2Vsw7ZzY2h0IiwidXNlci1tYW5hZ2VtZW50X2hlYWRlcl9yZW1vdmUtdXNlcnMiOiJQZXJzb25lbiB2b24gZGVyIEdydXBwZSBlbnRmZXJuZW4iLCJncm91cC1kZXRhaWxzX3N1Yi1oZWFkZXJfZGVmYXVsdC1ncm91cCI6IlN0YW5kYXJkLUdydXBwZSIsImludml0ZS11c2Vyc19idXR0b25fY2FuY2VsLW1vZGFsIjoiYWJicmVjaGVuIiwiaW52aXRlLXVzZXJzX2xhYmVsX2VudGVyLWVtYWlsX2FkZHJlc3NlcyI6IkUtTWFpbCBBZHJlc3NlbiBlaW5nZWJlbiIsInVzZXItbWFuYWdlbWVudF9idXR0b25fc2F2ZS1jaGFuZ2VzIjoiU3BlaWNoZXJuIiwiZWRpdC1hY2NvdW50X2xhYmVsX2FjY291bnQtdHlwZS1wYXllciI6IkZyYWNodHphaGxlciIsInVzZXItbWFuYWdlbWVudF9idXR0b25fc2V0LXVzZXJzLXR5cGUiOiJTcGVpY2hlcm4iLCJ1c2VyLW1hbmFnZW1lbnRfcGFyYWdyYXBoX2FyZS15b3Utc3VyZS10by11cGRhdGUtdGhpcy11c2VyIjoiU2luZCBTaWUgc2ljaGVyLCBkYXNzIFNpZSBha3R1YWxpc2llcmVuIHdvbGxlbj8iLCJjb3Jwb3JhdGUtZ3JvdXBfYnV0dG9uX2FjdGlvbnMiOiJBa3Rpb25lbiIsImNvcnBvcmF0ZS1ncm91cF9wYXJhZ3JhcGhfY29weS1lbmQtdXNlcnMiOiJQZXJzb25lbiB6dSBkZXIgbmV1ZW4gR3J1cHBlIGtvcGllcmVuPyIsImVtcGxveWVlLWltcG9ydF9maWVsZC1uYW1lX2ZpcnN0LW5hbWUiOiJWb3JuYW1lIiwiY29ycG9yYXRlLWRlZmF1bHQtZ3JvdXBfc2VsZWN0LW9wdGlvbl9zZWxlY3Qtb25lIjoiU3RhbmRhcmRncnVwcGUgYXVzd8OkaGxlbiIsImNvcnBvcmF0ZS1kZWZhdWx0LWdyb3VwX21zZ19kZWZhdWx0LWdyb3VwLXN1Y2Nlc3MiOiJha3R1YWxpc2llcnQiLCJncm91cC1kZXRhaWxzX2J1dHRvbl9jYW5jZWwiOiJhYmJyZWNoZW4iLCJsYi1hZGQtdXNlcl9sYWJlbF9zZWxlY3Qtcm9sZSI6IlJvbGxlIGF1c3fDpGhsZW4iLCJzZXR0aW5ncy1tYW5hZ2VtZW50X2luZm8tdGV4dF9uby1pdGVtcy1tYXRjaGluZy1maWx0ZXJpbmciOiJLZWluZSBFcmdlYm5pc3NlIGdlZnVuZGVuLiIsImNvcnBvcmF0ZS1kZWZhdWx0LWdyb3VwX2xhYmVsX2RlZmF1bHQtZ3JvdXAiOiIiLCJhY2NvdW50LW1hbmFnZW1lbnRfcGFyYWdyYXBoX3JlcXVlc3QtZm9yLWFjY291bnQtdmVyaWZpY2F0aW9uIjoiSWhyZSBBbmZyYWdlIGbDvHIgZWluIERITCBFeHByZXNzIEtvbnRvIHd1cmRlIMO8YmVybWl0dGVsdC4gRWluIFZlcnRyZXRlciB3aXJkIFNpZSBiZXrDvGdsaWNoIElocmVyIEFuZnJhZ2Uga29udGFrdGllcmVuLiIsInVzZXItbWFuYWdlbWVudF9sYWJlbF9ncm91cC1hc3NpZ25tZW50cy1jb2x1bW4iOiJNaXRnbGllZCB2b24iLCJsYi1uZXctY29udGFjdF9oZWFkZXJfYWRkLW5ldy1jb250YWN0IjoiTmV1ZW4gS29udGFrdCBoaW56dWbDvGdlbiIsInJlZmVyZW5jZS1mb3JtYXRfcGFyYWdyYXBoX2VudGVyLWFueS1yZWZlcmVuY2UtdmFsdWUiOiIiLCJ1c2VyLW1hbmFnZW1lbnRfc3ViLWhlYWRlcl9ncm91cC1hc3NpZ25tZW50cyI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPjxkaXYgY2xhc3M9Im1lc3NhZ2Utd3JhcHBlciI+R3J1cHBlIHVuZCBSb2xsZSA8ZGl2IGNsYXNzPVwiaW5mb1wiPjxkaXY+PHA+U2llIGvDtm5uZW4gZW50c2NoZWlkZW4gd2VsY2hlIFJvbGxlIGRpZSBQZXJzb24gaW4gZGVyIEdydXBwZSBzcGllbGVuIHNvbGwuPFwvcD5cbjxwPsKgPFwvcD5cbjx1bD5cbjxsaT5HcnVwcGVuLUFkbWluaXN0cmF0b3JlbiBoYWJlbiBkaWUgbWVpc3RlIEtvbnRyb2xsZSB1bmQgQXV0b3JpdMOkdCBpbiBkZXIgR3J1cHBlIHVuZCBrw7ZubmVuIEVpbnN0ZWxsdW5nZW4gZsO8ciBkaWUgR3J1cHBlIGRlZmluaWVyZW4uPFwvbGk+XG48bGk+R3J1cHBlbm1pdGdsaWVkZXIga8O2bm5lbiBTZW5kdW5nZW4gYmFzaWVyZW5kIGF1ZiBkZW4gRWluc3RlbGx1bmdlbiBlcnN0ZWxsZW4uPFwvbGk+XG48XC91bD5cbjxcL2Rpdj48XC9kaXY+PFwvZGl2PjxcL2Rpdj4iLCJyZWZlcmVuY2Utb3B0aW9uc19idXR0b25fbWFuYWdlLXJlZmVyZW5jZSI6IlJlZmVyZW56IGbDvHIgZGllc2UgR3J1cHBlIG9kZXLCoEJlbnV0emVyIGF1c3fDpGhsZW4iLCJzZXR0aW5ncy1tYW5hZ2VtZW50X3NlbGVjdC1vcHRpb25fbm9kZS10eXBlLWdyb3VwIjoiRWluZSBiZXN0aW1tdGUgR3J1cHBlIiwicmVmZXJlbmNlLW9wdGlvbnNfYWxlcnRfc3VjY2Vzc2Z1bGx5LXVwbG9hZGVkIjoie2ltcG9ydGVkUmVmZXJlbmNlc0NvdW50fSBSZWZlcmVueiBob2NoZ2VsYWRlbiIsImxiLWRlbGV0ZS1jb250YWN0LWNvbmZpcm1hdGlvbl9wYXJhZ3JhcGhfc2luZ2xlIjoiIiwibGItYWRkLXVzZXJfYnV0dG9uX2FkZC11c2VyIjoiUGVyc29uIGhpbnp1ZsO8Z2VuIiwic2V0dGluZy1tYW5hZ2VtZW50X2xhYmVsX2FkdC1sZXZlbCI6InZvbiBESEwiLCJ1c2VyLW1hbmFnZW1lbnRfbWVzc2FnZV9zZW5kLWFjdGl2YXRpb24tZW1haWwiOiJTaW5kIFNpZSBzaWNoZXIsIGRhc3MgU2llIGRpZSBBa3RpdmllcnVuZ3MtRS1NYWlsIGFuIGRpZSBQZXJzb24gc2VuZGVuIHdvbGxlbj8iLCJ1c2VyLW1hbmFnZW1lbnRfYnV0dG9uX2FkZC11c2VyIjoiQmVudXR6ZXIgaGluenVmw7xnZW4iLCJyZWZlcmVuY2Utb3B0aW9uc19oZWFkZXJfYWRkLWZvcm1hdCI6IkZvcm1hdCBoaW56dWbDvGdlbiIsInVzZXItbWFuYWdlbWVudF9sYWJlbF91c2VyLXN0YXR1cy1jb2x1bW4iOiJTdGF0dXMiLCJhY2NvdW50LW1hbmFnZW1lbnRfc2VsZWN0LW9wdGlvbl9zZWxlY3Qtb25lIjoiQXVzd8OkaGxlbiAiLCJ1c2VyLW1hbmFnZW1lbnRfaGVhZGVyX2FjdGl2YXRlLXVzZXJzIjoiQmVzdMOkdGlndGUgUGVyc29uZW4iLCJtbHNoaXBtZW50LXJlc3RyaWN0ZWRfY3JfbWluLWRpbWVuc2lvbnMtcGVyLXNoaXBtZW50LWFwcHJvdmFsIjoiTWluaW11bSBhYm1lc3N1bmdlbiBwcm8gU2VuZHVuZyBCZXN0w6R0aWd1bmciLCJzZXR0aW5nLW1hbmFnZW1lbnRfbGFiZWxfcmVzdG9yZS10aXRsZSI6IlN0YW5kYXJkZWluc3RlbGx1bmdlbiB6dXLDvGNrc2V0emVuIiwibGItZGVsZXRlLWNvbnRhY3QtY29uZmlybWF0aW9uX3BhcmFncmFwaF9tdWx0aXBsZSI6IiIsImNvcnBvcmF0ZS1ncm91cF9sYWJlbF9jb3B5LWluZm8iOiJEdXBsaXppZXJlbiIsImVtcGxveWVlLWltcG9ydF9idXR0b25fcHJvY2Vzcy1pbXBvcnQtdXNlcnMiOiJVcGxvYWQiLCJncm91cC1kZXRhaWxzX2FsZXJ0X29uLXJlbW92ZS11c2Vycy1zdWNjZXNzIjoie251bWJlck9mVXNlcnN9IFBlcnNvbihlbikgZW5mdGVybnQiLCJhZGRyZXNzLWJvb2tfcGFyYWdyYXBoX25vLWNvbnRhY3RzIjoiIiwiZ2VuZXJhbC1kYXRhX21zZ19jb21wYW55LWluZm8tdXBkYXRlZCI6ImFrdHVhbGlzaWVydCIsImFjY291bnQtbWFuYWdlbWVudF9maWVsZC1wbGFjZWhvbGRlcl9zZWFyY2gtYWNjb3VudC1udW1iZXJzIjoiU3VjaGUiLCJhY2NvdW50LW1hbmFnZW1lbnRfY29sLW5hbWVfYWNjb3VudC1uaWNrbmFtZSI6IkFsaWFzIChCZXNjaHJlaWJ1bmcpIiwiYWNjb3VudC1tYW5hZ2VtZW50X2FsZXJ0X2RlbGV0ZS1hY2NvdW50cyI6IlNpbmQgU2llIHNpY2hlciwgZGFzcyBTaWUgZGVuIFZvcmdhbmcgbMO2c2NoZW4gbcO2Y2h0ZW4/IiwicmVmZXJlbmNlLW9wdGlvbnNfYWxlcnRfc29tZXRoaW5nLWdvbmUtd3JvbmciOiJFaW4gRmVobGVyIGlzdCBhdWZnZXRyZXRlbiIsImNvcnBvcmF0ZS1kZWZhdWx0LWdyb3VwX3N1Yi1oZWFkZXJfZGVmYXVsdC1ncm91cC1zZXR0aW5ncy5pSGVscCI6IjxwPlfDpGhsZW4gU2llIGhpZXIgZGllIFN0YW5kYXJkZ3J1cHBlIGbDvHIgamVkZW4gTnV0emVyLCBzb2JhbGQgc2ljaCBkaWVzZXIgZWlubG9nZ3QuPFwvcD5cbjxwPiZuYnNwOzxcL3A+XG48cD5OdXR6ZXIsIGRpZSBpbiBtZWhyZXJlbiBHcnVwcGVuIE1pdGdsaWVkIHNpbmQsIGvDtm5uZW4gc2VuZHVuZ3NpbmRpdmlkdWVsbCB6dSBlaW5lciBhbmRlcmVuIEdydXBwZSB3ZWNoc2Vsbi48XC9wPlxuIiwiYWRkcmVzcy1ib29rX3NlbGVjdC1vcHRpb25fY291bnRyeSI6IkxhbmQiLCJsYi1uZXctY29udGFjdF9idXR0b25fY2FuY2VsIjoiYWJicmVjaGVuIiwiYWRkcmVzcy1ib29rX2NvbC1uYW1lX2NpdHkiOiJTdGFkdCIsInJlZmVyZW5jZS1vcHRpb25zX2hlYWRlcl9hZGQtcmVmZXJlbmNlIjoiV8OkaGxlbiBTaWUgZGllIFJlZmVyZW56ZW4sIGRpZSBkaWUgUGVyc29uZW4gaW4gZGVyIEdydXBwZSBudXR6ZW4gd29sbGVuLiBQZXIgS2xpY2sga8O2bm5lbiBTaWUgUmVmZXJlbnplbiBlbnRmZXJuZW4gb2RlciBoaW56dWbDvGdlbi4iLCJzZXR0aW5ncy1tYW5hZ2VtZW50X3NlbGVjdC1vcHRpb25fbm9kZS10eXBlLWNvbXBhbnkiOiJBbGxlIiwiY29ycG9yYXRlLXJvbGVfc2VsZWN0LW9wdGlvbl9lbmQtdXNlci1yZWdpc3RyYXRpb24iOiJOZWluIiwiYWRkcmVzcy1ib29rX2J1dHRvbl9hY3Rpb25zIjoiQWt0aW9uZW4iLCJsYi1hZGQtbWVtYmVyc19sYWJlbF9ncm91cC1yb2xlIjoiR3J1cHBlbm5hbWUiLCJ1c2VyLW1hbmFnZW1lbnRfbGFiZWxfdXNlci10eXBlLmlIZWxwIjoiPHA+QWRtaW5pc3RyYXRvcmVuIGhhYmVuIGRpZSB2b2xsZSBLb250cm9sbGUvQXV0b3JpdMOkdCDDvGJlciBBY2NvdW50ZnJlaWdhYmVuLCBOdXR6ZXIsIEFkcmVzc2LDvGNoZXIsIFNlbmR1bmdzLSB1bmQgU3RhbmRhcmRlaW5zdGVsbHVuZ2VuLjxcL3A+XG48cD4gPFwvcD5cbjxwPldpciBlbXBmZWhsZW4gSWhuZW4gQWRtaW5pc3RyYXRvcmVucmVjaHRlIGbDvHIgSWhyIFVudGVybmVobWVuIHJlc3RyaWt0aXYgenUgaGFuZGhhYmVuLjxcL3A+XG4iLCJnZW5lcmFsLWRhdGEtcGVybWlzc2lvbnNfbGFiZWxfc2V0dGluZ3Mtc2hpcHBpbmctbGltaXRzIjoiVmVyc2FuZGdyZW56ZW4iLCJlbXBsb3llZS1pbXBvcnRfaGVhZGVyX2ZhaWx1cmUtY291bnQiOiJ7ZmFpbHVyZUNvdW50fSBQZXJzb24oZW4pIG5pY2h0IGhvY2hnZWxhZGVuIiwiaW52aXRlLXVzZXJzX2xhYmVsX3NlbGVjdC1ncm91cC1yb2xlIjoiR3J1cHBlbnJvbGxlIGF1c3fDpGhsZW4iLCJ1c2VyLW1hbmFnZW1lbnRfYnV0dG9uX3Jlc29sdmUtY29uZmxpY3QiOiJGb3J0c2V0emVuIiwidXNlci1tYW5hZ2VtZW50X2J1dHRvbl9ncm91cC1hZGQtYW5vdGhlciI6IldlaXRlcmUgaGluenVmw7xnZW4iLCJlZGl0LWFjY291bnRfbGFiZWxfYWNjb3VudC10eXBlIjoiQWNjb3VudCBUeXAiLCJjb3Jwb3JhdGUtZ3JvdXBfaGVhZGVyX2R1cGxpY2F0ZSI6IkdydXBwZSBrb3BpZXJlbiB1bmQgbmV1ZSBHcnVwcGUgZXJzdGVsbGVuIiwiYWRkcmVzcy1ib29rX3NlbGVjdC1vcHRpb25fZ3JhYi1mcm9tIjoiR3J1cHBlIC0gQWJzZW5kZXIgQWRyZXNzZSIsImFkZHJlc3MtYm9va19jb2wtbmFtZV9uaWNrbmFtZSI6IkFsaWFzIChCZXNjaHJlaWJ1bmcpIiwibWVzc2FnZS1teS11c2Vyc19maWVsZC1wbGFjZWhvbGRlcl9kYXRlLXJhbmdlLXBpY2tlci1mcm9tIjoiVm9uIiwibGItZXh0ZXJuYWwtbW9kdWxlc19sYWJlbF9yZXF1ZXN0LW5pY2tuYW1lIjoiQWxpYXMgKEJlc2NocmVpYnVuZykiLCJjb3Jwb3JhdGUtZ3JvdXBfY29sLW5hbWVfZ3JvdXAtcm9sZSI6IkdydXBwZW5hZG1pbiIsImFjY291bnQtbWFuYWdlbWVudF9wYXJhZ3JhcGhfc2V0LXVwLXNoaXBwZXItZGVmYXVsdC1hY2NvdW50IjoiV2hlbiBwYXlpbmcgYnkgY3JlZGl0IGNhcmQsIHNlbGVjdCB0aGUgZGVmYXVsdCBTaGlwcGVyIEFjY291bnQgdG8gYmUgdXNlZCB0byBnZXQgREhMIHJhdGVzLiIsInJlZmVyZW5jZS1vcHRpb25zX2J1dHRvbl9zZWNvbmRhcnktcmVmZXJlbmNlLWxpc3QiOiJ3ZWl0ZXJlIFJlZmVyZW56ZW4iLCJjb3Jwb3JhdGUtcm9sZV9zZWxlY3Qtb3B0aW9uX2VuZC11c2VyIjoiTmVpbiIsImNvcnBvcmF0ZS1ncm91cF92YWx1ZS1sYWJlbF9jb3B5LXBvc2l0aXZlIjoiSmEiLCJzZXR0aW5nLW1hbmFnZW1lbnRfbGFiZWxfZGVmYXVsdC1sZXZlbCI6IlN0YW5kYXJkIiwidXNlci1tYW5hZ2VtZW50X2J1dHRvbl9kaXNhYmxlLXVzZXJzIjoiRGVha3RpdmllcmVuIiwic2V0dGluZ3MtbWFuYWdlbWVudF9idXR0b25fYXBwbHktbWFuYWdlbWVudC1sZXZlbCI6IkF1c3dhaGwiLCJtbHNoaXBtZW50LXJlc3RyaWN0ZWRfY3JfbWF4aW11bS13ZWlnaHQtb2Ytc2hpcG1lbnRzIjoiTWF4aW1hbCBnZXdpY2h0IHZvbiBzZW5kdW5nZW4iLCJhZG1pbmlzdHJhdGl2ZS10b29sc19oZWFkZXJfYWRtaW5pc3RyYXRpdmUtdG9vbHMiOiJBZG1pbiIsImFjY291bnQtbWFuYWdlbWVudF9hbGVydF9lbmFibGluZy1zdWNjZWVkZWQiOiJ7YW1vdW50fSBBY2NvdW50cyBha3RpdmllcnQiLCJpbnZpdGUtdXNlcnNfbXNnX2luY29ycmVjdC1lbWFpbHMiOiJGb2xnZW5kZXMgRm9ybWF0IGVyZm9yZGVybGljaDoge2VtYWlsc30iLCJncm91cC1kZXRhaWxzX3NlbGVjdC1vcHRpb25fZXZlcnktZGF5LWF0IjoiVMOkZ2xpY2ggenVyIGZvbGdlbmRlbiBaZWl0OiIsImdlbmVyYWwtZGF0YS1wZXJtaXNzaW9uc19oZWFkZXJfY29ycG9yYXRlLWFkbWluLXByaXZpbGVnZXMiOiJDb3JwIEFkbWluIFByaXZpbGVnZXMiLCJlbXBsb3llZS1pbXBvcnRfZmllbGQtbmFtZV9ncm91cC1uYW1lIjoiR3J1cHBlbm5hbWUiLCJlbXBsb3llZS1pbXBvcnRfZXJyb3ItbWVzc2FnZV9maXJzdC1uYW1lIjoiVm9ybmFtZSBVbmfDvGx0aWciLCJsaXN0LWRhdGEtc2VhcmNoX3NlbGVjdC1vcHRpb25fYWxsLWZpZWxkcyI6IkFsbGUiLCJ1c2VyLW1hbmFnZW1lbnRfYWxlcnRfb24tYWN0aXZhdGUtdXNlcnMtc3VjY2VzcyI6IntudW1iZXJPZlVzZXJzfSBQZXJzb24oZW4pIGFrdGl2aWVydCIsImdlbmVyYWwtZGF0YS1wZXJtaXNzaW9uc19sYWJlbF9hcHByb3ZhbC1ub3RpZmljYXRpb25zIjoiQmVuYWNocmljaHRpZ3VuZyB6dSBhdXNzdGVoZW5kZW4gQmVzdMOkdGlndW5nZW4iLCJ1c2VyLXN0YXR1c192YWx1ZS1sYWJlbF9kaXNhYmxlZCI6IkRlYWt0aXZpZXJ0IiwiYWNjb3VudC1tYW5hZ2VtZW50X3BhcmFncmFwaF91c2VyLW1heS1oYXZlLW9wZW4tc2hpcG1lbnRzIjoiVW52b2xsc3TDpG5kaWdlIFNlbmR1bmdlbiBibGVpYmVuIGJlc3RlaGVuIGJpcyBkaWUgUGVyc29uIHJlYWt0aXZpZXJ0IHdpcmQgb2RlciBlaW4gYW5kZXJlcyBHcnVwcGVubWl0Z2xpZWQgZGllIFNlbmR1bmcgdmVydm9sbHN0w6RuZGlndCBvZGVyIGzDtnNjaHQuIiwiZ2VuZXJhbC1kYXRhLXBlcm1pc3Npb25zX2xhYmVsX2VkaXQtZ2VuZXJhbC1zZXR0aW5ncyI6IlVudGVybmVobWVuc8O8YmVyc2ljaHQiLCJncm91cC1kZXRhaWxzX2FsZXJ0X2dyb3VwLWhhcy1jb25mbGljdHMiOiJFcyBnaWJ0IHVudm9sbHN0w6RuZGlnZSBTZW5kdW5nZW4iLCJhY2NvdW50LW1hbmFnZW1lbnRfYnV0dG9uX2Rpc2FibGUtY29uZmlybWF0aW9uIjoiSmEiLCJyZWZlcmVuY2UtZm9ybWF0X2FsZXJ0X3Rlc3QtZXJyb3IiOiJVbmfDvGx0aWdlcyBGb3JtYXQiLCJnZW5lcmFsLWRhdGEtcGVybWlzc2lvbnNfbGFiZWxfZ3JvdXAtY3JlYXRlIjoiTmV1ZSBHcnVwcGUgZXJzY2hhZmZlbiIsInJlZmVyZW5jZS1mb3JtYXQtb3B0aW9uc19zdWItaGVhZGVyX2dyb3VwLWxpc3QiOiJHcnVwcGUgRm9ybWF0ZSIsImNvcnBvcmF0ZS1kZWZhdWx0LWdyb3VwX2J1dHRvbl9lZGl0IjoiQmVhcmJlaXRlbiIsImFjY291bnQtbWFuYWdlbWVudF9idXR0b25fZGlzYWJsZS1hY2NvdW50cyI6IkRlYWt0aXZpZXJlbiIsInNpZGUtbWVudV90YWItbmFtZV9yZWZlcmVuY2Utb3B0aW9ucyI6IlNlbmR1bmdzcmVmZXJlbnoiLCJnZW5lcmFsLWRhdGEtcGVybWlzc2lvbnNfbGFiZWxfYWRkcmVzcy1ib29rIjoiQWRyZXNzYsO8Y2hlciIsImFkZHJlc3MtYm9va19zZWxlY3Qtb3B0aW9uX25pY2tuYW1lIjoiQWxpYXMgKEJlc2NocmVpYnVuZykiLCJjb3Jwb3JhdGUtZ3JvdXBfYnV0dG9uX2JhY2stdG8tbGlzdCI6Inp1csO8Y2siLCJ1c2VyLW1hbmFnZW1lbnRfYWxlcnRfb24tc2V0LXR5cGUtZXJyb3IiOiJFaW4gRmVobGVyIGlzdCBhdWZnZXRyZXRlbiIsImdyb3VwLWRldGFpbHNfcGFyYWdyYXBoX2RlbGV0ZS1ncm91cHMtY29uZmlybWF0aW9uIjoiIiwidXNlci1zdGF0dXNfdmFsdWUtbGFiZWxfcGVuZGluZy1hY3RpdmF0aW9uIjoiQXVzc3RlaGVuZGUgQWt0aXZpZXJ1bmciLCJpbnZpdGUtdXNlcnNfbXNnX3Byb2NlZWQtd2l0aC1jb3JyZWN0LWVtYWlscyI6IkFyZSB5b3Ugc3VyZSB5b3Ugd2FudCB0byBjb250aW51ZSB3aXRoIG9ubHkgdGhlIGNvcnJlY3QgZW1haWxzPyIsImFkZHJlc3MtYm9va19oZWFkZXJfYWRkcmVzcy1ib29rIjoiQWRkcmVzc2J1Y2ggZXJzdGVsbGVuIHVuZCBiZWFyYmVpdGVuIiwibGItZXh0ZXJuYWwtbW9kdWxlcy1yZXZva2VfYnV0dG9uX2NhbmNlbCI6ImFiYnJlY2hlbiIsInNldHRpbmdzLW1hbmFnZW1lbnRfc2VsZWN0LW9wdGlvbl9ub2RlLXR5cGUtdXNlciI6IkVpbmVuIGJlc3RpbW10ZW4gQmVudXR6ZXIiLCJtZXNzYWdlLW15LXVzZXJzX2FsZXJ0X2dyb3VwLW1lc3NhZ2UtY3JlYXRlZCI6IkRpZXNlIE5hY2hyaWNodCB3aXJkIGFsbGVuIE1pdGdsaWVkZXJuIGRlciBHcnVwcGUge2dyb3VwfSBpbSBaZWl0cmF1bSB2b24ge2Zyb21EYXRlfSBiaXMge3RvRGF0ZX0gYW5nZXplaWd0LiIsImxiLW1hbmFnZS1jb250YWN0c19idXR0b25fc2F2ZS1jaGFuZ2VzIjoib2siLCJpbnZpdGUtdXNlcnNfbGFiZWxfc2VsZWN0LWxhbmd1YWdlIjoiU3ByYWNoZSBhdXN3w6RobGVuIiwidXNlci1tYW5hZ2VtZW50X2J1dHRvbl9zZW5kLWFjdGl2YXRpb24tZW1haWwiOiJBa3RpdmllcnVuZyBlcm5ldXQgc2VuZGVuIiwiZW1wbG95ZWUtaW1wb3J0X2xhYmVsX3NraXAtZHVwbGljYXRlcyI6Iklnbm9yaWVyZW4gLSBrZWluZSBEdXBsaWthdGUgaG9jaGxhZGVuIiwiZ3JvdXAtZGV0YWlsc19zZWxlY3Qtb3B0aW9uX2V2ZXJ5LXNoaXBtZW50LXJlcXVlc3QiOiJXZW5uIFp1c3RpbW11bmcgZXJmb3JkZXJsaWNoIGlzdCIsInVzZXItbWFuYWdlbWVudF9sYWJlbF9ncm91cC1yb2xlIjoiR3J1cHBlbmFkbWluIiwiYWNjb3VudC1tYW5hZ2VtZW50X2FsZXJ0X2Rpc2FibGluZy1zdWNjZWVkZWQiOiJ7YW1vdW50fSBBY2NvdW50cyBkZWFrdGl2aWVydCIsInJlZmVyZW5jZS1vcHRpb25zX2Vycm9yX2ludmFsaWQtZmlsZS1mb3JtYXQiOiJVbnRlcnN0w7x0enRlIERhdGVpZm9ybWF0ZSBzaW5kIHtmb3JtYXRzfSIsImdlbmVyYWwtZGF0YS1wZXJtaXNzaW9uc19sYWJlbF9kaWdpdGFsLWN1c3RvbXMtaW52b2ljZSI6IkRpZ2l0YWxlIFpvbGxyZWNobnVuZyBha3RpdmllcmVuIiwicmVmZXJlbmNlLW9wdGlvbnNfY29sLW5hbWVfcmVmZXJlbmNlX2Zvcm1hdCI6IkZvcm1hdCIsImdlbmVyYWwtZGF0YS1wZXJtaXNzaW9uc19sYWJlbF9zZXR0aW5ncy1nZW5lcmFsIjoiU2VuZHVuZ2VuIGJlYXJiZWl0ZW4iLCJncm91cC1kZXRhaWxzX2J1dHRvbl9kZWxldGUtZ3JvdXBzIjoiTMO2c2NoZW4iLCJnZW5lcmFsLWRhdGEtcGVybWlzc2lvbnNfbGFiZWxfYWNjb3VudHMtYW5kLXBheW1lbnRzIjoiQWNjb3VudG51bW1lciIsInJlZmVyZW5jZS1vcHRpb25zX2Vycm9yX2ZpbGUtc2l6ZS1leGNlZWQiOiJtYXhpbWFsZSBEYXRlaWdyw7bDn2Uge2ZpbGVTaXplfSIsImFjY291bnQtbWFuYWdlbWVudF9hbGVydF9lbmFibGluZy1mYWlsZWQiOiJBa3RpdmllcnVuZyBmZWhsZ2VzY2hsYWdlbiIsImFjY291bnQtbWFuYWdlbWVudF9jb2wtbmFtZV9hY2NvdW50LW51bWJlciI6Ikt1bmRlbm51bW1lciIsInNpZGUtbWVudV90YWItbmFtZV9ncm91cC1tYW5hZ2VtZW50IjoiR3J1cHBlbiIsInJlZmVyZW5jZS1vcHRpb25zX3N1Yi1oZWFkZXJfZ3JvdXAtbGlzdCI6IkdydXBwZSBSZWZlcmVueiIsImVtcGxveWVlLWltcG9ydF9lcnJvci1tZXNzYWdlX3Byb21vdGlvbi1yZXF1aXJlZC12YWx1ZS1lcnJvciI6IlNvbGx0ZSB3YWhyIG9kZXIgZmFsc2NoIHNlaW4iLCJncm91cC1kZXRhaWxzX2FsZXJ0X2RlbGV0ZS1ncm91cHMtc3VjY2VzcyI6IntudW1iZXJPZkdyb3Vwc30gZ3J1cHBlbiBnZWzDtnNjaHQiLCJsYi1hZGQtdXNlcl9sYWJlbF9lbWFpbCI6InBlciBFLU1haWwiLCJyZWZlcmVuY2Utb3B0aW9uc19tc2dfcmVmZXJlbmNlcy1kZWxldGVkIjoiUmVmZXJlbnogZ2Vsw7ZzY2h0IiwiY29ycG9yYXRlLWdyb3VwX3BhcmFncmFwaF9jb3B5LWFkbWlucyI6IkdydXBwZW5hZG1pbihzKSBpbiBHcnVwcGUga29waWVyZW4/IiwidXNlci1tYW5hZ2VtZW50X2J1dHRvbl9kaXNhYmxlIjoiRGVha3RpdmllcmVuIiwibGItYWRkLW1lbWJlcnNfaGVhZGVyX2FkZC11c2VyIjoiQmVudXR6ZXIgenUgZGllc2VyIEdydXBwZSBoaW56dWbDvGdlbiIsImV4dGVybmFsLW1vZHVsZXNfbGFiZWxfcmV2b2tlLWV4dGVybmFsLW1vZHVsZSI6IkRlYWt0aXZpZXJlbiIsInJlZmVyZW5jZS1vcHRpb25zX2xhYmVsX3JlcGxhY2UtZHVyaW5nLWltcG9ydCI6IkJlc3RlaGVuZGUgUmVmZXJlbnplbiBkdXJjaCBuZXVlIFJlZmVyZW56ZW4gZXJzZXR6ZW4iLCJ1c2VyLW1hbmFnZW1lbnRfcGFyYWdyYXBoX3JlbW92ZS11c2Vycy1jb25maXJtYXRpb24iOiJTaW5kIHNpZSBzaWNoZXIsIGRhc3MgU2llIGVudGZlcm5lbiBtw7ZjaHRlbj8iLCJhY2NvdW50LW1hbmFnZW1lbnRfYnV0dG9uX2RlbGV0ZS1hY2NvdW50cyI6IkphIiwidXNlci1tYW5hZ2VtZW50X3NlbGVjdC1vcHRpb25fYWN0aXZhdGUiOiJBa3RpdmllcmVuIiwic2V0dGluZ3MtbWFuYWdlbWVudF9zZWxlY3Qtb3B0aW9uX2VuZHVzZXItcGxhY2Vob2xkZXIiOiJCZW51dHplciBhdXN3w6RobGVuIiwiZW1wbG95ZWUtaW1wb3J0X2Vycm9yLW1lc3NhZ2VfY291bnRyeS1waG9uZS1jb2RlIjoiVGVsZWZvbiBMw6RuZGVyY29kZSBVbmfDvGx0aWciLCJnZW5lcmFsLWRhdGEtcGVybWlzc2lvbnNfbGFiZWxfbWFuYWdlLWdyb3VwLWFkbWlucyI6IkdydXBwZW5hZG1pbnMgYmVhcmJlaXRlbiB1bmQgaGluenVmw7xnZW4iLCJpbnZpdGUtdXNlcnNfbXNnX2ludml0YXRpb25fc2VudCI6Int1c2VyQ291bnR9IEVpbmxhZHVuZ2VuIHZlcnNlbmRldCIsInVzZXItbWFuYWdlbWVudF9sYWJlbF91c2VyLXR5cGUtY29sdW1uIjoiVW50ZXJuZWhtZW5zLUFkbWluaXN0cmF0b3IiLCJzaWRlLW1lbnVfdGFiLW5hbWVfbm90aWZpY2F0aW9uLXNoYXJpbmciOiJCZW5hY2hyaWNodGlndW5nZW4iLCJsYi1hZGQtdXNlcl9sYWJlbF9yb2xlIjoiUm9sbGUiLCJncm91cC1kZXRhaWxzX3NlbGVjdC1vcHRpb25fZXZlcnktaG91ciI6IkplZGUgU3R1bmRlIiwic2V0dGluZy1tYW5hZ2VtZW50X2xhYmVsX2dyb3VwLWxldmVsIjoiYXVmIEdydXBwZW5lYmVuZSIsInVzZXItbWFuYWdlbWVudF9hbGVydF9vbi1kaXNhYmxlLXVzZXJzLXN1Y2Nlc3MiOiJ7bnVtYmVyT2ZVc2Vyc30gUGVyc29uKGVuKSBkZWFrdGl2aWVydCIsImVtcGxveWVlLWltcG9ydF9oZWFkZXJfbWFuYWdlLWltcG9ydGVkLXVzZXJzIjoiV2VubiBJaHJlIERhdGVpIFBlcnNvbmVuIGRvcHBlbHQgZW50aMOkbHQgd29sbGVuIFNpZToiLCJlbXBsb3llZS1pbXBvcnRfZXJyb3ItZGVmYXVsdC1ncm91cC1ub3QtYWxsb3dlZCI6IkhvY2hsYWRlbiBpc3QgZmVobGdlc2NobGFnZW4uIFNpZSBkw7xyZmVuIGtlaW5lIFBlcnNvbmVuIHp1IGRpZXNlciBHcnVwcGUgaGluenVmw7xnZW4uIiwiZ3JvdXAtZGV0YWlsc19oZWFkZXJfZGVsZXRlLWdyb3VwIjoiR3J1cHBlIGzDtnNjaGVuIiwicmVmZXJlbmNlLWZvcm1hdF9idXR0b25fdGVzdCI6IlRlc3QiLCJhZGRyZXNzLWJvb2tfc2VsZWN0LW9wdGlvbl9jYWIiOiJGaXJtYSIsImdlbmVyYWwtZGF0YS1wZXJtaXNzaW9uc19sYWJlbF9zZXR0aW5ncy1zaGlwbWVudC1kZWZhdWx0cyI6IkRydWNrZXJ2b3JlaW5zdGVsbHVuZ2VuIiwic2V0dGluZ3MtbWFuYWdlbWVudF9idXR0b25fc2F2ZS1jb25maWd1cmF0aW9uLWl0ZW1zLWNoYW5nZXMiOiJTcGVpY2hlcm4iLCJsYi1hZGQtdXNlcl9oZWFkZXJfYWRkLXVzZXIiOiJQZXJzb24gaGluenVmw7xnZW4iLCJzZXR0aW5ncy1tYW5hZ2VtZW50X2xhYmVsX3Bvc3QtbWVzc2FnZS1mb3IiOiI8ZGl2IGNsYXNzPVwiZXdmX2RpY3Rpb25hcnlfdmFsdWVcIj48Yj5FcnN0ZWxsZW4gU2llIGVpbmUgTmFjaHJpY2h0IGbDvHI8XC9iPjxcL2Rpdj4iLCJsYi10cmFuc2Zlci1tZW1iZXJzX2J1dHRvbl90cmFuc2Zlci1tZW1iZXJzIjoiSW4gR3J1cHBlIHZlcnNjaGllYmVuIiwicmVmZXJlbmNlLW9wdGlvbnNfYnV0dG9uX2ltcG9ydC1yZWZlcmVuY2UtYWN0aW9uIjoiU3BlaWNoZXJuIiwic2V0dGluZy1tYW5hZ2VtZW50X3ZhbHVlLWxhYmVsX2NvbmZnaXVyYXRpb24taXRlbS1ib29sZWFuLWZhbHNlIjoiS2VpbmUiLCJsYi1leHRlcm5hbC1tb2R1bGVzX2J1dHRvbl9yZXF1ZXN0LWV4dGVybmFsLW1vZHVsZSI6IkFic2VuZGVuIiwiaW52aXRlLXVzZXJzX21zZ19lbWFpbHMtYWxyZWFkeS1leGlzdHMiOiJFLU1haWwgQWRyZXNzZW4gZXhpc3RpZXJlbiBiZXJlaXRzIGluIE15REhMKzoge2VtYWlsc30iLCJsYi10cmFuc2Zlci1tZW1iZXJzX2xhYmVsX2dyb3VwLW5hbWUtZnJvbSI6IlZvbiBkaWVzZXIgR3J1cHBlIHZlcnNjaGllYmVuIiwibGItY29uZmlybWF0aW9uX21zZ191bnNhdmVkLWRhdGEiOiI8ZGl2IGNsYXNzPVwiZXdmX2RpY3Rpb25hcnlfdmFsdWVcIj48ZGl2IGNsYXNzPSJtZXNzYWdlLXdyYXBwZXIiPjxwPjxiPkhhYmVuIFNpZSB1bmdlc3BlaWNoZXJ0ZSDDhG5kZXJ1bmdlbjxcL2I+PFwvcD5cbjxwPsKgPFwvcD5cbjxwPk3DtmNodGVuIFNpZSBvaG5lIHNwZWljaGVybiBmb3J0ZmFocmVuPzxcL3A+XG48XC9kaXY+PFwvZGl2PiIsInJlZmVyZW5jZS1vcHRpb25zX21zZ19kZWxldGVfbXVsdGlwbGUtaXRlbXMiOiJTb2xsZW4gZGllc2UgV2FyZW4gd2lya2xpY2ggZ2Vsw7ZzY2h0IHdlcmRlbj8iLCJtbHNoaXBtZW50LXJlc3RyaWN0ZWRfY3JfbWF4aW11bS1udW1iZXItb2Ytc2hpcG1lbnRzIjoiTWF4aW1hbCBudW1tZXIgdm9uIHNlbmR1bmdlbiIsInNldHRpbmctbWFuYWdlbWVudF9sYWJlbF9jb21wYW55LWxldmVsIjoiYXVmIFVudGVybmVobWVuc2ViZW5lIiwiY29ycG9yYXRlLWdyb3VwX21zZ19ncm91cC1hZGRlZC1zdWNjZXNzZnVsbHkiOiJHcnVwcGUgaGluenVnZWbDvGd0IiwiaW52aXRlLXVzZXJzX2hlYWRlcl9pbnZpdGUtdXNlcnMiOiJJbnZpdGUgTmV3IFBlb3BsZSIsImxiLWV4dGVybmFsLW1vZHVsZXMtcmV2b2tlX21zZ19yZXZva2UtZXhpc3RpbmctY29ubmVjdGlvbiI6IlNpbmQgU2llIHNpY2hlciwgZGFzcyBTaWUgZGllcyBkZWFrdGl2aWVyZW4gd29sbGVuPyIsImVtcGxveWVlLWltcG9ydF9wYXJhZ3JhcGhfcm93LW51bWJlciI6IlJlaWhlIHtyb3dOdW1iZXJ9IiwidXNlci1tYW5hZ2VtZW50X3N1Yi1oZWFkZXJfZ3JvdXAtYXNzaWdubWVudHMuaUhlbHAiOiI8cD5TaWUga8O2bm5lbiBlbnRzY2hlaWRlbiB3ZWxjaGUgUm9sbGUgZGllIFBlcnNvbiBpbiBkZXIgR3J1cHBlIHNwaWVsZW4gc29sbC48XC9wPlxuPHA+Jm5ic3A7PFwvcD5cbjx1bD5cbjxsaT5HcnVwcGVuLUFkbWluaXN0cmF0b3JlbiBoYWJlbiBkaWUgbWVpc3RlIEtvbnRyb2xsZSB1bmQgQXV0b3JpdMOkdCBpbiBkZXIgR3J1cHBlIHVuZCBrw7ZubmVuIEVpbnN0ZWxsdW5nZW4gZsO8ciBkaWUgR3J1cHBlIGRlZmluaWVyZW4uPFwvbGk+XG48bGk+R3J1cHBlbm1pdGdsaWVkZXIga8O2bm5lbiBTZW5kdW5nZW4gYmFzaWVyZW5kIGF1ZiBkZW4gRWluc3RlbGx1bmdlbiBlcnN0ZWxsZW4uPFwvbGk+XG48XC91bD5cbiIsImNvcnBvcmF0ZS1ncm91cF9idXR0b25fZGVsZXRlIjoiTMO2c2NoZW4iLCJsYi1kZWxldGUtY29udGFjdC1jb25maXJtYXRpb25faGVhZGVyX3NpbmdsZSI6IlBlcnNvbiBsw7ZzY2hlbiIsImNvcnBvcmF0ZS1ncm91cF9oZWFkZXJfZ3JvdXAtcGVybWlzc2lvbnMiOiJBZG1pbnN0ZXVlcnVuZyIsInNpZGUtbWVudV90YWItbmFtZV9nZW5lcmFsLWRhdGEiOiJVbnRlcm5laG1lbnPDvGJlcnNpY2h0IiwiZXh0ZXJuYWwtbW9kdWxlc19sYWJlbF9pdGFsaWFuLXBvcnRhbC1leHRlcm5hbC1tb2R1bGUiOiJVbmRlbCIsImdlbmVyYWwtZGF0YS1wZXJtaXNzaW9uc19sYWJlbF9zZXR0aW5ncy1zaGlwcGluZy1yZXN0cmljdGlvbnMiOiJTZW5kdW5nc2Jlc2NocsOkbmt1bmdlbiIsImFjY291bnQtbWFuYWdlbWVudF9hbGVydF9lZGl0aW5nLXN1Y2NlZWRlZCI6InthY2NvdW50Tmlja25hbWV9IGFrdHVhbGlzaWVydCIsImxiLWV4dGVybmFsLW1vZHVsZXNfaGVhZGVyX2Nvbm5lY3QtdG8tZXh0ZXJuYWwtbW9kdWxlIjoiQmVzdGVoZW5kZXIgRS1CaWxsaW5nIFp1Z2FuZyIsImxiLW1hbmFnZS1jb250YWN0c19idXR0b25fY2FuY2VsLWNoYW5nZXMiOiJhYmJyZWNoZW4iLCJjb3Jwb3JhdGUtZ3JvdXBfbGFiZWxfb25saW5lLWJpbGxpbmciOiJBdXN3w6RobGVuICIsImV4dGVybmFsLW1vZHVsZXNfY29sLW5hbWVfZXh0ZXJuYWwtbW9kdWxlIjoiU2VuZHVuZ3PDvGJlcndhY2h1bmcgJiBPbmxpbmUgUmVjaG51bmdzb3B0aW9uZW4iLCJnZW5lcmFsLWRhdGEtcGVybWlzc2lvbnNfbGFiZWxfYWR2YW5jZWQtc2hpcG1lbnQtbW9uaXRvcmluZyI6IlNlbmR1bmdzw7xiZXJ3YWNodW5nICYgT25saW5lIFJlY2hudW5nc29wdGlvbmVuIiwiZ2VuZXJhbC1kYXRhLXBlcm1pc3Npb25zX2xhYmVsX2FjY291bnQtYXV0aG9yaXphdGlvbi11c2FnZSI6IkFjY291bnQgQXV0b3Jpc2llcnVuZyIsInVzZXItbWFuYWdlbWVudF9zZWxlY3Qtb3B0aW9uX2Rpc2FibGUiOiJEZWFrdGl2aWVyZW4iLCJncm91cC1kZXRhaWxzX2FsZXJ0X29uLXJlbW92ZS11c2Vycy1mYWlsdXJlIjoiU29ycnkgXHUyMDEzIHVuc2VyIFN5c3RlbSBpc3QgZGVyemVpdCBuaWNodCB2ZXJmw7xnYmFyLiBCaXR0ZSB2ZXJzdWNoZW4gU2llIGVzIHNww6R0ZXIgbm9jaCBlaW5tYWwgb2RlciBrb250YWt0aWVyZW4gU2llIHVuc2VyZW4gS3VuZGVuc2VydmljZSB1bnRlciAwODIwLTU1MDUwNSAoMjAgY3QgamUgQW5ydWYgYXVzIGRlbiBkZXV0c2NoZW4gRmVzdG5ldHplbiwgbWF4LiA2MCBjdCBhdXMgZGVuIGRldXRzY2hlbiBNb2JpbGZ1bmtuZXR6ZW4pLiIsImVtcGxveWVlLWltcG9ydF9maWVsZC1uYW1lX3VzZXItZ3JvdXAiOiJVbnRlcm5laG1lbnMtQWRtaW5pc3RyYXRvciIsInNldHRpbmdzLW1hbmFnZW1lbnRfYnV0dG9uX2xpc3QtZWRpdC1yb3ciOiJCZWFyYmVpdGVuIiwibGItYWRkLXVzZXJfbGFiZWxfdXNlcm5hbWUiOiJFLU1haWwgQWRyZXNzZSIsInNldHRpbmctbWFuYWdlbWVudF9sYWJlbF9yZXN0b3JlLW1lc3NhZ2UiOiJadSBTdGFuZGFyZGVpbnN0ZWxsdW5nZW4genVyw7xja3NldHplbj8iLCJleHRlcm5hbC1tb2R1bGVzX2J1dHRvbl9yZXF1ZXN0LWNvbm5lY3Rpb24iOiJKZXR6dCBhbm1lbGRlbiIsInNldHRpbmctbWFuYWdlbWVudF9tc2ctZWZmZWN0aXZlLXZhbHVlLWRpc2FibGVkIjoiR2VzcGVycnQiLCJsYi1hZGQtZ3JvdXBfaGVhZGVyX2FkZC1ncm91cCI6IkdydXBwZSBoaW56dWbDvGdlbiIsImFjY291bnQtbWFuYWdlbWVudF92YWx1ZS1sYWJlbF9hY2NvdW50LXN0YXR1cy1kaXNhYmxlZCI6IkRlYWt0aXZpZXJ0IiwicmVmZXJlbmNlLW9wdGlvbnNfbGFiZWxfYWRkLWZvcm1hdC1sZW5ndGgiOiJzb2xsdGUgc2VpbiIsImVtcGxveWVlLWltcG9ydF9lcnJvci1tZXNzYWdlX3VzZXItZ3JvdXAiOiJVcGxvYWQgbmljaHQgZXJmb2xndC4gRGFzIENvcnBvcmF0ZSBBZG1pbiBGZWxkIG11c3MgZW50d2VkZXIgIldhaHIiIG9kZXIgIkZhbHNjaCIgc2Vpbi4iLCJ1c2VyLW1hbmFnZW1lbnRfaGVhZGVyX3Jlc29sdmUtY29uZmxpY3QiOiIiLCJzaWRlLW1lbnVfdGFiLW5hbWVfYWRkcmVzcy1ib29rIjoiQWRyZXNzYsO8Y2hlciIsInVzZXItbWFuYWdlbWVudF9tc2dfb24tc2V0LXR5cGUtc3VjY2VzcyI6Ikdlc3BlaWNoZXJ0IiwiY29ycG9yYXRlLWRlZmF1bHQtZ3JvdXBfYnV0dG9uX3NhdmUiOiJTcGVpY2hlcm4iLCJjb3Jwb3JhdGUtZ3JvdXBfY29sLW5hbWVfZ3JvdXAtYWRtaW5pc3RyYXRvci1ub3RpZmljYXRpb25zIjoiRS1NYWlsIEFkcmVzc2UiLCJyZWZlcmVuY2Utb3B0aW9uc19idXR0b25fZGVsZXRlLXNlbGVjdGVkIjoiQXVzd2FobCBsw7ZzY2hlbiIsImVtcGxveWVlLWltcG9ydF9maWVsZC1uYW1lX3Bob25lIjoiVGVsZWZvbiIsIm1lc3NhZ2UtbXktdXNlcnNfYWxlcnRfY29tcGFueS1tZXNzYWdlLWNyZWF0ZWQiOiJEaWVzZSBOYWNocmljaHQgd2lyZCBhbGxlbiBVbnRlcm5laG1lbnNtaXRnbGllZGVybiBpbSBaZWl0cmF1bSB2b24ge2Zyb21EYXRlfSBiaXMge3RvRGF0ZX0gYW5nZXplaWd0LiIsInVzZXItbWFuYWdlbWVudF9sYWJlbF9sYW5ndWFnZSI6IlN0YW5kYXJkIFNwcmFjaGUiLCJjb3Jwb3JhdGUtZ3JvdXBfaGVhZGVyX3NldC1ncm91cC1yb2xlIjoiR3J1cHBlbm5hbWUiLCJjb250YWN0LWRldGFpbHNfbGFiZWxfbGFzdC1uYW1lIjoiTmFjaG5hbWUiLCJleHRlcm5hbC1tb2R1bGVzX2xhYmVsX3Byb3ZpZXctZXh0ZXJuYWwtbW9kdWxlIjoiU2hpcG1lbnQgTW9uaXRvcmluZyBhbmQgTm90aWZpY2F0aW9ucyIsIm1sc2hpcG1lbnQtcmVzdHJpY3RlZF9jcl9tYXgtcGFydHMtcGVyLXNoaXBtZW50LWFwcHJvdmFsIjoiTWF4aW1hbCBQYWNrc3TDvGNrIHBybyBTZW5kdW5nIEJlc3TDpHRpZ3VuZyIsInJlZmVyZW5jZS1mb3JtYXRfbGFiZWxfdGVzdC12YWx1ZS5wcm9tcHQiOiJUZXN0ZW4gU2llIElocmUgRm9ybWF0dm9ybGFnZW4iLCJ1c2VyLW1hbmFnZW1lbnRfYWxlcnRfb24tZXJyb3Itc2F2ZS11c2VyLWV4aXN0cyI6IntlbWFpbH0gZXhpc3RpZXJ0IGJlcmVpdHMiLCJsYi1leHRlcm5hbC1tb2R1bGVzX2xhYmVsX2Nvbm5lY3QtdXNlcm5hbWUiOiJFLU1haWwgQWRyZXNzZSIsInJlZmVyZW5jZS1vcHRpb25zX2J1dHRvbl9zYXZlLWZvcm1hdCI6IlNwZWljaGVybiIsInJlZmVyZW5jZS1vcHRpb25zX2FsZXJ0X2Zvcm1hdC11cGRhdGVkIjoiRm9ybWF0IGFrdHVhbGlzaWVydCIsInVzZXItbWFuYWdlbWVudF9sYWJlbF9ncm91cC1uYW1lLWNvbHVtbiI6IlVudGVybmVobWVucy1BZG1pbmlzdHJhdG9yIiwiYWRkcmVzcy1ib29rX3NlbGVjdC1vcHRpb25fY3JhYi1mcm9tIjoiQWJzZW5kZXIgQWRyZXNzZSIsImVkaXQtYWNjb3VudF9idXR0b25fY2FuY2VsLWVkaXQtYWNjb3VudCI6ImFiYnJlY2hlbiIsInJlZmVyZW5jZS1vcHRpb25zX3N1Yi1oZWFkZXJfY29sbGVjdGlvbi10byI6IiIsImxiLWFkZC1ncm91cF9sYWJlbF9ncm91cC1uYW1lIjoiR3J1cHBlbm5hbWUiLCJhY2NvdW50LW1hbmFnZW1lbnRfdmFsdWUtbGFiZWxfYWNjb3VudC1zdGF0dXMtYWN0aXZlIjoiQUtUSVYiLCJlbXBsb3llZS1pbXBvcnRfZXJyb3ItbWVzc2FnZV9tYW5kYXRvcnktZmllbGQtbnVtYmVyIjoiSWhyZSBEYXRlaSBiZXNpdHp0IG5pY2h0IGFsbGUgUGZsaWNodGZlbGRlci4gUGFzc2VuIFNpZSAgSWhyZSBEYXRlaSBhbiB1bmQgbGFkZW4gU2llIGRpZSBEYXRlaSBlcm5ldXQgaG9jaC4iLCJyZWZlcmVuY2Utb3B0aW9uc19sYWJlbF9hZGQtcmVmZXJlbmNlIjoiUmVmZXJlbnogaGluenVmw7xnZW4iLCJhZGRyZXNzLWJvb2tfYnV0dG9uX21hbmFnZS1jb250YWN0cyI6IktvbnRha3RlIGtvcGllcmVuIiwidXNlci1tYW5hZ2VtZW50X2hlYWRlcl9zYXZlLWNoYW5nZXMiOiJTcGVpY2hlcm4iLCJjb3Jwb3JhdGUtZGVmYXVsdC1ncm91cF9zdWItaGVhZGVyX2RlZmF1bHQtZ3JvdXAtc2V0dGluZ3MiOiI8ZGl2IGNsYXNzPVwiZXdmX2RpY3Rpb25hcnlfdmFsdWVcIj48ZGl2IGNsYXNzPSJtZXNzYWdlLXdyYXBwZXIiPlN0YW5kYXJkLUdydXBwZSA8ZGl2IGNsYXNzPVwiaW5mb1wiPjxkaXY+PHA+V8OkaGxlbiBTaWUgaGllciBkaWUgU3RhbmRhcmRncnVwcGUgZsO8ciBqZWRlbiBOdXR6ZXIsIHNvYmFsZCBzaWNoIGRpZXNlciBlaW5sb2dndC48XC9wPlxuPHA+wqA8XC9wPlxuPHA+TnV0emVyLCBkaWUgaW4gbWVocmVyZW4gR3J1cHBlbiBNaXRnbGllZCBzaW5kLCBrw7ZubmVuIHNlbmR1bmdzaW5kaXZpZHVlbGwgenUgZWluZXIgYW5kZXJlbiBHcnVwcGUgd2VjaHNlbG4uPFwvcD5cbjxcL2Rpdj48XC9kaXY+PFwvZGl2PjxcL2Rpdj4iLCJjb3Jwb3JhdGUtZ3JvdXBfbGFiZWxfcHJvdmlldyI6IkZvbGdlbmRlbiBTdGFuZGFyZCBmw7xyIGRpZSBHcnVwcGUgZmVzdGxlZ2VuIiwiYWNjb3VudC1tYW5hZ2VtZW50X3BhcmFncmFwaF9vcGVuLXNoaXBtZW50cyI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPjxkaXYgY2xhc3M9Im1lc3NhZ2Utd3JhcHBlciI+PHA+QWNjb3VudCBrYW5uIG5pY2h0IGdlbMO2c2NodC9kZWFrdGl2ZXJ0IHdlcmRlbi4gRXMgZ2lidCBuaWNodCBhYmdlc2NobG9zc2VuZSBTZW5kdW5nZW4genUgZGllc2VtIEFjY291bnQuPFwvcD5cbjxwPsKgPFwvcD5cbjxwPlNpZSBrw7ZubmVuOjxcL3A+XG48dWw+XG48bGk+TmljaHQgYWJnZXNjaGxvc3NlbmUgU2VuZHVuZ2VuIGzDtnNjaGVuPFwvbGk+XG48bGk+TmljaHQgYWJnZXNjaGxvc3NlbmUgU2VuZHVuZ2VuIGJlYXJiZWl0ZW4gdW5kIGVpbmVuIGFuZGVyZW4gQWNjb3VudCB3w6RobGVuLjxcL2xpPlxuPFwvdWw+XG48XC9kaXY+PFwvZGl2PiIsImZpbGUtdXBsb2FkZXJfYnV0dG9uX2Nob29zZS1maWxlIjoiRGF0ZWkgYXVzd8OkaGxlbiIsInVzZXItc3RhdHVzX3ZhbHVlLWxhYmVsX2xvY2tlZCI6IkxvZ2luIG5pY2h0IG3DtmdsaWNoIiwiZ2VuZXJhbC1kYXRhLXBlcm1pc3Npb25zX2xhYmVsX3NoaXBtZW50LXJlZmVyZW5jZXMiOiJTZW5kdW5nc3JlZmVyZW56IiwidXNlci1tYW5hZ2VtZW50X3BhcmFncmFwaF91c2VyLWhhcy1vcGVuLXNoaXBtZW50cyI6IkVpbmUgT3B0aW9uIHp1bSBmb3J0ZmFocmVuIGF1c3fDpGhsZW4iLCJ1c2VyLW1hbmFnZW1lbnRfbXNnX29uLXN1Y2Nlc3Mtc2F2ZSI6IlBlcnNvbiBnZXNwZWljaGVydCIsImNvbnRhY3QtZGV0YWlsc19sYWJlbF9uYW1lLXRpdGxlIjoiQW5yZWRlIiwiZ2VuZXJhbC1kYXRhX2hlYWRlcl9jb21wYW55LWluZm9ybWF0aW9uIjoiVW50ZXJuZWhtZW5zw7xiZXJzaWNodCIsImFjY291bnQtbWFuYWdlbWVudF9hbGVydF9kaXNhYmxpbmctZmFpbGVkIjoiTWluZGVzdGVucyBFaW4gREhMLUFjY291bnQgbXVzcyBnZXNwZWljaGVydCB3ZXJkZW4iLCJ1c2VyLW1hbmFnZW1lbnRfaGVhZGVyX2RlbGV0ZS11c2VycyI6IlBlcnNvbmVuIGzDtnNjaGVuIiwiY29ycG9yYXRlLWdyb3VwX2J1dHRvbl9zZXQtZ3JvdXAtcm9sZS1zdWJtaXQiOiJTcGVpY2hlcm4iLCJhY2NvdW50LW1hbmFnZW1lbnRfYnV0dG9uX2NhbmNlbCI6ImFiYnJlY2hlbiIsInNldHRpbmdzLW1hbmFnZW1lbnRfYnV0dG9uX2xpc3QtY29uZmlybS1yb3ctZWRpdGluZyI6IlNwZWljaGVybiIsInVzZXItbWFuYWdlbWVudF9sYWJlbF9leGNsdWRlLXVzZXItZ3JvdXAtd2l0aC1vcGVuLXNoaXBtZW50cyI6IlNjaGxpZcOfdCBhbGxlIG1pdCB1bnZvbGxzdMOkbmRpZ2VuIFNlbmR1bmdlbiBhdXMiLCJ1c2VyLW1hbmFnZW1lbnRfYnV0dG9uX2R1cGxpY2F0ZSI6IkR1cGxpemllcmVuIiwiZ3JvdXAtZGV0YWlsc19zZWxlY3Qtb3B0aW9uX2NvbWJpbmUtbm90aWZpY2F0aW9uIjoiV2VubiB7Y291bnR9IEFuZnJhZ2VuIGRhIHNpbmQiLCJnZW5lcmFsLWRhdGEtcGVybWlzc2lvbnNfbGFiZWxfbWVzc2FnZS1teS11c2VycyI6Ik5hY2hyaWNodGVuIENlbnRlciIsImNvcnBvcmF0ZS1yb2xlX3NlbGVjdC1vcHRpb25fY29ycG9yYXRlLWFkbWluIjoiSmEiLCJ1c2VyLW1hbmFnZW1lbnRfYnV0dG9uX2RlbGV0ZS11c2VyIjoiTMO2c2NoZW4iLCJ1c2VyLW1hbmFnZW1lbnRfbWVzc2FnZV9zZW5kLWFjdGl2YXRpb24tZW1haWwtc3VjY2VzcyI6Ik5ldWUgQWt0aXZpZXJ1bmdzIEUtTWFpbCBzZW5kZW4iLCJjb3Jwb3JhdGUtZ3JvdXBfYnV0dG9uX2FkZC11c2VyIjoiUGVyc29uIGhpbnp1ZsO8Z2VuIiwidXNlci1tYW5hZ2VtZW50X2J1dHRvbl9yZXNlbmQtaW52aXRlIjoiRWlubGFkdW5nIGVybmV1dCBzZW5kZW4iLCJyZWZlcmVuY2Utb3B0aW9uc19tc2dfcmVmZXJlbmNlLWRlbGV0ZWQiOiJSZWZlcmVueiBnZWzDtnNjaHQiLCJjb250YWN0LWRldGFpbHNfbGFiZWxfZmlyc3QtbmFtZSI6IlZvcm5hbWUiLCJleHRlcm5hbC1tb2R1bGVzX2NvbC1uYW1lX25pY2tuYW1lIjoiQWxpYXMgKEJlc2NocmVpYnVuZykiLCJjb3Jwb3JhdGUtZ3JvdXBfaGVhZGVyX2dyb3VwLW1hbmFnZW1lbnQiOiJHcnVwcGVuIGVyc3RlbGxlbiB1bmQgYmVhcmJlaXRlbiIsImFkZHJlc3MtYm9va19idXR0b25fYWRkLWNvbnRhY3QiOiJOZXVlbiBLb250YWt0IGhpbnp1ZsO8Z2VuIiwiZW1wbG95ZWUtaW1wb3J0X2xhYmVsX3NlbGVjdC1maWxlLXRvLWltcG9ydCI6IkNTVi1EYXRlaSBob2NobGFkZW4iLCJ1c2VyLW1hbmFnZW1lbnRfc2VsZWN0LW9wdGlvbl9zZXQtdHlwZSI6IkVpbnN0ZWxsdW5nIGRlcyBVbnRlcm5laG1lbnMtQWRtaW5pc3RyYXRvciDDpG5kZXJuIiwic2V0dGluZy1tYW5hZ2VtZW50X2J1dHRvbl9yZXN0b3JlLWRlZmF1bHRzIjoiUsO8Y2tzZXR6dW5nc2ZlaGxlciIsImdlbmVyYWwtZGF0YS1wZXJtaXNzaW9uc19sYWJlbF9zZXR0aW5ncy1wcmljaW5nIjoiUHJlaXNlIHVuZCBHZWLDvGhyZW4iLCJjb3Jwb3JhdGUtZ3JvdXBfY29sLW5hbWVfbWVtYmVycy1jb3VudCI6IkdydXBwcGVubWl0Z2xpZWRlciIsInVzZXItbWFuYWdlbWVudF9zdWItaGVhZGVyX2dyb3VwLWFkbWluaXN0cmF0b3IiOiJFaW4gYW5kZXJlciBHcnVwcGVuLUFkbWluaXN0cmF0b3IgbXVzcyB6dXIgR3J1cHBlIGhpbnp1Z2Vmw7xndCB3ZXJkZW4gYmV2b3IgZGllc2UgUGVyc29uIGdlbMO2c2NodCB3ZXJkZW4ga2Fubi4iLCJhY2NvdW50LW1hbmFnZW1lbnRfYnV0dG9uX2FjdGlvbnMiOiJBa3Rpb25lbiIsImFjY291bnQtbWFuYWdlbWVudF9idXR0b25fZGVsZXRlLWFjdGlvbiI6IkzDtnNjaGVuIiwibGItZXh0ZXJuYWwtbW9kdWxlc19sYWJlbF9jb25uZWN0LW5pY2tuYW1lIjoiQWxpYXMgKEJlc2NocmVpYnVuZykiLCJ1c2VyLW1hbmFnZW1lbnRfYnV0dG9uX2NhbmNlbCI6ImFiYnJlY2hlbiIsImdlbmVyYWwtZGF0YS1wZXJtaXNzaW9uc19sYWJlbF9ub3RpZmljYXRpb24tYW5kLXNoYXJlIjoiQmVuYWNocmljaHRpZ3VuZ2VuIiwidXNlci1tYW5hZ2VtZW50X2hlYWRlcl9jb21wYW55LXVzZXJzIjoiQmVudXR6ZXIgaGluenVmw7xnZW4gdW5kIGJlYXJiZWl0ZW4iLCJlbXBsb3llZS1pbXBvcnRfcGFyYWdyYXBoX2Vycm9ycy1sb2NhdGlvbiI6IkZlaGxlciBnZWZ1bmRlbiBmw7xyOiIsImNvcnBvcmF0ZS1ncm91cF9idXR0b25fc2V0LWdyb3VwLXJvbGUiOiJHcnVwcGVucm9sbGUgdmVyw6RuZGVybiIsImdlbmVyYWwtZGF0YS1wZXJtaXNzaW9uc19sYWJlbF91c2VyLW1hbmFnZW1lbnQiOiJCZW51dHplciBoaW56dWbDvGdlbiB1bmQgYmVhcmJlaXRlbiAoYW4gRmlybWEpIiwibWxzaGlwbWVudC1yZXN0cmljdGVkX2NyX21heC13ZWlnaHQtcGVyLXNoaXBtZW50LWFwcHJvdmFsIjoiTWF4aW1hbCBnZXdpY2h0IHBybyBTZW5kdW5nIEJlc3TDpHRpZ3VuZyIsImVkaXQtYWNjb3VudF9oZWFkZXJfZWRpdC1kaGwtYWNjb3VudCI6Ikt1bmRlbm51bW1lciB7YWNjb3VudE51bWJlcn0iLCJyZWZlcmVuY2Utb3B0aW9uc19idXR0b25fcmVmZXJlbmNlLWZvcm1hdCI6IkZvcm1hdCIsImNvcnBvcmF0ZS1ncm91cF9zdWItaGVhZGVyX29ubGluZS1iaWxsaW5nIjoiT25saW5lIFJlY2hudW5nIiwiaW52aXRlLXVzZXJzX2hlYWRlcl9lbWFpbHMtYWxyZWFkeS1leGlzdHMiOiJBZHJlc3NlIGV4aXN0aWVydCBiZXJlaXRzIiwiY29ycG9yYXRlLWdyb3VwX2hlYWRlcl9ncm91cC1tZW1iZXJzIjoiR3J1cHBwZW5taXRnbGllZGVyIiwiYWRkcmVzcy1ib29rX2NvbC1uYW1lX2FkZHJlc3MiOiJBZHJlc3NlIiwibWVzc2FnZS1teS11c2Vyc19oZWFkZXJfbWVzc2FnZS1teS11c2VycyI6Ik5hY2hyaWNodGVuIENlbnRlciIsImNvcnBvcmF0ZS1yb2xlX3NlbGVjdC1vcHRpb25fZ3JvdXAtYWRtaW4iOiJKYSIsImdyb3VwLWRldGFpbHNfbXNnX29uLXN1Y2Nlc3Mtc2F2ZSI6IkdydXBwZSBnZXNwZWljaGVydCIsInNpZGUtbWVudV90YWItbmFtZV9tZXNzYWdlLW15LXVzZXJzIjoiTmFjaHJpY2h0ZW4gQ2VudGVyIiwiYWNjb3VudC1tYW5hZ2VtZW50X2J1dHRvbl92aWV3LWFjdGlvbiI6IsOcYmVyc2ljaHQiLCJjb3Jwb3JhdGUtZ3JvdXBfYnV0dG9uX2RlbGV0ZS1ncm91cCI6IkzDtnNjaGVuIiwiaW52aXRlLXVzZXJzX2FsZXJ0X2ZpbGUtc2l6ZS1lcnJvciI6Im1heGltYWxlIERhdGVpZ3LDtsOfZSB7ZmlsZVNpemV9IiwiYWRkcmVzcy1ib29rX3NlbGVjdC1vcHRpb25fYWRkcmVzcyI6IkFkcmVzc2UiLCJlZGl0LWFjY291bnRfbGFiZWxfYXNzaWduLXNlbGYtcmVnaXN0cmF0aW9uLWdyb3VwIjoiR3J1cHBlIGF1c3fDpGhsZW4iLCJsYi1uZXctY29udGFjdF9idXR0b25fc2F2ZS1jb250YWN0IjoiU3BlaWNoZXJuIiwicmVmZXJlbmNlLWZvcm1hdC1vcHRpb25zX3N1Yi1oZWFkZXJfY29tcGFueS1saXN0IjoiRmlybWEgRm9ybWF0ZSIsImFjY291bnQtbWFuYWdlbWVudF9idXR0b25fYWRkLWFjY291bnQiOiJBY2NvdW50IGhpbnp1ZsO8Z2VuIiwiZW1wbG95ZWUtaW1wb3J0X2Vycm9yLW1lc3NhZ2Vfd3Jvbmctcm93LXNpemUiOiJEaWUgRGF0ZWksIGRpZSBTaWUgaG9jaGdlbGFkZW4gaGFiZW4sIGhhdCBlaW5lIHVudGVyc2NoaWVkbGljaGUgQW56YWhsIGFuIFNwYWx0ZW4gaW4gZGVuIFJlaWhlbi4gQml0dGUgw7xiZXJwcsO8ZmVuIFNpZSBkaWUgRGF0ZWkgdW5kIHN0ZWxsZW4gU2llIHNpY2hlciwgZGFzcyBhbGxlIFJlaWhlbiBkaWVzZWxiZSBBbnphaGwgYW4gU3BhbHRlbiBoYWJlbi4iLCJpbnZpdGUtdXNlcnNfYWxlcnRfdXNlcnMtY291bnQtZXJyb3IiOiJEaWUgQW56YWhsIGFuIFBlcnNvbmVuIMO8YmVyc3RlaWd0IGRhcyBNYXhpbXVtIiwiaW52aXRlLXVzZXJzX21zZ19wcm9jZWVkLXdpdGgtdW5pcXVlLWVtYWlscyI6IkFyZSB5b3Ugc3VyZSB5b3Ugd2FudCB0byBjb250aW51ZSB3aXRoIHRoZSBuZXcgZW1haWwgYWRkcmVzc2VzIG9ubHk/IiwiYWRkcmVzcy1ib29rX2NvbC1uYW1lX2NvdW50cnkiOiJMYW5kIiwiY29ycG9yYXRlLWdyb3VwX2J1dHRvbl9yZW1vdmUiOiJWb24gR3J1cHBlIGVudGZlcm5lbiIsImVtcGxveWVlLWltcG9ydF9lcnJvci1tZXNzYWdlX2FkbWluLWltcG9ydC1ub3QtYWxsb3dlZCI6IkhvY2hsYWRlbiBpc3QgZmVobGdlc2NobGFnZW4uIFNpZSBkw7xyZmVuIGtlaW5lIEFkbWluaXN0cmF0b3JlbiB6dSBkaWVzZXIgR3J1cHBlIGhpbnp1ZsO8Z2VuLiIsIm1sc2hpcG1lbnQtcmVzdHJpY3RlZF9jcl9ub24tZG9jdW1lbnQtYXBwcm92YWwiOiJTZW5kdW5nIEJlc3TDpHRpZ3VuZyIsInJlZmVyZW5jZS1vcHRpb25zX2xhYmVsX2FkZC1mb3JtYXQtdmFsdWUiOiI8ZGl2IGNsYXNzPVwiZXdmX2RpY3Rpb25hcnlfdmFsdWVcIj5Gb3JtYXQgPGEgZXdmLWxpZ2h0Ym94PVwiZXdmLWxpZ2h0Ym94XCIgaHJlZj1cIi9jb250ZW50L2RobC9hdC9kZS9jb3Jwb3JhdGUvcmVmZXJlbmNlLWZvcm1hdC10aXBzLmh0bWxcIiB0YXJnZXQ9XCJsaWdodGJveFwiPkZvcm1hdG9wdGlvbmVuIGFuemVpZ2VuPFwvYT48XC9kaXY+IiwicmVmZXJlbmNlLW9wdGlvbnNfZXJyb3Jfbm90LXVuaXF1ZS1mb3JtYXQiOiJFeGlzdGllcnQgYmVyZWl0cyIsImxiLW1hbmFnZS1jb250YWN0c19zdWItaGVhZGVyX2NvbGxlY3Rpb24tdG8iOiJLb3BpZXJlbiB6dSIsImV4dGVybmFsLW1vZHVsZXNfYnV0dG9uX2VzdGFibGlzaC1jb25uZWN0aW9uIjoiQmVzdGVoZW5kZXIgRS1CaWxsaW5nIFp1Z2FuZyIsIm1sc2hpcG1lbnQtcmVzdHJpY3RlZF9jcl9tYXhpbXVtLWNvc3Qtb2Ytc2hpcG1lbnRzIjoiTWF4aW1hbCBrb3N0ZW4gdm9uIHNlbmR1bmdlbiIsImNvcnBvcmF0ZS1ncm91cF9jb2wtbmFtZV9lbWFpbCI6IkF1c3dhaGwiLCJlbXBsb3llZS1pbXBvcnRfZXJyb3ItbWVzc2FnZV9ncm91cC1yb2xlIjoiVW5nw7xsdGlnZSBHcnVwcGVucm9sbGUiLCJ1c2VyLW1hbmFnZW1lbnRfYnV0dG9uX2RlbGV0ZS11c2VycyI6IkphIiwic2lkZS1tZW51X3RhYi1uYW1lX2F1dGhvcml6ZWQtYWNjb3VudHMiOiJBY2NvdW50IEF1dG9yaXNpZXJ1bmciLCJyZWZlcmVuY2Utb3B0aW9uc19zdWItaGVhZGVyX2NvbGxlY3Rpb24tZnJvbSI6IiIsImNvcnBvcmF0ZS1ncm91cF9oZWFkZXJfZXh0ZXJuYWwtY29ubmVjdGlvbnMiOiJTZW5kdW5nc8O8YmVyd2FjaHVuZyAmIE9ubGluZSBSZWNobnVuZ3NvcHRpb25lbiIsImludml0ZS11c2Vyc19sYWJlbF9vcHRpb25hbC1tZXNzYWdlIjoiTmFjaHJpY2h0IChvcHRpb25hbCkiLCJsYi1kZWxldGUtY29udGFjdC1jb25maXJtYXRpb25faGVhZGVyX211bHRpcGxlIjoiUGVyc29uZW4gbMO2c2NoZW4iLCJjb3Jwb3JhdGUtZ3JvdXBfbGFiZWxfZ3JvdXAtbmFtZSI6IiIsInJlZmVyZW5jZS1vcHRpb25zX2NvbC1uYW1lX3JlZmVyZW5jZSI6IlJlZmVyZW56IiwicmVmZXJlbmNlLW9wdGlvbnNfbXNnX2Zvcm1hdHMtZGVsZXRlZCI6IkZvcm1hdGUgZ2Vsw7ZzY2h0IiwibGItbWFuYWdlLWNvbnRhY3RzX2hlYWRlcl9hZGQtY29udGFjdHMiOiJLb250YWt0ZSB2b24gZWluZW0gaW5zIGFuZGVyZSBBZHJlc3NidWNoIGtvcGllcmVuIiwic2V0dGluZy1tYW5hZ2VtZW50X21zZ19lZmZlY3RpdmUtdmFsdWUtcmVxdWlyZWQiOiJFcmZvcmRlcmxpY2giLCJjb3Jwb3JhdGUtZ3JvdXBfYnV0dG9uX21hbmFnZS11c2VycyI6IlBlcnNvbmVuIHp1IGRpZXNlciBHcnVwcGUgaGluenVmw7xnZW4gb2RlciBlbnRmZXJuZW4iLCJncm91cC1kZXRhaWxzX2FsZXJ0X29uLXNldC1ncm91cC1yb2xlLXN1Y2Nlc3MiOiIgYWt0dWFsaXNpZXJ0IiwidXNlci1tYW5hZ2VtZW50X2FsZXJ0X3VzZXJzLWhhdmUtY29uZmxpY3RzIjoiRWluIHdlaXRlcmVyIE51dHplciBoYXQgdW52b2xsc3TDpG5kaWdlIFNlbmR1bmdlbiIsImVkaXQtYWNjb3VudF9sYWJlbF9hY2NvdW50LXR5cGUtc2hpcHBlciI6IlZlcnNlbmRlciIsInNldHRpbmctbWFuYWdlbWVudF92YWx1ZS1sYWJlbF9jb25mZ2l1cmF0aW9uLWl0ZW0tYm9vbGVhbi10cnVlIjoiSmEiLCJhY2NvdW50LW1hbmFnZW1lbnRfYnV0dG9uX2Rpc2FibGUtYWN0aW9uIjoiRGVha3RpdmllcmVuIiwiZWRpdC1hY2NvdW50X2Vycm9yX2FjY291bnQtdHlwZS1mYWlsZWQiOiJBY2NvdW50IGhpbnp1ZsO8Z2VuIG5pY2h0IG3DtmdsaWNoLiBLb250YWt0aWVyZW4gU2llIGRlbiBBY2NvdW50YmVzaXR6ZXIgZsO8ciBkaWUgQXV0aG9yaXNpZXJ1bmcuIiwidXNlci1zdGF0dXNfdmFsdWUtbGFiZWxfcGVuZGluZy1yZWdpc3RyYXRpb24iOiJBdXNzdGVoZW5kZSBSZWdpc3RyaWVydW5nIiwidXNlci1tYW5hZ2VtZW50X3NlbGVjdC1vcHRpb25fZGVsZXRlIjoiTMO2c2NoZW4iLCJ1c2VyLW1hbmFnZW1lbnRfYnV0dG9uX2FjdGl2YXRlIjoiQWt0aXZpZXJlbiIsInNldHRpbmdzLW1hbmFnZW1lbnRfc2VsZWN0LW9wdGlvbl9ncm91cC1wbGFjZWhvbGRlciI6IkdydXBwZSBhdXN3w6RobGVuIiwidXNlci1tYW5hZ2VtZW50X2FsZXJ0X2NvbmZsaWN0LWluY2x1ZGVzLXRoZS1lbnRpcmUtc2VjdGlvbiI6IktlaW5lIMOEbmRlcnVuZ2VuIHd1cmRlbiB2b3JnZW5vbW1lbiBkYSBkaWUgU2VuZHVuZ2VuIHVudm9sbHN0w6RuZGlnIHNpbmQiLCJjb3Jwb3JhdGUtZ3JvdXBfYnV0dG9uX2FkZC11c2VycyI6IlBlcnNvbmVuIGhpbnp1ZsO8Z2VuIiwiYWNjb3VudC1tYW5hZ2VtZW50X2NvbC1uYW1lX2FjY291bnQtc2hpcG1lbnRzIjoiVW52b2xsc3TDpG5kaWdlIFNlbmR1bmdlbiIsImdyb3VwLWRldGFpbHNfaGVhZGVyX2RlbGV0ZS1ncm91cHMiOiIiLCJjb3Jwb3JhdGUtZ3JvdXBfc3ViLWhlYWRlcl9wcm92aWV3IjoiU2VuZHVuZ3PDvGJlcndhY2h1bmcgdW5kIEJlbmFjaHJpY2h0aWd1bmdlbiIsInNpZGUtbWVudV90YWItbmFtZV9kaWdpdGFsLWN1c3RvbXMtaW52b2ljZXMiOiJEaWdpdGFsZSBab2xscmVjaG51bmciLCJyZWZlcmVuY2Utb3B0aW9uc19lcnJvcl9pbnZhbGlkLWZvcm1hdC12YWx1ZSI6IlVuZ8O8bHRpZ2VzIEZvcm1hdCIsImxiLWV4dGVybmFsLW1vZHVsZXNfbGFiZWxfcmVxdWVzdC1zZWxlY3QtZXh0ZXJuYWwtbW9kdWxlIjoiQXVzd8OkaGxlbiAiLCJzZXR0aW5ncy1tYW5hZ2VtZW50X2J1dHRvbl9saXN0LWNhbmNlbC1yb3ctZWRpdGluZyI6ImFiYnJlY2hlbiIsImNvcnBvcmF0ZS1kZWZhdWx0LWdyb3VwX2xpbmtfY2xvc2UiOiJzY2hsaWXDn2VuIiwiY29ycG9yYXRlLWdyb3VwX2NvbC1uYW1lX2dyb3VwLW5hbWUiOiJOYW1lIiwidXNlci1tYW5hZ2VtZW50X2xhYmVsX3NlYXJjaC11c2Vycy5wcm9tcHQiOiJTdWNoZSIsImdlbmVyYWwtZGF0YV9idXR0b25fc2F2ZS1jaGFuZ2VzIjoiU3BlaWNoZXJuIiwidXNlci1tYW5hZ2VtZW50X3BhcmFncmFwaF91c2Vycy1hcmUtZ3JvdXAtYWRtaW5pc3RyYXRvcnMiOiJXw6RobGVuIFNpZSBlaW5lIE9wdGlvbiB1bSBmb3J0enVmYWhyZW4iLCJhZGRyZXNzLWJvb2tfc2VsZWN0LW9wdGlvbl9jb250YWN0LW5hbWUiOiJLb250YWt0bmFtZSIsImNvcnBvcmF0ZS1ncm91cF9tc2dfZ3JvdXAtbmFtZS1ub3QtdW5pcXVlIjoiTmFtZSBiZXJlaXRzIHZlcmdlYmVuIiwiYWRkcmVzcy1ib29rX2xhYmVsX2NvbGxlY3Rpb24tc2VsZWN0b3IiOiI8ZGl2IGNsYXNzPVwiZXdmX2RpY3Rpb25hcnlfdmFsdWVcIj48Yj48aT5Xw6RobGVuIFNpZSBkYXMgQWRyZXNzYnVjaCBhdXM8XC9pPjxcL2I+PFwvZGl2PiIsImVtcGxveWVlLWltcG9ydF9oZWFkZXJfcmVwbGFjZS1kdXBsaWNhdGVzIjoiRXJsYXViZW4gLSBEdXBsaWthdGUgYmVpbSBEb3dubG9hZCBlcnNldHplbiIsInVzZXItbWFuYWdlbWVudF9hbGVydF9vcGVyYXRpb24tZmFpbGVkLWR1ZS10by1kZWFjdGl2YXRpb24tb2Ytc29sZS1ncm91cC1hZG1pbiI6IkdydXBwZW4tQWRtaW5pc3RyYXRvciBlcmZvcmRlcmxpY2giLCJhY2NvdW50LW1hbmFnZW1lbnRfbGFiZWxfc2hpcHBlci1kZWZhdWx0LWFjY291bnQiOiJTaGlwcGVyIEFjY291bnQgd2hlbiBwYXlpbmcgYnkgY3JlZGl0IGNhcmQiLCJ1c2VyLW1hbmFnZW1lbnRfbGFiZWxfdXNlci10eXBlIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+PGRpdiBjbGFzcz0ibWVzc2FnZS13cmFwcGVyIj5Tb2xsIGRpZXNlIFBlcnNvbiBlaW4gVW50ZXJuZWhtZW5zYWRtaW5pc3RyYXRvciB3ZXJkZW4/IDxkaXYgY2xhc3M9XCJpbmZvXCI+PGRpdj48cD5BZG1pbmlzdHJhdG9yZW4gaGFiZW4gZGllIHZvbGxlIEtvbnRyb2xsZS9BdXRvcml0w6R0IMO8YmVyIEFjY291bnRmcmVpZ2FiZW4sIE51dHplciwgQWRyZXNzYsO8Y2hlciwgU2VuZHVuZ3MtIHVuZCBTdGFuZGFyZGVpbnN0ZWxsdW5nZW4uPFwvcD5cbjxwPiA8XC9wPlxuPHA+V2lyIGVtcGZlaGxlbiBJaG5lbiBBZG1pbmlzdHJhdG9yZW5yZWNodGUgZsO8ciBJaHIgVW50ZXJuZWhtZW4gcmVzdHJpa3RpdiB6dSBoYW5kaGFiZW4uPFwvcD5cbjxcL2Rpdj48XC9kaXY+PFwvZGl2PjxcL2Rpdj4iLCJ1c2VyLW1hbmFnZW1lbnRfc3ViLWhlYWRlcl9vcGVuLXNoaXBtZW50cyI6IlVudm9sbHN0w6RuZGlnZSBTZW5kdW5nZW4ga8O2bm5lbiB2b24gYW5kZXJlbiBHcnVwcGVubWl0Z2xpZWRlcm4gZ2Vsw7ZzY2h0IG9kZXIgdmVydm9sbHN0w6RuZGlndCB3ZXJkZW4uIiwibWxzaGlwbWVudC1yZXN0cmljdGVkX2NyX2RvY3VtZW50LWFwcHJvdmFsIjoiRG9rdW1lbnQgQmVzdMOkdGlndW5nIiwic2V0dGluZy1tYW5hZ2VtZW50X21zZy1lZmZlY3RpdmUtdmFsdWUtbWF4aW11bSI6Ik1heGltYWwge3ZhbHVlfSIsInVzZXItbWFuYWdlbWVudF9wYXJhZ3JhcGhfZGVsZXRlLXVzZXJzLWNvbmZpcm1hdGlvbiI6IlNpbmQgU2llIHNpY2hlciwgZGFzcyBTaWUgZGVuIFZvcmdhbmcgbMO2c2NoZW4gbcO2Y2h0ZW4/IiwiYWNjb3VudC1tYW5hZ2VtZW50X2J1dHRvbl9yZXF1ZXN0LW5ldy1kaGwtYWNjb3VudCI6IkFjY291bnRudW1tZXIgYW5mb3JkZXJuIiwiZXh0ZXJuYWwtbW9kdWxlc19sYWJlbF9vbmxpbmUtYmlsbGluZy1leHRlcm5hbC1tb2R1bGUiOiJPbmxpbmUgUmVjaG51bmciLCJhY2NvdW50LW1hbmFnZW1lbnRfaGVhZGVyX2FjY291bnQtbWFuYWdlbWVudCI6IkFjY291bnRudW1tZXIiLCJhY2NvdW50LW1hbmFnZW1lbnRfYWxlcnRfZGVsZXRpbmctZmFpbGVkIjoiTWluZGVzdGVucyBFaW4gREhMLUFjY291bnQgbXVzcyBnZXNwZWljaGVydCB3ZXJkZW4iLCJpbnZpdGUtdXNlcnNfbGFiZWxfYXNzaWduLXRvLWdyb3VwIjoiWnVyIEdydXBwZSBoaW56dWbDvGdlbiIsInVzZXItbWFuYWdlbWVudF9zdWItaGVhZGVyX2xvZ2luLWluZm9ybWF0aW9uIjoiTXlESEwrIFp1Z2FuZyIsImVtcGxveWVlLWltcG9ydF9maWVsZC1uYW1lX2dyb3VwLXJvbGUiOiJHcnVwcGVubmFtZSIsInJlZmVyZW5jZS1mb3JtYXRfbGFiZWxfdGVzdC12YWx1ZSI6IlRlc3Rmb3JtYXQiLCJyZWZlcmVuY2Utb3B0aW9uc19idXR0b25faW1wb3J0LXJlZmVyZW5jZSI6IlJlZmVyZW56IGhvY2hsYWRlbiIsInNldHRpbmdzLW1hbmFnZW1lbnRfZXJyb3JfdXBkYXRlZC1ieS1hbm90aGVyLXVzZXIiOiJEaWUgRWluc3RlbGx1bmcgd3VyZGUgdm9uIGVpbmVtIGFuZGVyZW4gQWRtaW5pc3RyYXRvciBnZcOkbmRlcnQuIEF1ZiBPSyBrbGlja2VuLCB1bSBha3R1YWxpc2llcnRlIEVpbnN0ZWxsdW5nIHp1IHNlaGVuLiIsImRpZ2l0YWwtY3VzdG9tcy1pbnZvaWNlc19hbGVydF9jb250YWN0LWFkbWluaXN0cmF0b3IiOiI8ZGl2IGNsYXNzPVwiZXdmX2RpY3Rpb25hcnlfdmFsdWVcIj48ZGl2IGNsYXNzPSJtZXNzYWdlLXdyYXBwZXIiPjxwPlVuc2VyZSBQYXBlcmxlc3MgVHJhZGUgRnVua3Rpb24gZXJtw7ZnbGljaHQgZXMgSWhuZW4sIElocmUgWm9sbHJlY2hudW5nIGRpZ2l0YWwgenUgdmVyc2VuZGVuITxcL3A+XG48cD7CoDxcL3A+XG48cD5EaWVzZSBGdW5rdGlvbiBpc3QgYmlzaGVyIG5pY2h0IGbDvHIgZGllc2VzIExhbmQgZnJlaWdlc2NoYWx0ZXQuIEJpdHRlIGtvbnRha3RpZXJlbiBTaWUgSWhyZW4genVzdMOkbmRpZ2VuIERITCBWZXJ0cmllYnNtYW5hZ2VyIGbDvHIgVW50ZXJzdMO8dHp1bmcuPFwvcD5cbjxcL2Rpdj48XC9kaXY+IiwibWxzaGlwbWVudC1yZXN0cmljdGVkX2NyX21heC1kaW1lbnNpb25zLXBlci1zaGlwbWVudC1hcHByb3ZhbCI6IiR7bWF4fWFibWVzc3VuZ2VuIHBybyBTZW5kdW5nIEJlc3TDpHRpZ3VuZyIsInNpZGUtbWVudV90YWItbmFtZV9zZXR0aW5ncy1tYW5hZ2VtZW50IjoiU2VuZHVuZ3MtL1N0YW5kYXJkZWluc3RlbGx1bmdlbiIsInNpZGUtbWVudV90YWItbmFtZV9hY2NvdW50LWFuZC1wYXltZW50LW9wdGlvbnMiOiJBY2NvdW50bnVtbWVyIiwidXNlci1tYW5hZ2VtZW50X21zZ19lbWFpbC1jaGFuZ2VzLXNjaGVkdWxlZCI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPjxkaXYgY2xhc3M9Im1lc3NhZ2Utd3JhcHBlciI+PHA+RGllIFBlcnNvbiBlcmjDpGx0IGVpbmUgRS1NYWlsIGF1ZiBpaHJlIG5ldWUgRS1NYWlsLUFkcmVzc2UuIERpZSBQZXJzb24gbXVzcyBzaWNoIGF1cyBNeURITCsgYXVzbG9nZ2VuIHVuZCBkYW5uIHdpZWRlciBlaW5sb2dnZW4sIHVtIGRpZSBuZXVlIEUtTWFpbC1BZHJlc3NlIHp1IGJlc3TDpHRpZ2VuLjxcL3A+XG48cD7CoDxcL3A+XG48cD5EaWUgRS1NYWlsLUFkcmVzc2Uga2FubiBuaWNodCBub2NobWFscyBnZcOkbmRlcnQgd2VyZGVuIGJldm9yIG5pY2h0IG5ldSBlaW5nZWxvZ2d0IHd1cmRlLjxcL3A+XG48XC9kaXY+PFwvZGl2PiIsInVzZXItbWFuYWdlbWVudF9sYWJlbF9lbWFpbCI6IkxvZ2luIEUtTWFpbCBBZHJlc3NlIiwicmVmZXJlbmNlLW9wdGlvbnNfbGFiZWxfYXBwZW5kLWR1cmluZy1pbXBvcnQiOiJOZXVlIFJlZmVyZW56ZW4gaGluenVmw7xnZW4iLCJjb3Jwb3JhdGUtZ3JvdXBfc2VsZWN0LW9wdGlvbl9lbXB0eS1leHRlcm5hbC1jb25uZWN0aW9uIjoiQXVzd8OkaGxlbiAiLCJpbnZpdGUtdXNlcnNfYnV0dG9uX2ludml0ZS11c2VycyI6Ikludml0ZSBQZW9wbGUiLCJ1c2VyLW1hbmFnZW1lbnRfbGFiZWxfZ3JvdXAtbmFtZSI6IkdydXBwZSIsInJlZmVyZW5jZS1mb3JtYXQtb3B0aW9uc19zdWItaGVhZGVyX3VzZXItbGlzdCI6IkRpZXNlIFBlcnNvbiBGb3JtYXRlIiwibGItZXh0ZXJuYWwtbW9kdWxlcy1yZXZva2VfYnV0dG9uX3Jldm9rZSI6IkphIiwiZ2VuZXJhbC1kYXRhLXBlcm1pc3Npb25zX2xhYmVsX2FkZC1tYW5hZ2UtdXNlcnMiOiJCZW51dHplciBoaW56dWbDvGdlbiB1bmQgYmVhcmJlaXRlbiAoenUgZGllc2VyIEdydXBwZSkiLCJjb3Jwb3JhdGUtZ3JvdXBfY29sLW5hbWVfdXNlci1uYW1lIjoiRS1NYWlsIEFkcmVzc2UiLCJjb3Jwb3JhdGUtZ3JvdXBfY29sLW5hbWVfZ3JvdXAtYWRtaW5pc3RyYXRvcnMiOiJHcnVwcGVuYWRtaW4iLCJ1c2VyLW1hbmFnZW1lbnRfbGFiZWxfc3RhdHVzIjoiU3RhdHVzIiwibGItdHJhbnNmZXItdXNlcnNfaGVhZGVyX3RyYW5zZmVyLWV4aXN0aW5nLXVzZXJzIjoiQmVudXR6ZXIgaW4gZGllc2UgR3J1cHBlIHZlcnNjaGllYmVuIiwiYWNjb3VudC1tYW5hZ2VtZW50X2FsZXJ0X2RlbGV0aW5nLXN1Y2NlZWRlZCI6InthbW91bnR9IEFjY291bnRzIGdlbMO2c2NodCIsImxiLWFkZC1tZW1iZXJzX2J1dHRvbl9hZGQtbWVtYmVycyI6Ilp1ciBHcnVwcGUgaGluenVmw7xnZW4iLCJlbXBsb3llZS1pbXBvcnRfZXJyb3ItbWVzc2FnZV9lbWFpbCI6IlVuZ8O8bHRpZ2UgRS1NYWlsIEFkcmVzc2UiLCJ1c2VyLW1hbmFnZW1lbnRfYWxlcnRfb3BlcmF0aW9uLWZhaWxlZC1kdWUtdG8tZXJyb3IiOiJFaW4gRmVobGVyIGlzdCBhdWZnZXRyZXRlbi4gQml0dGUga29udGFrdGllcmVuIFNpZSBkZW4gdGVjaG5pc2NoZW4gU3VwcG9ydCB1bnRlciArNDMgMjIzNiAyMDcgMTExMiBvciAxMTE0LiIsInVzZXItbWFuYWdlbWVudF9zdWItaGVhZGVyX2NvbnRhY3QtaW5mb3JtYXRpb24iOiJLb250YWt0aW5mb3JtYXRpb25lbiIsImxiLWV4dGVybmFsLW1vZHVsZXNfbGFiZWxfY29ubmVjdC1zZWxlY3QtZXh0ZXJuYWwtbW9kdWxlIjoiQXVzd8OkaGxlbiAiLCJjb3Jwb3JhdGUtZ3JvdXBfYnV0dG9uX3RyYW5zZmVyLXVzZXJzIjoiQmVudXR6ZXIgaW4gZGllc2UgR3J1cHBlIHZlcnNjaGllYmVuIiwiY29ycG9yYXRlLWdyb3VwX2NvbC1uYW1lX2ZyZXF1ZW5jeSI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPkJlbmFjaHJpY2h0aWd1bmdlbiB2ZXJzZW5kZW4gPGRpdiBjbGFzcz1cImluZm9cIj48ZGl2PkJlbmFjaHJpY2h0aWd1bmcgYW4gR3J1cHBlbmFkbWluaXN0cmF0b3Igc2VuZGVuIHNvYmFsZCBTZW5kdW5nZW4genVyIEJlc3TDpHRpZ3VuZyBlaW5nZXJlaWNodC48XC9kaXY+PFwvZGl2PjxcL2Rpdj4iLCJhY2NvdW50LW1hbmFnZW1lbnRfc3ViLWhlYWRlcl9zYXZlZC1hY2NvdW50cyI6Ikdlc3BlaWNoZXJ0ZSBBY2NvdW50cyIsInJlZmVyZW5jZS1vcHRpb25zX2xhYmVsX21hbmFnZS1pbXBvcnRlZC1jb250YWN0cyI6IkljaCBtw7ZjaHRlIiwicmVmZXJlbmNlLW9wdGlvbnNfYnV0dG9uX2FkZC1mb3JtYXQiOiJGb3JtYXQgaGluenVmw7xnZW4iLCJ1c2VyLW1hbmFnZW1lbnRfaGVhZGVyX3VzZXItbWFuYWdlbWVudCI6Ik51dHplciIsImVtcGxveWVlLWltcG9ydF9idXR0b25faW1wb3J0LXVzZXJzIjoiQmVudXR6ZXIgaG9jaGxhZGVuIiwiZ3JvdXAtZGV0YWlsc19idXR0b25fcmVtb3ZlLWdyb3VwIjoiR3J1cHBlIGVudGZlcm5lbiIsImFkZHJlc3MtYm9va19saW5rX2RlbGV0ZS1zZWxlY3RlZCI6IkzDtnNjaGVuIiwicmVmZXJlbmNlLW9wdGlvbnNfYnV0dG9uX3JlZmVyZW5jZS1saXN0IjoiQWJzZW5kZXIgUmVmZXJlbnoiLCJ1c2VyLW1hbmFnZW1lbnRfYWxlcnRfb3Blbi1zaGlwbWVudHMtY2Fubm90LWJlLWNhbmNlbGxlZCI6IlVudm9sbHN0w6RuZGlnZSBTZW5kdW5nZW4gdm9uIFBlcnNvbihlbikiLCJyZWZlcmVuY2Utb3B0aW9uc19sYWJlbF9hZGQtZm9ybWF0LXZhbHVlLnByb21wdCI6IkJlbnV0emVuIFNpZSBudXIgZXJsYXVidGUgQ2hhcmFrdGVyZSB1bmQgRm9ybWF0b3B0aW9uZW4uIiwiYWNjb3VudC1tYW5hZ2VtZW50X2J1dHRvbl9lZGl0LWFjdGlvbiI6IkJlYXJiZWl0ZW4iLCJyZWZlcmVuY2Utb3B0aW9uc19idXR0b25fYWRkLXJlZmVyZW5jZSI6IlJlZmVyZW56IGhpbnp1ZsO8Z2VuIiwidXNlci1tYW5hZ2VtZW50X21zZ191c2VyLWFkZGVkLXN1Y2Nlc3NmdWxseSI6IlBlcnNvbiBoaW56dWdlZsO8Z3QiLCJjb3Jwb3JhdGUtZ3JvdXBfZXJyb3JfcmVtb3ZpbmctYWxsLWdyb3VwLWFkbWlucyI6IkVpbiBhbmRlcmVyIEdydXBwZW4tQWRtaW4gbXVzcyB6dXIgR3J1cHBlIGhpbnp1Z2Vmw7xndCB3ZXJkZW4gYmV2b3IgZGllc2VyIGVudGZlcm50IHdpcmQuIiwidXNlci1tYW5hZ2VtZW50X3NlbGVjdC1vcHRpb25fc2VsZWN0LW9uZSI6IkF1c3fDpGhsZW4gIiwiaW52aXRlLXVzZXJzX2xhYmVsX2ltcG9ydC1lbWFpbHMiOiJFLU1haWwgQWRyZXNzZW4gaG9jaGxhZGVuIiwiaW52aXRlLXVzZXJzX2hlYWRlcl9pbmNvcnJlY3QtZW1haWxzIjoiSW5jb3JyZWN0IEVtYWlsIEFkZHJlc3NlcyIsInVzZXItbWFuYWdlbWVudF9sYWJlbF91c2VybmFtZS1jb2x1bW4iOiJFLU1haWwgQWRyZXNzZSIsImdlbmVyYWwtZGF0YV9sYWJlbF9jb21wYW55IjoiRmlybWEiLCJyZWZlcmVuY2Utb3B0aW9uc19hbGVydF9ub24tdW5pcXVlLXJlZiI6IlJlZmVyZW56IGV4aXN0aWVydCBiZXJlaXRzIiwiZ2VuZXJhbC1kYXRhX2FsZXJ0X2NvbXBhbnktaW5mby11cGRhdGUtZXJyb3IiOiJFaW4gRmVobGVyIGlzdCBhdWZnZXRyZXRlbi4gRGV0YWlscyBuaWNodCBha3R1YWxpc2llcnQiLCJnZW5lcmFsLWRhdGEtcGVybWlzc2lvbnNfbGFiZWxfZ3JvdXAtbWFuYWdlbWVudCI6IkdydXBwZW4gZXJzdGVsbGVuIHVuZCB2ZXJ3YWx0ZW4iLCJ1c2VyLW1hbmFnZW1lbnRfYWxlcnRfb24tZXJyb3ItZXhwb3J0LXVzZXJzIjoiRG93bmxvYWQgZmVobGVyaGFmdCIsInVzZXItbWFuYWdlbWVudF9sYWJlbF9yb2xlLWNvbHVtbiI6IlJvbGxlIiwiZ2VuZXJhbC1kYXRhLXBlcm1pc3Npb25zX2xhYmVsX3NldHRpbmdzLW1hbmFnZW1lbnQiOiJTZW5kdW5ncy0vU3RhbmRhcmRlaW5zdGVsbHVuZ2VuIiwiZ2VuZXJhbC1kYXRhLXBlcm1pc3Npb25zX2xhYmVsX2NvcnBvcmF0ZS1wcml2aWxlZ2UtbWFuYWdlbWVudCI6IiIsInVzZXItbWFuYWdlbWVudF9hbGVydF9vbi1kZWxldGUtdXNlcnMtc3VjY2VzcyI6IntudW1iZXJPZlVzZXJzfSBQZXJzb24oZW4pIGdlbMO2c2NodCIsImNvcnBvcmF0ZS1ncm91cF9oZWFkZXJfYWRkLW5ldy1ncm91cCI6Ik5ldWUgR3J1cHBlIGhpbnp1ZsO8Z2VuIiwibGItYWRkLWdyb3VwX2J1dHRvbl9jcmVhdGUtZ3JvdXAiOiJHcnVwcGUgZXJzdGVsbGVuIiwic2V0dGluZ3MtbWFuYWdlbWVudF9idXR0b25fcmVmcmVzaC1wYWdlIjoib2siLCJlZGl0LWFjY291bnRfbGFiZWxfYWNjb3VudC1uaWNrbmFtZSI6IkFsaWFzIChCZXNjaHJlaWJ1bmcpIiwidXNlci1tYW5hZ2VtZW50X3NlbGVjdC1vcHRpb25fZXhwb3J0IjoiRG93bmxvYWQiLCJzaWRlLW1lbnVfdGFiLW5hbWVfdXNlci1tYW5hZ2VtZW50IjoiTnV0emVyIiwicmVmZXJlbmNlLW9wdGlvbnNfYWxlcnRfcmVmZXJlbmNlLXVwZGF0ZWQiOiJSZWZlcmVueiBha3R1YWxpc2llcnQiLCJ1c2VyLW1hbmFnZW1lbnRfYnV0dG9uX2FjdGl2YXRlLXVzZXJzIjoiSmEiLCJyZWZlcmVuY2Utb3B0aW9uc19hbGVydF9uZXctZm9ybWF0LWFkZGVkIjoiUmVmZXJlbnogRm9ybWF0IGhpbnp1Z2Vmw7xndCIsImxiLXZhbGlkYXRpb25fbXNnX3BheW1lbnQtbWV0aG9kLXNob3VsZC1iZS1lbmFibGVkIjoiTWluZGVzdGVucyBlaW5lIFphaGx1bmdzbWV0aG9kZSBtdXNzIGdlc3BlaWNoZXJ0IHdlcmRlbiIsInJlZmVyZW5jZS1vcHRpb25zX2NvbC1uYW1lX2Rlc2NyaXB0aW9uIjoiSW5oYWx0c2Jlc2NocmVpYnVuZyIsImVtcGxveWVlLWltcG9ydF9lcnJvci1tZXNzYWdlX2xhc3QtbmFtZSI6Ik5hY2huYW1lIFVuZ8O8bHRpZyIsInJlZmVyZW5jZS1vcHRpb25zX2hlYWRlcl9yZWZlcmVuY2Utb3B0aW9ucyI6IlNlbmR1bmdzcmVmZXJlbnoiLCJpbnZpdGUtdXNlcnNfbGFiZWxfZW50ZXItc2VwYXJhdGVkLWVtYWlscyI6IkdlYmVuIFNpZSBJaHJlIGVNYWlsLUFkcmVzc2VuIGVpbiB1bmQgdHJlbm5lbiBTaWUgZGllc2UgbWl0IGVpbmVtIEtvbW1hLiIsImNvcnBvcmF0ZS1ncm91cF9idXR0b25fYWRkLWdyb3VwIjoiR3J1cHBlIGhpbnp1ZsO8Z2VuIiwiY29ycG9yYXRlLWRlZmF1bHQtZ3JvdXBfYnV0dG9uX2NhbmNlbCI6ImFiYnJlY2hlbiIsImNvcnBvcmF0ZS1ncm91cF9jb2wtbmFtZV9mcmVxdWVuY3kuaUhlbHAiOiJCZW5hY2hyaWNodGlndW5nIGFuIEdydXBwZW5hZG1pbmlzdHJhdG9yIHNlbmRlbiBzb2JhbGQgU2VuZHVuZ2VuIHp1ciBCZXN0w6R0aWd1bmcgZWluZ2VyZWljaHQuIiwidXNlci1tYW5hZ2VtZW50X3N1Yi1oZWFkZXJfZ3JvdXAtYXNzaWdtZW50LWNvbmZsaWN0IjoiIiwidXNlci1tYW5hZ2VtZW50X3BhcmFncmFwaF9kaXNhYmxlLXVzZXJzLWNvbmZpcm1hdGlvbiI6IlNpbmQgc2llIHNpY2hlciwgZGFzcyBTaWUgZGVha3RpdmllcmVuIG3DtmNodGVuPyIsImxiLWV4dGVybmFsLW1vZHVsZXNfbGFiZWxfY29ubmVjdC1wYXNzd29yZCI6IlBhc3N3b3J0IiwicmVmZXJlbmNlLW9wdGlvbnNfbGFiZWxfY2hhcmFjdGVycyI6IlplaWNoZW4iLCJhY2NvdW50LW1hbmFnZW1lbnRfcGFyYWdyYXBoX2RlbGV0ZS1kaGwtYWNjb3VudHMiOiJTaW5kIFNpZSBzaWNoZXIsIGRhc3MgU2llIGRlbiBWb3JnYW5nIGzDtnNjaGVuIG3DtmNodGVuPyIsImFjY291bnQtbWFuYWdlbWVudF9idXR0b25fYWN0aXZhdGUtYWN0aW9uIjoiQWt0aXZpZXJlbiIsImdyb3VwLWRldGFpbHNfYWxlcnRfb24tZXJyb3Itc2F2ZSI6IkVpbiBGZWhsZXIgaXN0IGF1ZmdldHJldGVuLiBHcnVwcGUgbmljaHQgYWt0dWFsaXNpZXJ0IiwiYWRkcmVzcy1ib29rX3NlbGVjdC1vcHRpb25fY3JhYi10byI6IkVtcGbDpG5nZXIgQWRyZXNzZSIsInJlZmVyZW5jZS1vcHRpb25zX3N1Yi1oZWFkZXJfdXNlci1saXN0IjoiRGllc2UgUGVyc29uIFJlZmVyZW56IiwicmVmZXJlbmNlLW9wdGlvbnNfc2VsZWN0LW9wdGlvbl9tYXhpbXVtIjoiTWF4aW1hbCB2b24iLCJsYi1leHRlcm5hbC1tb2R1bGVzX2J1dHRvbl9jb25uZWN0LXRvLWV4dGVybmFsLW1vZHVsZSI6IkFic2VuZGVuIiwiY29ycG9yYXRlLWdyb3VwX2xhYmVsX2l0YWxpYW4tcG9ydGFsIjoiVW5kZWwgQWNjZXNzIiwidXNlci1tYW5hZ2VtZW50X2hlYWRlcl9zZXQtdXNlci10eXBlIjoiV29sbGVuIFNpZSBkaWUgUGVyc29uIHp1IGVpbmVtIFVudGVybmVobWVucy1BZG1pbmlzdHJhdG9yIG1hY2hlbj8iLCJleHRlcm5hbC1tb2R1bGVzX2hlYWRlcl9leHRlcm5hbC1tb2R1bGVzIjoiU2VuZHVuZ3PDvGJlcndhY2h1bmcgJiBPbmxpbmUgUmVjaG51bmdzb3B0aW9uZW4iLCJlZGl0LWFjY291bnRfYnV0dG9uX3NhdmUtYWNjb3VudCI6IlNwZWljaGVybiIsInJlZmVyZW5jZS1vcHRpb25zX21zZ19mb3JtYXQtZGVsZXRlZCI6IkZvcm1hdCBnZWzDtnNjaHQiLCJyZWZlcmVuY2Utb3B0aW9uc19idXR0b25fbWFuYWdlLWZvcm1hdCI6IkZvcm1hdGUgZsO8ciBkaWVzZSBHcnVwcGUgb2RlcsKgQmVudXR6ZXIgYXVzd8OkaGxlbiIsInJlZmVyZW5jZS1mb3JtYXRfaGVhZGVyX3Rlc3QtcmVmZXJlbmNlLWZvcm1hdCI6IiIsImNvcnBvcmF0ZS1ncm91cF9jb2wtbmFtZV91c2VyLXN0YXR1cyI6IlN0YXR1cyIsInNpZGUtbWVudV90YWItbmFtZV9leHRlcm5hbC1tb2R1bGVzIjoiU2VuZHVuZ3PDvGJlcndhY2h1bmcgJiBPbmxpbmUgUmVjaG51bmdzb3B0aW9uZW4iLCJjb3Jwb3JhdGUtZ3JvdXBfZmllbGQtcGxhY2Vob2xkZXJfc2VhcmNoLWdyb3Vwcy5wcm9tcHQiOiJTdWNoZSIsImVtcGxveWVlLWltcG9ydF9maWVsZC1uYW1lX2xhc3QtbmFtZSI6Ik5hY2huYW1lIiwibGItdmFsaWRhdGlvbl9tc2dfZGlzcGxheS1jb21wYW55LWFjY291bnRzLWFzLW5pY2tuYW1lLW9ubHkiOiJFaW5pZ2UgQWNjb3VudHMgYmVzaXR6ZW4ga2VpbmVuIHp1Z2Vow7ZyaWdlbiBCZW51dHplcm5hbWVuLiBCaXR0ZSBmw7xnZW4gU2llIEJlbnV0emVybmFtZW4genUgYWxsZW4gQWNjb3VudHMgaGluenUgdW5kIHZlcnN1Y2hlbiBTaWUgZXMgZXJuZXV0LiIsImludml0ZS11c2Vyc19hbGVydF9maWxlLWV4dGVuc2lvbi1lcnJvciI6IkNTVi1EYXRlaSBob2NobGFkZW4iLCJtZXNzYWdlLW15LXVzZXJzX2xhYmVsX21lc3NhZ2UiOiJOYWNocmljaHQiLCJnZW5lcmFsLWRhdGEtcGVybWlzc2lvbnNfbGFiZWxfc2V0dGluZ3Mtb3B0aW9uYWwtc2VydmljZSI6Ik9wdGlvbmFsZSBTZXJ2aWNlcyIsImNvcnBvcmF0ZS1yb2xlX3NlbGVjdC1vcHRpb25fY29ycG9yYXRlLWFkbWluLXJlZ2lzdHJhdGlvbiI6IkphIiwiYWNjb3VudC1tYW5hZ2VtZW50X2hlYWRlcl9kZWxldGUtZGhsLWFjY291bnRzIjoiTMO2c2NoZW4gQWNjb3VudCIsImVtcGxveWVlLWltcG9ydF9lcnJvci1tZXNzYWdlX3Bob25lIjoidW5nw7xsdGlnZSBUZWxlZm9ubnVtbWVyIiwibWxzaGlwbWVudC1yZXN0cmljdGVkX2NyX21pbi13ZWlnaHQtcGVyLXNoaXBtZW50LWFwcHJvdmFsIjoiTWluaW11bSBnZXdpY2h0IHBybyBTZW5kdW5nIEJlc3TDpHRpZ3VuZyIsInJlZmVyZW5jZS1vcHRpb25zX2xhYmVsX3NlbGVjdC1maWxlLXRvLWltcG9ydCI6IkNTVi1EYXRlaSBob2NobGFkZW4iLCJyZWZlcmVuY2Utb3B0aW9uc19sYWJlbF9lZGl0LXJlZmVyZW5jZSI6IlJlZmVyZW56IGJlYXJiZWl0ZW4iLCJncm91cC1uYW1lLWV4aXN0cy1mb3ItdGhpcy1jb3Jwb3JhdGlvbiI6Ik5hbWUgYmVyZWl0cyB2ZXJnZWJlbiIsInVzZXItbWFuYWdlbWVudF9zdWItaGVhZGVyX2NvbXBhbnktaW5mb3JtYXRpb24iOiJVbnRlcm5laG1lbnNpbmZvcm1hdGlvbiIsImVtcGxveWVlLWltcG9ydF9maWVsZC1uYW1lX2VtYWlsIjoiRS1NYWlsIEFkcmVzc2UiLCJjb3Jwb3JhdGUtZ3JvdXBfaW5mby10ZXh0X25vLWNvbm5lY3Rpb25zIjoiTmljaHQgYW5nZW1lbGRldCIsImVtcGxveWVlLWltcG9ydF9wYXJhZ3JhcGhfbWFuZGF0b3J5LWZpZWxkcyI6IklocmUgRGF0ZWkgYmVzaXR6dCBuaWNodCBhbGxlIFBmbGljaHRmZWxkZXIuIFBhc3NlbiBTaWUgIElocmUgRGF0ZWkgYW4gdW5kIGxhZGVuIFNpZSBkaWUgRGF0ZWkgZXJuZXV0IGhvY2guIiwicmVmZXJlbmNlLW9wdGlvbnNfYWxlcnRfbmV3LXJlZmVyZW5jZS1hZGRlZCI6IlJlZmVyZW56IGhpbnp1Z2Vmw7xndCIsInNldHRpbmctbWFuYWdlbWVudF9idXR0b25fcmVzdG9yZSI6IlLDvGNrc2V0enVuZyIsInNldHRpbmctbWFuYWdlbWVudF9tc2ctZWZmZWN0aXZlLXZhbHVlLW1pbmltdW0iOiJNaW5pbXVtIHt2YWx1ZX0iLCJhZGRyZXNzLWJvb2tfc2VsZWN0LW9wdGlvbl9ncmFiLXRvIjoiR3J1cHBlIC0gRW1wZsOkbmdlciBBZHJlc3NlIiwibGItbWFuYWdlLWNvbnRhY3RzX3N1Yi1oZWFkZXJfY29sbGVjdGlvbi1mcm9tIjoiS29waWVyZW4gdm9uIiwiaW52aXRlLXVzZXJzX2J1dHRvbl9jaG9vc2UtZmlsZSI6IkR1cmNoc3VjaGVuIiwiZ3JvdXAtZGV0YWlsc19sYWJlbF9zYXZlLXRvLXRoaXMtZ3JvdXAiOiJQZXJzb24gdmVyc2NoaWViZW4genUiLCJ1c2VyLW1hbmFnZW1lbnRfYnV0dG9uX3JlbW92ZS11c2VycyI6IkphIiwiZ3JvdXAtZGV0YWlsc19idXR0b25fY3JlYXRlLWdyb3VwIjoiR3J1cHBlIGVyc3RlbGxlbiIsInJlZmVyZW5jZS1vcHRpb25zX3NlbGVjdC1vcHRpb25fZXF1YWwiOiJlbnRzcHJpY2h0IiwiYWRkcmVzcy1ib29rX3NlbGVjdC1vcHRpb25fY2l0eSI6IlN0YWR0IiwiZW1wbG95ZWUtaW1wb3J0X2hlYWRlcl9pbXBvcnQtdXNlcnMiOiJob2NobGFkZW4gTnV0emVyIiwibWVzc2FnZS1teS11c2Vyc19hbGVydF9tZXNzYWdlLWNsZWFyZWQiOiJOYWNocmljaHQgZW5mdGVybnQiLCJyZWZlcmVuY2Utb3B0aW9uc19sYWJlbF9pbXBvcnQtcmVmZXJlbmNlIjoiaG9jaGxhZGVuIFJlZmVyZW56IiwiY29ycG9yYXRlLWdyb3VwX2J1dHRvbl9jYW5jZWwiOiJhYmJyZWNoZW4iLCJtbHNoaXBtZW50LXJlc3RyaWN0ZWRfY3JfbWF4LWNvc3QtcGVyLXNoaXBtZW50LWFwcHJvdmFsIjoiTWF4aW1hbCBrb3N0ZW4gcHJvIFNlbmR1bmcgQmVzdMOkdGlndW5nIiwiZ3JvdXAtZGV0YWlsc19wYXJhZ3JhcGhfZ3JvdXAtaXMtZGVmYXVsdC1hbmQtY2Fubm90LWJlLWRlbGV0ZWQiOiJEaWUgU3RhbmRhcmRncnVwcGUga2FubiBuaWNodCBnZWzDtnNjaHQgd2VyZGVuICh7Z3JvdXBOYW1lfSkiLCJjb3Jwb3JhdGUtZ3JvdXBfaGVhZGVyX2dlbmVyYWwtaW5mb3JtYXRpb24iOiJHcnVwcGVubmFtZSIsInJlZmVyZW5jZS1vcHRpb25zX3N1Yi1oZWFkZXJfY29tcGFueS1saXN0IjoiRmlybWEgUmVmZXJlbnoiLCJlbXBsb3llZS1pbXBvcnRfZmllbGQtbmFtZV9jb3VudHJ5LXBob25lLWNvZGUiOiJUZWxlZm9ubnVtbWVyIEzDpG5kZXJjb2RlIiwiZW1wbG95ZWUtaW1wb3J0X2Vycm9yLW1lc3NhZ2VfcHJvbW90aW9uLXJlcXVpcmVkLXJlZ3VsYXItbm90LWZvdW5kIjoiRGllc2UgUGVyc29uIGlzdCBiZXJlaXRzIFRlaWwgZWluZXMgYW5kZXJlbiBVbnRlcm5laG1lbnMgaW4gTXlESEwrIiwibGItZXh0ZXJuYWwtbW9kdWxlcy1yZXZva2VfaGVhZGVyX3Jldm9rZS1jb25uZWN0aW9uIjoiRGVha3RpdmllcmVuIiwidXNlci1tYW5hZ2VtZW50X3BhcmFncmFwaF91c2Vycy1kby1ub3QtaGF2ZS1vdGhlci1ncm91cHMiOiJEaWVzZSBQZXJzb24gbXVzcyB6dSBlaW5lciBhbmRlcmVuIEdydXBwZSBoaW56dWdlZsO8Z3Qgd2VyZGVuIiwidXNlci1tYW5hZ2VtZW50X2FsZXJ0X29uLWVycm9yLXNhdmUiOiJFaW4gRmVobGVyIGlzdCBhdWZnZXRyZXRlbiIsImFkZHJlc3MtYm9va19jb2wtbmFtZV9jb250YWN0LW5hbWUiOiJLb250YWt0bmFtZSIsImVkaXQtYWNjb3VudF9sYWJlbF9hY2NvdW50LXN0YXR1cyI6IlN0YXR1cyIsImNvcnBvcmF0ZS1ncm91cF9zdWItaGVhZGVyX2l0YWxpYW4tcG9ydGFsIjoiVW5kZWwiLCJlbXBsb3llZS1pbXBvcnRfaGVhZGVyX3N1Y2Nlc3MtY291bnQiOiJ7c3VjY2Vzc0NvdW50fSB2b24ge3RvdGFsQ291bnR9IFBlcnNvbihlbikgaG9jaGdlbGFkZW4iLCJsYi1leHRlcm5hbC1tb2R1bGVzX2hlYWRlcl9yZXF1ZXN0LWV4dGVybmFsLW1vZHVsZSI6IkpldHp0IGFubWVsZGVuIiwidXNlci1tYW5hZ2VtZW50X3BhcmFncmFwaF9hY3RpdmF0ZS11c2Vycy1jb25maXJtYXRpb24iOiJTaW5kIHNpZSBzaWNoZXIsIGRhc3MgU2llIGFrdGl2aWVyZW4gbcO2Y2h0ZW4/IiwiY29ycG9yYXRlLWdyb3VwX2J1dHRvbl9kdXBsaWNhdGUiOiJEdXBsaXppZXJlbiIsImFjY291bnQtbWFuYWdlbWVudF9wYXJhZ3JhcGhfZGlzYWJsZS1kaGwtYWNjb3VudCI6IkRlYWt0aXZpZXJ0ZSBLb250ZW4ga8O2bm5lbiBuaWNodCBkYWbDvHIgYmVudXR6dCB3ZXJkZW4gdW0gU2VuZHVuZ2VuIHp1IGVyc2NoYWZmZW4gb2RlciB6dSBiZXphaGxlbi4iLCJhZGRyZXNzLWJvb2tfc2VsZWN0LW9wdGlvbl9nYWIiOiJHcnVwcGUiLCJzZXR0aW5ncy1tYW5hZ2VtZW50X3ZhbHVlLWxhYmVsX2Nob29zZS1sZXZlbC10by1tYW5hZ2UiOiI8ZGl2IGNsYXNzPVwiZXdmX2RpY3Rpb25hcnlfdmFsdWVcIj48Yj5FaW5zdGVsbHVuZ2VuIGJlYXJiZWl0ZW4gZsO8cjxcL2I+PFwvZGl2PiIsInVzZXItbWFuYWdlbWVudF9sYWJlbF9jYW5jZWwtYWxsLW9wZW4tc2hpcG1lbnRzIjoiVW52b2xsc3TDpG5kaWdlIFNlbmR1bmdlbiBzdG9ybmllcmVuIiwicmVmZXJlbmNlLWZvcm1hdF9hbGVydF90ZXN0LXN1Y2Nlc3MiOiJQYXNzZW5kZXMgRm9ybWF0IiwidXNlci1tYW5hZ2VtZW50X2FsZXJ0X29uLXVwZGF0ZS11c2Vycy1lcnJvciI6IlBlcnNvbihlbikgZW5mdGVybnQiLCJzZXR0aW5ncy1tYW5hZ2VtZW50X2hlYWRlcl9zZXR0aW5ncy1tYW5hZ2VtZW50IjoiU2VuZHVuZ3MtL1N0YW5kYXJkZWluc3RlbGx1bmdlbiIsInJlZmVyZW5jZS1mb3JtYXQtb3B0aW9uc19oZWFkZXJfYWRkLXJlZmVyZW5jZSI6IlfDpGhsZW4gU2llIGRpZSBSZWZlcmVuemVuLCBkaWUgZGllIFBlcnNvbmVuIGluIGRlciBHcnVwcGUgbnV0emVuIHdvbGxlbi4gUGVyIEtsaWNrIGvDtm5uZW4gU2llIFJlZmVyZW56ZW4gZW50ZmVybmVuIG9kZXIgaGluenVmw7xnZW4uIiwiZ2VuZXJhbC1kYXRhX2J1dHRvbl9jYW5jZWwtY2hhbmdlcyI6ImFiYnJlY2hlbiIsInJlZmVyZW5jZS1vcHRpb25zX2hlYWRlcl9lZGl0LWZvcm1hdCI6IlJlZmVyZW56Zm9ybWF0IGJlYXJiZWl0ZW4iLCJ1c2VyLW1hbmFnZW1lbnRfaGVhZGVyX2Rpc2FibGUtdXNlcnMiOiJQZXJzb25lbiBkZWFrdGl2aWVyZW4iLCJjb3Jwb3JhdGUtZ3JvdXBfdmFsdWUtbGFiZWxfY29weS1uZWdhdGl2ZSI6IkdydXBwZW5taXRnbGllZCIsIm1lc3NhZ2UtbXktdXNlcnNfZmllbGQtcGxhY2Vob2xkZXJfZGF0ZS1yYW5nZS1waWNrZXItdG8iOiJBbiIsImFjY291bnQtbWFuYWdlbWVudF9oZWFkZXJfZGlzYWJsZS1kaGwtYWNjb3VudCI6IkRlYWt0aXZpZXJlbiBBY2NvdW50IiwiY29ycG9yYXRlLWdyb3VwX2NvbC1uYW1lX3NtcyI6IlNNUyIsImNvcnBvcmF0ZS1ncm91cF9oZWFkZXJfZ3JvdXAtbm90aWZpY2F0aW9ucyI6IkJlbmFjaHJpY2h0aWd1bmcgenUgYXVzc3RlaGVuZGVuIEJlc3TDpHRpZ3VuZ2VuIn0sImNyMDEwNSI6eyJjci1uYW1lIjoiTWF4aW11bSBDb3N0IG9mIFNoaXBtZW50czogQ3VycmVuY3kifSwiY3IwMTA2Ijp7ImNyLWVycm9ycy1yZXF1aXJlZCI6IlRoaXMgZmllbGQgaXMgcmVxdWlyZWQiLCJjci1uYW1lIjoiTWF4aW11bSBDb3N0IG9mIFNoaXBtZW50czogUGVyaW9kIiwiY3ItZXJyb3JzLXJhbmdlIjoiVmFsdWUgaXMgb3V0IG9mIHRoZSByYW5nZSJ9LCJOQVZJR0FUSU9OIjp7IkxBTkdVQUdFX1JFRElSRUNUSU9OX1BPUFVQX0JVVFRPTl9MRUFWRV9USElTX1BBR0UiOiJKYSIsIkxBTkdVQUdFX1JFRElSRUNUSU9OX1BPUFVQX01TR19OT1ZJQ0VfU0hJUE1FTlRfTUVTU0FHRSI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPjxkaXYgY2xhc3M9Im1lc3NhZ2Utd3JhcHBlciI+PHA+PGI+V2VubiBTaWUgSWhyZSBTcHJhY2hlIGpldHp0IMOkbmRlcm48XC9iPjxcL3A+XG48cD7CoDxcL3A+XG48dWw+XG48bGk+U2llIG3DvHNzZW4gZXJuZXV0IHN0YXJ0ZW4uPFwvbGk+XG48XC91bD5cbjxwPsKgPFwvcD5cbjx1bD5cbjxsaT5PZGVyIFNpZSBzcGVpY2hlcm4gZGllIFNlbmR1bmcgenVuw6RjaHN0IHVuZCBnZWhlbiBzcMOkdGVyIHp1ciBWZXJzYW5kw7xiZXJzaWNodCB1bmQgc2NobGllw59lbiBkaWUgU2VuZHVuZyBkYW5uIGFiLjxcL2xpPlxuPFwvdWw+XG48cD7CoDxcL3A+XG48cD5Nw7ZjaHRlbiBTaWUgZGllIFNwcmFjaGUgw6RuZGVybj88XC9wPlxuPFwvZGl2PjxcL2Rpdj4iLCJHUk9VUF9TV0lUQ0hFUl9WQUxVRV9MQUJFTF9WSVJUVUFMX0dST1VQX1JFR1VMQVIiOiJHcnVwcGUgMSIsIkxBTkdVQUdFX1JFRElSRUNUSU9OX1BPUFVQX01TR19OT1ZJQ0VfT1RIRVJfRkxPV19NRVNTQUdFIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+PGRpdiBjbGFzcz0ibWVzc2FnZS13cmFwcGVyIj48cD5TaWUgbcO8c3NlbiBlcm5ldXQgc3RhcnRlbi48XC9wPlxuPHA+wqA8XC9wPlxuPHA+TcO2Y2h0ZW4gU2llIGRpZSBTcHJhY2hlIMOkbmRlcm4/PFwvcD5cbjxcL2Rpdj48XC9kaXY+IiwiVE9QX05BVl9MSU5LX09OTElORV9CSUxMSU5HIjoiUmVjaG51bmdlbiB2ZXJ3YWx0ZW4iLCJMQU5HVUFHRV9SRURJUkVDVElPTl9QT1BVUF9CVVRUT05fU1RBWV9PTl9USElTX1BBR0UiOiJOZWluIiwiTEFOR1VBR0VfUkVESVJFQ1RJT05fUE9QVVBfSEVBREVSX0NPTkZJUk1fTkFWSUdBVElPTiI6IiIsIkxBTkdVQUdFX1JFRElSRUNUSU9OX1BPUFVQX01TR19HVUVTVF9TSElQTUVOVF9NRVNTQUdFIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+PGRpdiBjbGFzcz0ibWVzc2FnZS13cmFwcGVyIj48cD5TaWUgbcO8c3NlbiBlcm5ldXQgc3RhcnRlbi48XC9wPlxuPHA+wqA8XC9wPlxuPHA+TcO2Y2h0ZW4gU2llIGRpZSBTcHJhY2hlIMOkbmRlcm4/PFwvcD5cbjxcL2Rpdj48XC9kaXY+IiwiR1JPVVBfU1dJVENIRVJfTEFCRUxfWUVTIjoiSmEiLCJHUk9VUF9TV0lUQ0hFUl9QQVJBR1JBUEhfU1dJVENIRVJfREVTQ1JJUFRJT05fRk9SX1JFR1VMQVIiOiJXw6RobGVuIFNpZSBkaWUgS3VuZGVudW1tZXIgYXVzLCBkaWUgc3RhbmRhcmRnZW3DpHNzIGVpbmdlc3RlbGx0IHNlaW4gc29sbCwgd2VubiBTaWUgZWluZSBTZW5kdW5nIGVyc3RlbGxlbi4gU2llIGvDtm5uZW4gZGllIFN0YW5kYXJkZWluc3RlbGx1bmcgYmVpIEJlZGFyZiDDpG5kZXJuLiIsIkdST1VQX1NXSVRDSEVSX0xBQkVMX05PIjoiSmEiLCJHUk9VUF9TV0lUQ0hFUl9MQUJFTF9OT19BQ0NPVU5UIjoiTi9BIiwiTEFOR1VBR0VfUkVESVJFQ1RJT05fUE9QVVBfTVNHX0dVRVNUX09USEVSX0ZMT1dfTUVTU0FHRSI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPjxkaXYgY2xhc3M9Im1lc3NhZ2Utd3JhcHBlciI+PHA+U2llIG3DvHNzZW4gZXJuZXV0IHN0YXJ0ZW4uPFwvcD5cbjxwPsKgPFwvcD5cbjxwPk3DtmNodGVuIFNpZSBkaWUgU3ByYWNoZSDDpG5kZXJuPzxcL3A+XG48XC9kaXY+PFwvZGl2PiJ9LCJjcjAxMDciOnsiY3ItbmFtZSI6Ik1heGltdW0gQ29zdCBvZiBTaGlwbWVudHM6IFVuaXQgb2YgUGVyaW9kIn0sInNoaXBtZW50LWltcG9ydCI6eyJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9zaGlwLWZyb20tY25wai1jcGYtdHlwZSI6IkNOUEovQ1BGIFRheCBUeXBlIChBYnNlbmRlcikiLCJzaGlwbWVudC1pbXBvcnRfZXJyb3JfbWlzc2luZy1wcm9kdWN0IjoiTGllZmVyb3B0aW9uZW4gdW5iZWthbm50IC0gUHJvZHVrdGNvZGUgZmVobHQiLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9zaGlwLXRvLXZhdCI6Ik1laHJ3ZXJ0c3RldWVyIChFbXBmw6RuZ2VyKSIsInNoaXBtZW50LWZpZWxkc19zZWxlY3Qtb3B0aW9uX3BheWVyLWFjY291bnQiOiJLdW5kZW5udW1tZXIgKEZyYWNodHphaGxlcikiLCJwYWdlX2ludHJvX2V4cGFuZGFibGVfQ01TIjoiTGFkZW4gU2llIHp1bSBlcnN0ZW4gTWFsIGVpbiBGaWxlIGhvY2g/Iiwic2hpcG1lbnQtZmllbGRzX3NlbGVjdC1vcHRpb25fc2hpcC10by1lb3JpIjoiRU9SSSBOdW1tZXIgKEVtcGbDpG5nZXIpIiwicXVpY2stdGlwc19ob3ctd29ya3NfaW50cm9fQ01TIjoiU2llIGvDtm5uZW4gYmVxdWVtIG1laHJlcmUgU2VuZHVuZ2VuIGhvY2hsYWRlbiwgdW0gZGllIFZlcnNhbmRsYWJlbCB1bmQgWm9sbHJlY2hudW5nZW4genUgZXJzdGVsbGVuISBXw6RobGVuIFNpZSBhdXMgZGVuIHZvcmRlZmluaWVydGVuIERITCBNYXBwaW5ncyBvZGVyIGRlbiB2b24gSWhuZW4gZXJzdGVsbHRlbiBNYXBwaW5ncyBhdXMsIHVtIGRpZSBEYXRlbiBhdXMgSWhyZW0gU2VuZHVuZ3NkYXRlbi1EYXRlaSBkZW4ga29ycmVrdGVuIEZlbGRlcm4gaW4gIE15REhMKyB6dXp1b3JkbmVuLiIsImZpbGUtdXBsb2FkX2FsZXJ0X2NvbHVtbi1jb25zaXN0ZW5jeS1lcnJvciI6IkRhdGVuIGluIG1hbmNoZW4gRmVsZGVybiBzaW5kIGZhbHNjaCB1bmQgYmlsZGVuIG5pY2h0IGRpZSBTZW5kdW5nZmVsZGVyIGFiLiDDnGJlcnByw7xmZW4gdW5kIGJlYXJiZWl0ZW4gU2llIElocmUgRGF0ZWkgdW5kIHZlcnN1Y2hlbiBkZW4gVXBsb2FkIGVybmV1dC4iLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl91bHRpbWF0ZS1kZXN0aW5hdGlvbiI6ImVuZGfDvGx0aWdlcyBaaWVsIiwic2hpcG1lbnQtZmllbGRzX3NlbGVjdC1vcHRpb25fZHJvcC1vZmYtZmFjaWxpdHktcXkiOiJEcm9wIE9mZiBhdCBGYWNpbGl0eSIsInNoaXBtZW50LWZpZWxkc19zZWxlY3Qtb3B0aW9uX2RpcmVjdC1pbmplY3Rpb24tcWoiOiJEaXJlY3QgSW5qZWN0aW9uIChRSSkiLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9zaGlwLWZyb20tZmF4IjoiRmF4IChBYnNlbmRlcikiLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9zaGlwLXRvLWNvdW50cnktY29kZSI6IkzDpG5kZXJjb2RlIChFbXBmw6RuZ2VyKSIsInNoaXBtZW50LWltcG9ydF9sYWJlbF9yb3ctbnVtYmVyIjoiUmVpaGUge3Jvd051bWJlcn0iLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9vdGhlci1jaGFyZ2UtMi12YWx1ZSI6IldlaXRlcmUgR2Viw7xociAyIFdhcmVud2VydCIsInNoaXBtZW50LWZpZWxkc19zZWxlY3Qtb3B0aW9uX3NoaXAtdG8tZmF4IjoiRmF4IChFbXBmw6RuZ2VyKSAiLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9iaWxsLWZheC1jb3VudHJ5LWNvZGUiOiJGYXggTMOkbmRlcmNvZGUgKFpvbGxyZWNobnVuZyBSZWNobnVuZyBhbikiLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9zaGlwbWVudC10eXBlIjoiU2VuZHVuZ3NhcnQiLCJub3RhLWZpc2NhbC1maWxlc19tYW5kYXRvcnktZmllbGRzX2Rlc3QtZW5kZXJEZXN0LWNQYWlzIjoiRW1wZsOkbmdlciBMYW5kIENvZGUiLCJzaGlwbWVudC1pbXBvcnRfYnV0dG9uX2V4aXN0aW5nIjoiRWluZSB2ZXJmw7xnYmFyZSBNYXBwaW5nLU9wdGlvbiBhdXN3w6RobGVuIiwic2hpcG1lbnQtZmllbGRzX3NlbGVjdC1vcHRpb25fc2hpcC1mcm9tLXN0cmVldC1ob3VzZS1udW1iZXIiOiJTdHJhw59lL0hhdXNudW1tZXIgKEFic2VuZGVyKSIsInNoaXBtZW50LWltcG9ydF9sYWJlbF91c2UtaW5mb3JtYXRpb24tZnJvbS1maWxlIjoiQWJzZW5kZXJhZHJlc3NlKG4pIChBYnNlbmRlcikgaW4gbWVpbmVyIERhdGVpIHZlcndlbmRlbiIsInNoaXBtZW50LWltcG9ydF9pbmZvLXRleHRfbWFuYWdlIjoiREhMIEZlbGRlciB6dW9yZG5lbiB1bmQgZsO8ciB6dWvDvG5mdGlnZSBVcGxvYWRzIHNwZWljaGVybi4iLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9pbnZvaWNlLXJlZmVyZW5jZSI6IlNlbmR1bmdzcmVmZXJlbnogKFpvbGxyZWNobnVuZyBFbXBmw6RuZ2VyKSIsInNoaXBtZW50LWZpZWxkc19zZWxlY3Qtb3B0aW9uX2JpbGwtbm90ZXMiOiJOb3RpemVuIChab2xscmVjaG51bmcgUmVjaG51bmcgYW4pIiwic2hpcG1lbnQtZmllbGRzX3NlbGVjdC1vcHRpb25fZ2xvYmFsLXByb2R1Y3QtY29kZSI6IlByb2R1a3Rjb2RlIChHbG9iYWwpIiwic2hpcG1lbnQtZmllbGRzX3NlbGVjdC1vcHRpb25fYmlsbC1uYW1lIjoiTmFtZSAoWm9sbHJlY2hudW5nIFJlY2hudW5nIGFuKSIsInNoaXBtZW50LWltcG9ydF9idXR0b25fdmlldy1zaGlwbWVudHMiOiJTZW5kdW5nZW4gZWluc2VoZW4gdW5kIHZlcndhbHRlbiIsInNoaXBtZW50LWZpZWxkc19zZWxlY3Qtb3B0aW9uX2JpbGwtcmVzaWRlbnQtZmxhZyI6IlByaXZhdGFkcmVzc2UgXHUyMDEzIEphL05laW4gKFpvbGxyZWNobnVuZyBSZWNobnVuZyBhbikiLCJzaGlwbWVudC1pbXBvcnRfZXJyb3JfcHJvY2Vzc19maWxlIjoiVXBsb2FkIG5pY2h0IGVyZm9sZ3QiLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9kZy1zZXJ2aWNlIjoiRGFuZ2Vyb3VzIEdvb2RzIFNlcnZpY2UiLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9saW1pdGVkLXF1YW50aXRpZXMiOiJMaW1pdGVkIFF1YW50aXRpZXMgQURSIChITCkiLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9pdG4iOiJJVE4iLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9kdXR5LXRheC1wYWlkIjoiRGVsaXZlcmVkIER1dHkgUGFpZCIsInNoaXBtZW50LWZpZWxkc19zZWxlY3Qtb3B0aW9uX3NoaXAtdG8tc3RyZWV0LWhvdXNlLW51bWJlciI6IlN0cmHDn2UvSGF1c251bW1lciAoRW1wZsOkbmdlcikiLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9zaGlwLXRvLXBvc3QtY29kZSI6IlBvc3RsZWl0emFobCAoRW1wZsOkbmdlcikiLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9mdWxsLWRhbmdlcm91cy1nb29kcyI6IkdlZmFocmd1dCAoSEUpIiwic2hpcG1lbnQtZmllbGRzX3NlbGVjdC1vcHRpb25fc2hpcC1mcm9tLWZheC1jb3VudHJ5LWNvZGUiOiJGYXggTMOkbmRlcmNvZGUgKEFic2VuZGVyKSIsInNoaXBtZW50LWltcG9ydF9sYWJlbF91c2Utc2NoZW1lLXZpYS1mdHAiOiJ6dSB2ZXJ3ZW5kZW5kZXMgU3RhbmRhcmQgU2NoZW1hIGJlaSBGVFAgVXBsb2FkICIsInNoaXBtZW50LWZpZWxkc19zZWxlY3Qtb3B0aW9uX3NoaXAtZnJvbS12YXQiOiJNZWhyd2VydHN0ZXVlciAoQWJzZW5kZXIpIiwic2hpcG1lbnQtZmllbGRzX3NlbGVjdC1vcHRpb25fbGl0aGl1bS1pbWV0YWwtaHciOiJMaXRoaXVtIE1ldGFsIFBJOTcwIFNlY3Rpb24gSUkgKEhXKSIsIm5vdGEtZmlzY2FsLWZpbGVzX21hbmRhdG9yeS1maWVsZHNfZGVzdC1lbmRlckRlc3QtY1BhaXMteFBhaXMiOiJFbXBmw6RuZ2VyIEzDpG5kZXJjb2RlIEVyZm9yZGVybGljaCIsInNoaXBtZW50LWltcG9ydF9sYWJlbF9zY2hlbWUtbWFuZGF0b3J5LWZpZWxkIjoiKEVyZm9yZGVybGljaCkiLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9zaGlwLWZyb20taWUtbnVtYmVyIjoiSUUvUkcgKEFic2VuZGVyKSIsInNoaXBtZW50LWZpZWxkc19zZWxlY3Qtb3B0aW9uX2luY290ZXJtIjoiVHJhZGUgVGVybSIsInNoaXBtZW50LWZpZWxkc19zZWxlY3Qtb3B0aW9uX21leC1kb21lc3RpYy1XUCI6Ik1leGljbyBEb21lc3RpYyAoV1ApIiwic2hpcG1lbnQtZmllbGRzX3NlbGVjdC1vcHRpb25fcnUtbmFtZSI6IkJhbmsgTmFtZSIsInNoaXBtZW50LWltcG9ydF9zZWxlY3Qtb3B0aW9uX3NlbGVjdC11cGxvYWQtc2NoZW1lIjoiQXVzd8OkaGxlbiIsInNoaXBtZW50LWZpZWxkc19zZWxlY3Qtb3B0aW9uX3NoaXAtZnJvbS1jb250YWN0LW5hbWUiOiJOYW1lIChBYnNlbmRlcikiLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9yZWNlaXZlci12YXQiOiJNZWhyd2VydHN0ZXVlciAoRW1wZsOkbmdlcikiLCJzaGlwbWVudC1pbXBvcnRfYWxlcnRfbm90LW51bWVyaWMtY29sdW1ucy1jb3VudCI6Im51ciBaYWhsZW4iLCJzaGlwbWVudC1pbXBvcnRfYWxlcnRfc2NoZW1lLW5hbWUtaXMtaW52YWxpZCI6Ik5hbWUgYmVyZWl0cyB2ZXJnZWJlbiIsInNoaXBtZW50LWltcG9ydF9sYWJlbF9jb2x1bW4tZXJyb3ItbnVtYmVyIjoiRmVsZCB7Y29sdW1uTnVtYmVyfSIsInNoaXBtZW50LWZpZWxkc19zZWxlY3Qtb3B0aW9uX2hvbGQtYXQtZmFjaWxpdHkiOiJadXIgQWJvbHVuZyBiZXJlaXQiLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl91bml0cy1jb2RlIjoiV2FyZSBFaW5oZWl0ZW4iLCJpbXBvcnRpbmctc2NoZW1lc19zZWxlY3Qtb3B0aW9uX2ludHJhc2hpcC1zaW5nbGVsaW5lLXNjaGVtZSI6IkludHJhU2hpcCBTY2hlbWEiLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9zaGlwLXRvLWNucGotY3BmX3R5cGUiOiJDTlBKL0NQRiBUYXggVHlwZSAoRW1wZsOkbmdlcikiLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9pbnZvaWNlLWV4cG9ydGVyLWlkIjoiRXhwb3J0ZXVyIElEIiwic2hpcG1lbnQtZmllbGRzX3NlbGVjdC1vcHRpb25fdGF4LWFjY291bnQiOiJLdW5kZW5udW1tZXIgKFN0ZXVlcikiLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9waWVjZS13ZWlnaHQtdW9tIjoiUGFja3N0w7xjay1HZXdpY2h0IChNYcOfZWluaGVpdCkiLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9zaGlwLXRvLWFkZHJlc3MtbGluZS0yIjoiQWRyZXNzZSAyIChFbXBmw6RuZ2VyKSIsInNoaXBtZW50LWZpZWxkc19zZWxlY3Qtb3B0aW9uX3NoaXAtdG8tYWRkcmVzcy1saW5lLTEiOiJBZHJlc3NlIDEgKEVtcGbDpG5nZXIpIiwic2hpcG1lbnQtaW1wb3J0X2xhYmVsX2FkZC1jb2x1bW4tY3VzdG9tLWNvdW50IjoiRmVsZGVyIGhpbnp1ZsO8Z2VuIiwic2hpcG1lbnQtZmllbGRzX3NlbGVjdC1vcHRpb25fc2hpcC1mcm9tLWVtYWlsIjoiRS1NYWlsIEFkcmVzc2UgKEFic2VuZGVyKSIsInNoaXBtZW50LWZpZWxkc19zZWxlY3Qtb3B0aW9uX2RlY2xhcmF0aW9uLXRpdGxlIjoiRGVrbGFyYXRpb24gVGl0ZWwiLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9iaWxsLXN0cmVldE51bWJlciI6IlN0cmHDn2VubnVtbWVyIChab2xscmVjaG51bmcgUmVjaG51bmcgYW4pIiwic2hpcG1lbnQtZmllbGRzX2xvZ2luIjoiTG9naW4iLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9vdGhlci1jaGFyZ2UtMy1kZXNjcmlwdGlvbiI6IldlaXRlcmUgR2Viw7xociAzIEluaGFsdHNiZXNjaHJlaWJ1bmciLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9zaGlwLWZyb20tcGhvbmUtb2ZmaWNlLWV4dGVuc2lvbiI6IlRlbGVmb25udW1tZXIgKELDvHJvKSBEdXJjaHdhaGwgKEFic2VuZGVyKSIsInNoaXBtZW50LWltcG9ydF9lcnJvcl9wbHQtbWFuZGF0b3J5IjoiRGlnaXRhbGUgWm9sbHJlY2hudW5nIEVyZm9yZGVybGljaCIsInNoaXBtZW50LWZpZWxkc19zZWxlY3Qtb3B0aW9uX3NoaXAtdG8tYWRkcmVzcy1saW5lLTMiOiJBZHJlc3NlIDMgKEVtcGbDpG5nZXIpIiwic2hpcG1lbnQtaW1wb3J0X2xhYmVsX2FkZC1jb2x1bW4iOiIiLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9wYXBlci1sZXNzLXRyYWRlIjoiRGlnaXRhbGUgWm9sbHJlY2hudW5nIFx1MjAxMyBKYS9OZWluIChQYXBpZXJsb3MpIiwic2hpcG1lbnQtZmllbGRzX3NlbGVjdC1vcHRpb25faW52b2ljZS1kYXRlIjoiUmVjaG51bmdzZGF0dW0gKFlZWVlNTUREKSIsInNoaXBtZW50LWltcG9ydF9sYWJlbF9tYW5hZ2UteW91ci1zY2hlbWVzIjoiTWFwcGluZy1PcHRpb24gZXJzdGVsbGVuIC8gw6RuZGVybiIsInNoaXBtZW50LWZpZWxkc19zZWxlY3Qtb3B0aW9uX2RnLXVuLW51bWJlciI6IkRhbmdlcm91cyBHb29kcyBVTiBOdW1tZXIiLCJzaGlwbWVudC1pbXBvcnRfZXJyb3JfbWlzc2luZy1pbnZvaWNlLWl0ZW0iOiJFcmZvcmRlcmxpY2giLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9iaWxsLWNucGotY3BmLW51bWIiOiJDTkovQ1BGIFN0ZXVlcm51bW1lciAoWm9sbHJlY2hudW5nIFJlY2hudW5nIGFuKSIsInNoaXBtZW50LWZpZWxkc19zZWxlY3Qtb3B0aW9uX2NvdW50cnktb2Ytb3JpZ2luIjoiSGVya3VuZnRzbGFuZCAoWm9sbHJlY2hudW5nKSIsInNoaXBtZW50LWZpZWxkc19zZWxlY3Qtb3B0aW9uX3NoaXAtdG8tcGhvbmUtbnVtYmVyIjoiVGVsZWZvbm51bW1lciAoRW1wZsOkbmdlcikiLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9pdGFyLWZsYWciOiJJVEFSIFx1MjAxMyBKYS9OZWluIiwic2hpcG1lbnQtZmllbGRzX3NlbGVjdC1vcHRpb25fZGVjbGFyZWQtdmFsdWVfY3VycmVuY3kiOiJBbmdlZ2ViZW5lIFfDpGhydW5nIHZvbiBXZXJ0Iiwic2hpcG1lbnQtZmllbGRzX3NlbGVjdC1vcHRpb25fc2hpcC1mcm9tLXBvc3QtY29kZSI6IlBvc3RsZWl0emFobCAoQWJzZW5kZXIpIiwic2hpcG1lbnQtaW1wb3J0X2Vycm9yX3NlbGVjdGVkLW9wdGlvbmFsLXNlcnZpY2VzLWFyZS1ub3QtYXZhaWxhYmxlIjoiTmljaHQgdmVyZsO8Z2JhciB7MH0iLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9zaGlwbWVudC1kYXRlIjoiVmVyc2FuZGRhdHVtIChZWVlZTU1ERCkiLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9vdGhlci1jaGFyZ2UtMS1kZXNjcmlwdGlvbiI6IldlaXRlcmUgR2Viw7xociAxIEluaGFsdHNiZXNjaHJlaWJ1bmciLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9zaGlwLXRvLWllLW51bWJlciI6IklFL1JHIChFbXBmw6RuZ2VyKSIsInNoaXBtZW50LWZpZWxkc19zZWxlY3Qtb3B0aW9uX290aGVyLWNoYXJnZS0yLWRlc2NyaXB0aW9uIjoiV2VpdGVyZSBHZWLDvGhyIDIgSW5oYWx0c2Jlc2NocmVpYnVuZyIsInNoaXBtZW50LWltcG9ydF9hbGVydF9wZW5kaW5nLWFwcHJvdmFsLXVwbG9hZGVkLXNoaXBtZW50cyI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPjxiPmF1c3N0ZWhlbmRlIEJld2lsbGlndW5nOiB7cGVuZGluZ0FwcHJvdmFsQ291bnR9PFwvYj4gU2VuZHVuZyhlbikgZXJzdGVsbHQgYWJlciBhdXNzdGVoZW5kZSBCZXdpbGxpZ3VuZyA8YSBocmVmPVwiL2NvbnRlbnQvZGhsL2F0L2RlL21hbmFnZS1zaGlwbWVudHMuaHRtbFwiIHRhcmdldD1cIl9zZWxmXCI+U2VuZHVuZ2VuIGVpbnNlaGVuPFwvYT48XC9kaXY+Iiwic2hpcG1lbnQtZmllbGRzX3NlbGVjdC1vcHRpb25fZGVjbGFyZWQtdmFsdWUiOiJEZWtsYXJpZXJ0ZXIgV2VydCIsInNoaXBtZW50LWZpZWxkc19zZWxlY3Qtb3B0aW9uX2V4dGVuZGVkLWxpYWJpbGl0eSI6IkV4dGVuZGVkIExpYWJpbGl0eSAoSUIpIiwic2hpcG1lbnQtZmllbGRzX3NlbGVjdC1vcHRpb25faXRlbS12YWx1ZSI6IldhcmVud2VydCIsInNoaXBtZW50LWltcG9ydF9idXR0b25fZGVsZXRlLXRoaXMtc2NoZW1lIjoiTMO2c2NoZW4iLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9waWVjZS1yZWZlcmVuY2VzIjoiUGFja3N0w7xja3JlZmVyZW56Iiwic2hpcG1lbnQtZmllbGRzX3NlbGVjdC1vcHRpb25fbG9jYWwtcHJvZHVjdC1jb2RlIjoiUHJvZHVrdGNvZGUgKExva2FsKSIsInNoaXBtZW50LWltcG9ydF9sYWJlbF9zY2hlbWUtdGV4dC1kZWxpbWl0ZXIuaUhlbHAiOiI8cD5XZW5uIFNpZSBUcmVubnplaWNoZW4gendpc2NoZW4gV8O2cnRlcm4gaW4gSWhyZW4gRGF0ZWllbiBudXR6ZW4sIG3DvHNzZW4gU2llIGRhcyBUZXh0LVRyZW5uemVpY2hlbiBpbiBJaHJlciBDU1Ygb2RlciBUWFQtRGF0ZWkgZGVmaW5pZXJlbi4gWi5CLjo8XC9wPlxuPHA+Jm5ic3A7PFwvcD5cbjxwPkFERFJFU1NfWkVJTEVfMTxcL3A+XG48cD4mbmJzcDs8XC9wPlxuPHA+SW4gZGllc2VtIEZhbGwgaXN0IElociBUZXh0LVRyZW5uemVpY2hlbiAmcXVvdDtfJnF1b3Q7PFwvcD5cbjxwPiZuYnNwOzxcL3A+XG48cD5EYXMgVGV4dC1UcmVubnplaWNoZW4gbXVzcyBhbmRlcnMgYWxzIGRhcyBGZWxkLVRyZW5uemVpY2hlbiBzZWluLjxcL3A+XG4iLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9hZGRpdGlvbmFsLW1lc3NhZ2UiOiJCZW5hY2hyaWNodGlndW5nZW4gTmFjaHJpY2h0Iiwic2hpcG1lbnQtaW1wb3J0X2hlYWRlcl9zaGlwbWVudC1pbXBvcnQiOiJTZW5kdW5nc2F1ZnRyw6RnZSBhdXMgRGF0ZWkiLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9leGNlcHRlZC1xdWFudGl0aWVzIjoiR2VmYWhyZ3V0IEV4Y2VwdGVkIFF1YW50aXR5IEphL05laW4iLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9pbXBvcnQtY29tbW9kaXR5LWNvZGUiOiJJbXBvcnQgQ29tbW9kaXR5IENvZGUiLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9uZXQtd2VpZ2h0IjoiTmV0dG9nZXdpY2h0Iiwic2hpcG1lbnQtZmllbGRzX3NlbGVjdC1vcHRpb25fdG90YWwtbnVtYmVyLW9mLXBpZWNlcyI6IkFuemFobCBQYWNrc3TDvGNrZSIsInNoaXBtZW50LWltcG9ydF9saW5rX3ZpZXctZ3VpZGVsaW5lcyI6IlBmbGljaHRmZWxkZXIgc2VoZW4iLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9iaWxsLXBob25lLXR5cGUiOiJUZWxlZm9uYXJ0IChab2xscmVjaG51bmcgUmVjaG51bmcgYW4pIiwic2hpcG1lbnQtZmllbGRzX3NlbGVjdC1vcHRpb25fc2hpcC1mcm9tLXN0YXRlLWNvZGUiOiJCZXppcmsgQ29kZSAoQWJzZW5kZXIpIiwic2hpcG1lbnQtaW1wb3J0X21zZ19zY2hlbWUtYWxyZWFkeS1kZWxldGVkIjoiTWFwcGluZyB3dXJkZSB2b24gZWluZW0gYW5kZXJlbiBOdXR6ZXIgZ2Vsw7ZzY2h0Iiwic2hpcG1lbnQtZmllbGRzX3NlbGVjdC1vcHRpb25fZGVjbGFyYXRpb24tbmFtZSI6IkRla2xhcmF0aW9uIE5hbWUiLCJzaGlwbWVudC1pbXBvcnRfbGFiZWxfcmVtb3ZlLWNvbHVtbiI6IkVudGZlcm5lbiIsInNoaXBtZW50LWZpZWxkc19zZWxlY3Qtb3B0aW9uX25hbWVkLWRlc3RpbmF0aW9uIjoiR2VuYW5udGVyIFppZWxvcnQiLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9vdGhlci1jaGFyZ2UtMS12YWx1ZSI6IldlaXRlcmUgR2Viw7xociAxIFdhcmVud2VydCIsInBhZ2VfaW50cm9fbGVhcm4tbW9yZV9DTVMiOiI8ZGl2IGNsYXNzPVwiZXdmX2RpY3Rpb25hcnlfdmFsdWVcIj48ZGl2IGNsYXNzPSJtZXNzYWdlLXdyYXBwZXIiPjxwPlNjaGVtZW4gdmVyYmluZGVuIGRpZSBGZWxkZXIgdW5kIERhdGVuIGF1cyBJaHJlciBob2NoZ2VsYWRlbmVuIERhdGVpIGluIGRpZSBTZW5kdW5nc2ZlbGRlciBpbiBNeURITCsuPFwvcD5cbjxwPk1pdCBDU1Ygb2RlciBUWFQuRGF0ZWllbiBlbnRzY2hlaWRlbiBTaWUgc2VsYnN0LCB3ZWxjaGUgT3B0aW9uZW4gc2llIG51dHplbjo8XC9wPlxuPHVsPlxuPGxpPk15REhMKyBTY2hlbWVuIFx1MjAxMyB3w6RobGVuIFNpZSB2b3JkZWZpbmllcnRlIERITCBTY2hlbWVuIGF1cywgZGllIGF1dG9tYXRpc2NoIFNlbmR1bmdzZmVsZGVyIG1pdCBkZW4gRmVsZGVybiBpbiBJaHJlciBEYXRlaSB2ZXJiaW5kZW48XC9saT5cbjxsaT5FcnN0ZWxsZW4gbmV1ZXIgU2NoZW1lbiBcdTIwMTMgbGFkZW4gU2llIElocmUgRGF0ZWkgaG9jaCwgZXJoYWx0ZW4gU2llIGVpbmUgVm9yc2NoYXUgSWhyZXIgRmVsZGVyIHVuZCB2ZXJiaW5kZW4gU2llIGFuc2NobGllw59lbmQgZGllIG1pdCBJaHJlbiBTZW5kdW5nc2ZlbGRlcm4uPFwvbGk+XG48bGk+RXJzdGVsbGVuIHp1a8O8bmZ0aWdlciBTY2hlbWVuIFx1MjAxMyBkZWZpbmllcmVuIFNpZSBJaHJlIGVpZ2VuZW4gU2NoZW1lbiB1bSBtaXQgZWluZXIgQXVzd2FobCBhbiBEYXRlaWVuIGFyYmVpdGVuIHp1IGvDtm5uZW4uPFwvbGk+XG48XC91bD5cbjxwPk5hY2ggZGVtIFVwbG9hZCBkZXIgU2NoZW1lbiBrw7ZubmVuIFNpZTo8XC9wPlxuPHVsPlxuPGxpPlNlbmR1bmdzbGFiZWwgZHJ1Y2tlbjxcL2xpPlxuPGxpPlVudm9sbHN0w6RuZGlnZSBTZW5kdW5nc2RldGFpbHMga29ycmlnaWVyZW4gb2RlciB2ZXJ2b2xsc3TDpG5kaWdlbjxcL2xpPlxuPGxpPkRlbiBTdGF0dXMgSWhyZXIgU2VuZHVuZyBpbiBkZXIgUnVicmlrIFx1MjAxZVNlbmR1bmcgdmVyd2FsdGVuXHUyMDFjIGVpbnNlaGVuPFwvbGk+XG48bGk+VW5kIHZpZWxlcyBtZWhyITxcL2xpPlxuPFwvdWw+XG48XC9kaXY+PFwvZGl2PiIsInNoaXBtZW50LWZpZWxkc19zZWxlY3Qtb3B0aW9uX3Rlcm1zLW9mLXBheW1lbnQiOiJaYWhsdW5nc2JlZGluZ3VuZ2VuIiwic2hpcG1lbnQtaW1wb3J0X3NlbGVjdF9tYW5hZ2UtY3JlYXRlLW5ldyI6Ik5ldSBlcnN0ZWxsZW4iLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9ldXItMSI6IkVVUjEgXHUyMDEzIEphL05laW4iLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9ldmVuaW5nLWRlbGl2ZXJ5LXRkIjoiRXZlbmluZyBEZWxpdmVyeSIsInNoaXBtZW50LWZpZWxkc19zZWxlY3Qtb3B0aW9uX2ludm9pY2UtZXhwb3J0ZXItY29kZSI6IkV4cG9ydGV1ciBDb2RlIiwic2hpcG1lbnQtZmllbGRzX3NlbGVjdC1vcHRpb25fYmlsbC1zdGF0ZSI6IkJlemlyayAoWm9sbHJlY2hudW5nIFJlY2hudW5nIGFuKSIsInNoaXBtZW50LWZpZWxkc19ub3RpZnktcmVjZWl2ZXItbmFtZSI6Ik5hbWUgKEVtcGbDpG5nZXIpIChCZW5hY2hyaWNodGlndW5nZW4pIiwicGFnZV9pbnRyb19maXJzdC10aW1lX0NNUyI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPjxkaXYgY2xhc3M9Im1lc3NhZ2Utd3JhcHBlciI+PHA+V2lyIHNpbmQgaGllciwgdW0gSWhuZW4genUgaGVsZmVuISBXZW5uIGRpZXMgZGFzIGVyc3RlIE1hbCBpc3QsIGRhc3MgU2llIGVpbiBGaWxlIGhvY2hsYWRlbiwgd2lyZCBTaWUgZWluIFNwZXppYWxpc3QgYXVzIHVuc2VyZXIgdGVjaG5pc2NoZW4gRmFjaGFidGVpbHVuZyB1bnRlcnN0w7x0emVuIGlocmUgRGF0ZWkgbWl0IGRlbiBTZW5kdW5nc2RhdGVuIHZvcnp1YmVyZWl0ZW4sIGRhbWl0IGRhcyBIb2NobGFkZW4gZGVyIERhdGVuIGVyZm9sZ3JlaWNoIGlzdC48XC9wPlxuPHA+wqA8XC9wPlxuPHA+S29udGFrdGllcmVuIFNpZSB1bnMgdW50ZXI6ICs0MyAyMjM2IDIwNyAxMTEyIG9yIDExMTQ8XC9wPlxuPFwvZGl2PjxcL2Rpdj4iLCJub3RhLWZpc2NhbC1maWxlc19tYW5kYXRvcnktZmllbGRzX2luZk5mZUlkIjoiaW5mTmZlSWQiLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9zaGlwLWZyb20tY29tcGFueS1uYW1lIjoiRmlybWEgKEFic2VuZGVyKSIsInNoaXBtZW50LWltcG9ydF9lcnJvcl9zZWN0aW9uIjoiVXBsb2FkIG5pY2h0IGVyZm9sZ3QuIFVuZ8O8bHRpZ2UgRGF0ZWlzdHJ1a3R1ci4gRXJzZXR6ZSB7MH0gaW4gZGVyIERhdGVpIHVuZCB2ZXJzdWNoZSBkYXMgSG9jaGxhZGVuIGVybmV1dC4iLCJzaGlwbWVudC1maWVsZHNfZHV0aWVzX2FuZF90YXhlc19wYWlkIjoiU3RldWVybiB1bmQgQWJnYWJlbiBiZXphaGx0Iiwic2hpcG1lbnQtZmllbGRzX3NlbGVjdC1vcHRpb25fYmlsbC1hZGRyZXNzIjoiQWRyZXNzZSBVbnRlcnNjaGllZGxpY2ggXHUyMDEzIEphL05laW4gKFpvbGxyZWNobnVuZyBSZWNobnVuZyBhbikiLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9wcm9kdWN0LWNvZGUiOiJQcm9kdWt0Y29kZSAoMyBCcmllZikiLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9ub25lIjoiS2VpbmUiLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9iaWxsLWNpdHkiOiJTdGFkdCAoWm9sbHJlY2hudW5nIFJlY2hudW5nIGFuKSIsInNoaXBtZW50LWZpZWxkc19zZWxlY3Qtb3B0aW9uX3F1YW50aXR5IjoiQW56YWhsIiwic2hpcG1lbnQtaW1wb3J0X3BhcmFncmFwaF9tYXAtY29sdW1ucy1pbi15b3VyLWZpbGUiOiI8ZGl2IGNsYXNzPVwiZXdmX2RpY3Rpb25hcnlfdmFsdWVcIj48ZGl2IGNsYXNzPSJtZXNzYWdlLXdyYXBwZXIiPjxwPlVtIG1pdCBkaWVzZW0gU2NoZW1hIFNlbmR1bmdzYXVmdHLDpGdlIGhvY2hsYWRlbiB1bmQgZXJzdGVsbGVuIHp1IGvDtm5uZW46PFwvcD5cbjx1bD5cbjxsaT5WZXJrbsO8cGZlbiBTaWUgSWhyZSBEYXRlaWZlbGRlciBtaXQgZGVuIE15REhMKyBTaGlwbWVudCBGZWxkZXJuPFwvbGk+XG48bGk+VmVya27DvHBmZW4gU2llIGFuZGVyZSBGZWxkZXIgbWl0IGFuZGVyZW4gdmVyZsO8Z2JhcmVuIE15REhMKyBTaGlwbWVudCBGZWxkZXJuPFwvbGk+XG48bGk+RsO8Z2VuIFNpZSBGZWxkZXIgd2VubiBuw7Z0aWcgaGluenUgb2RlciBmb3JkZXJuIFNpZSB3ZWl0ZXJyZSBGZWxkZXIgYW48XC9saT5cbjxsaT5Gw7xnZW4gU2llIGJlaSBCZWRhcmYgbmV1ZSBGZWxkZXIgaGluenUgb2RlciBvcmRuZW4gU2llIEZlbGRlciBuZXUgYW48XC9saT5cbjxcL3VsPlxuPFwvZGl2PjxcL2Rpdj4iLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9waWVjZS1sZW5ndGgiOiJMw6RuZ2Ugdm9uIFBhY2tzdMO8Y2siLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9iaWxsLWNvbXBhbnkiOiJGaXJtYSAoWm9sbHJlY2hudW5nIFJlY2hudW5nIGFuKSIsInNoaXBtZW50LWltcG9ydF9tc2dfaW52YWxpZC1saW5lLXN5bWJvbC1lcnJvciI6IlJlaWhlIHswfSwgU3BhbHRlIHszfSwgVW5nw7xsdGlnIFplaWNoZW46IHsxfSIsInNoaXBtZW50LWltcG9ydF9lcnJvcl9pbnZhbGlkX2FjY291bnQiOiJVbmfDvGx0aWcgezB9IEFjY291bnQuIMKgQml0dGUga29udGFrdGllcmVuIFNpZSBkZW4gdGVjaG5pc2NoZW4gU3VwcG9ydCB1bnRlciIsInNoaXBtZW50LWZpZWxkc19zZWxlY3Qtb3B0aW9uX2luc3VyYW5jZS12YWx1ZV9jdXJyZW5jeSI6IlZlcnNpY2hlcnRlciBXZXJ0IFfDpGhydW5nIiwic2hpcG1lbnQtZmllbGRzX3NlbGVjdC1vcHRpb25fc2F0dXJkYXktcGlja3VwLWFiIjoiRG9tZXN0aWMgU2F0dXJkYXkgRGVsaXZlcnkiLCJzaGlwbWVudC1pbXBvcnRfbXNnX21heC1sZW5ndGgtdmlvbGF0ZWQiOiJMw6RuZ2Ugw7xiZXJzY2hyZWl0ZXQgZGFzIHp1bMOkc3NpZ2UgTWF4aW11bSIsInNoaXBtZW50LWltcG9ydF9sYWJlbF9wcm9jZXNzZWQteG1sLWlkIjoiU2hpcG1lbnQgSUQge3NoaXBtZW50aWR9IiwicXVpY2stdGlwc19ob3ctd29ya3NfaW50cm9fbWFwX0NNUyI6IlNpZSBrw7ZubmVuIElocmUgU2VuZHVuZ3NkYXRlbiBpbiBiZWxpZWJpZ2VyIFJlaWhlbmZvbGdlIGJlcmVpdHN0ZWxsZW4hIFVuc2VyIG1hw59nZXNjaG5laWRldGVyIFByb3plc3MgdmVyd2VuZGV0IElocmVuIERhdGVpYXVmYmF1IHVtIGRpZSBEYXRlbiBhdXMgSWhyZXIgRGF0ZWkgZGVuIGtvcnJla3RlbiBGZWxkZXJuIGluIE15REhMKyB6dXp1b3JkbmVuLiBTb2xhbmdlIGRpZSBJbmZvcm1hdGlvbmVuIGluIGlocmVyIERhdGVpIHVuc2VyZW4gUmljaHRsaW5pZW4gZW50c3ByZWNoZW4sIHdlcmRlbiBkaWUgU2VuZHVuZ3NkYXRlbiBlcmZvbGdyZWljaCBob2NoZ2VsYWRlbi4iLCJzaGlwbWVudC1pbXBvcnRfZmllbGQtcGxhY2Vob2xkZXJfc2VsZWN0LWZpZWxkcy10by1tYXAiOiJGZWxkIHp1bSBWZXJrbsO8cGZlbiB3w6RobGVuIiwic2hpcG1lbnQtZmllbGRzX3NlbGVjdC1vcHRpb25fZHJ5LWljZS11bjE4NDUiOiJEcnkgSWNlIFVOMTg0NSAoSEMpIiwic2hpcG1lbnQtaW1wb3J0X3NlbGVjdC1vcHRpb25fdXNlci1zY2hlbWVzIjoiIiwiZmlsZS11cGxvYWRfYWxlcnRfZmlsZS1pby1lcnJvciI6IlVwbG9hZCBuaWNodCBlcmZvbGd0Iiwic2hpcG1lbnQtZmllbGRzX3NlbGVjdC1vcHRpb25fY29vIjoiVXJzcHJ1bmdzc3plcnRpZmlrYXQgTGFuZCAoWm9sbHJlY2hudW5nKSIsInNoaXBtZW50LWZpZWxkc19zZWxlY3Qtb3B0aW9uX2JpbGwtcGhvbmUtZXh0IjoiVGVsZWZvbm51bW1lciBEdXJjaHdhaGwgKFpvbGxyZWNobnVuZyBSZWNobnVuZyBhbikiLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9pbnZvaWNlLWl0ZW0tZGVzY3JpcHRpb24iOiJXYXJlbmJlc2NocmVpYnVuZyIsInNoaXBtZW50LWZpZWxkc19zZWxlY3Qtb3B0aW9uX3NldHRsZW1lbnQtYWNjb3VudC1ydXIiOiJWZXJyZWNobnVuZ3Nrb250byAoUlVSKSIsInNoaXBtZW50LWZpZWxkc19zZWxlY3Qtb3B0aW9uX2lnbm9yZSI6IktlaW4gRmVsZCB2ZXJmw7xnYmFyIiwic2hpcG1lbnQtaW1wb3J0X2J1dHRvbl91cGxvYWQtZmlsZSI6IkRhdGVpIGF1c3fDpGhsZW4iLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9zaGlwLXRvLWNvbnRhY3QtbmFtZSI6Ik5hbWUgKEVtcGbDpG5nZXIpIiwic2hpcG1lbnQtZmllbGRzX3NlbGVjdC1vcHRpb25fYmlvbG9naWNhbC11bjMzNzMtaHkiOiJCaW9sb2dpY2FsIFVOMzM3MyAoSFkpIiwic2hpcG1lbnQtZmllbGRzX3NlbGVjdC1vcHRpb25fb3RoZXItY2hhcmdlLTMtdmFsdWUiOiJXZWl0ZXJlIEdlYsO8aHIgMyBXYXJlbndlcnQiLCJzaGlwbWVudC1pbXBvcnRfc2VsZWN0LW9wdGlvbl9jb3JwLXNjaGVtZXMiOiJTY2hlbWVuIG1laW5lcyBVbnRlcm5laG1lbnMiLCJzaGlwbWVudC1pbXBvcnRfaW5mby10ZXh0X2V4aXN0aW5nIjoiRWlnZW5lIERhdGVpIG1pdCBlaW5lbSB2b3JkZWZpbmllcnRlbiBQcm96ZXNzIGhvY2hsYWRlbiIsInNoaXBtZW50LWZpZWxkc19zZWxlY3QtYnVzaW5lc3MtdHlwZSI6IlVudGVybmVobWVuIChCMkIpIE9ERVIgV29obmdlYmlldCAoQjJDKSIsInNoaXBtZW50LWZpZWxkc19zZWxlY3Qtb3B0aW9uX2RnLWNsYXNzLWlkcyI6IkRhbmdlcm91cyBHb29kcyBDbGFzcyBJZHMiLCJzaGlwbWVudC1pbXBvcnRfcGFyYWdyYXBoX3NlbGVjdF9hbl9hY3Rpb24iOiIiLCJpbXBvcnRpbmctc2NoZW1lc19zZWxlY3Qtb3B0aW9uX2ludHJhc2hpcC1tdWx0aWxpbmUtc2NoZW1lIjoiSW50cmFTaGlwIGhvY2hsYWRlbiIsInNoaXBtZW50LWZpZWxkc19zZWxlY3Qtb3B0aW9uX3NoaXBwZXItYWNjb3VudCI6Ikt1bmRlbm51bW1lciAoVmVyc2VuZGVyKSIsInNoaXBtZW50LWltcG9ydF9sYWJlbF9zY2hlbWUtZmllbGQtZGVsaW1pdGVyLmlIZWxwIjoiPHA+RGVmaW5pZXJlbiBTaWUgZGFzIFRyZW5uemVpY2hlbiwgZGFzIGRpZSBGZWxkZXIgaW4gSWhyZXIgQ1NWLiBPZGVyIFRYVCBEYXRlaSB2b25laW5hbmRlciB0cmVubnQsIHouQi46PFwvcD5cbjxwPnwmbHQ7Jmd0Oy8sPFwvcD5cbjxwPkZhbGxzIFNpZSB6dXPDpHR6bGljaCBUZXh0dHJlbm56ZWljaGVuIHZlcndlbmRlbiwgbXVzcyBJaHIgRmVsZHRyZW5uemVpY2hlbiBhbmRlcnMgYWxzIGRhcyBUZXh0cmVubnplaWNoZW4gc2Vpbi48XC9wPlxuIiwic2hpcG1lbnQtZmllbGRzX3NlbGVjdC1vcHRpb25fZnRyIjoiRlRSIENvZGUiLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9kdXR5LXRheC1hY2NvdW50IjoiS3VuZGVubnVtbWVyIChab2xsL1N0ZXVlcikiLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9kZXNjcmlwdGlvbiI6Ilp1c2FtbWVuZmFzc3VuZyBkZXIgV2FyZW5pbmhhbHRlIiwic2hpcG1lbnQtZmllbGRzX3NlbGVjdC1vcHRpb25fYmlsbC1zdWJ1cmIiOiJWb3JvcnQgKFpvbGxyZWNobnVuZyBSZWNobnVuZyBhbikiLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9nby1ncmVlbi1lYSI6IkdvR3JlZW4gKEVBKSIsImZpbGUtdXBsb2FkX2FsZXJ0X3htbC1ub3QtYWxsb3dlZCI6InVudGVyc3TDvHR6dGUgRGF0ZWlmb3JtYXRlOiBDU1YsIFRYVCIsIm5vdGEtZmlzY2FsLWZpbGVzX21hbmRhdG9yeS1maWVsZHNfZW1pdC1lbmRlckVtaXQtY1BhaXMteFBhaXMiOiJWZXJzZW5kZXIgTMOkbmRlcmNvZGUgRXJmb3JkZXJsaWNoIiwic2hpcG1lbnQtZmllbGRzX3NlbGVjdC1vcHRpb25fc2hpcC10by1waG9uZS1jb3VudHJ5LWNvZGUiOiJUZWxlZm9uIEzDpG5kZXJjb2RlIChFbXBmw6RuZ2VyKSIsInNoaXBtZW50LWltcG9ydF9idXR0b25fcHJvY2Vzcy1zaGlwbWVudHMiOiJTZW5kdW5nZW4gaW4gQmVhcmJlaXR1bmciLCJzaGlwbWVudC1pbXBvcnRfYWxlcnRfbWF4LWNvbHVtbnMtY291bnQiOiJNYXhpbWFsZSBGZWxkYW56YWhsIHttYXhDb3VudH0iLCJzaGlwbWVudC1pbXBvcnRfdGl0bGVfcmVxdWlyZWQtZmllbGRzIjoiRGllIGZvbGdlbmRlbiBGZWxkZXIgc2luZCBub3R3ZW5kaWcgZsO8ciBkaWUge3NjaGVtZU5hbWV9IFNlbmR1bmc6Iiwic2hpcG1lbnQtaW1wb3J0X2J1dHRvbl9zYXZlLXNjaGVtZSI6IlNwZWljaGVybiIsInNoaXBtZW50LWZpZWxkc19zZWxlY3Qtb3B0aW9uX3NwaXQtZHV0eS10YXgtaW5kaWNhdG9yIjoiU3BsaXQgRHV0eSBUYXgiLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9zaGlwLWZyb20tc21zLWNhcGFiaWxpdHkiOiJTTVMgTnVtbWVyIFx1MjAxMyBKYS9OZWluIChBYnNlbmRlcikiLCJzaGlwbWVudC1pbXBvcnRfbGFiZWxfc2hpcG1lbnQtdHlwZS1kb2N1bWVudHMiOiJOZWluIiwic2hpcG1lbnQtZmllbGRzX3NlbGVjdC1vcHRpb25fc2hpcC10by1jaXR5IjoiU3RhZHQgKEVtcGbDpG5nZXIpIiwic2hpcG1lbnQtZmllbGRzX3NlbGVjdC1vcHRpb25fbmV1dHJhbC1kZWxpdmVyeSI6Ik5ldXRyYWwgRGVsaXZlcnnCoChOTikiLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9pbnZvaWNlLW51bWJlciI6IlJlY2hudW5nc251bW1lciIsInNoaXBtZW50LWZpZWxkc19zZWxlY3Qtb3B0aW9uX2JpbGwtY3ItbnVtYiI6IkNSIE51bW1lciAoWm9sbHJlY2hudW5nIFJlY2hudW5nIGFuKSIsInNoaXBtZW50LWZpZWxkc19zZWxlY3Qtb3B0aW9uX3NoaXAtdG8tcGhvbmUtdHlwZSI6IlRlbGVmb25hcnQgKEVtcGbDpG5nZXIpICIsInNoaXBtZW50LWltcG9ydF9sYWJlbF9lbnRlci1zY2hlbWUtbmFtZS1mb3Itc2F2ZSI6IlNjaGVtYSBiZW5lbm5lbiB1bmQgc3BlaWNoZXJuIiwic2hpcG1lbnQtaW1wb3J0X3NlbGVjdF9tYW5hZ2UtZGVmYXVsdCI6IkF1c3fDpGhsZW4iLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9iaWxsLWllLW51bWIiOiJJRS9SRyAoWm9sbHJlY2hudW5nIFJlY2hudW5nIGFuKSIsInNoaXBtZW50LWltcG9ydF9zZWxlY3Qtb3B0aW9uX2RlZmF1bHQtc2NoZW1lcyI6IiIsInNoaXBtZW50LWZpZWxkc19zZWxlY3Qtb3B0aW9uX3NoaXAtZnJvbS1waG9uZS10eXBlIjoiVGVsZWZvbmFydCAoQWJzZW5kZXIpIiwic2hpcG1lbnQtaW1wb3J0X2FsZXJ0X3N1Y2Nlc3NmdWxseS11cGxvYWRlZC1zaGlwbWVudHMiOiI8ZGl2IGNsYXNzPVwiZXdmX2RpY3Rpb25hcnlfdmFsdWVcIj48ZGl2IGNsYXNzPSJtZXNzYWdlLXdyYXBwZXIiPjxwPjxiPkVyZm9sZ3JlaWNoOiAge3N1Y2Nlc3NDb3VudH08XC9iPiB2b24gPGI+e3RvdGFsQ291bnR9PFwvYj4gU2VuZHVuZyhlbikgZXJzdGVsbHQ8XC9wPlxuPHA+IDxcL3A+XG48XC9kaXY+PFwvZGl2PiIsInNoaXBtZW50LWZpZWxkc19zZWxlY3RlZC1kZy1zZXJ2aWNlIjoiQXVzZ2V3w6RobHRlciBEYW5nZXJvdXMgR29vZHMgU2VydmljZSIsInNoaXBtZW50LWZpZWxkc19zZWxlY3Qtb3B0aW9uX3NoaXAtdG8tcmVzaWRlbnRpYWwtYWRkcmVzcyI6IlByaXZhdGFkcmVzc2UgXHUyMDEzIEphL05laW4gKEVtcGbDpG5nZXIpIiwic2hpcG1lbnQtaW1wb3J0X3BhcmFncmFwaF9zZWxlY3QtdXBsb2FkLXNjaGVtZSI6ImhvY2hsYWRlbiBPcHRpb25lbiIsInNoaXBtZW50LWltcG9ydF9sYWJlbF9pbnNlcnQtY29sdW1uLWJlbG93IjoiRmVsZCBoaW56dWbDvGdlbiIsInNoaXBtZW50LWltcG9ydF9wYXJhZ3JhcGhfc3VyZS13YW50LWRlbGV0ZS1zY2hlbWUiOiJXb2xsZW4gU2llIGRpZXNlcyBTY2hlbWEgd2lya2xpY2ggbMO2c2NoZW4/Iiwic2hpcG1lbnQtZmllbGRzX3NlbGVjdC1vcHRpb25fdHlwZS1vZi1leHBvcnQiOiJBcnQgZGVzIEV4cG9ydHMiLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9zaGlwLXRvLXN0YXRlLWNvZGUiOiJCZXppcmsgQ29kZSAoRW1wZsOkbmdlcikiLCJzaGlwbWVudC1pbXBvcnRfbXNnX3dyb25nLXNjaGVtYS10eXBlIjoiSWhyZSBEYXRlaSBwYXNzdCBuaWNodCBpbiBkYXMgYXVzZ2V3w6RobHRlIFNjaGVtYS4gw5xiZXJwcsO8ZmVuIHVuZCBiZWFyYmVpdGVuIFNpZSBkaWUgRGF0ZWkgb2RlciB3w6RobGVuIFNpZSBlaW4gYW5kZXJlcyBTY2hlbWEgYXVzIHVuZCB2ZXJzdWNoZW4gU2llIGRlbiBVcGxvYWQgZXJuZXV0LiIsInNoaXBtZW50LWZpZWxkc19zZWxlY3Qtb3B0aW9uX2dvLWdyZWVuLWVlIjoiR29HcmVlbiAoRUUpIiwic2hpcG1lbnQtZmllbGRzX3NlbGVjdC1vcHRpb25fa3BwIjoiS1BQIE51bW1lciIsInNoaXBtZW50LWZpZWxkc19zZWxlY3Qtb3B0aW9uX3NoaXAtdG8tY29tcGFueS1uYW1lIjoiRmlybWEgKEVtcGbDpG5nZXIpIiwic2hpcG1lbnQtZmllbGRzX3NlbGVjdC1vcHRpb25fYmlsbC1hZGRyZXNzMSI6IkFkcmVzc2UgMSAoWm9sbHJlY2hudW5nIFJlY2hudW5nIGFuKSIsInNoaXBtZW50LWZpZWxkc19zZWxlY3Qtb3B0aW9uX3BpZWNlLXdpZHRoIjoiQnJlaXRlIHZvbiBQYWNrc3TDvGNrIiwic2hpcG1lbnQtZmllbGRzX3NlbGVjdC1vcHRpb25fYmlsbC1lbWFpbCI6IkUtTWFpbCBBZHJlc3NlIChab2xscmVjaG51bmcgUmVjaG51bmcgYW4pIiwic2hpcG1lbnQtZmllbGRzX3NlbGVjdC1vcHRpb25fYmlsbC1jb3VudHJ5LWNvZGUiOiJMw6RuZGVyY29kZSAoWm9sbHJlY2hudW5nIFJlY2hudW5nIGFuKSIsInNoaXBtZW50LWZpZWxkc19zZWxlY3Qtb3B0aW9uX3NhdHVyZGF5LWRlbGl2ZXJ5LWFnIjoiRG9tZXN0aWMgU2F0dXJkYXkgRGVsaXZlcnkgKEFHKSIsInNoaXBtZW50LWltcG9ydF9hbGVydF9zdWNjZXNzZnVsbHktdXBsb2FkZWQtc2hpcG1lbnRzLXdpdGgtaW5jb21wbGV0ZSI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPjxkaXYgY2xhc3M9Im1lc3NhZ2Utd3JhcHBlciI+PHA+PGI+RXJmb2xncmVpY2g6ICB7c3VjY2Vzc0NvdW50fTxcL2I+IHZvbiA8Yj57dG90YWxDb3VudH08XC9iPiBTZW5kdW5nKGVuKSBlcnN0ZWxsdDxcL3A+XG48cD4gPFwvcD5cbjxwPjxiPnVudm9sbHN0w6RuZGlnOiAge2luY29tcGxldGVDb3VudH0gPFwvYj5TZW5kdW5nKGVuKSBlcnN0ZWxsdCwgYWJlciBEYXRlbmtvcnJla3R1ciBub3R3ZW5kaWcgPGEgaHJlZj1cIi9jb250ZW50L2RobC9hdC9kZS9tYW5hZ2Utc2hpcG1lbnRzLmh0bWxcIiB0YXJnZXQ9XCJfc2VsZlwiPlNlbmR1bmcoZW4pIGVybmV1dCBhbnNlaGVuIHVuZCBhbnBhc3NlbjxcL2E+PFwvcD5cbjxcL2Rpdj48XC9kaXY+Iiwic2hpcG1lbnQtaW1wb3J0X2xhYmVsX2NvbHVtbi1udW1iZXIiOiJNZWluZSBTY2hlbWVuIC0gRmVsZCB7bnVtYmVyfSIsInNoaXBtZW50LWltcG9ydF9tc2dfaW52YWxpZC1maWVsZCI6IlVuZ8O8bHRpZyIsInNoaXBtZW50LWZpZWxkc19zZWxlY3Qtb3B0aW9uX3NhdHVyZGF5LWRlbGl2ZXJ5LWFhIjoiU2Ftc3RhZ3N6dXN0ZWxsdW5nIChBQSkgIiwic2hpcG1lbnQtZmllbGRzX3NlbGVjdC1vcHRpb25fYmlsbC1hZGRyZXNzMiI6IkFkcmVzc2UgMiAoWm9sbHJlY2hudW5nIFJlY2hudW5nIGFuKSIsInNoaXBtZW50LWZpZWxkc19zZWxlY3Qtb3B0aW9uX2JpbGwtYWRkcmVzczMiOiJBZHJlc3NlIDMgKFpvbGxyZWNobnVuZyBSZWNobnVuZyBhbikiLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9zaGlwLXRvLWZheC1jb3VudHJ5LWNvZGUiOiJGYXggTMOkbmRlcmNvZGUgKEVtcGbDpG5nZXIpICIsInNoaXBtZW50LWZpZWxkc19zZWxlY3Qtb3B0aW9uX2dyb3NzLXdlaWdodCI6IkJydXR0b2dld2ljaHQiLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9ub3RlcyI6IktvbnRha3Rub3RpemVuIiwic2hpcG1lbnQtZmllbGRzX3NlbGVjdC1vcHRpb25fcGllY2UtaGVpZ2h0IjoiSMO2aGUgdm9uIFBhY2tzdMO8Y2siLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9zaGlwLXRvLWVtYWlsIjoiRS1NYWlsIEFkcmVzc2UgKEVtcGbDpG5nZXIpIiwic2hpcG1lbnQtZmllbGRzX3NlbGVjdC1vcHRpb25fc2VjdXJlLXN0b3JhZ2UtY2YiOiJTZWN1cmUgU3RvcmFnZSIsInNoaXBtZW50LWZpZWxkc19zZWxlY3Qtb3B0aW9uX3JlbWFya3MiOiJIaW53ZWlzZSIsInNoaXBtZW50LWltcG9ydF9sYWJlbF9zaGlwbWVudC10eXBlLXBhY2thZ2VzIjoiSmEiLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9kdXR5LWFjY291bnQiOiJLdW5kZW5udW1tZXIgKFpvbGwpIiwic2hpcG1lbnQtZmllbGRzX3NlbGVjdC1vcHRpb25fZXh0ZW5kZWQtaG9sZC1hdC1mYWNpbGl0eS1pZCI6IkZhY2lsaXR5IElEIiwic2hpcG1lbnQtZmllbGRzX3NlbGVjdC1vcHRpb25fc2hpcC1mcm9tLWVvcmkiOiJFT1JJIE51bW1lciAoQWJzZW5kZXIpIiwic2hpcG1lbnQtZmllbGRzX3NlbGVjdC1vcHRpb25fb2twbyI6Ik9LUE8gTnVtbWVyIiwic2hpcG1lbnQtZmllbGRzX3NlbGVjdC1vcHRpb25fdG90YWwtd2VpZ2h0IjoiR2VzYW10Z2V3aWNodCIsInNoaXBtZW50LWZpZWxkc19zZWxlY3Qtb3B0aW9uX3NoaXAtdG8tc3RhdGUiOiJCZXppcmsgKEVtcGbDpG5nZXIpIiwic2hpcG1lbnQtaW1wb3J0X2xhYmVsX3VzZS1mcm9tLWZpbGUtYWNjb3VudCI6Ik51dHplbiBTaWUgZGllIFZlcnNlbmRlciBLdW5kZW5udW1tZXIobikgYXVzIG1laW5lciBEYXRlaSIsInNoaXBtZW50LWZpZWxkc19zZWxlY3Qtb3B0aW9uX3RlbXBvcmFyeS1pbXBvcnQtZXhwb3J0IjoiVGVtcG9yw6RyZXIgSW1wb3J0IEV4cG9ydCAoV00pIiwic2hpcG1lbnQtZmllbGRzX3NlbGVjdC1vcHRpb25fZm9ybWFsIjoiRm9ybWFsIG9yIEluZm9ybWFsIiwic2hpcG1lbnQtZmllbGRzX3NlbGVjdC1vcHRpb25fc2hpcC1mcm9tLWNucGotY3BmLW51bWJlciI6IkNOSi9DUEYgU3RldWVybnVtbWVyIChBYnNlbmRlcikiLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9zaGlwLXRvLXNtcy1jYXBhYmlsaXR5IjoiU01TIE51bW1lciBcdTIwMTMgSmEvTmVpbiAoRW1wZsOkbmdlcikiLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9uYWZ0YSI6Ik5BRlRBIFx1MjAxMyBKYS9OZWluIiwibm90YS1maXNjYWwtZmlsZXNfbWFuZGF0b3J5LWZpZWxkc19lbWl0LWVuZGVyRW1pdC1jUGFpcyI6IlZlcnNlbmRlciBMYW5kIENvZGUiLCJzaGlwbWVudC1pbXBvcnRfbXNnX21pc3NlZC1maWVsZCI6IkZlaGx0Iiwic2hpcG1lbnQtZmllbGRzX3NlbGVjdC1vcHRpb25fc2hpcC10by1waG9uZS1vZmZpY2UtZXh0ZW5zaW9uIjoiVGVsZWZvbm51bW1lciAoQsO8cm8pIER1cmNod2FobCAoRW1wZsOkbmdlcikiLCJzaGlwbWVudC1pbXBvcnRfbGFiZWxfc2NoZW1lLXRleHQtZGVsaW1pdGVyIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+PGRpdiBjbGFzcz0ibWVzc2FnZS13cmFwcGVyIj5UZXh0LVRyZW5uemVpY2hlbiA8ZGl2IGNsYXNzPVwiaW5mb1wiPjxkaXY+PHA+V2VubiBTaWUgVHJlbm56ZWljaGVuIHp3aXNjaGVuIFfDtnJ0ZXJuIGluIElocmVuIERhdGVpZW4gbnV0emVuLCBtw7xzc2VuIFNpZSBkYXMgVGV4dC1UcmVubnplaWNoZW4gaW4gSWhyZXIgQ1NWIG9kZXIgVFhULURhdGVpIGRlZmluaWVyZW4uIFouQi46PFwvcD5cbjxwPsKgPFwvcD5cbjxwPkFERFJFU1NfWkVJTEVfMTxcL3A+XG48cD7CoDxcL3A+XG48cD5JbiBkaWVzZW0gRmFsbCBpc3QgSWhyIFRleHQtVHJlbm56ZWljaGVuIFwiX1wiPFwvcD5cbjxwPsKgPFwvcD5cbjxwPkRhcyBUZXh0LVRyZW5uemVpY2hlbiBtdXNzIGFuZGVycyBhbHMgZGFzIEZlbGQtVHJlbm56ZWljaGVuIHNlaW4uPFwvcD5cbjxcL2Rpdj48XC9kaXY+PFwvZGl2PjxcL2Rpdj4iLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9wYWxsZXQiOiJQYWxsZXR0ZSAtIEphL05laW4iLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9pbm4iOiJJTk4gTnVtbWVyIiwiaW1wb3J0aW5nLXNjaGVtZXNfc2VsZWN0LW9wdGlvbl9ld2YtbXVsdGlsaW5lLXNjaGVtZSI6Ik15REhMKyBTdGFuZGFyZCBTY2hlbWEiLCJzaGlwbWVudC1pbXBvcnRfdGl0bGVfc2hpcG1lbnQtdHlwZSI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPkRhdGVpIGVudGhhbHQgPGI+V2FyZW5zZW5kdW5nZW48XC9iPiAoa2VpbmUgRG9rdW1lbnRzZW5kdW5nZW4pPFwvZGl2PiIsInNoaXBtZW50LWZpZWxkc19zZWxlY3Qtb3B0aW9uX3BpZWNlLXdlaWdodCI6IlBhY2tzdMO8Y2stR2V3aWNodCIsInNoaXBtZW50LWZpZWxkc19zZWxlY3Qtb3B0aW9uX3NoaXAtdG8tc3VidXJiIjoiVm9yb3J0IChFbXBmw6RuZ2VyKSIsInNoaXBtZW50LWZpZWxkc19zZWxlY3Qtb3B0aW9uX2V4cG9ydC1saWNlbnNlLW51bWJlciI6IkV4cG9ydCBMaWNlbnNlIE51bWJlciIsInNoaXBtZW50LWZpZWxkc19zZWxlY3Qtb3B0aW9uX3NoaXAtZnJvbS1zdGF0ZSI6IkJlemlyayAoQWJzZW5kZXIpIiwic2hpcG1lbnQtZmllbGRzX3NlbGVjdC1vcHRpb25fYmlsbC1mYXgiOiJGYXggKFpvbGxyZWNobnVuZyBSZWNobnVuZyBhbikiLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9hdXRoLWdyb3VwIjoiRXhwb3J0LyBSZXR1cm4gUGFhcmUiLCJzaGlwbWVudC1pbXBvcnRfbGFiZWxfc2hpcG1lbnQtdHlwZS1ib3RoIjoiTmljaHQgU2ljaGVyIiwic2hpcG1lbnQtaW1wb3J0X2FsZXJ0X2ZpbGwtbWFuZGF0b3J5LWZpZWxkcyI6Im5pY2h0IGFsbGUgRmVsZGVyIHNpbmQgdmVya27DvHBmdCIsInNoaXBtZW50LWltcG9ydF9sYWJlbF9hY2NvdW50IjoiT2RlciBudXR6ZW4gU2llIGRpZXNlIEt1bmRlbm51bW1lciBcdTIwMTMgZsO8ciBhbGxlIFNlbmR1bmdlbiBpbiBkaWVzZXIgRGF0ZWkiLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9sb2NhbC1kZy1jaGFyZ2UtY29kZSI6IkRhbmdlcm91cyBHb29kcyBDb2RlIiwic2hpcG1lbnQtaW1wb3J0X21zZ192ZXJzaW9uLWV4Y2VwdGlvbiI6IlNjaGVtYSB3dXJkZSB2b24gZWluZXIgYW5kZXJlbiBQZXJzb24gZ2XDpG5kZXJ0IiwicXVpY2stdGlwc19ob3ctd29ya3NfYnVsbGV0c19DTVMiOiI8ZGl2IGNsYXNzPVwiZXdmX2RpY3Rpb25hcnlfdmFsdWVcIj48ZGl2IGNsYXNzPSJtZXNzYWdlLXdyYXBwZXIiPjxwPjxiPk5hY2ggZGVtIEhvY2hsYWRlbiBzaW5kIFNpZSBpbiBkZXIgTGFnZTo8XC9iPjxcL3A+PHVsPjxsaT5JaHJlIFNlbmR1bmdlbiB1bWdlaGVuZCBpbSBNZW7DvHB1bmt0IFwiVmVyd2FsdGVuXCIgZWluenVzZWhlbjxcL2xpPjxsaT5kaWUgVmVyc2FuZGxhYmVsIHVuZCBzb25zdGlnZW4gVmVyc2FuZHBhcGllcmUgenUgZHJ1Y2tlbjxcL2xpPjxsaT5TZW5kdW5nc2RhdGVuIHZvciBkZW0gQXVzZHJ1Y2tlbiBkZXIgVmVyc2FuZGxhYmVsIHp1IGJlYXJiZWl0ZW4sIGZhbGxzIGVyZm9yZGVybGljaDxcL2xpPjxsaT5laW5lIEFiaG9sdW5nIHp1IGJ1Y2hlbjxcL2xpPjxcL3VsPjxcL2Rpdj48XC9kaXY+Iiwic2hpcG1lbnQtaW1wb3J0X2FsZXJ0X3Vuc3VjY2Vzc2Z1bGx5LXVwbG9hZGVkLXNoaXBtZW50cy13aXRoLWZhaWxlZCI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPjxiPm5pY2h0IGVyZm9sZ3JlaWNoOiAge2ZhaWxlZENvdW50fTxcL2I+IFNlbmR1bmcoZW4pIG5pY2h0IGVyc3RlbGx0PFwvZGl2PiIsInNoaXBtZW50LWZpZWxkc19zZWxlY3Qtb3B0aW9uX2JpbGwtdmF0IjoiTWVocndlcnRzdGV1ZXIgKFpvbGxyZWNobnVuZyBSZWNobnVuZyBhbikiLCJzaGlwbWVudC1pbXBvcnRfYnV0dG9uX21hbmFnZSI6Ik1hcHBpbmctT3B0aW9uZW4gZXJzdGVsbGVuIG9kZXIgZWRpdGllcmVuIiwic2hpcG1lbnQtZmllbGRzX3NlbGVjdC1vcHRpb25fYmlsbC1jbnBqLWNwZi10eXBlIjoiQ05QSi9DUEYgVGF4IFR5cGUgKFpvbGxyZWNobnVuZyBSZWNobnVuZyBhbikiLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9zaGlwLWZyb20tY2l0eSI6IlN0YWR0IChBYnNlbmRlcikiLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9zaGlwLXRvLWNucGotY3BmLW51bWJlciI6IkNOSi9DUEYgU3RldWVybnVtbWVyIChFbXBmw6RuZ2VyKSIsInNoaXBtZW50LWZpZWxkc19zZWxlY3Qtb3B0aW9uX3NoaXAtZnJvbV9yZXNpZGVudGlhbF9hZGRyZXNzIjoiUHJpdmF0YWRyZXNzZSBcdTIwMTMgSmEvTmVpbiAoQWJzZW5kZXIpIiwic2hpcG1lbnQtaW1wb3J0X2FsZXJ0X3Vuc3VjY2Vzc2Z1bGx5LXVwbG9hZGVkLXNoaXBtZW50cy13aXRoLWluY29tcGxldGUiOiI8ZGl2IGNsYXNzPVwiZXdmX2RpY3Rpb25hcnlfdmFsdWVcIj48Yj51bnZvbGxzdMOkbmRpZzogIHtpbmNvbXBsZXRlQ291bnR9IDxcL2I+U2VuZHVuZyhlbikgZXJzdGVsbHQsIGFiZXIgRGF0ZW5rb3JyZWt0dXIgbm90d2VuZGlnIDxhIGhyZWY9XCIvY29udGVudC9kaGwvYXQvZGUvbWFuYWdlLXNoaXBtZW50cy5odG1sXCIgdGFyZ2V0PVwiX3NlbGZcIj5TZW5kdW5nKGVuKSBlcm5ldXQgYW5zZWhlbiB1bmQgYW5wYXNzZW48XC9hPjxcL2Rpdj4iLCJmaWxlLXVwbG9hZF9hbGVydF9tYW5kYXRvcnktY29sdW1uLWFtb3VudC1lcnJvciI6IklocmUgRGF0ZWkgYmVzaXR6dCBuaWNodCBhbGxlIFBmbGljaHRmZWxkZXIuIFBhc3NlbiBTaWUgIElocmUgRGF0ZWkgYW4gdW5kIGxhZGVuIFNpZSBkaWUgRGF0ZWkgZXJuZXV0IGhvY2guIiwic2hpcG1lbnQtZmllbGRzX3VzZXJuYW1lIjoiTmFtZSAoSW5oYWJlciBLdW5kZW5udW1tZXIpIiwic2hpcG1lbnQtZmllbGRzX3NlbGVjdC1vcHRpb25fcHVycG9zZSI6IkdydW5kIGbDvHIgZGVuIEV4cG9ydCIsInNoaXBtZW50LWZpZWxkc19zZWxlY3Qtb3B0aW9uX2F3Yi1udW1iZXIiOiJTZW5kdW5nc251bW1lciIsInNoaXBtZW50LWltcG9ydF9lcnJvcl9zZWxlY3QtZnJvbS1hZGRyZXNzLWJvb2siOiJBZHJlc3NlIGF1cyBkZW0gQWRyZXNzYnVjaCB3w6RobGVuIiwiZmlsZS11cGxvYWRfYWxlcnRfcmVjb3Jkcy1hcmUtZW1wdHkiOiJQZmxpY2h0ZmVsZGVyIG3DvHNzZW4gYXVzZ2Vmw7xsbHQgd2VyZGVuIiwic2hpcG1lbnQtZmllbGRzX3NlbGVjdC1vcHRpb25fb2dybiI6Ik9HUk4gTnVtbWVyIiwic2hpcG1lbnQtZmllbGRzX3NlbGVjdC1vcHRpb25fdWx0aW1hdGUtY29uc2lnbmVlIjoiRW5kZ8O8bHRpZ2VyIEVtcGbDpG5nZXIiLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9udW1iZXItb2YtcGFsbGV0cyI6IkFuemFobCBQYWxldHRlbiIsInNoaXBtZW50LWZpZWxkc19zZWxlY3Qtb3B0aW9uX2RyeS1pY2UtdW4xODQ1LXdlaWdoIjoiRHJ5IEljZSAoV2VpZ2h0KSIsInNoaXBtZW50LWZpZWxkc19zZWxlY3Qtb3B0aW9uX2V4cGVjdGVkLXF1YW50aXR5LXVuLW51bWJlciI6IkV4Y2VwdGVkIFF1YW50aXR5IChISCkiLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9iaWxsLXBvc3RhbC1jb2RlIjoiUG9zdGxlaXR6YWhsIChab2xscmVjaG51bmcgUmVjaG51bmcgYW4pIiwic2hpcG1lbnQtaW1wb3J0X2xhYmVsX2FkZC1jb2x1bW4tZGVmYXVsdC1jb3VudCI6IkZlbGQgaGluenVmw7xnZW4iLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9zaGlwLWZyb20tY291bnRyeS1jb2RlIjoiTMOkbmRlcmNvZGUgKEFic2VuZGVyKSIsInNoaXBtZW50LWltcG9ydF9hbGVydF9zaGlwcGVyLWluZm9ybWF0aW9uLWJ5LWRlZmF1bHQiOiI8ZGl2IGNsYXNzPVwiZXdmX2RpY3Rpb25hcnlfdmFsdWVcIj48ZGl2IGNsYXNzPSJtZXNzYWdlLXdyYXBwZXIiPjxwPlNpZSBrw7ZubmVuOjxcL3A+XG48dWw+XG48bGk+RGllIEFjY291bnRudW1tZXIgYXVzIElocmVyIERhdGVpIG9kZXIgZWluZSBhbmRlcmUgQWNjb3VudG51bW1lciBhdXN3w6RobGVuPFwvbGk+XG48XC91bD5cbjxcL2Rpdj48XC9kaXY+Iiwic2hpcG1lbnQtZmllbGRzX3NlbGVjdC1vcHRpb25fc3BsaXQtZHV0eS10YXgiOiJTdGV1ZXJuIHVuZCBBYmdhYmVuIHNwbGl0dGVuIiwic2hpcG1lbnQtZmllbGRzX3NlbGVjdC1vcHRpb25fc2V0dGxlbWVudC1hY2NvdW50LXVzZGV1ciI6IlZlcnJlY2hudW5nc2tvbnRvIChVU0QvRVVSKSIsInNoaXBtZW50LWZpZWxkc19zZWxlY3Qtb3B0aW9uX2hvbGlkYXktZGVsaXZlcnktYWMiOiJIb2xpZGF5IERlbGl2ZXJ5IiwicGFnZV9pbnRyb19DTVMiOiJFcnN0ZWxsZW4gU2llIFNlbmR1bmdlbiBpbiBNeURITCsgaW5kZW0gU2llIElocmUgZWlnZW5lIERhdGVpIHZlcndlbmRlbi4gTmFjaCBkZW0gSG9jaGxhZGVuIGZpbmRlbiBTaWUgSWhyZSBTZW5kdW5nZW4gdW50ZXIgZGVtIE1lbsO8cHVua3QgXCJWZXJ3YWx0ZW5cIiBcdTIwMTMgZG9ydCBrw7ZubmVuIFNpZSBJaHJlIFNlbmR1bmdlbiBhYnNjaGxpZcOfZW4sIGVkaXRpZXJlbiwgZsO8ciBzcMOkdGVyIHNwZWljaGVybiB1bmQgZGllIFZlcnNhbmRsYWJlbCBkcnVja2VuLiIsInNoaXBtZW50LWZpZWxkc19zZWxlY3Qtb3B0aW9uX2luc3VyYW5jZS12YWx1ZSI6IlZlcnNpY2hlcnRlciBXZXJ0Iiwic2hpcG1lbnQtaW1wb3J0X2xhYmVsX2ltcG9ydC1maWxlLXdpdGgtaGVhZGVyIjoiRGF0ZWkgZW50aMOkbHQgU3BhbHRlbsO8YmVyc2NocmlmdGVuIiwic2hpcG1lbnQtaW1wb3J0X2J1dHRvbl9idWlsZCI6Ik1laW5lIERhdGVpIGhvY2hsYWRlbiB1bmQgZGVuIERITCBGZWxkZXJuIHp1b3JkbmVuIiwic2hpcG1lbnQtZmllbGRzX3NlbGVjdC1vcHRpb25fd28td2QtbWV4LWludGVybmF0aW9uYWwiOiJNZXhpY28gSW50ZXJuYXRpb25hbCAoV08vV0QpIiwic2hpcG1lbnQtZmllbGRzX3NlbGVjdC1vcHRpb25faXRlbS12YWx1ZS1jdXJyZW5jeSI6IldhcmVud2VydCBXw6RocnVuZyIsInNoaXBtZW50LWZpZWxkc19zZWxlY3Qtb3B0aW9uX3BhY2thZ2UtbWFya3MiOiJWZXJwYWNrdW5nc2tlbm56ZWljaGVuIiwic2hpcG1lbnQtZmllbGRzX3NlbGVjdC1vcHRpb25faG9sZC1mb3ItY29sbGVjdGlvbiI6Ilp1ciBBYm9sdW5nIGJlcmVpdCAoTFgpIiwic2hpcG1lbnQtaW1wb3J0X2FsZXJ0X3Vuc3VjY2Vzc2Z1bGx5LXVwbG9hZGVkLXNoaXBtZW50cy13aXRoLWZhaWxlZC1hbmQtaW5jb21wbGV0ZSI6IjxkaXYgY2xhc3M9XCJld2ZfZGljdGlvbmFyeV92YWx1ZVwiPjxkaXYgY2xhc3M9Im1lc3NhZ2Utd3JhcHBlciI+PHA+PGI+dW52b2xsc3TDpG5kaWc6ICB7aW5jb21wbGV0ZUNvdW50fSA8XC9iPlNlbmR1bmcoZW4pIGVyc3RlbGx0LCBhYmVyIERhdGVua29ycmVrdHVyIG5vdHdlbmRpZyA8YSBocmVmPVwiL2NvbnRlbnQvZGhsL2F0L2RlL21hbmFnZS1zaGlwbWVudHMuaHRtbFwiIHRhcmdldD1cIl9zZWxmXCI+U2VuZHVuZyhlbikgZXJuZXV0IGFuc2VoZW4gdW5kIGFucGFzc2VuPFwvYT48XC9wPlxuPHA+IDxcL3A+XG48cD48Yj5uaWNodCBlcmZvbGdyZWljaDogIHtmYWlsZWRDb3VudH08XC9iPiBTZW5kdW5nKGVuKSBuaWNodCBlcnN0ZWxsdDxcL3A+XG48XC9kaXY+PFwvZGl2PiIsInNoaXBtZW50LWZpZWxkc19zZWxlY3Qtb3B0aW9uX2JhbmstbmFtZSI6Ik5hbWUgZGVyIEJhbmsiLCJzaGlwbWVudC1pbXBvcnRfYWxlcnRfdW5zdWNjZXNzZnVsbHktdXBsb2FkZWQtc2hpcG1lbnRzLXdpdGgtZmFpbGVkLWFuZC1ub3QtYmUtdXBsb2FkZWQiOiI8ZGl2IGNsYXNzPVwiZXdmX2RpY3Rpb25hcnlfdmFsdWVcIj48Yj57bm90QmVVcGxvYWRlZENvdW50fTxcL2I+IG5pY2h0IGhvY2hnZWxhZGVuPFwvZGl2PiIsInNoaXBtZW50LWZpZWxkc19zZWxlY3Qtb3B0aW9uX3NoaXAtZnJvbS1zdWJ1cmIiOiJWb3JvcnQgKEFic2VuZGVyKSIsInNoaXBtZW50LWZpZWxkc19zZWxlY3Qtb3B0aW9uX2xpdGhpdW0taW9uLWh2IjoiTGl0aGl1bSBJb24gUEk5NjcgU2VjdGlvbiBJSSAoSFYpIiwic2hpcG1lbnQtZmllbGRzX3NlbGVjdC1vcHRpb25fZW1haWxzLXRvLWJlLW5vdGlmaWVkIjoiRS1NYWlsIEFkcmVzc2UgKEJlbmFjaHJpY2h0aWd1bmdlbikiLCJzaGlwbWVudC1maWVsZHNfdXNlci1ncm91cCI6Ikdyb3VwIElEIHZlcndlbmRlbiIsImZpbGUtdXBsb2FkX2Vycm9yX21pc3Npbmdfc2NoZW1lLWlkX29yX2RlbGltaXRlcnMiOiJUcmVubnplaWNoZW4gZmVobHQiLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9saXRoaXVtLWlvbi1oYiI6IkxpdGhpdW0gSW9uIFBJOTY1IFNlY3Rpb24gSUkgKEhCKSIsInNoaXBtZW50LWltcG9ydF9sYWJlbF9zaGlwcGVyIjoiT2RlciBudXR6ZW4gU2llIGRpZXNlIMKgVmVyc2VuZGVyIEFkcmVzc2UgKEFic2VuZGVyKSBcdTIwMTPCoGbDvHIgYWxsZSBTZW5kdW5nZW4gaW4gZGVyIERhdGVpIiwic2hpcG1lbnQtZmllbGRzX3NlbGVjdC1vcHRpb25faXRhci1iaXMtZmxhZyI6IklUQVIvQklTIEZsYWciLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9iaWxsLXBob25lLXNtcy1lbmJhbGVkIjoiU01TLWbDpGhpZyBcdTIwMTMgSmEvTmVpbiAoWm9sbHJlY2hudW5nIFJlY2hudW5nIGFuKSIsInNoaXBtZW50LWZpZWxkc19zZWxlY3Qtb3B0aW9uX2xpdGhpdW0taW9uLWhkIjoiTGl0aGl1bSBJb24gUEk5NjYgU2VjdGlvbiBJSSAoSEQpIiwiZmlsZS11cGxvYWRfYWxlcnRfZmlsZV9zaXplLWVycm9yIjoibWF4aW1hbGUgRGF0ZWlncsO2w59lIHtmaWxlU2l6ZX0iLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9jci1udW1iZXIiOiJDUiBOdW1tZXIgKEVtcGbDpG5nZXIpIiwic2hpcG1lbnQtZmllbGRzX3NlbGVjdC1vcHRpb25fYm9uZGVkLXRyYW5zaXQtZG9jdW1lbnRzLXdsIjoiQm9uZGVkIFRyYW5zaXQgKFdMKSIsInNoaXBtZW50LWZpZWxkc19zZWxlY3Qtb3B0aW9uX2ludm9pY2UtdHlwZSI6IlJlY2hudW5nc2FydCIsInNoaXBtZW50LWZpZWxkc19zZWxlY3Qtb3B0aW9uX2NvbW1vZGl0eS1jb2RlIjoiV2FyZW50YXJpZm51bW1lciIsImZpbGUtdXBsb2FkX2FsZXJ0X2ZpbGUtdHlwZS1lcnJvciI6IkRpZSBEYXRlaSwgZGllIFNpZSBob2NoZ2VsYWRlbiBlcmbDvGxsdCBuaWNodCBkYXMgdm9yZ2VnZWJlbmUgRm9ybWF0OiBYTUwsIENTViBvZGVyIFRYVC4gQml0dGUgbGFkZW4gU2llIGVpbmUgYW5kZXJlIERhdGVpIGhvY2guIiwic2hpcG1lbnQtZmllbGRzX3NlbGVjdC1vcHRpb25fc2hpcHBlci12YXQiOiJNZWhyd2VydHN0ZXVlciAoVmVyc2VuZGVyKSIsInNoaXBtZW50LWltcG9ydF9pbmZvLXRleHRfYnVpbGQiOiJPcmRuZW4gU2llIGRpZSBGZWxkZXIgYXVzIElocmVyIERhdGVpIHVuc2VyZW4gRmVsZGVybiBhbSBWZXJzYW5kbGFiZWwgdW5kIGRlciBSZWNobnVuZyB6dS4iLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9yZWZlcmVuY2UiOiJTZW5kdW5nc3JlZmVyZW56Iiwic2hpcG1lbnQtaW1wb3J0X2xhYmVsX3NjaGVtZS1uYW1lIjoiU2NoZW1hIE5hbWUiLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9waWVjZS13ZWlnaHQtaW4ta2ciOiJQYWNrc3TDvGNrLUdld2ljaHQgKGtnKSIsInNoaXBtZW50LWZpZWxkc19zZWxlY3Qtb3B0aW9uX3NoaXAtZnJvbS1hZGRyZXNzLWxpbmUtMiI6IkFkcmVzc2UgMiAoQWJzZW5kZXIpIiwic2hpcG1lbnQtZmllbGRzX3NlbGVjdC1vcHRpb25fdG90YWwtZGltX3VvbSI6IlBhY2tzdMO8Y2sgTWHDn2UgKE1hw59laW5oZWl0KSIsInNoaXBtZW50LWZpZWxkc19zZWxlY3Qtb3B0aW9uX3NoaXAtZnJvbS1hZGRyZXNzLWxpbmUtMyI6IkFkcmVzc2UgMyAoQWJzZW5kZXIpIiwic2hpcG1lbnQtaW1wb3J0X2xhYmVsX3NjaGVtZS1maWVsZC1kZWxpbWl0ZXIiOiI8ZGl2IGNsYXNzPVwiZXdmX2RpY3Rpb25hcnlfdmFsdWVcIj48ZGl2IGNsYXNzPSJtZXNzYWdlLXdyYXBwZXIiPkZlbGQtVHJlbm56ZWljaGVuIDxkaXYgY2xhc3M9XCJpbmZvXCI+PGRpdj48cD5EZWZpbmllcmVuIFNpZSBkYXMgVHJlbm56ZWljaGVuLCBkYXMgZGllIEZlbGRlciBpbiBJaHJlciBDU1YuIE9kZXIgVFhUIERhdGVpIHZvbmVpbmFuZGVyIHRyZW5udCwgei5CLjo8XC9wPlxuPHA+fDw+Lyw8XC9wPlxuPHA+RmFsbHMgU2llIHp1c8OkdHpsaWNoIFRleHR0cmVubnplaWNoZW4gdmVyd2VuZGVuLCBtdXNzIElociBGZWxkdHJlbm56ZWljaGVuIGFuZGVycyBhbHMgZGFzIFRleHRyZW5uemVpY2hlbiBzZWluLjxcL3A+XG48XC9kaXY+PFwvZGl2PjxcL2Rpdj48XC9kaXY+IiwicXVpY2stdGlwc19ob3ctd29ya3NfYnVsbGV0c19tYXBfQ01TIjoiPGRpdiBjbGFzcz1cImV3Zl9kaWN0aW9uYXJ5X3ZhbHVlXCI+PGRpdiBjbGFzcz0ibWVzc2FnZS13cmFwcGVyIj48cD48Yj5OYWNoIGRlbSBIb2NobGFkZW4gdW5kIE1hcHBlbiBzaW5kIFNpZSBpbiBkZXIgTGFnZSBzZWluOjxcL2I+PFwvcD48dWw+PGxpPklociBuZXUgZXJzdGVsbHRlcyBNYXBwaW5nIGFscyBhdXRvbWF0aXNpZXJ0ZSBVcGxvYWQtT3B0aW9uIGbDvHIgenVrw7xuZnRpZ2UgRGF0ZWktVXBsb2FkcyB6dSBzcGVpY2hlcm48XC9saT48bGk+SWhyZSBTZW5kdW5nZW4gdW1nZWhlbmQgaW0gTWVuw7xwdW5rdCBcIlZlcndhbHRlblwiIGVpbnp1c2VoZW48XC9saT48bGk+ZGllIFZlcnNhbmRsYWJlbCB1bmQgc29uc3RpZ2VuIFZlcnNhbmRwYXBpZXJlIHp1IGRydWNrZW48XC9saT48bGk+U2VuZHVuZ3NkYXRlbiB2b3IgZGVtIEF1c2RydWNrZW4gZGVyIFZlcnNhbmRsYWJlbCB6dSBiZWFyYmVpdGVuLCBmYWxscyBlcmZvcmRlcmxpY2g8XC9saT48bGk+ZWluZSBBYmhvbHVuZyB6dSBidWNoZW48XC9saT48XC91bD48XC9kaXY+PFwvZGl2PiIsInNoaXBtZW50LWZpZWxkc19zZWxlY3Qtb3B0aW9uX3NoaXAtZnJvbS1waG9uZS1udW1iZXIiOiJUZWxlZm9ubnVtbWVyIChBYnNlbmRlcikiLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9saXRoaXVtLW1ldGFsLWhtIjoiTGl0aGl1bSBNZXRhbCBQSTk2OSBTZWN0aW9uIElJIChITSkiLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9iaWxsLXBob25lIjoiVGVsZWZvbiAoWm9sbHJlY2hudW5nIFJlY2hudW5nIGFuKSIsInNoaXBtZW50LWZpZWxkc19zZWxlY3Qtb3B0aW9uX2VtYWlsIjoiRW1haWwgQWRkcmVzcyIsInNoaXBtZW50LWZpZWxkc19zZWxlY3Qtb3B0aW9uX3NoaXAtZnJvbS1waG9uZS1jb3VudHJ5LWNvZGUiOiJUZWxlZm9uIEzDpG5kZXJjb2RlIChBYnNlbmRlcikiLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9iaWxsLXBob25lLWNvdW50cnktY29kZSI6IlRlbGVmb24gTMOkbmRlcmNvZGUgKFpvbGxyZWNobnVuZyBSZWNobnVuZyBhbikiLCJzaGlwbWVudC1maWVsZHNfc2VsZWN0LW9wdGlvbl9zaGlwLWZyb20tYWRkcmVzcy1saW5lLTEiOiJBZHJlc3NlIDEgKEFic2VuZGVyKSIsInNoaXBtZW50LWZpZWxkc19zZWxlY3Qtb3B0aW9uX2JpbGwtZW9yaSI6IkVPUkkgTnVtbWVyIChab2xscmVjaG51bmcgUmVjaG51bmcgYW4pIiwic2hpcG1lbnQtZmllbGRzX3NlbGVjdC1vcHRpb25fbmFtZWQtc2lnbmF0dXJlLXNjIjoiVW50ZXJzY2hyaWZ0In0sImNyMDEwMCI6eyJjci1uYW1lIjoiTWF4aW11bSBOdW1iZXIgb2YgU2hpcG1lbnRzOiBVbml0IG9mIFBlcmlvZCJ9LCJjcjAxMDEiOnsiY3ItZXJyb3JzLXJlcXVpcmVkIjoiVGhpcyBmaWVsZCBpcyByZXF1aXJlZCIsImNyLW5hbWUiOiJNYXhpbXVtIE51bWJlciBvZiBTaGlwbWVudHM6IEVmZmVjdGl2ZSBEYXRlIFN0YXJ0In0sImNyMDEwMiI6eyJjci1uYW1lIjoiTWF4aW11bSBOdW1iZXIgb2YgU2hpcG1lbnRzOiBBcHByb3ZhbCBSZXF1aXJlZCJ9LCJjb3Jwb3JhdGUtYWR0LWJhY2tlbmQtZXJyb3JzIjp7InZhbHVlX2lzX291dF9vZl9yYW5nZSI6IlRCRCBLZXk6IHZhbHVlX2lzX291dF9vZl9yYW5nZSIsImVycm9yX3ZhbHVlLWlzLW5vdC1wcmVzZW50ZWQtaW4tdmFsdWVzLXByb3ZpZGVyIjoiTmljaHQgdmVyZsO8Z2JhciIsImVycm9yX3ZhbHVlLWlzLXJlcXVpcmVkIjoiRXJmb3JkZXJsaWNoIiwiZXJyb3JfdmFsdWUtaXMtb3V0LW9mLXJhbmdlIjoiVEJEIEtleTogZXJyb3JfdmFsdWUtaXMtb3V0LW9mLXJhbmdlIiwidmFsdWVfaXNfcmVxdWlyZWQiOiJFcmZvcmRlcmxpY2giLCJ2YWx1ZV9pc19ub3RfcHJlc2VudGVkX2luX3ZhbHVlc19wcm92aWRlciI6Ik5pY2h0IHZlcmbDvGdiYXIifSwiY3IwMTAzIjp7ImNyLW5hbWUiOiJNYXhpbXVtIENvc3Qgb2YgU2hpcG1lbnRzOiBFbmFibGVkIn19KTs='
    [IO.File]::WriteAllBytes($errorMessageDirPath, [Convert]::FromBase64String($populatedDirectries))
}

if(!(Test-Path $errorMessageDirPath)){
    Write-Host "'Error MSG Directory'  " -NoNewline
    Write-Host "     " -NoNewline
    $anErrorHappend = $true
}
$itemDescription = "  => $errorMessageDirPath "
if (($anErrorHappend)) {

    Write-Host -f red "ERROR - Directory not found!" -BackgroundColor Yellow -NoNewline
    Write-Host $itemDescription

} else {
        
        Write-Host "'Error MSG Directory'  " -NoNewline
        Write-Host -f green "     OK - directory exists!" -NoNewline
        Write-Host "      " -NoNewLine
        Write-Host $itemDescription
        #load errror message directory
        $file = Get-Content $errorMessageDirPath -Encoding UTF8 -Raw 
} 
 
############################################# Load Functions ##################################################
#function Print
function Print{
''
#do manifesting/print      
#but unfortunately we dont get any awb or MyDHL+ shipmentID back, so we have to search for it first!
$body = $myDHLPlusLoginCredentials | ConvertTo-Json
$header = @{
    "Accept"="application/json"
    "Content-Type"="application/json;charset=utf-8"
} 
#Login to MyDHL+
$response = Invoke-WebRequest -Uri "https://mydhl.express.dhl/api/auth/login" -Method POST -Body $body -Headers $header -SessionVariable sessionObject
    
#get Cookie
$cookie = $SessionObject.Cookies.GetCookies("https://mydhl.express.dhl/api/auth/login")
    
#get group ID 
$Group = $response.Content | ConvertFrom-Json
$GroupID = $Group.groupMembership.corpGroupInfo.groupID
    
#create cookie
$cookie = New-Object System.Net.Cookie 
$cookie.Name =  "ewfCorpGroup"
$cookie.Value = "$GroupID"
$cookie.Domain = "mydhl.express.dhl"
$sessionObject.Cookies.add($cookie)
    
#find token
$xsrfTokenValue = ''
$cookievalue = $SessionObject.Cookies.GetCookies("https://mydhl.express.dhl")
ForEach ($property in $cookievalue){
    if ($property.Name -eq 'XSRF-TOKEN'){
        $xsrfTokenValue = $property.Value
    }
}
    
#provide token in header
$header = @{
    "Accept"="application/json, text/plain, */*"
    "Content-Type"="application/json;charset=utf-8"
    "X-XSRF-TOKEN"="$xsrfTokenValue"
}       
$body = '{"page":{"pageNumber":0,"pageSize":100},"keywordQuery":null,"sortby":"'+$SortBy+'","statusFilters":["READY_TO_PRINT"],"accountFilters":null,"userFilters":null,"favoritesOnly":false,"dateFilter":{"type":"ALL","range":null},"myShipmentViewMode":"MY_SHIPMENTS","shipmentVisibility":"SHOW_VISIBLE_ONLY"}'
$Prntresponse = Invoke-WebRequest -Uri "https://mydhl.express.dhl/api/mms/search" -Method POST -Body $body -Headers $header -WebSession $SessionObject

$responseContentAsJson = $Prntresponse.Content | ConvertFrom-Json
foreach ($shipmentContainer in $responseContentAsJson.myShipmentItems) {
    if($shipmentContainer.shipmentData.status -eq "READY_TO_PRINT"){
        #Write-Host $shipmentContainer.shipmentData.status "status detected - PRINT IT!"
        $MyDHLshipmentID = $shipmentContainer.shipmentData.key
         
        #Add shipment reference to filename
        #search for reference first
        $getRef = Invoke-WebRequest -Uri "https://mydhl.express.dhl/api/mms/shipment/$MyDHLshipmentID" -Method GET -WebSession $SessionObject
        $getRefJson = $getRef | ConvertFrom-Json
                
        $reference = $getRefJson.masterShipment.shipmentData.shipmentDetails.references
        $reference = $reference.Trim() #>

        $airWayBill = $shipmentContainer.shipmentData.airWayBill
        $response = Invoke-WebRequest -Uri "https://mydhl.express.dhl/api/shipment/$MyDHLshipmentID/manifest" -Method POST -Body $body -Headers $header -WebSession $sessionObject

        #do print
        $responseFromGet = Invoke-WebRequest -Uri "https://mydhl.express.dhl/api/shipment/$MyDHLshipmentID/document?docs=LABEL&copies=$labelCopies&docs=ARCHIVE&copies=$WBdocCopies&returnShipmentId=" -Method 'Get' -WebSession $sessionObject
        
        #filename with reference 'disabled'
        $filePathToPrint = '\' + $reference + '_AWB_' + $airWayBill + '.pdf'
        $filePathToPrint = '\' + 'AWB_' + $airWayBill + '.pdf'
        $string = $filePathToPrint
        $File = $string.Trim("\")
        Write-Host "File:  " -NoNewLine
        Write-Host -f green $File -NoNewLine
        Write-Host " downloaded and sent to printer" 

        #First check if temp folder exist and create it if not
        if(!(Test-Path -Path $localPDFDirPath )){
        New-Item -ItemType directory -Path $localPDFDirPath
        }else{
            #Write-Host "Temp Folder available"
        }
        #save pdf
        $FullOutPath = $localPDFDirPath+$filePathToPrint
        [io.file]::WriteAllBytes($FullOutPath, $responseFromGet.Content)
            
        #print pdf
        if($useSumatraPDF){
                #Send PDF directly to the choosen printer...
                &$sumatraPDFPath -print-to $localPrinterName "$localPDFDirPath$filePathToPrint"
            }else{

                #get acrobat reader exe from file assoc
                $AdobeAcroReaderExePath = cmd /c 'for /f "delims== tokens=2" %a in (''assoc .pdf'') do @ftype %a'
                $AdobeAcroReaderExePath = $AdobeAcroReaderExePath.Substring($AdobeAcroReaderExePath.IndexOf('"')+1)
                $AdobeAcroReaderExePath = $AdobeAcroReaderExePath.Substring(0, $AdobeAcroReaderExePath.IndexOf('"'))
                #Start-Process -NoNewWindow -FilePath "C:\Program Files (x86)\Adobe\Acrobat Reader DC\Reader\AcroRd32.exe" -ArgumentList '/N /T c:\temp\1967309061.pdf "ZDesigner LP 2844-Z"'-> for direct print
                $PDFParams = '/N /T '+$localPDFDirPath+$filePathToPrint+' "'+$localPrinterName+'"'
            }
            #if AWB's are older then 30 days delete them
            Get-ChildItem –Path $localPDFDirPath -Recurse | Where-Object {($_.LastWriteTime -lt (Get-Date).AddDays(-30))} | Remove-Item

        }else{
            #Write-Host "No shipment 'READY TO PRINT found'`n"
        }
    }
    ''
}

############################################# Check Zip Code Function ##################################################
function zipcheck{
Param ([String]$givenISOCode, [String]$givenZIPCode)
#$givenISOCode = "AT"
#$givenZIPCode = "1220"

#get postcode formats
#Write-Host "Requesting MyDHL+..."
$result = Invoke-WebRequest -Uri "https://mydhl.express.dhl/api/location/postal-codes-formats" -Method 'GET'
#Write-Host "Requesting done."
$result = $result | ConvertFrom-Json

#trim given zip code first:
$givenZIPCode = $givenZIPCode.trim()

#get particular postcode formats for given country
ForEach ($zipcodeformat in $result.$givenISOCode){
    $zipcodeformat = $zipcodeformat.Trim()
    if($zipcodeformat -match "^\d+$"){
        #current postcodeformat only contains numbers, set proper regexfilter:
        $regexpFilter="[^0-9]"
    } else {
        $regexpFilter="[^"
        #current postcodeformat contains numbers and or alphanumerics!
        if ($zipcodeformat -match "[a-zA-Z]"){
            #postcodeformat contains blank
            $regexpFilter=$regexpFilter+"a-zA-Z"
        }
        if ($zipcodeformat -match "[\d]"){
            #string contains numbers
            $regexpFilter=$regexpFilter+"0-9"
        }
        if ($zipcodeformat.Contains(" ")){
            #postcodeformat contains blank
            $regexpFilter=$regexpFilter+" "
        }
        $regexpFilter=$regexpFilter+"]+$"
    }

    #first of all set postcode like it is given by regexp filter
    $modifiedZIPCode = $givenZIPCode -replace $regexpFilter

    if($zipcodeformat.Length -eq $modifiedZIPCode.replace(" ", "").Length){
        #same length no need to apply postcode format - that's it... but wait, count blanks, numerics and alphanumerics first
        $countedBlanks1 = ($zipcodeformat.ToCharArray() | Where-Object {$_ -match '[a-zA-Z0-9 ]'} | Measure-Object).Count
        $countedBlanks2 = ($modifiedZIPCode.ToCharArray() | Where-Object {$_ -match '[a-zA-Z0-9 ]'} | Measure-Object).Count
        if($countedBlanks1 -eq $countedBlanks2){
            #Write-host "looks good, same count - that's it..."
            return $modifiedZIPCode
        }
    }
    #importend, replace blank first even if it is correct:
    if($zipcodeformat.replace(" ", "").Length -eq $modifiedZIPCode.replace(" ", "").Length){
        $modifiedZIPCodeWithoutBlank = $modifiedZIPCode.replace(" ", "")
        #only correct it if zip code has same length without blank
        Write-Host "validate $modifiedZIPCode against $zipcodeformat"
        for ($c=0;$c -lt $zipcodeformat.Length; $c++){
                    if ($zipcodeformat.Substring($c, 1) -match ('[0-9]')){
                          #char should be a digit - prove it!
                if($modifiedZIPCodeWithoutBlank.Substring($c, 1) -match "^\d+$"){
                    #it is integer
                }else{
                    #not integer - wrong format - break
                    Write-host "not integer - wrong format - break"
                                 break;
                }
                    } elseif ($zipcodeformat.Substring($c, 1) -eq " "){
                          #char should be blank - prove it!
                          if ($modifiedZIPCodeWithoutBlank.Substring($c, 1) -eq " "){
                                 #thats ok!
                          } else {
                                 #not ok - insert blank!
                    Write-host "not ok - insert blank!"
                                 $modifiedZIPCodeWithoutBlank = ($modifiedZIPCodeWithoutBlank.Substring(0, $c) + " " + $modifiedZIPCodeWithoutBlank.Substring($c))
                                 return $modifiedZIPCodeWithoutBlank;
                          }
                    } elseif ($zipcodeformat.Substring($c, 1) -eq "-"){
                          #char should be minus - prove it!
                          if ($modifiedZIPCodeWithoutBlank.Substring($c, 1) -eq "-"){
                                 #thats ok!
                          } else {
                                 #not ok - insert minus!
                    Write-host "not ok - insert minus!"
                                 $modifiedZIPCodeWithoutBlank = ($modifiedZIPCodeWithoutBlank.Substring(0, $c) + "-" + $modifiedZIPCodeWithoutBlank.Substring($c))
                                 return $modifiedZIPCodeWithoutBlank;
                          }
                    } elseif ($zipcodeformat.Substring($c, 1) -match ('[a-zA-Z]')){
                          #char should be an alphanumeric - prove it!
                if($modifiedZIPCodeWithoutBlank.Substring($c, 1) -match "^\d+$"){
                    #it is integer
                    Write-host "integer instead of alphanumeric - break"
                    break;
                }else{
                    #not integer - good!
                }
            }
        }
    }
}
return $givenZIPCode 
}

############################################# Online address check Function ###################################################
function OnlineCheck{
    #read zip code from filecontent and check it, if incorrect it will be corrected and changed in the filecontent
    if(!$isXML){
        $afileContent = $fileContent -split "`r`n"
        $modifiedContent = ""
        [bool]$ZIPError = $false
    }
        Write-Host -f cyan "Now, the Zip Codes will be checked and corrected!"
        [bool]$bIgnorefirstLine = $true
    
    if($isXML){
    #$XMLfileContent.'DHL-SHIPMENT-IMPORT'.SHIPMENT.Count
        for($i=0;$i-lt $fileContent.'DHL-SHIPMENT-IMPORT'.SHIPMENT.Count;$i++){
           $ISO = $fileContent.'DHL-SHIPMENT-IMPORT'.SHIPMENT[$i].SHIP_TO.COUNTRY_CODE
           $ZIP = $fileContent.'DHL-SHIPMENT-IMPORT'.SHIPMENT[$i].SHIP_TO.POST_CODE
           $CITY = $fileContent.'DHL-SHIPMENT-IMPORT'.SHIPMENT[$i].SHIP_TO.CITY

           $modfiedZIPCode = zipcheck -givenISOCode $ISO -givenZIPCode $ZIP

           try{
              $addressOnlineCheck = Invoke-WebRequest -Uri "https://mydhl.express.dhl/api/addressbook/search?countryCode=$ISO&zipCode=$ZIP" -Method GET -WebSession $SessionObject
           }catch{
                if($_.Exception.Response.StatusCode.value__ -eq 404){
                    $ZIPError = $true
                }else{
                    Write-Host -f red "An error happend - operation aborted!"
                    Write-Host "Error details:"
                    Write-Host -f red $_.Exception.Message
                    Write-Host -f red $_.ErrorDetails.Message
                    Pause
                    Exit
                }
            }

            $stopImportOfRecord = $false
            if($ZIPError){
                #Write-Warning "Provided zip code '$ZIP' for ISO Code '$ISO' not found! - skipping...`n"
                try{
                    $addressOnlineCheck = Invoke-WebRequest -Uri "https://mydhl.express.dhl/api/addressbook/search?city=$CITY&countryCode=$ISO" -Method GET -WebSession $SessionObject
                    $ResponsecityOnlineCheckAsJson = $addressOnlineCheck | ConvertFrom-Json
                    if($ResponsecityOnlineCheckAsJson.Length -gt 0){
                        Write-Host "`nZip Code" $ZIP $CITY "for Country ISO Code" $ISO "not found! Changed to" $ResponsecityOnlineCheckAsJson[0].postalCode -NoNewLine
                    } else {
                        Write-Warning "Neither Zip Code nor City found! - skipped..."
                        if(-Not $ImportErrRecords){ $stopImportOfRecord = $true }
                    }
                }catch{
                    if($_.Exception.Response.StatusCode.value__ -eq 404){
                        Write-Host -f red "Neither Zip Code nor City found! - skipped..."
                    }else{
                        Write-Host -f red "An error happend - operation aborted!"
                        Write-Host "Error details:"
                        Write-Host -f red $_.Exception.Message
                        Write-Host -f red $_.ErrorDetails.Message
                        Write-Host $_.Exception
                        Pause
                        Exit
                    }
                    if(-Not $ImportErrRecords){ $stopImportOfRecord = $true }
                }
            
            }
            if($stopImportOfRecord){
            }else{
                $zipCodeOnlineCheckContentAsJson = $addressOnlineCheck.Content | ConvertFrom-Json

                if($AddressCityOverwrite){
                    $fileContent.'DHL-SHIPMENT-IMPORT'.SHIPMENT[$i].SHIP_TO.CITY = $ZipCodeOnlineCheckContentAsJson[0].city
                }
                If ($zipCodeOnlineCheckContentAsJson[0].postalCode -ne $modfiedZIPCode){
                    #set MyDHL+ Zip Code as modified Zip Code
                    $fileContent.'DHL-SHIPMENT-IMPORT'.SHIPMENT[$i].SHIP_TO.POST_CODE = $ZipCodeOnlineCheckContentAsJson[0].postalCode
                }

                $modifiedContent = $fileContent
                               
            }
        }
    }else{
        foreach ($contentbyline in $afileContent){
            [bool]$ZIPError = $false
            if($bIgnorefirstLine){
                $bIgnorefirstLine = $false
                $modifiedContent = $contentbyline
            }else{
                $aRecord = $contentbyline -split $delimiter
                $readRow = $false
                If($Trigger -ne ''){
                    if($Trigger -eq $aRecord[$TriggerRowIndex]){
                        [bool]$readRow = $true
                    }
                }else{
                    [bool]$readRow = $true
                }
                if($readRow){
                    $modfiedZIPCode = zipcheck -givenISOCode $aRecord[$ISOCOdeIndex] -givenZIPCode $aRecord[$ZIPIndex]
                    $aRecord[$ZIPIndex] = $modfiedZIPCode
                    #online zipcode check
                    $ISO = $aRecord[$ISOCOdeIndex]
                    $ZIP = $modfiedZIPCode
                    $City = $aRecord[$CityIndex]

                    try{
                        $addressOnlineCheck = Invoke-WebRequest -Uri "https://mydhl.express.dhl/api/addressbook/search?countryCode=$ISO&zipCode=$ZIP" -Method GET -WebSession $SessionObject
                    }catch{
                        if($_.Exception.Response.StatusCode.value__ -eq 404){
                            $ZIPError = $true
                        }else{
                            Write-Host -f red "An error happend - operation aborted!"
                            Write-Host "Error details:"
                            Write-Host -f red $_.Exception.Message
                            Write-Host -f red $_.ErrorDetails.Message
                            Pause
                            Exit
                        }
                    }
                    $stopImportOfRecord = $false
                    if($ZIPError){
                        #Write-Warning "Provided zip code '$ZIP' for ISO Code '$ISO' not found! - skipping...`n"
                        try{
                            $addressOnlineCheck = Invoke-WebRequest -Uri "https://mydhl.express.dhl/api/addressbook/search?city=$City&countryCode=$ISO" -Method GET -WebSession $SessionObject
                            $ResponsecityOnlineCheckAsJson = $addressOnlineCheck | ConvertFrom-Json
                            if($ResponsecityOnlineCheckAsJson.Length -gt 0){
                               Write-Host "`nZip Code" $aRecord[$ZIPIndex] $aRecord[$CityIndex] "for Country ISO Code" $aRecord[$ISOCOdeIndex] "not found! Changed to" $ResponsecityOnlineCheckAsJson[0].postalCode -NoNewLine
                            } else {
                               Write-Warning "Neither Zip Code nor City found! - skipped..."
                                if(-Not $ImportErrRecords){ $stopImportOfRecord = $true }
                            }
                        }catch{
                            if($_.Exception.Response.StatusCode.value__ -eq 404){
                                Write-Host -f red "Neither Zip Code nor City found! - skipped..."
                            }else{
                                Write-Host -f red "An error happend - operation aborted!"
                                Write-Host "Error details:"
                                Write-Host -f red $_.Exception.Message
                                Write-Host -f red $_.ErrorDetails.Message
                                Write-Host $_.Exception
                                Pause
                                Exit
                            }
                            if(-Not $ImportErrRecords){ $stopImportOfRecord = $true }
                        }
            
                    }

                    if($stopImportOfRecord){
                    }else{
                        $zipCodeOnlineCheckContentAsJson = $addressOnlineCheck.Content | ConvertFrom-Json

                        if($AddressCityOverwrite){
                            $aRecord[$CityIndex] = $ZipCodeOnlineCheckContentAsJson[0].city
                        }    

                        If ($zipCodeOnlineCheckContentAsJson[0].postalCode -ne $modfiedZIPCode){
                            #set MyDHL+ Zip Code as modified Zip Code
                            $aRecord[$ZIPIndex] = $ZipCodeOnlineCheckContentAsJson[0].postalCode
                            $tmpRecord = ""
                            foreach($field in $aRecord){
                                if ($tmpRecord -eq ""){
                                    $tmpRecord = $field
                                }else{
                                    $tmpRecord = $tmpRecord + $delimiter + $field
                                }
                            }
                            if ($modifiedContent -ne ''){$modifiedContent = $modifiedContent + "`r`n" + $tmpRecord}
                         }else{
                            $tmpRecord = ""
                            foreach($field in $aRecord){
                                if ($tmpRecord -eq ""){
                                    $tmpRecord = $field
                                }else{
                                    $tmpRecord = $tmpRecord + $delimiter + $field
                                }
                            }
                            if ($modifiedContent -ne ''){$modifiedContent = $modifiedContent + "`r`n" + $tmpRecord}
                        }    
                    }
                } else {
                    If($Trigger -ne ''){
                        if ($contentbyline -ne ''){
                            if ($modifiedContent -ne ''){
                                $modifiedContent =  $modifiedContent + "`r`n" + $contentbyline
                            }
                        }
                    }
                }
            }
        }
    }
    if(!$isXML) {
        $modifiedContent = $modifiedContent.Trim()
    }
        return $modifiedContent
}

############################################# Data uplaod to MyDHL+ Function ##################################################
function DataUp{
if($isXML){
    $contentFileType = "XML"
    $contentType = "text/xml"
    $fileContent = $fileContent.OuterXml
}else{
    $contentFileType = "CSV"
    $contentType = "application/vnd.ms-excel"
}
#create header for file upload
$dataHeader = @{
"Accept"="*/*"
"Content-Type"="multipart/form-data; boundary=---------------------------236390183728066547483663719116"
"X-XSRF-TOKEN"="$xsrfTokenValue"
} 
#create body with import file values
$dataBody = '-----------------------------236390183728066547483663719116
Content-Disposition: form-data; name="file0"; filename='+'"'+$fileName+'"'+'
Content-Type: '+ $contentType +'

' + $fileContent + '

-----------------------------236390183728066547483663719116
Content-Disposition: form-data; name="encoding"

' + $encoding +'
-----------------------------236390183728066547483663719116
Content-Disposition: form-data; name="headerExists"

false
-----------------------------236390183728066547483663719116
Content-Disposition: form-data; name="schemeId"

' + $schemeID +'
-----------------------------236390183728066547483663719116
Content-Disposition: form-data; name="importingFileType"

' + $ContentFileType + '
-----------------------------236390183728066547483663719116
Content-Disposition: form-data; name="fieldDelimiter"

'+ $delimiter +'
-----------------------------236390183728066547483663719116
Content-Disposition: form-data; name="textDelimiter"


-----------------------------236390183728066547483663719116--'
#mandatory: get upload details
$getDetails = Invoke-WebRequest -Uri 'https://mydhl.express.dhl/api/myprofile/file/import/details' -Method GET -WebSession $SessionObject
$getShipUpload = Invoke-WebRequest -Uri 'https://mydhl.express.dhl/api/myprofile/shipment/defaults/encoding/SHIPMENT_UPLOAD' -Method GET -WebSession $SessionObject 


#upload file
$response = Invoke-WebRequest -Uri "https://mydhl.express.dhl/api/importing/upload" -Method POST -Body $dataBody -Headers $dataHeader -WebSession $sessionObject
Write-Host -f cyan "Uploading file...`n"
    
#get fileID for next request
$responseContentAsJson = $response.Content | ConvertFrom-Json
$fileID = $responseContentAsJson.fileMeta.key
$body = '{"schemeId":' + $schemeID + ',"fileId":"' + $fileID + '","charsetName":"'+ $encoding +'","headerExists":'+$fileHeader+',"importingFileType":"CSV","fieldDelimiter":"'+ $del +'","textDelimiter":"","shipperInfo":{"importingFrom":"FILE"},"accountInfo":{"importingFrom":"FILE"}}'
$header = @{
    "Accept"="application/json, text/plain, */*"
    "Content-Type"="application/json;charset=utf-8"
    "X-XSRF-TOKEN"="$xsrfTokenValue"
}
#do shipment request
$response = Invoke-WebRequest -Uri "https://mydhl.express.dhl/api/importing/shipments" -Method POST -Body $body -Headers $header -WebSession $sessionObject
    
#show Results 
$raw = $response.Content | ConvertFrom-Json
Write-Host "Results:`n---------`n"
Write-Host -f yellow "`File Type:" $raw.fileType"`n"
Write-Host "Shipments in File:" $raw.totalCount
Write-Host -f Green "Successfully Imported:" $raw.successCount
Write-Host -f yellow "Incomplete Records (Imported):" $raw.incompleteCount
''
function displayError{
    Param([String]$errorID, [bool]$doLineBreak=$false)
    $contentTmp = $content.Substring($content.IndexOf($errorID))
    $contentTmp = $contentTmp.Substring(0, $contentTmp.IndexOf('","'))
    $c,$d = $contentTmp.split('":"')
    $text1 = $d[$d.Length -1]
    if($doLineBreak){
        Write-Host -f white -b red " $text1"
    }else{
        Write-Host -f white -b red "$text1" -nonewline
    }
}
#print if import was successfull
If($raw.successCount -eq $raw.totalCount){ 
    Write-Host -f Cyan "Shipmentdata imported sucessfully, Printing initialized...`n"
    print
    $RemTumb = Split-Path $sumatraPDFPath
    Get-ChildItem -Path $RemTumb *.pdf | foreach { Remove-Item -Path $_.FullName }
    pause
    exit
}
        
#show hard invalid records
if($raw.hardInvalidRecords.Count -ne '0'){
    Write-Host -f white -b red "Hard Invalid Records:" $raw.hardInvalidRecords.Count
    ''
    $content = $file

    foreach ($object in $raw.hardInvalidRecords) {
        #Write-Host $object.fieldDataSet.fieldNls
        foreach ($subObject in $object.fieldDataSet) {
            #Write-HOst $subObject.fieldNls
            $a,$b = $subObject.fieldNls.split(".")
            #displayError($b)
            displayError -errorID $b
                
            $a,$b = $subObject.failureReasonNls.split(".")
            #displayError($b, $true)
            displayError -errorID $b -doLineBreak $true
        }
    }
    ''
    Write-Warning "Unable to upload shipments with Hard Invalid Records!"
}

#wait for shipments to be corrected and proceed with print if needed
if($raw.incompleteCount -ne '0'){
    Write-Host -f yellow $raw.incompleteCount "Shipments partially imported and have to be corrected manually in MyDHL+`n"
    Write-Host -f Cyan "'$title' is now waiting for user to correct the shipments in MyDHL manually."
    Write-Host -f Cyan "If the correction was finished press (P) to proceed with the print or (E) to exit the script without printing"
    Do{
        $Prnt = Read-Host -Prompt "`n(P) or (E)"
        ''
        Switch ($Prnt){
            "P" {
                print
                $RemTumb = Split-Path $sumatraPDFPath
                Get-ChildItem -Path $RemTumb *.pdf | foreach { Remove-Item -Path $_.FullName }
                pause
                exit
            }
            "E" {
                Write-Host -f yellow "Goodbye...`n"
                start-sleep 3
                exit
            }
            Default {
                Write-Warning "INVALID CHOICE. Try again!"
                start-sleep -seconds 1
                }
            }
       }While ($true)

    }
}
''
pause

############################################# Load login settings and test login ##################################################
#check if login was set up
if($myDHLPlusUsername -eq ""){
        $MyDHLPlusCredentials = $host.UI.PromptForCredential('MyDHLPlus-Credentials', 'Insert your MyDHLPlus-Credentials:', '', '')
        $myDHLPlusPassword=$MyDHLPlusCredentials.GetNetworkCredential().Password
        $myDHLPlusUsername=$MyDHLPlusCredentials.UserName  
        }

    #create header for login
    $header = @{
        "Accept"="application/json"
        "Content-Type"="application/json;charset=utf-8"
    } 
    #Login to MyDHL+...
    try{
        $myDHLPlusLoginCredentials = @{
            "password"=$myDHLPlusPassword
            "username"=$myDHLPlusUsername
        }
        $body = $myDHLPlusLoginCredentials | ConvertTo-Json
        $response = Invoke-WebRequest -Uri "https://mydhl.express.dhl/api/auth/login" -Method POST -Body $body -Headers $header -SessionVariable sessionObject
    } catch {
        if($_.Exception.Response.StatusCode.value__ -eq 401){
            Write-Host -f red "Seems that the given MyDHL+ username (email) or password is wrong - operation aborted!"
            Write-Host "Response from server in detail:"
            Write-Host -f red  $_.Exception.Message
            Write-Host -f red $_.ErrorDetails.Message
        } elseif($_.Exception.Response.StatusCode.value__ -eq 400){
            Write-Host -f red "Seems that the given MyDHL+ username is not a valid email address - operation aborted!"
            Write-Host "Response from server in detail:"
            Write-Host -f red $_.Exception.Message
            Write-Host -f red $_.ErrorDetails.Message
        } else {
            Write-Host -f red "An error happend, please check your network connection - operation aborted!"
            Write-Host "Error details:"
            Write-Host -f red $_.Exception.Message
            Write-Host -f red $_.ErrorDetails.Message
        }
        pause
        exit
    }
#output if login was successfull
cls
Write-Host -f black -b yellow "`n$Title"
Write-Host -f green "`nLogin OK" 

############################################# Main Code ##################################################

#print if script closed accidental or crashes - 'CAN BE DISABLED IF NOT NEEDED'
print

$RemTumb = Split-Path $sumatraPDFPath
Get-ChildItem -Path $RemTumb *.pdf | foreach { Remove-Item -Path $_.FullName }
Start-Sleep 3
#pause

#get files and content from previously set Directory
$directoryInfo = Get-ChildItem $localImportDirPath | Measure-Object
if ($directoryInfo.count -eq '0'){
    Write-Warning "No File found! - ABORTING...`n"
    start-sleep 3
    exit
}else{
    Get-ChildItem –Path $localImportDirPath | 
    Foreach-Object {
        $a = $_.FullName   
    }

    [Bool]$isXML = $false
    #check if files are in directory and provide file name
    try{
        [xml]$XMLfileContent = Get-Content $a -Raw
        $fileContent = $XMLfileContent
        $isXML = $true
    }catch{
        write-host "lalalala"
        $fileContent = Get-Content $a -Raw
    }
    $fileName = Split-Path $a -leaf


    Write-Host "File found:" 
    Write-Host -f yellow "$fileName`n"

    if($AddressCorrection){
        $fileContent = OnlineCheck
        "        "
        Write-Host -f cyan "`nCorrection done!"
    }
    
    #replace backslash after online check
    if(!$isXML){
        if($delimiter -eq '\|'){
            $fileContent = $fileContent.Replace('\|', '|')
        }
    }

    #Move Import file
    Move-Item -Path $a -Destination $localArchiveDirPath -Force #Force will overwrite files with same name
    $date = Get-Date -format "yyyyMMddmmss"
    $newFileName = $localArchiveDirPath + '\PROCESSED_' + $date + '_' + $fileName
    Rename-Item -Path $localArchiveDirPath'\'$fileName -NewName $newFileName
    Write-Host "File moved to: $localArchiveDirPath"
}

#create header for token/cookie
$header = @{
    "Accept"="application/json"
    "Content-Type"="application/json;charset=utf-8"
} 
$body = $myDHLPlusLoginCredentials | ConvertTo-Json
$header = @{
    "Accept"="application/json"
    "Content-Type"="application/json;charset=utf-8"
} 
#Login to MyDHL+
$response = Invoke-WebRequest -Uri "https://mydhl.express.dhl/api/auth/login" -Method POST -Body $body -Headers $header -SessionVariable sessionObject
   
#get Cookie
$cookie = $SessionObject.Cookies.GetCookies("https://mydhl.express.dhl/api/auth/login")
    
#get group ID 
$Group = $response.Content | ConvertFrom-Json
$GroupID = $Group.groupMembership.corpGroupInfo.groupID
    
#create cookie
$cookie = New-Object System.Net.Cookie 
$cookie.Name =  "ewfCorpGroup"
$cookie.Value = "$GroupID"
$cookie.Domain = "mydhl.express.dhl"
$sessionObject.Cookies.add($cookie)
    
#find token
$xsrfTokenValue = ''
$cookievalue = $SessionObject.Cookies.GetCookies("https://mydhl.express.dhl")
ForEach ($property in $cookievalue){
    if ($property.Name -eq 'XSRF-TOKEN'){
        $xsrfTokenValue = $property.Value
    }
}
    
#provide token in header
$header = @{
    "Accept"="application/json, text/plain, */*"
    "Content-Type"="application/json;charset=utf-8"
    "X-XSRF-TOKEN"="$xsrfTokenValue"
}

#Check Upload Mapping
if($myDHLPlus_UploadMapping -eq 'MyDHL' -or ''){
    Write-Host "`nUpload Mapping:"
    Write-Host -f yellow "MyDHL+ STANDARD`n"
    $schemeID = '3'
    DataUp
    print

}elseIf($myDHLPlus_UploadMapping -eq 'INTRASHIP'){
    Write-Host "`nUpload Mapping:"
    Write-Host -f yellow "INTRASHIP STANDARD`n"
    $schemeID = '4'
    DataUp
    print
    $RemTumb = Split-Path $sumatraPDFPath
    Get-ChildItem -Path $RemTumb *.pdf | foreach { Remove-Item -Path $_.FullName }
    pause
    exit

    }else{

    Write-Host "`nUpload Mapping:"
    Write-Host -f yellow "CUSTOM ONELINE`n"
    #check if created mapping exists...
    $getSchemes = Invoke-WebRequest -Uri "https://mydhl.express.dhl/api/importing/scheme/shipment" -Method GET -WebSession $SessionObject
    $responseContentAsJson = $getSchemes.Content | ConvertFrom-Json
    $hash = @{}
    foreach ($scheme in $responseContentAsJson.userschemes) {
        $hash[$scheme.schemaLabel] = $scheme.id
        #Write-Host $scheme.id
        #write-host $hash.Keys
        $schemeID = $scheme.id
    }  
    #create new mapping if it doesn't exist
    if($hash.Keys-contains($myDHLPlus_MappingName)){
        #Write-Host "`nMapping $myDHLPlus_MappingName already exists, do not need to create it again"
        DataUp 
        print
        $RemTumb = Split-Path $sumatraPDFPath
        Get-ChildItem -Path $RemTumb *.pdf | foreach { Remove-Item -Path $_.FullName }
        pause
        exit
    }else{
        write-host "No import scheme found, Scheme will now be created..."
        $putScheme = Invoke-WebRequest -Uri "https://mydhl.express.dhl/api/importing/scheme" -Method PUT -Body $myDHLPlus_Mapping -Headers $header -WebSession $sessionObject     
        #search again...
        $getSchemes = Invoke-WebRequest -Uri "https://mydhl.express.dhl/api/importing/scheme/shipment" -Method GET -WebSession $SessionObject
        $responseContentAsJson = $getSchemes.Content | ConvertFrom-Json
        #check if mapping exists now...
        $hash = @{}
        foreach ($scheme in $responseContentAsJson.userschemes) {
            $hash[$scheme.schemaLabel] = $scheme.id
        }
        if($hash.Keys-notcontains($myDHLPlus_MappingName)){
            Write-Warning "Could not create mapping! - ABORTING..."
            #exit
            start-sleep 5
        }else{
            Write-host -f green "Scheme created!"
            DataUp
            print
            $RemTumb = Split-Path $sumatraPDFPath
            Get-ChildItem -Path $RemTumb *.pdf | foreach { Remove-Item -Path $_.FullName }
            pause
            exit
        }
    }
}

}catch{
    Write-Host -f red "`nERROR:"
    Write-Host -f red $_.Exception.Message
    pause

} 
 

